<?xml version="1.0"?>
<!DOCTYPE rules [
<!ENTITY ver1d "[0-9]+">
<!ENTITY ver2d "[0-9]+(?:[\.][0-9]+)?">
<!ENTITY ver3d "[0-9]+(?:[\.][0-9]+){0,2}">
<!ENTITY ver "[0-9][0-9\.]*">
<!ENTITY word "a-z0-9_">
<!ENTITY num "0-9">
<!ENTITY s " ">
]>
<rules xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="browser.xsd" minver="1.1" date="2013.08.01.10.00">
	<branch name="Mobile">
		<!-- Mobile bullshit -->
		<match type="any">
			<pattern type="string">Android</pattern>
			<pattern type="string">iPhone</pattern>
			<pattern type="string">Bada/</pattern>
			<pattern type="string">iPad</pattern>
			<pattern type="string">iPod;</pattern>
			<pattern type="string">Mobile Safari</pattern>
			<pattern type="string">MobileSafari</pattern>
			<pattern type="string">Opera Mob</pattern>
			<pattern type="string">Opera Tab</pattern>
			<pattern type="string">Opera Mini</pattern>
			<pattern type="string">OPiOS</pattern>
			<pattern type="string">CLDC-</pattern>
			<pattern type="string">MIDP-</pattern>
			<pattern type="string">Series 60</pattern>
			<pattern type="string">Symbian</pattern>
			<pattern type="string">Windows Phone</pattern>
			<pattern type="string">ZuneWP7</pattern>
			<pattern type="string">Skyfire</pattern>
			<pattern type="string">Windows CE</pattern>
			<pattern type="string">Maemo</pattern>
			<pattern type="string"> Tizen</pattern>
			<pattern type="string">Moblin</pattern>
			<pattern type="string">Fennec</pattern>
			<pattern type="string">UCWEB</pattern>
			<pattern type="string">UC Browser</pattern>
			<pattern type="string">UP.Browser</pattern>
			<pattern type="string">NetFront</pattern>
			<pattern type="string">Obigo</pattern>
			<pattern type="string">hpwOS</pattern>
			<pattern type="string">webOS</pattern>
			<pattern type="string">BREW</pattern>
			<pattern type="string">OpenWave</pattern>
			<pattern type="string">WAP</pattern>
			<pattern type="string">Nokia</pattern>
			<pattern type="string">DoCoMo</pattern>
			<pattern type="string">Kindle</pattern>
			<pattern type="string">Minimo</pattern>
			<pattern type="string">PlayStation Portable</pattern>
			<pattern type="string">Tablet browser</pattern>
			<pattern type="string">BlackBerry</pattern>
			<pattern type="string">PlayBook</pattern>
			<pattern type="string">PalmSource</pattern>
			<pattern type="string">MQQBrowser</pattern>
			<pattern type="string">iTunes-i</pattern>
			<pattern type="string">MAUI</pattern>
			<pattern type="string">Novarra-Vision</pattern>
			<pattern type="string">Puffin/</pattern>
			<pattern type="string">Ubuntu; Mobile</pattern>
			<pattern type="string">Ubuntu; Touch</pattern>
			<pattern type="regex">Windows NT.*ARM;</pattern>
			<pattern type="regex">\(Mobile;.*Gecko/</pattern>
			<pattern type="regex">MSIE.*PPC[;)]</pattern>
			<pattern type="regex">HTC[_/]</pattern>
			<pattern type="regex">^SAMSUNG</pattern>
			<pattern type="regex">^HUAWEI</pattern>
			<pattern type="regex">^Fly</pattern>
			<pattern type="regex">^SonyEricsson</pattern>
			<pattern type="regex">^Alcatel</pattern>
			<pattern type="regex">^[&word;]+ Opera/</pattern>
		</match>
		<define name="isMobile" value="true"/>
		<define name="isBrowser" value="true"/>

		<!-- Because this motherfucker claims to be ANOTHER BROWSER -->
		<branch name="UCBrowser">
			<match type="any">
				<pattern type="string">UC Browser</pattern>
				<pattern type="string">UCWEB</pattern>
			</match>
			<define name="BrowserEngine" value="UCBrowser"/>
			<define name="BrowserName" value="UCBrowser"/>
			<define name="BrowserVersion">
				<pattern type="regex" value="$1">UC Browser(&ver2d;)</pattern>
				<pattern type="regex" value="$1">UCWEB(&ver2d;)</pattern>
			</define>
		</branch>
		
		<branch name="Edge">
			<match type="any">
				<pattern type="string">Edge/</pattern>				
			</match>
			<define name="BrowserEngine" value="Edge"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">Edge/(&ver;)</pattern>
			</define>
			<define name="BrowserName" value="Edge"/>
			<define name="BrowserVersion">
				<pattern type="regex" value="$1">Edge/(&ver;)</pattern>
			</define>
		</branch>
		
		<branch name="InternetExplorer">
			<match>
				<pattern type="string">IEMobile</pattern>
				<pattern type="string">IE Mobile</pattern>				
				<pattern type="string">ARM; Trident</pattern>
				<pattern type="regex">MSIE &ver2d;; Windows CE</pattern>
				<pattern type="regex">MSIE &ver2d;.*Windows Phone</pattern>
				<pattern type="regex">MSIE &ver2d;.*PPC</pattern>
				<pattern type="regex">MSIE &ver2d;.*WP[78]</pattern>
				<pattern type="regex">MSIE &ver2d;.*NOKIA</pattern>
				<pattern type="regex">MSIE 1[01].*ARM;</pattern>
			</match>
			<define name="BrowserEngine" value="Trident"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">Trident/(&ver2d;)</pattern>
				<pattern type="regex" value="$1">MSIE (&ver2d;)</pattern>
			</define>
			<branch name="MSIETablet">
				<match type="any">
					<pattern type="regex">MSIE.*Windows NT.*ARM;</pattern>
					<pattern type="regex">Windows NT &ver;; ARM; Trident</pattern>
				</match>
				<define name="BrowserName" value="MSIE"/>
				<define name="isTablet" value="true"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">MSIE (&ver2d;)</pattern>
					<pattern type="regex" value="$1">rv[: ](&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="MSIE">
				<match type="any">
					<pattern type="string">IEMobile</pattern>
					<pattern type="string">IE Mobile</pattern>
					<pattern type="string">MSIE</pattern>
				</match>
				<define name="BrowserName" value="IEMobile"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">MSIEMobile[ /](&ver2d;)</pattern>
					<pattern type="regex" value="$1">IE&s;?Mobile[ /](&ver2d;)</pattern>
					<pattern type="regex" value="$1">MSIE (&ver2d;)</pattern>
				</define>
			</branch>
		</branch>
		
		<branch name="Webkit">
			<match>
				<pattern type="string">WebKit</pattern>
				<pattern type="string">Mobile Safari/</pattern>
				<pattern type="regex">^Dolphin(?: HD)? &ver;.*iPhone</pattern>
				<pattern type="regex">^Mercury &ver;.*iPhone</pattern>
			</match>
			<define name="BrowserEngine" value="WebKit"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">WebKit/(&ver;)</pattern>
			</define>
			<define name="BrowserBase">
				<pattern type="string" value="Chromium">Chromium/</pattern>
				<pattern type="string" value="Chromium">Chrome/</pattern>
				<pattern type="string" value="Safari">Safari/</pattern>
			</define>
			<define name="BrowserBaseVersion">
				<pattern type="regex" value="$1">Chromium/(&ver;)</pattern>
				<pattern type="regex" value="$1">Chrome/(&ver;)</pattern>
				<pattern type="regex" value="$1">Safari/(&ver;)</pattern>
			</define>
			
			<define name="inAppBrowser">					
				<pattern type="string" value="true">FB_IAB</pattern>
				<pattern type="string" value="true">FBAV</pattern>
				<pattern type="string" value="true">OKApp</pattern>				
			</define>
			
			<branch name="OperaMobile">
				<match type="any">
					<pattern type="string">OPR/</pattern>
					<pattern type="string">OPiOS/</pattern>
				</match>
				<define name="BrowserName">
					<pattern type="string" value="OperaMobile">OPR/</pattern>
					<pattern type="string" value="OperaMini">OPiOS/</pattern>
				</define>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">OPR/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">OPiOS/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="Coast">
				<match type="any">
					<pattern type="string">Coast/</pattern>
				</match>
				<define name="BrowserName">Coast</define>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Coast/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="Puffin">
				<match>
					<pattern type="string">Puffin/</pattern>
				</match>
				<define name="BrowserName">Puffin</define>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Puffin/(&ver;)</pattern>
				</define>
				<define name="isTablet">
					<pattern type="regex" value="true">Puffin/&ver;[IAW]T</pattern>
				</define>
			</branch>			
			<branch name="Dolfin">
				<match type="any">
					<pattern type="string">Dolfin/</pattern>
				</match>
				<define name="BrowserName" value="Dolfin"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Dolfin/(&ver;)</pattern>					
				</define>
			</branch>
			<branch name="CM">
				<match type="any">
					<pattern type="string">ACHEETAHI/</pattern>
				</match>
				<define name="BrowserName" value="CM Browser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1.$2.$3">ACHEETAHI/[&num;]+([&num;])([&num;]{2})([&num;]{2})$</pattern>
				</define>
			</branch>
			
			<branch name="Maxthon">
				<match type="any">
					<pattern type="string">MxBrowser/</pattern>
				</match>
				<define name="BrowserName" value="Maxthon"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">MxBrowser/(&ver;)</pattern>	
				</define>
			</branch>
			
			<branch name="Baidu">
				<match type="any">
					<pattern type="string">bdbrowser_i18n/</pattern>
				</match>
				<define name="BrowserName" value="Baidu"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">bdbrowser_i18n/(&ver;)</pattern>	
				</define>
			</branch>
			
			<branch name="Amigo">
				<match type="any">
					<pattern type="string">AMIGOAPP</pattern>
				</match>
				<define name="BrowserName" value="Amigo"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">APP_VERSION_(&ver;)</pattern>	
				</define>
			</branch>

			<branch name="Tizen">
				<match type="any">
					<pattern type="string"> Tizen</pattern>
				</match>
				<define name="BrowserName" value="Tizen"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Version/(&ver;)</pattern>
					<pattern type="regex" value="$1">Tizen Browser/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="Dolphin">
				<match type="any">
					<pattern type="regex">^Dolphin</pattern>
				</match>
				<define name="BrowserName" value="Dolphin"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">^Dolphin HD (&ver;).*iPhone</pattern>
					<pattern type="regex" value="$1">^Dolphin (&ver;).*iPhone</pattern>
				</define>
			</branch>

			<branch name="UCBrowser">
				<match type="any">
					<pattern type="regex">UCBrowser/&ver;</pattern>
				</match>
				<define name="BrowserName" value="UCBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">UCBrowser/(&ver3d;)</pattern>
				</define>
			</branch>

			<branch name="Mercury">
				<match type="any">
					<pattern type="regex">^Mercury</pattern>
				</match>
				<define name="BrowserName" value="Mercury"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">^Mercury (&ver;)</pattern>
				</define>
			</branch>

			<branch name="BlackBerry">
				<match type="any">
					<pattern type="string">PlayBook</pattern>
					<pattern type="string">BlackBerry</pattern>
					<pattern type="regex">BB[&num;]+; (?:Touch|Kbd)</pattern>
				</match>
				<define name="BrowserName" value="BlackBerry"/>
				<define name="isTablet">
					<pattern type="string" value="true">PlayBook</pattern>
				</define>
				<define name="PreferMobile">
					<pattern type="regex" value="false">Version/&ver; Safari/&ver;</pattern>
					<pattern type="regex" value="true">Version/&ver; Mobile Safari/&ver;</pattern>
				</define>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Version/(&ver3d;)</pattern>
				</define>
			</branch>
			<branch name="YandexSearch">
				<match type="any">
					<pattern type="string">YandexSearch/</pattern>					
				</match>
				<define name="BrowserName" value="YandexSearch"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">YandexSearch/(&ver;)</pattern>					
				</define>				
			</branch>
			
			<branch name="GoogleSearch">
				<match type="any">
					<pattern type="string">GSA/</pattern>					
				</match>
				<define name="BrowserName" value="GoogleSearch"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">GSA/(&ver;)</pattern>					
				</define>				
			</branch>
			<branch name="YandexBrowser">
				<match type="any">
					<pattern type="string">YaMobile/</pattern>
					<pattern type="string">YaBrowser/</pattern>
				</match>
				<define name="BrowserName" value="YandexBrowser"/>
				<define name="isTouch" value="true"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">YaBrowser/(&ver;)</pattern>
					<pattern type="regex" value="$1">YaMobile/(&ver;)</pattern>
				</define>				
			</branch>
			<branch name="ChromeMobile">
				<match type="any">
					<pattern type="string">CrMo/</pattern>
					<pattern type="string">Chrome/</pattern>
					<pattern type="string">CriOS/</pattern>
				</match>
				<define name="BrowserName" value="ChromeMobile"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">CrMo/(&ver3d;)</pattern>
					<pattern type="regex" value="$1">Chrome/(&ver3d;)</pattern>
					<pattern type="regex" value="$1">CriOS/(&ver3d;)</pattern>
				</define>
			</branch>

			<branch name="SkyFire">
				<match>
					<pattern type="string">Skyfire/</pattern>
				</match>
				<define name="BrowserName" value="SkyFire"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Skyfire/(&ver;)</pattern>
				</define>
			</branch>
			<branch name="NetFront">
				<match>
					<pattern type="string">NetFrontLifeBrowser/</pattern>
				</match>
				<define name="BrowserName" value="NetFrontLifeBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">NetFront[&word;]*/(&ver;)</pattern>
				</define>
			</branch>
			<branch name="Polaris">
				<match type="any">
					<pattern type="string">POLARIS/</pattern>
				</match>
				<define name="BrowserName" value="Polaris"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">POLARIS/(&ver;)</pattern>
				</define>
			</branch>
			<branch name="wOSBrowser">
				<match>
					<pattern type="regex">wOSBrowser</pattern>
					<pattern type="regex">webOS</pattern>
				</match>
				<define name="BrowserName" value="WebOSBrowser"/>
				<define name="isTouch" value="true"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">wOSBrowser/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Version/(&ver2d;)</pattern>
				</define>
				<define name="isTablet">
					<pattern type="string" value="true">TouchPad</pattern>
				</define>
			</branch>
			<branch name="Ninesky">
				<match>
					<pattern type="string">Ninesky-android-mobile/</pattern>
					<pattern type="string">Ninesky/</pattern>
				</match>
				<define name="BrowserName" value="Ninesky"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Ninesky-android-mobile/(&ver;)</pattern>
					<pattern type="regex" value="$1">Ninesky/(&ver;)</pattern>
				</define>
			</branch>
			<branch name="AndroidBrowser">
				<match type="any">
					<pattern type="string">Android</pattern>
					<pattern type="regex">Mac OS X [&num;_]+;.*HTC[_/&s;]</pattern>
				</match>
				<define name="BrowserName" value="AndroidBrowser"/>
				<define name="isTouch" value="true"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Version/(&ver;)</pattern>
				</define>
			</branch>			
			<branch name="NokiaBrowser">
				<match type="any">
					<pattern type="string">NokiaBrowser/</pattern>
					<pattern type="string">BrowserNG/</pattern>					
					<pattern type="string">Nokia</pattern>					
					<pattern type="string">SymbianOS</pattern>
				</match>
				<define name="BrowserName" value="NokiaBrowser"/>
				<define name="DeviceVendor" value="Nokia"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">BrowserNG/(&ver;)</pattern>
					<pattern type="regex" value="$1">Version/(&ver;)</pattern>
					<pattern type="regex" value="$1">NokiaBrowser/(&ver;)</pattern>
					<pattern type="regex" value="$1">Nokia[&word;\-]*/(&ver;)</pattern>
					<pattern type="regex" value="$1">Series(?:60|80)/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="MQQBrowser">
				<match type="any">
					<pattern type="string">MQQBrowser/</pattern>
				</match>
				<define name="BrowserName" value="MQQBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">MQQBrowser/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="MobileSafari">
				<match type="any">
					<pattern type="regex">iP(?:[oa]d|hone).*Mobile Safari</pattern>
					<pattern type="regex">Mobile/[&word;]+(?: Safari/)?</pattern>
					<pattern type="string">iPhone OS</pattern>
				</match>
				<define name="BrowserName" value="MobileSafari"/>
				<define name="isTouch" value="true"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Version/(&ver;)</pattern>
				</define>
				<define name="inAppBrowser">					
					<pattern type="string" value="true">FBAV</pattern>
					<pattern type="string" value="false">Safari</pattern>
					<pattern type="string" value="true">Mobile</pattern>
				</define>
			</branch>
			
			<branch name="UbuntuBrowser">
				<match type="any">
					<pattern type="string">Ubuntu; Mobile</pattern>
					<pattern type="string">Ubuntu; Touch</pattern>
				</match>
				<define name="BrowserName" value="UbuntuBrowser"/>				
			</branch>
			
			<branch type="default">
				<define name="BrowserName" value="Unknown"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Version/(&ver;)</pattern>
				</define>
			</branch>
			<branch type="common">
				<define name="BrowserShell">
					<pattern type="string" value="Diigo">Diigo</pattern>
					<pattern type="string" value="Diigo">iChromy</pattern>
					<pattern type="string" value="UCBrowser">UC AppleWebkit</pattern>
				</define>
				<define name="isTablet">					
					<pattern type="string" value="true">iPad</pattern>
					<pattern type="string" value="true">Android 3</pattern>
					<pattern type="regex" value="false">Mobile.*Safari/</pattern>
					<pattern type="regex" value="true">Android (?:[4-9]|[&num;]{2,}).* Safari/&ver;</pattern>
					<pattern type="regex" value="true">Chrome/&ver; Safari/</pattern>
				</define>
			</branch>
		</branch>
		<branch name="Presto">
			<match>
				<pattern type="string">Opera</pattern>
			</match>
			<define name="BrowserEngine" value="Presto"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">Presto/(&ver;)</pattern>
			</define>
			<branch name="OperaMini">
				<match>
					<pattern type="string">Opera Mini</pattern>
					<pattern type="string">Opera&lt;Ch-Ray&gt;</pattern>
				</match>
				<define name="BrowserName" value="OperaMini"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Opera Mini/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Version/(&ver2d;)</pattern>					
				</define>
			</branch>
			<branch name="OperaMobile">
				<match type="any">
					<pattern type="string">Opera Mobi/</pattern>
					<pattern type="string">Opera Tablet/</pattern>
					<pattern type="regex">Opera/&ver2d;</pattern>
					<pattern type="regex">Opera &ver;</pattern>
				</match>
				<define name="BrowserName" value="OperaMobile"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Version/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Opera[&s;/]?(&ver2d;)</pattern>
				</define>
				<define name="isTablet">
					<pattern type="string" value="true">Tablet/</pattern>
					<pattern type="string" value="true">Tablet browser</pattern>
				</define>
			</branch>
		</branch>
		<branch name="Gecko">
			<match type="any">
				<pattern type="string">Fennec</pattern>
				<pattern type="string">Firefox</pattern>
				<pattern type="string">Minimo</pattern>
				<pattern type="regex">Gecko.*Moblin</pattern>
				<pattern type="string">Novarra-Vision</pattern>
			</match>
			<define name="BrowserEngine" value="Gecko"/>
			<define name="isTouch" value="true"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">rv:(&ver;)</pattern>
			</define>
			<branch name="Frefox">
				<match type="any">
					<pattern type="string">Firefox/</pattern>
					<pattern type="string">Fennec/</pattern>
				</match>
				<define name="BrowserName" value="MobileFirefox"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Firefox/(&ver;)</pattern>
					<pattern type="regex" value="$1">Fennec/(&ver;)</pattern>
				</define>
				<define name="isTablet">
					<pattern type="string" value="true">Tablet browser</pattern>
				</define>
				<define name="MultiTouch" value="true"/>
			</branch>
			<branch name="Minimo">
				<match type="any">
					<pattern type="string">Minimo/</pattern>
				</match>
				<define name="BrowserName" value="Minimo"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Minimo/(&ver;)</pattern>
				</define>
			</branch>
			<branch name="Novarra-Vision">
				<match type="any">
					<pattern type="string">Novarra-Vision</pattern>
				</match>
				<define name="BrowserName" value="Novarra-Vision"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Novarra-Vision/(&ver;)</pattern>
				</define>
			</branch>
		</branch>		
		<branch name="ProprietaryMobileBrowser">
			<match type="any">
				<pattern type="string">MIDP-</pattern>
				<pattern type="string">CLDC-</pattern>
				<pattern type="string">NetFront</pattern>
				<pattern type="string">Obigo</pattern>
				<pattern type="string">UCBrowser</pattern>
				<pattern type="string">UP.Browser</pattern>
				<pattern type="string">DoCoMo</pattern>
				<pattern type="string">Dalvik/</pattern>
				<pattern type="string">PSP</pattern>
				<pattern type="string">BREW</pattern>
				<pattern type="string">Blazer</pattern>
				<pattern type="string">MQQBrowser</pattern>
			</match>
			<define name="BrowserEngine" value="Proprietary"/>
			<branch name="Obigo">
				<match type="any">
					<pattern type="string">Obigo</pattern>
					<pattern type="string">Teleca</pattern>
				</match>
				<define name="BrowserName" value="Obigo"/>
				<define name="isWAP" value="true"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Obigo(?:InternetBrowser|-Browser|-MMS|-Q[&word;]+)?/Q([&word;]+)</pattern>
					<pattern type="regex" value="$1">Obigo(?:-|&s;)Q([\.&word;]+)</pattern>
					<pattern type="regex" value="$1">Teleca(?:-|&s;)Q([\.&word;]+)</pattern>
				</define>
			</branch>
			<branch name="Polaris">
				<match type="any">
					<pattern type="string">POLARIS/</pattern>
				</match>
				<define name="BrowserName" value="Polaris"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">POLARIS/(&ver;)</pattern>
				</define>
			</branch>
			<branch name="Blackberry">
				<match type="any">
					<pattern type="regex">^Blackberry</pattern>
				</match>
				<define name="BrowserName" value="BlackBerry"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">^Blackberry[&num;]+/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="Blazer">
				<match type="any">
					<pattern type="string">Blazer/</pattern>
				</match>
				<define name="BrowserName" value="Blazer"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Blazer/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="MQQBrowser">
				<match type="any">
					<pattern type="string">MQQBrowser/</pattern>
				</match>
				<define name="BrowserName" value="MQQBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">MQQBrowser/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="Dalvik">
				<match type="any">
					<pattern type="string">Dalvik/</pattern>
				</match>
				<define name="BrowserName">Dalvik</define>
				<define name="isBrowser">false</define>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">^Dalvik/(&ver;)</pattern>
				</define>
			</branch>
			<branch name="NetFront">
				<match type="any">
					<pattern type="regex">NetFront(?:/|[&num;])</pattern>
					<pattern type="string">PlayStation Portable</pattern>
				</match>
				<define name="BrowserName" value="NetFront"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">NetFront/?(&ver;)</pattern>
				</define>
			</branch>
			<branch name="OviBrowser">
				<match type="any">
					<pattern type="string">S40OviBrowser</pattern>
				</match>
				<define name="BrowserName" value="OviBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">S40OviBrowser/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="UCBrowser">
				<match type="any">
					<pattern type="string">UCBrowser</pattern>
				</match>
				<define name="BrowserName" value="UCBrowser"/>
				<define name="BrowserEngine" value="UCBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">(?:UC&s;?Browser|UCWEB)/?(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="NokiaBrowser">
				<match type="any">
					<pattern type="string">S60</pattern>
					<pattern type="regex">Series[89]0</pattern>
				</match>
				<define name="BrowserName" value="NokiaBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">(?:[Ss]60|Series[89]0)/(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="Dolfin">
				<match type="any">
					<pattern type="string">Dolfin/</pattern>
				</match>
				<define name="BrowserName" value="Dolfin"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Dolfin/(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="SEMC">
				<match type="any">
					<pattern type="string">SEMC-Browser/</pattern>
				</match>
				<define name="BrowserName" value="SEMC"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">SEMC-Browser/(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="Jasmine">
				<match type="any">
					<pattern type="string">Jasmine/</pattern>
				</match>
				<define name="BrowserName" value="Jasmine"/>
				<define name="isWAP" value="true"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Jasmine/(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="OpenWave">
				<match type="any">
					<pattern type="string">UP.Browser/</pattern>
					<pattern type="string">OpenWave/</pattern>
				</match>
				<define name="BrowserName" value="OpenWave"/>
				<define name="isWAP" value="true"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">(?:UP.Browser|OpenWave)/(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="DoCoMo">
				<match type="any">
					<pattern type="string">DoCoMo</pattern>
				</match>
				<define name="BrowserName" value="Docomo"/>
				<define name="isWAP" value="true"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">(?:DoCoMo|Docomo)/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="UnknownMobileBrowser" type="default">
				<define name="isWAP" value="true"/>
			</branch>
		</branch>

		<branch name="UnknownMobileBrowser" type="default">
			<define name="BrowserEngine" value="Unknown"/>
			<define name="BrowserName" value="Unknown"/>
			<define name="isWAP">
				<pattern type="string" value="true">WAP</pattern>
			</define>
			<branch name="iTunes">
				<match type="any">
					<pattern type="string">iTunes-</pattern>
				</match>
				<define name="BrowserName" value="iTunes"/>
				<define name="isBrowser" value="false"/>
			</branch>

			<branch name="MAUI">
				<match type="any">
					<pattern type="string">MAUI</pattern>
				</match>
				<define name="BrowserName" value="MAUI WAP Browser"/>
			</branch>
		</branch>

		<!-- Detect Mobile OS -->
		<branch type="common" name="MobileOS">
			<branch name="FirefoxOS">
				<match>
					<pattern type="regex">\((?:Mobile|Tablet);[^)]+\) Gecko/&ver; Firefox/&ver;</pattern>
				</match>
				<define name="OSFamily" value="FirefoxOS"/>
				<define name="isTouch" value="true"/>
				<define name="isTablet">
					<pattern type="string" value="true">(Tablet;</pattern>
				</define>
				<define name="OSVersion">
					<pattern type="string" value="1.0.1">Gecko/18.0</pattern>
					<pattern type="string" value="1.1">Gecko/18.1</pattern>
					<pattern type="string" value="1.2">Gecko/26.0</pattern>
					<pattern type="string" value="1.3">Gecko/28.0</pattern>
				</define>
			</branch>
			<branch name="Tizen">
				<match>
					<pattern type="string"> Tizen</pattern>
				</match>
				<define name="OSFamily" value="Tizen"/>
				<define name="isTouch" value="true"/>							
				<define name="OSVersion">
					<pattern type="regex" value="$1">Tizen/(&ver;)</pattern>
					<pattern type="regex" value="$1">Tizen (&ver;)</pattern>
				</define>
				<branch name="TV">
					<match type="any">
						<pattern type="string">SMART-TV</pattern>
						<pattern type="string">TV</pattern>
					</match>
					<define name="isTouch" value="false"/>
					<define name="isTV" value="true"/>
					<define name="isMobile" value="false"/>
				</branch>
			</branch>
			<branch name="WindowsPhone">
				<match>
					<pattern type="string">ZuneWP7</pattern>
					<pattern type="string">Lumia</pattern>
					<pattern type="string">Windows Phone;</pattern>
					<pattern type="regex">Windows Phone [^6]</pattern>
					<pattern type="regex">MSIE.*Lumia</pattern>
				</match>
				<define name="OSFamily" value="WindowsPhone"/>
				<define name="DeviceVendor">
					<pattern type="string" value="Nokia">Nokia</pattern>
				</define>
				<define name="isTouch" value="true"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">Windows Phone OS (&ver2d;)</pattern>
					<pattern type="regex" value="$1">Windows Phone (&ver2d;)</pattern>
					<pattern type="regex" value="$1">WP(&ver;)</pattern>
				</define>
				<define name="isEmulator">
					<pattern type="string" value="true">XDeviceEmulator</pattern>
				</define>
			</branch>
			<branch name="Android">
				<match>
					<pattern type="string">Android</pattern>
					<pattern type="regex">\(Linux;.*;&s;?2\.[23]\.[&num;]+;</pattern>
					<pattern type="regex">\(Linux;.*;&s;?3\.[012]\.[&num;]+;</pattern>
					<pattern type="regex">Mac OS X [&num;_]{2,};.*HTC[_/]</pattern>
				</match>
				<define name="OSFamily" value="Android"/>
				<define name="isTouch" value="true"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">Android&s;?(&ver;)</pattern>
					<pattern type="regex" value="$1">\(Linux;.*;&s;?(2\.&ver;);</pattern>
					<pattern type="regex" value="$1">\(Linux;.*;&s;?(3\.&ver;);</pattern>
				</define>
				<define name="isTablet">
					<pattern type="string" value="true">Android 3</pattern>
					<pattern type="string" value="true">Linux;U;3</pattern>
					<pattern type="regex" value="true">Android.*Tablet</pattern>
				</define>
				<define name="OSName">
					<pattern type="regex" value="Android Astro">(?:Android|\(Linux;[^)]+;)&s;?1\.0</pattern>
					<pattern type="regex" value="Android Bender">(?:Android|\(Linux;[^)]+;)&s;?1\.1</pattern>
					<pattern type="regex" value="Android Cupcake">(?:Android|\(Linux;[^)]+;)&s;?1\.5</pattern>
					<pattern type="regex" value="Android Donut">(?:Android|\(Linux;[^)]+;)&s;?1\.6</pattern>
					<pattern type="regex" value="Android Eclair">(?:Android|\(Linux;[^)]+;)&s;?2\.[0-1]</pattern>
					<pattern type="regex" value="Android Froyo">(?:Android|\(Linux;[^)]+;)&s;?2\.2</pattern>
					<pattern type="regex" value="Android Gingerbread">(?:Android|\(Linux;[^)]+;)&s;?2\.3</pattern>
					<pattern type="regex" value="Android Honeycomb">(?:Android|\(Linux;[^)]+;)&s;?3\.[0-2]</pattern>
					<pattern type="regex" value="Android Ice Cream Sandwich">(?:Android|\(Linux;[^)]+;)&s;?4\.0</pattern>
					<pattern type="regex" value="Android Jelly Bean">(?:Android|\(Linux;[^)]+;)&s;?4\.[123]</pattern>
					<pattern type="regex" value="Android KitKat">(?:Android|\(Linux;[^)]+;)&s;?4\.[4]</pattern>
					<pattern type="regex" value="Android Lollipop">(?:Android|\(Linux;[^)]+;)&s;?5\.[&num;]</pattern>					
				</define>				
				<define name="MultiTouch">
					<pattern type="regex" value="true">(?:Android|\(Linux;.*;)&s;?(?:2\.[23]|[345]\.).*WebKit</pattern>
					<pattern type="string" value="true">Opera Mobi/</pattern>
					<pattern type="string" value="true">Opera Tablet/</pattern>
				</define>

			</branch>
			<branch name="iPhoneOS">
				<match>
					<pattern type="string">iPhone</pattern>
					<pattern type="string">iPad</pattern>
					<pattern type="string">iPod</pattern>
					<pattern type="string">(iOS</pattern>
				</match>
				<define name="OSFamily" value="iOS"/>
				<define name="DeviceVendor" value="Apple"/>
				<define name="DeviceName">
					<pattern type="string" value="iPhone">iPhone</pattern>
					<pattern type="string" value="iPad">iPad</pattern>
					<pattern type="string" value="iPod">iPod</pattern>
					<pattern type="string" value="iPhone">iPh OS</pattern>
				</define>				
				<define name="isTouch">
					<pattern type="string" value="true">(iPhone</pattern>
					<pattern type="string" value="true">iPh OS</pattern>
					<pattern type="string" value="true">(iPad</pattern>
					<pattern type="string" value="true">(iPod</pattern>
				</define>
				<define name="OSVersion">
					<pattern type="regex" value="1.0">Mobile/1A</pattern>
					<pattern type="regex" value="1.0.1">Mobile/1C25</pattern>					
					<pattern type="regex" value="1.0.2">Mobile/1C28</pattern>
					<pattern type="regex" value="1.1.1">Mobile/3A</pattern>
					<pattern type="regex" value="1.1.2">Mobile/3B</pattern>
					<pattern type="regex" value="1.1.3">Mobile/4A93</pattern>
					<pattern type="regex" value="1.1.4">Mobile/4A102</pattern>
					<pattern type="regex" value="2.0">Mobile/5A</pattern>
					<pattern type="regex" value="2.0.1">Mobile/1B</pattern>
					<pattern type="regex" value="2.0.2">Mobile/5C</pattern>
					<pattern type="regex" value="2.1">Mobile/5F</pattern>
					<pattern type="regex" value="2.2">Mobile/5G</pattern>
					<pattern type="regex" value="2.2.1">Mobile/5H</pattern>
					<pattern type="regex" value="3.0">Mobile/7A3</pattern>
					<pattern type="regex" value="3.0.1">Mobile/7A4</pattern>
					<pattern type="regex" value="3.1">Mobile/7C</pattern>
					<pattern type="regex" value="3.1.2">Mobile/7D</pattern>
					<pattern type="regex" value="3.1.3">Mobile/7E</pattern>
					<pattern type="regex" value="4.0">Mobile/8A2</pattern>
					<pattern type="regex" value="4.0.1">Mobile/8A3</pattern>
					<pattern type="regex" value="4.1">Mobile/8B</pattern>
					<pattern type="regex" value="4.2">Mobile/8C</pattern>
					<pattern type="regex" value="4.3">Mobile/8F</pattern>
					<pattern type="regex" value="4.3.3">Mobile/8J</pattern>
					<pattern type="regex" value="4.3.4">Mobile/8K</pattern>
					<pattern type="regex" value="4.3.5">Mobile/8L</pattern>
					<pattern type="regex" value="5.0">Mobile/9A3</pattern>
					<pattern type="regex" value="5.0.1">Mobile/9A4</pattern>
					<pattern type="regex" value="5.1">Mobile/9B1</pattern>
					<pattern type="regex" value="5.1.1">Mobile/9B2</pattern>
					<pattern type="regex" value="6.0">Mobile/10A4</pattern>
					<pattern type="regex" value="6.0.1">Mobile/10A5</pattern>
					<pattern type="regex" value="6.1">Mobile/10B144</pattern>
					<pattern type="regex" value="6.1.1">Mobile/10B145</pattern>
					<pattern type="regex" value="6.1.2">Mobile/10B146</pattern>
					<pattern type="regex" value="6.1.3">Mobile/10B3</pattern>
					<pattern type="regex" value="7.0.3">Mobile/11B511</pattern>
					<pattern type="regex" value="7.0.4">Mobile/11B55</pattern>
					<pattern type="regex" value="7.0.6">Mobile/11B6</pattern>
					<pattern type="regex" value="7.1">Mobile/11D1</pattern>
					<pattern type="regex" value="7.1.1">Mobile/11D20</pattern>
					<pattern type="regex" value="7.1.2">Mobile/11D25</pattern>
					<pattern type="regex" value="8.0">Mobile/12A3</pattern>
					<pattern type="regex" value="8.0.1">Mobile/12A402</pattern>
					<pattern type="regex" value="8.0.2">Mobile/12A405</pattern>
					<pattern type="regex" value="8.1">Mobile/12B41</pattern>
					<pattern type="regex" value="8.1.1">Mobile/12B43</pattern>
					<pattern type="regex" value="$1.$2.$3">(?:iPhone|CPU) OS ([&num;]+)_([&num;])_([&num;])</pattern>
					<pattern type="regex" value="$1.$2">(?:iPhone|CPU) OS ([&num;]+)_([&num;])</pattern>
					<pattern type="regex" value="$1">(?:iPhone|CPU) OS ([&num;]+)</pattern>
					<pattern type="regex" value="$1">iTunes-[&word;\-]+/(&ver;)</pattern>
					<pattern type="regex" value="$1.$2">iPh OS ([&num;]+)_([&num;])</pattern>
				</define>
				<define name="isTablet">
					<pattern type="string" value="true">iPad</pattern>
				</define>
				<define name="isEmulator">
					<pattern type="string" value="true">iPhone Simulator</pattern>
					<pattern type="regex" value="true">OS 10_(?:9|[&num;]{2})</pattern>
				</define>
				<define name="MultiTouch">
					<pattern type="string" value="true">WebKit</pattern>
				</define>
			</branch>
			<branch name="Symbian">
				<match>
					<pattern type="string">SymbianOS</pattern>
					<pattern type="string">Symbian</pattern>
					<pattern type="string">Series60</pattern>
					<pattern type="string">Series 60</pattern>
					<pattern type="string">SymbOS</pattern>
					<pattern type="string">S60</pattern>
					<pattern type="string">Series80</pattern>
					<pattern type="string">Series90</pattern>
					<pattern type="regex">^Nokia.*AppleWebKit</pattern>
				</match>
				<define name="OSFamily" value="Symbian"/>
				<define name="DeviceVendor">
					<pattern type="string" value="Nokia">Nokia</pattern>
				</define>
				<define name="OSVersion">
					<pattern type="regex" value="$1">SymbianOS/(&ver;)</pattern>
					<pattern type="regex" value="Symbian^$1">Symbian/(&ver;)</pattern>
				</define>
			</branch>
			<branch name="Moblin">
				<match>
					<pattern type="string">Moblin/</pattern>					
				</match>
				<define name="OSFamily" value="Moblin"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">Moblin/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="PalmOS">
				<match>
					<pattern type="string">PalmOS</pattern>
					<pattern type="string">PalmSource</pattern>					
				</match>
				<define name="OSFamily" value="PalmOS"/>				
			</branch>
			<branch name="Series40">
				<match>
					<pattern type="string">Series40</pattern>
				</match>
				<define name="OSFamily" value="Series40"/>
				<define name="DeviceVendor" value="Nokia"/>
			</branch>
			<branch name="Bada">
				<match>
					<pattern type="string">Bada</pattern>
				</match>
				<define name="OSFamily" value="Bada"/>
				<define name="DeviceVendor" value="SAMSUNG"/>
				<define name="isTouch" value="true"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">Bada/(&ver;)</pattern>
				</define>
				<define name="MultiTouch">
					<pattern type="string" value="true">WebKit</pattern>
				</define>
			</branch>
			<branch name="BlackBerry">
				<match>
					<pattern type="string">BlackBerry</pattern>
					<pattern type="regex">BB[&num;]+; (?:Touch|Kbd)</pattern>
				</match>
				<define name="OSFamily" value="BlackBerry"/>
				<define name="DeviceVendor" value="RIM"/>
				<define name="MultiTouch">
					<pattern type="string" value="true">WebKit</pattern>
				</define>
			</branch>
			<branch name="BlackBerryTablet">
				<match type="any">
					<pattern type="string">RIM Tablet OS</pattern>
				</match>
				<define name="isTouch" value="true"/>
				<define name="isTablet" value="true"/>
				<define name="OSFamily" value="RIMTabletOS"/>
				<define name="DeviceVendor" value="RIM"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">RIM Tablet OS (&ver;)</pattern>
				</define>
				<define name="MultiTouch">
					<pattern type="string" value="true">WebKit</pattern>
				</define>
			</branch>
			<branch name="MeeGo">
				<match>
					<pattern type="string">MeeGo</pattern>
					<pattern type="string">Maemo</pattern>
				</match>
				<define name="OSFamily" value="MeeGo"/>
				<define name="isTouch" value="true"/>
			</branch>
			<branch name="WindowsRT">
				<match>
					<pattern type="regex">Windows NT.*ARM;</pattern>
				</match>
				<define name="OSFamily" value="WindowsRT"/>
				<define name="isTouch" value="true"/>
				<define name="isTablet" value="true"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">Windows NT (&ver;)</pattern>
				</define>
			</branch>			
			<branch name="WindowsMobile">
				<match>
					<pattern type="string">Windows Mobile</pattern>
					<pattern type="string">Windows CE</pattern>
					<pattern type="string">Microsoft Windows</pattern>
					<pattern type="string">Windows NT</pattern>
					<pattern type="string">WindowsMobile</pattern>
					<pattern type="string">PPC;</pattern>
				</match>
				<define name="OSFamily" value="WindowsMobile"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">Windows&s;*Mobile[/&s;](&ver;)</pattern>					
					<pattern type="regex" value="$1">Windows&s;*Phone[/&s;](&ver;)</pattern>
				</define>
			</branch>
			<branch name="WebOS">
				<match>
					<pattern type="string">hpwOS</pattern>
					<pattern type="string">webOS</pattern>
				</match>
				<define name="OSFamily">WebOS</define>
				<define name="DeviceVendor" value="HP"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">hpwOS/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">webOS/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="Linux">
				<match>
					<pattern type="string">Linux</pattern>
				</match>
				<define name="OSFamily">
					<pattern type="string" value="Linux">Linux</pattern>
				</define>
			</branch>
			<branch name="UbuntuTouch">
				<match type="any">
					<pattern type="string">Ubuntu; Mobile</pattern>
					<pattern type="string">Ubuntu; Tablet</pattern>
				</match>
				<define name="OSFamily" value="UbuntuTouch"/>
				<define name="isTouch" value="true"/>
				<define name="isTablet">
					<pattern type="string" value="true">Tablet</pattern>
				</define>				
			</branch>
			<branch name="BREW">
				<match>
					<pattern type="string">(BREW</pattern>
				</match>
				<define name="OSFamily">BREW</define>
				<define name="OSVersion">
					<pattern type="regex" value="$1">BREW&s;(&ver3d;)</pattern>
				</define>
			</branch>
			<branch name="Nucleus">
				<match>
					<pattern type="string">Nucleus</pattern>
				</match>
				<define name="OSFamily">Nucleus</define>
			</branch>
			<branch name="Java">
				<match>
					<pattern type="string">J2ME/MIDP</pattern>
				</match>
				<define name="OSFamily">Java</define>
			</branch>
			<branch type="default">
				<define name="OSFamily" value="Unknown"/>
			</branch>
			<define name="J2ME">
				<pattern type="string" value="true">J2ME</pattern>
				<pattern type="string" value="true">MIDP-</pattern>
				<pattern type="string" value="true">CLDC-</pattern>
			</define>
		</branch>
		<branch type="common" name="DeviceProps">
			<define name="DeviceVendor">
				<pattern type="regex" value="HTC"> HTC[_&s;]</pattern>						
				<pattern type="string" value="LG Electronics">LG-</pattern>
				<pattern type="string" value="SAMSUNG">SAMSUNG</pattern>
				<pattern type="string" value="Nokia">Nokia</pattern>
				<pattern type="string" value="ATIV">SAMSUNG</pattern>
				<pattern type="string" value="Sony Ericsson">SonyEricsson</pattern>
				<pattern type="string" value="Sony">Sony</pattern>				
				<pattern type="regex" value="SAMSUNG">[-&s;](GT|SGH|SM)-[ITSNPL][&num;]+</pattern>
				<pattern type="regex" value="Acer">(A501|A510|A511|A200|A210|A701|A211|M973W) Build</pattern>			
				<pattern type="regex" value="ASUS">Transformer(| Prime) TF([&num;]+)</pattern>
				<pattern type="regex" value="Sony">(SGP[T]?|SOL)[-]?[&num;]+</pattern>
				<pattern type="string" value="Huawei">Huawei</pattern>
				<pattern type="string" value="Lenovo">Lenovo</pattern>
				<pattern type="string" value="Lenovo">IdeaTab</pattern>
				<pattern type="string" value="Amazon">Kindle/</pattern>
				<pattern type="string" value="ARCHOS">ARCHOS</pattern>
				<pattern type="string" value="HYUNDAI">HYUNDAI</pattern>
				<pattern type="string" value="WEXLER">WEXLER</pattern>
			</define>
			<define name="DeviceName">
				<pattern type="string" value="Iconia Tab A211">A211</pattern>
				<pattern type="string" value="Explay A350TV">A350 TV</pattern>
				<pattern type="string" value="Explay A351">A351</pattern>
				<pattern type="string" value="Explay A400">A400</pattern>
				<pattern type="string" value="A500">A500</pattern>
				<pattern type="string" value="Iconia Tab A511">A511</pattern>
				<pattern type="string" value="Iconia Tab A701">A701</pattern>
				<pattern type="string" value="ActiveD 7.4 3G">ActiveD 7.4 3G</pattern>
				<pattern type="string" value="ActiveD 8.2 3G">ActiveD 8.2 3G</pattern>
				<pattern type="string" value="Jolla">alien_jolla_bionic</pattern>
				<pattern type="string" value="Alpha GT">Alpha GT</pattern>
				<pattern type="string" value="Alpha GTR">Alpha GTR</pattern>
				<pattern type="string" value="Alpha Rage">Alpha Rage</pattern>
				<pattern type="string" value="Alto">Alto</pattern>
				<pattern type="string" value="Boost">Boost</pattern>
				<pattern type="string" value="Xperia E dual">C1605</pattern>
				<pattern type="string" value="Xperia M">C1905</pattern>
				<pattern type="string" value="Xperia L">C2105</pattern>
				<pattern type="string" value="Xperia C">C2305</pattern>
				<pattern type="string" value="Xperia SP">C5303</pattern>
				<pattern type="string" value="Xperia ZR">C5503</pattern>
				<pattern type="string" value="Xperia ZL">C6503</pattern>
				<pattern type="string" value="Xperia Z">C6602</pattern>
				<pattern type="string" value="Xperia Z">C6603</pattern>
				<pattern type="string" value="Xperia Z1">C6903</pattern>
				<pattern type="string" value="Communicator">Communicator</pattern>
				<pattern type="string" value="Dream">Dream</pattern>
				<pattern type="string" value="Daewoo Electronics">DTR-07FSBH</pattern>
				<pattern type="string" value="AirTab E79">E79</pattern>
				<pattern type="string" value="AirTab ES9701">ES9701</pattern>
				<pattern type="string" value="Five">Five</pattern>
				<pattern type="string" value="Wizard Plus">Fly IQ245 Plus</pattern>
				<pattern type="string" value="Wizard">Fly IQ245</pattern>
				<pattern type="string" value="Vogue">FLY IQ256</pattern>
				<pattern type="string" value="Vogue ">FLY IQ256</pattern>
				<pattern type="string" value="Miracle">Fly_IQ442</pattern>
				<pattern type="string" value="Horizon">Fly_IQ450</pattern>
				<pattern type="string" value="Golf">Golf</pattern>
				<pattern type="string" value="Galaxy W">GT-I8150</pattern>
				<pattern type="string" value="Galaxy Ace II">GT-I8160</pattern>
				<pattern type="string" value="Galaxy S III mini">GT-I8190</pattern>
				<pattern type="string" value="Galaxy Core">GT-I8262</pattern>
				<pattern type="string" value="Galaxy Core Duos">GT-I8262</pattern>
				<pattern type="string" value="Galaxy Win">GT-I8552</pattern>
				<pattern type="string" value="Galaxy S">GT-I9000</pattern>
				<pattern type="string" value="Galaxy S Plus">GT-I9001</pattern>
				<pattern type="string" value="Galaxy S scLCD">GT-I9003</pattern>
				<pattern type="string" value="Galaxy S Advance">GT-I9070</pattern>
				<pattern type="string" value="Galaxy Grand">GT-I9082</pattern>
				<pattern type="string" value="Galaxy S II">GT-I9100</pattern>
				<pattern type="string" value="Galaxy R">GT-I9103</pattern>
				<pattern type="string" value="GALAXY S II Plus">GT-I9105</pattern>
				<pattern type="string" value="Galaxy Mega 5.8">GT-I9152</pattern>
				<pattern type="string" value="Galaxy S4 mini">GT-I9190</pattern>
				<pattern type="string" value="Galaxy S4 mini">GT-I9190</pattern>
				<pattern type="string" value="Galaxy S4 mini Duos">GT-I9192</pattern>
				<pattern type="string" value="Galaxy Mega 6.3">GT-I9200</pattern>
				<pattern type="string" value="Galaxy Premier">GT-I9260</pattern>
				<pattern type="string" value="Galaxy S III">GT-I9300</pattern>
				<pattern type="string" value="Galaxy S4">GT-I9500</pattern>
				<pattern type="string" value="Galaxy S4 LTE">GT-I9505</pattern>
				<pattern type="string" value="Galaxy Note 8.0">GT-N5100</pattern>
				<pattern type="string" value="Galaxy Note">GT-N7000</pattern>
				<pattern type="string" value="Galaxy Note II">GT-N7100</pattern>
				<pattern type="string" value="Galaxy Note II ">GT-N7100</pattern>
				<pattern type="string" value="Galaxy Note II LTE">GT-N7105</pattern>
				<pattern type="string" value="Galaxy Note 10.1">GT-N8000</pattern>
				<pattern type="string" value="Galaxy Tab 2 7.0">GT-P3100</pattern>
				<pattern type="string" value="Galaxy Tab 2 7.0">GT-P3110</pattern>
				<pattern type="string" value="Galaxy Tab 2 10.1">GT-P5100</pattern>
				<pattern type="string" value="Galaxy Tab 2 10.1">GT-P5110</pattern>
				<pattern type="string" value="Galaxy Tab 2 10.1">GT-P5200</pattern>
				<pattern type="string" value="Galaxy Tab 3 10.1">GT-P5210</pattern>
				<pattern type="string" value="Galaxy Tab 7.7">GT-P6800</pattern>
				<pattern type="string" value="Galaxy Tab 10.1">GT-P7500</pattern>
				<pattern type="string" value="Galaxy Star">GT-S5282</pattern>
				<pattern type="string" value="Galaxy Pocket duos ">GT-S5302</pattern>
				<pattern type="string" value="Galaxy Pocket Neo">GT-S5310</pattern>
				<pattern type="string" value="Galaxy Y">GT-S5360</pattern>
				<pattern type="string" value="Galaxy Gio">GT-S5660</pattern>
				<pattern type="string" value="Galaxy xCover">GT-S5690</pattern>
				<pattern type="string" value="Galaxy Ace">GT-S5830</pattern>
				<pattern type="string" value="Galaxy Ace">GT-S5830G</pattern>
				<pattern type="string" value="Galaxy Ace">GT-S5830i</pattern>
				<pattern type="string" value="Galaxy Y Duos">GT-S6102</pattern>
				<pattern type="string" value="Galaxy Young Duos">GT-S6312</pattern>
				<pattern type="string" value="Galaxy Mini 2">GT-S6500D</pattern>
				<pattern type="string" value="Galaxy Ace Duos">GT-S6802</pattern>
				<pattern type="string" value="Galaxy Ace 3">GT-S7270</pattern>
				<pattern type="string" value="Galaxy Ace Plus">GT-S7500</pattern>
				<pattern type="string" value="Galaxy S Duos">GT-S7562</pattern>
				<pattern type="string" value="HD Quad">HD Quad</pattern>
				<pattern type="string" value="Desire HD">HTC Desire HD A9191</pattern>
				<pattern type="string" value="EVO 3D">HTC EVO 3D X515m</pattern>
				<pattern type="string" value="Ascend P6">HUAWEI P6-U06</pattern>
				<pattern type="string" value="Ascend Y201 Pro">HUAWEI U8666E</pattern>
				<pattern type="string" value="Ascend G300">HUAWEI U8815</pattern>
				<pattern type="string" value="Ascend G330">HUAWEI U8825-1</pattern>
				<pattern type="string" value="Honor Pro">HUAWEI U8950-1</pattern>
				<pattern type="string" value="Honor 2">HUAWEI U9508</pattern>
				<pattern type="string" value="Ascend D1">HUAWEI U9510E</pattern>
				<pattern type="string" value="Vision">HUAWEI-U8850</pattern>
				<pattern type="string" value="Vision ">HUAWEI-U8850</pattern>
				<pattern type="string" value="IdeaTab A1000">IdeaTabA1000-F</pattern>
				<pattern type="string" value="Infinity">Infinity</pattern>
				<pattern type="string" value="Infinity II">Infinityll</pattern>
				<pattern type="string" value="Jazz">IQ238</pattern>
				<pattern type="string" value="Pride">IQ255</pattern>
				<pattern type="string" value="Evoke">IQ430</pattern>
				<pattern type="string" value="Energie">IQ440</pattern>
				<pattern type="string" value="Radiance">IQ441</pattern>
				<pattern type="string" value="Diamond">IQ444</pattern>
				<pattern type="string" value="Genius">IQ445</pattern>
				<pattern type="string" value="Magic">IQ446</pattern>
				<pattern type="string" value="Vista">IQ451</pattern>
				<pattern type="string" value="Spark">IQ4404</pattern>
				<pattern type="string" value="G3">JIAYU G3</pattern>
				<pattern type="string" value="G2">JY-G2</pattern>
				<pattern type="string" value="G3">JY-G3</pattern>
				<pattern type="string" value="A789">Lenovo A789</pattern>
				<pattern type="string" value="A820">Lenovo A820</pattern>
				<pattern type="string" value="IdeaPhone">Lenovo P770</pattern>
				<pattern type="string" value="IdeaPhone">Lenovo P780_ROW</pattern>
				<pattern type="string" value="IdeaPhone S720">Lenovo S720</pattern>
				<pattern type="string" value="G2">LG-D802</pattern>
				<pattern type="string" value="Optimus L3 ">LG-E400</pattern>
				<pattern type="string" value="Optimus L3 Dual">LG-E405</pattern>
				<pattern type="string" value="Optimus L3 Dual ">LG-E405</pattern>
				<pattern type="string" value="Optimus L4 II Dual">LG-E445</pattern>
				<pattern type="string" value="Optimus L5">LG-E612</pattern>
				<pattern type="string" value="E615 Optimus L5 Dual">LG-E615</pattern>
				<pattern type="string" value="Optimus G ">LG-E975</pattern>
				<pattern type="string" value="Optimus One">LG-P500</pattern>
				<pattern type="string" value="Optimus Net Dual">LG-P698</pattern>
				<pattern type="string" value="Optimus L7">LG-P700</pattern>
				<pattern type="string" value="Optimus L7">LG-P705</pattern>
				<pattern type="string" value="Optimus L7 II Dual">LG-P715</pattern>
				<pattern type="string" value="Optimus L9">LG-P765</pattern>
				<pattern type="string" value="Optimus 4X HD">LG-P880</pattern>
				<pattern type="string" value="Xperia Arc">LT15i</pattern>
				<pattern type="string" value="Arc S">LT18i</pattern>
				<pattern type="string" value="Xperia P">LT22i</pattern>
				<pattern type="string" value="Xperia V">LT25i</pattern>
				<pattern type="string" value="Xperia S">LT26i</pattern>
				<pattern type="string" value="Xperia SL">LT26ii</pattern>
				<pattern type="string" value="Xperia acro S">LT26w</pattern>
				<pattern type="string" value="Xperia ion">LT28h</pattern>
				<pattern type="string" value="Xperia TX">LT29i</pattern>
				<pattern type="string" value="MX2">M040</pattern>
				<pattern type="string" value="AirTab 10.1">M100qg</pattern>
				<pattern type="string" value="AirTab 10.1">M100qw</pattern>
				<pattern type="string" value="S-TELL M200">M200</pattern>
				<pattern type="string" value="MeMO Pad HD 7">ME173X</pattern>
				<pattern type="string" value="Fonepad">ME371MG</pattern>
				<pattern type="string" value="MediaPad 7 Lite">MediaPad 7 Lite</pattern>
				<pattern type="string" value="MediaPad 10 FHD">MediaPad 10 FHD</pattern>
				<pattern type="string" value="Login">MegaFon_SP-AI</pattern>				
				<pattern type="string" value="AirTab 9.7">MS9702</pattern>
				<pattern type="string" value="Ericsson Xperia neo V">MT11i</pattern>
				<pattern type="string" value="Ericsson Hallon">MT15i</pattern>
				<pattern type="string" value="Xperia sola">MT27i</pattern>
				<pattern type="string" value="MTC 968">MTC_968</pattern>
				<pattern type="string" value="N1">N1</pattern>
				<pattern type="string" value="Navigator">Navigator</pattern>
				<pattern type="string" value="SURFpad">Obreey SURFpad</pattern>
				<pattern type="string" value="One Touch Pixi">ONE TOUCH 4007D</pattern>
				<pattern type="string" value="Onliner1">Onliner1</pattern>
				<pattern type="string" value="Onliner2">Onliner2</pattern>
				<pattern type="string" value="AirTab">P71qg</pattern>
				<pattern type="string" value="AirTab 10.1">P100qg</pattern>
				<pattern type="string" value="PadFone 2">PadFone 2</pattern>
				<pattern type="string" value="PadFone">PadFone</pattern>
				<pattern type="string" value="PadFone ">PadFone</pattern>
				<pattern type="string" value="MultiPhone">PAP4055DUO</pattern>
				<pattern type="string" value="Xenium W336">Philips W336</pattern>
				<pattern type="string" value="Xenium W632">Philips W632</pattern>
				<pattern type="string" value="Xenium W832">Philips W832</pattern>
				<pattern type="string" value="Xenium W8510">Philips W8510</pattern>
				<pattern type="string" value="MultiPad 7.0 Prime">PMP7170B3G</pattern>
				<pattern type="string" value="MultiPad 2">PMP7280C3G</pattern>
				<pattern type="string" value="Polo">Polo</pattern>
				<pattern type="string" value="Evolution Tab-970">rk30sdk</pattern>
				<pattern type="string" value="Vega">S4A1</pattern>
				<pattern type="string" value="S4003">s4003</pattern>
				<pattern type="string" value="S4004M">S4004M</pattern>
				<pattern type="string" value="S4501M">S4501M</pattern>
				<pattern type="string" value="S4502">s4502</pattern>
				<pattern type="string" value="S4502M">s4502M</pattern>
				<pattern type="string" value="S4503Q">S4503Q</pattern>
				<pattern type="string" value="S4505M">S4505M</pattern>
				<pattern type="string" value="s4506">S4506</pattern>
				<pattern type="string" value="S5001">S5001</pattern>
				<pattern type="string" value="R413">SENSEIT_R413</pattern>
				<pattern type="string" value="Xperia Tablet Z">SGP321</pattern>
				<pattern type="string" value="SI4301">SI4301</pattern>
				<pattern type="string" value="Sky Plus">Sky Plus</pattern>
				<pattern type="string" value="Galaxy Note 3">SM-N900</pattern>
				<pattern type="string" value="Galaxy Note 3">SM-N9005</pattern>
				<pattern type="string" value="Galaxy Note 10.1 2014">SM-P601</pattern>
				<pattern type="string" value="Galaxy Tab 3 7.0">SM-T210</pattern>
				<pattern type="string" value="Galaxy Tab 3 7.0">SM-T211</pattern>
				<pattern type="string" value="Galaxy Tab 3 8.0">SM-T310</pattern>
				<pattern type="string" value="Galaxy Tab 3 8.0">SM-T311</pattern>
				<pattern type="string" value="Solo">Solo</pattern>
				<pattern type="string" value="Spark">Spark</pattern>
				<pattern type="string" value="sQuad 7.82 3G">sQuad 7.82 3G</pattern>
				<pattern type="string" value="sQuad 10.02 3G">sQuad 10.02 3G</pattern>
				<pattern type="string" value="sQuad 10.06 3G">sQuad 10.06 3G</pattern>
				<pattern type="string" value="sQuad 9.71">sQuad_9.71</pattern>
				<pattern type="string" value="sQuad 10.01">sQuad-10.01</pattern>
				<pattern type="string" value="Xperia ray">ST18i</pattern>
				<pattern type="string" value="Xperia tipo dual">ST21i</pattern>
				<pattern type="string" value="Xperia tipo dual">ST21i2</pattern>
				<pattern type="string" value="Xperia miro">ST23i</pattern>
				<pattern type="string" value="Xperia U">ST25i</pattern>
				<pattern type="string" value="Xperia J">ST26i</pattern>
				<pattern type="string" value="Xperia Go">ST27i</pattern>
				<pattern type="string" value="Star TV">Star TV</pattern>
				<pattern type="string" value="Surfer 7.04">Surfer 7.04</pattern>
				<pattern type="string" value="Surfer 7.32 3G">Surfer 7.32 3G</pattern>
				<pattern type="string" value="Surfer 7.34 3G">Surfer 7.34</pattern>
				<pattern type="string" value="Surfer 8.31 3G">Surfer 8.31 3G</pattern>
				<pattern type="string" value="Surfer 7.03">Surfer7.03</pattern>
				<pattern type="string" value="Galaxy Premier">T-I9260</pattern>
				<pattern type="string" value="T272">T272</pattern>
				<pattern type="string" value="Cookie Smart">T375</pattern>
				<pattern type="string" value="Ascend G500 Pro">U8836D</pattern>
				<pattern type="string" value="Honor">U8860</pattern>
				<pattern type="string" value="Ascend P1">U9200</pattern>
				<pattern type="string" value="Ascend P1 XL">U9200E</pattern>
				<pattern type="string" value="Ascend D1">U9500</pattern>
				<pattern type="string" value="ViewPad 7">ViewPad7</pattern>
				<pattern type="string" value="W626">W626</pattern>
				<pattern type="string" value="Xenium W732">W732</pattern>
				<pattern type="string" value="Xenium W6500">W6500</pattern>
				<pattern type="string" value="WT19i">WT19i</pattern>
				<pattern type="string" value="X-basic">X-basic</pattern>
				<pattern type="string" value="X-tremer">X-tremer</pattern>
				<pattern type="string" value="X5">X5</pattern>
				<pattern type="string" value="RAZR i">XT890</pattern>
				<pattern type="string" value="Z10">Z10</pattern>
				<pattern type="string" value="Z30">Z30</pattern>
				<pattern type="string" value="ZP300+">ZP300+</pattern>
				<pattern type="string" value="Leader">ZP900</pattern>
				<pattern type="string" value="Scorpio">ZP980</pattern>
				<pattern type="string" value="V880E Dual">ZTE V880E</pattern>
				<pattern type="regex" value="Lumia $1">Lumia ([&num;]+)\)</pattern>				
			</define>
			<define name="DeviceModel">
				<pattern type="regex" value="SAMSUNG $1">[-&s;]((?:GT|SGH|SM)-[ITSNPL][&num;]+)</pattern>
				<pattern type="regex" value="LG $1">[-&s;](LG-[PE]700)</pattern>
				<pattern type="regex" value="$1">(Lenovo A[&num;]{3})</pattern>
				<pattern type="regex" value="Huawei $1">HUAWEI&s;([&word;\-]+)</pattern>
				<pattern type="regex" value="Huawei $1">HUAWEI-([&word;\-]+)</pattern>
				<pattern type="regex" value="Huawei $1">HUAWEI([&word;\-]+)</pattern>
			</define>
		</branch>
	</branch>
	<branch type="default" name="Desktop">
		<define name="isMobile" value="false"/>
		<define name="isBrowser" value="true"/>
		<branch name="Opera">
			<match type="any">
				<pattern type="string">Opera/</pattern>
				<pattern type="string">Opera </pattern>
			</match>
			<define name="BrowserEngine" value="Presto"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">Presto/(&ver3d;)</pattern>
			</define>
			<define name="BrowserName" value="Opera"/>
			<define name="BrowserVersion">
				<pattern type="regex" value="$1">Version/(&ver;)</pattern>
				<pattern type="regex" value="$1">Opera/(&ver;)</pattern>
				<pattern type="regex" value="$1">Opera (&ver;)</pattern>
			</define>

			<define name="isBeta">
				<pattern type="string" value="true">Edition Next</pattern>
			</define>
		</branch>
		
		<branch name="Trident">
			<match type="any">
				<pattern type="string">Trident/7</pattern>
				<pattern type="string">Microsoft Office/</pattern>
				<pattern type="regex">MSIE &ver2d;</pattern>
			</match>
			<define name="BrowserEngine">Trident</define>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">Trident/(&ver2d;)</pattern>
			</define>
			<define name="BrowserName">MSIE</define>
			<define name="BrowserVersion">
				<pattern type="string" value="8.0">Trident/4.0</pattern>
				<pattern type="string" value="11.0">Trident/7.0</pattern>
				<pattern type="string" value="10.0">Trident/6.0</pattern>
				<pattern type="string" value="9.0">Trident/5.0</pattern>
				<pattern type="regex" value="$1">MSIE (&ver2d;)</pattern>
				<pattern type="regex" value="$1">\(IE (&ver2d;)</pattern>
				<pattern type="regex" value="$1">rv[: ](&ver2d;)</pattern>
			</define>
			
			<branch name="Lunascape">
				<match type="any">
					<pattern type="regex">Lunascape</pattern>
				</match>
				<define name="BrowserName" value="Lunascape"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Lunascape[&s;/](&ver;)</pattern>
				</define>
			</branch>
			
			<branch name="Maxthon">
				<match type="any">
					<pattern type="string">Maxthon</pattern>
				</match>
				<define name="BrowserShell" value="Maxthon"/>
				<define name="BrowserShellVersion">
					<pattern type="regex" value="$1">Maxthon(?:/|&s;)(&ver2d;)</pattern>
				</define>
			</branch>
			<define name="BrowserShell">
				<pattern type="string" value="GreenBrowser">GreenBrowser</pattern>
				<pattern type="string" value="AvantBrowser">Avant Browser</pattern>
				<pattern type="string" value="MyIE2">MyIE2</pattern>
				<pattern type="string" value="MyIE">MyIE</pattern>
				<pattern type="string" value="SlimBrowser">SlimBrowser</pattern>
				<pattern type="string" value="NetCaptor">NetCaptor</pattern>
				<pattern type="string" value="MicrosoftOffice">Microsoft Office</pattern>
			</define>
		</branch>
		
		<branch name="Gecko">
			<match type="any">
				<pattern type="string">Gecko/</pattern>
				<pattern type="string">) Gecko</pattern>
				<pattern type="string">Firefox/</pattern>
				<pattern type="regex">&s;rv:&ver;;</pattern>
			</match>
			<define name="BrowserEngine" value="Gecko"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">rv:(&ver;)</pattern>
			</define>

			<branch name="Epiphany">
				<match type="any">
					<pattern type="string">Epiphany</pattern>
				</match>
				<define name="BrowserName" value="Epiphany"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Epiphany/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="AvantBrowser">
				<match type="any">
					<pattern type="string">Avant Browser</pattern>
				</match>
				<define name="BrowserName" value="AvantBrowser"/>
			</branch>

			<branch name="Camino">
				<match type="any">
					<pattern type="string">Camino/</pattern>
				</match>
				<define name="BrowserName" value="Camino"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Camino/(&ver3d;)</pattern>
				</define>
			</branch>

			<branch name="Flock">
				<match type="any">
					<pattern type="string">Flock/</pattern>
				</match>
				<define name="BrowserName" value="Flock"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Flock/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="Galeon">
				<match type="any">
					<pattern type="string">Galeon/</pattern>
				</match>
				<define name="BrowserName" value="Galeon"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Galeon/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="K-Meleon">
				<match type="any">
					<pattern type="string">K-Meleon/</pattern>
					<pattern type="regex">K-Meleon &ver;</pattern>
				</match>
				<define name="BrowserName" value="K-Meleon"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">K-Meleon/(&ver;)</pattern>
					<pattern type="regex" value="$1">K-Meleon (&ver;)</pattern>
				</define>
			</branch>

			<branch name="SeaMonkey">
				<match type="any">
					<pattern type="string">SeaMonkey/</pattern>
				</match>
				<define name="BrowserName" value="SeaMonkey"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">SeaMonkey/(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="PaleMoon">
				<match type="any">
					<pattern type="string">PaleMoon/</pattern>
				</match>
				<define name="BrowserName" value="PaleMoon"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">PaleMoon/(&ver2d;)</pattern>
				</define>
			</branch>
			
			<branch name="Lunascape">
				<match type="any">
					<pattern type="regex">Lunascape</pattern>
				</match>
				<define name="BrowserName" value="Lunascape"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Lunascape[&s;/](&ver;)</pattern>
				</define>
			</branch>

			<branch name="Netscape">
				<match type="any">
					<pattern type="regex">Netscape[&num;]?/</pattern>
				</match>
				<define name="BrowserName" value="Netscape"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Netscape[&num;]?/(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="Firefox">
				<match type="any">
					<pattern type="string">Firefox</pattern>
					<pattern type="string">Namoroka/</pattern>
					<pattern type="string">Shiretoko/</pattern>
					<pattern type="string">Iceweasel/</pattern>
					<pattern type="string">Iceape/</pattern>
					<pattern type="string">GranParadiso/</pattern>
					<pattern type="string">Minefield/</pattern>
					<pattern type="string">Thunderbird/</pattern>
					<pattern type="string">Firebird/</pattern>
					<pattern type="string">BonEcho/</pattern>
				</match>
				<define name="BrowserName" value="Firefox"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Firefox/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Namoroka/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Shiretoko/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Iceweasel/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Minefield/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Thunderbird/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Firebird/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">GranParadiso/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Iceape/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">BonEcho/(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="Songbird">
				<match type="any">
					<pattern type="regex">Songbird/</pattern>
				</match>
				<define name="BrowserName" value="SongBird"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Songbird/(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="Conkeror">
				<match type="any">
					<pattern type="regex">Conkeror/</pattern>
				</match>
				<define name="BrowserName" value="Conkeror"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Conkeror/(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="DefaultGecko" type="default">
				<branch name="MozillaSuite">
					<match>
						<pattern type="regex">&s;rv:0\.[6-9]</pattern>
						<pattern type="regex">&s;rv:1\.[0-7]</pattern>
					</match>
					<define name="BrowserName">Mozilla</define>
					<define name="BrowserVersion">
						<pattern type="regex" value="$1">&s;rv:(&ver;)</pattern>
					</define>
				</branch>
				<branch name="FirefoxPre5">
					<match>
						<pattern type="regex">&s;rv:1\.[8-9]</pattern>
						<pattern type="regex">&s;rv:2.</pattern>
					</match>
					<define name="BrowserName">Firefox</define>
					<define name="BrowserVersion">
						<pattern type="regex" value="1.5">rv:1.8.0</pattern>
						<pattern type="regex" value="2.0">rv:1.8</pattern>
						<pattern type="regex" value="3.0">rv:1.9.0</pattern>
						<pattern type="regex" value="3.5">rv:1.9.1</pattern>
						<pattern type="regex" value="3.6">rv:1.9.2</pattern>
						<pattern type="regex" value="3.7">rv:1.9</pattern>
						<pattern type="regex" value="4.0">rv:2.0</pattern>
					</define>
				</branch>
				<branch name="FirefoxPost5">
					<match>
						<pattern type="regex">&s;rv:(?:[5-9]\.|[&num;]{2,}\.)</pattern>
					</match>
					<define name="BrowserName">Firefox</define>
					<define name="BrowserVersion">
						<pattern type="regex" value="$1">&s;rv:(&ver;)</pattern>
					</define>
				</branch>
			</branch>
		</branch>
		
		<branch name="edge">
			<match>
				<pattern type="string">Edge/</pattern>
			</match>
			<define name="BrowserEngine" value="Edge"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">Edge/(&ver;)</pattern>
			</define>
			<define name="BrowserName" value="Edge"/>
			<define name="BrowserVersion">
				<pattern type="regex" value="$1">Edge/(&ver;)</pattern>
			</define>
		</branch>
		
		<branch name="KHTML">
			<match type="any">				
				<pattern type="string">Konqueror</pattern>
			</match>
			<define name="BrowserEngine">
				<pattern type="regex" value="KHTML">KHTML/</pattern>
				<pattern type="regex" value="WebKit">WebKit/</pattern>
				<pattern type="regex" value="KHTML">Konqueror</pattern>
			</define>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">KHTML/(&ver;)</pattern>
				<pattern type="regex" value="$1">WebKit/(&ver;)</pattern>
			</define>
			
			<branch name="Konqueror">
				<match type="any">
					<pattern type="string">Konqueror/</pattern>
				</match>
				<define name="BrowserName" value="Konqueror"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Konqueror/(&ver2d;)</pattern>
				</define>
			</branch>
		</branch>

		<branch name="WebKit">
			<match type="any">
				<pattern type="string">WebKit</pattern>
			</match>
			<define name="BrowserEngine" value="WebKit"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">WebKit/(&ver;)</pattern>
			</define>

			<define name="BrowserBase">
				<pattern type="string" value="Chromium">Chromium/</pattern>
				<pattern type="string" value="Chromium">Chrome/</pattern>
			</define>
			
			<define name="BrowserBaseVersion">
				<pattern type="regex" value="$1">Chromium/(&ver;)</pattern>
				<pattern type="regex" value="$1">Chrome/(&ver;)</pattern>				
			</define>
	
			<branch name="YandexInternet">
				<match type="any">
					<pattern type="string"> YI</pattern>
					<pattern type="string"> YE</pattern>
				</match>
				<define name="BrowserName" value="YandexInternet"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Chrome/(&ver3d;)</pattern>
				</define>
			</branch>

			<branch name="YandexBrowser">
				<match type="any">
					<pattern type="string"> YandexBrowser/</pattern>
					<pattern type="string"> YaBrowser/</pattern>
				</match>
				<define name="BrowserName" value="YandexBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">YaBrowser/(&ver;)</pattern>
					<pattern type="regex" value="$1">Chrome/(&ver;)</pattern>
					<pattern type="regex" value="$1">Ya[&word;]*Browser/(&ver;)</pattern>
				</define>
				<define name="YaGUI">
					<pattern type="regex" value="$1">Yowser/(&ver;)</pattern>
				</define>
				<branch name="DesktopMode">
					<match type="any">
						<pattern type="regex">YaBrowser/(?:[&num;]+\.){4}[&num;]{2}</pattern>
					</match>					
					<define name="DesktopMode">true</define>
					<define name="X-OSFamily">
						<pattern type="regex" value="iOS">YaBrowser/(?:[&num;]+\.){4}1[&num;]</pattern>
						<pattern type="regex" value="Android">YaBrowser/(?:[&num;]+\.){4}0[&num;]</pattern>
					</define>
					<define name="X-DeviceType">
						<pattern type="regex" value="Phone">YaBrowser/(?:[&num;]+\.){4}[&num;]0</pattern>
						<pattern type="regex" value="Tablet">YaBrowser/(?:[&num;]+\.){4}[&num;]1</pattern>
					</define>
				</branch>
			</branch>
			
			<branch name="Lunascape">
				<match type="any">
					<pattern type="regex">Lunascape</pattern>
				</match>
				<define name="BrowserName" value="Lunascape"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Lunascape[&s;/](&ver;)</pattern>
				</define>
			</branch>
			
			<branch name="Vivaldi">
				<match type="any">
					<pattern type="string">Vivaldi/</pattern>				
				</match>
				<define name="BrowserName" value="Vivaldi"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Vivaldi/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="Sleipnir">
				<match type="any">
					<pattern type="string">Sleipnir/</pattern>
				</match>
				<define name="BrowserName" value="Sleipnir"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Sleipnir/(&ver;)</pattern>
				</define>
			</branch>
			
			<branch name="Maxthon">
				<match type="any">
					<pattern type="string">Maxthon/</pattern>
				</match>
				<define name="BrowserName" value="Maxthon"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Maxthon/(&ver3d;)</pattern>
				</define>
			</branch>
			
			<branch name="UCBrowser">
				<match type="any">
					<pattern type="string">UBrowser/</pattern>
				</match>
				<define name="BrowserName" value="UCBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">UBrowser/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="RussianChromes">
				<match type="any">
					<pattern type="string">MRCHROME SOC</pattern>
					<pattern type="string">MRCHROME</pattern>
					<pattern type="string">Nichrome/</pattern>
				</match>
				<define name="BrowserName">
					<pattern type="string" value="Amigo">MRCHROME SOC</pattern>
					<pattern type="string" value="Mail.ru">MRCHROME</pattern>
					<pattern type="string" value="Nichrome">Nichrome/</pattern>					
				</define>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Chrome/(&ver3d;)</pattern>						
				</define>
			</branch>
			
			<branch name="Iron">
				<match type="any">
					<pattern type="string">Iron/</pattern>
				</match>
				<define name="BrowserName" value="Iron"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Iron/(&ver3d;)</pattern>
				</define>
			</branch>

			<branch name="Opera">
				<match type="any">
					<pattern type="string">OPR/</pattern>
				</match>
				<define name="BrowserName" value="Opera"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">OPR/(&ver;)</pattern>
				</define>
				<define name="isBeta">
					<pattern type="string" value="true">Edition Next</pattern>
					<pattern type="string" value="true">Edition Developer</pattern>
				</define>
			</branch>

			<branch name="Chromium">
				<match type="any">
					<pattern type="string">Chromium/</pattern>
				</match>
				<define name="BrowserName" value="Chromium"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Chromium/(&ver3d;)</pattern>
				</define>
			</branch>

			<branch name="Flock">
				<match type="any">
					<pattern type="string">Flock/</pattern>
				</match>
				<define name="BrowserName" value="Flock"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Flock/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="Chrome">
				<match type="any">
					<pattern type="string">Chrome/</pattern>
				</match>
				<define name="BrowserName" value="Chrome"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Chrome/(&ver3d;)</pattern>
				</define>
			</branch>

			<branch name="Midori">
				<match type="any">
					<pattern type="string">Midori/</pattern>
				</match>
				<define name="BrowserName" value="Midori"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">^Midori/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="Epiphany">
				<match type="any">
					<pattern type="string">Epiphany</pattern>
				</match>
				<define name="BrowserName" value="Epiphany"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Epiphany/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="QtWeb">
				<match type="any">
					<pattern type="string">QtWeb</pattern>
				</match>
				<define name="BrowserName" value="QtWeb"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">QtWeb Internet Browser/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="QupZilla">
				<match type="any">
					<pattern type="string">QupZilla/</pattern>
				</match>
				<define name="BrowserName" value="QupZilla"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">QupZilla/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="Arora">
				<match type="any">
					<pattern type="string">Arora</pattern>
				</match>
				<define name="BrowserName" value="Arora"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Arora/(&ver3d;)</pattern>
				</define>
			</branch>

			<branch name="OmniWeb">
				<match type="any">
					<pattern type="string">OmniWeb/</pattern>
				</match>
				<define name="BrowserName" value="OmniWeb"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">OmniWeb/v(&ver2d;)</pattern>
				</define>
			</branch>
			
			<branch name="Rekonq">
				<match type="any">
					<pattern type="string">rekonq</pattern>
				</match>
				<define name="BrowserName" value="Rekonq"/>
			</branch>

			<branch name="Uzbl">
				<match type="any">
					<pattern type="string">Uzbl</pattern>
				</match>
				<define name="BrowserName" value="Uzbl"/>
			</branch>

			<branch name="LGBrowser">
				<match type="any">
					<pattern type="string">LG Browser/</pattern>
				</match>
				<define name="BrowserName" value="LGBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">LG Browser/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="AdobeAIR">
				<match type="any">
					<pattern type="regex">Adobe ?AIR</pattern>
				</match>
				<define name="BrowserName" value="AdobeAIR"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">AdobeAIR/(&ver;)</pattern>
				</define>
				<define name="isBrowser" value="false"/>
			</branch>

			<branch name="Playstation">
				<match type="any">
					<pattern type="string">PLAYSTATION</pattern>
				</match>
				<define name="BrowserName" value="Playstation"/>
			</branch>

			<branch name="GoogleWirelessTranscoder">
				<match type="any">
					<pattern type="string">Google Wireless Transcoder</pattern>
				</match>
				<define name="BrowserName" value="GoogleWirelessTranscoder"/>
				<define name="isBrowser" value="false"/>
			</branch>
			<!--
			<branch name="FakeSafari">
				<match type="any">
					<pattern type="regex">Version/5.0.5 Safari/(?!533.21.1)</pattern>
				</match>
				<define name="BrowserName" value="Unknown"/>
				<define name="BrowserEngine" value="Unknown"/>
				<define name="BrowserEngineVersion" value="Unknown"/>
				<define name="isRobot" value="true"/>
				<define name="isBrowser" value="false"/>				
			</branch>
			-->

			<branch name="Safari">
				<match type="any">
					<pattern type="string">Safari/</pattern>
				</match>
				<define name="BrowserName" value="Safari"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Version/(&ver2d;)</pattern>
				</define>
				<define name="historySupport">
					<pattern type="regex" value="true">Version/(?:5\.[1-9]|[6-9])</pattern>
				</define>

				<branch name="iCab">
					<match type="any">
						<pattern type="string">iCab</pattern>
					</match>
					<define name="BrowserShell" value="iCab"/>
					<define name="BrowserShellVersion">
						<pattern type="regex" value="$1">iCab/(&ver3d;)</pattern>
					</define>
				</branch>

			</branch>
		</branch>

		<branch name="TextBased">
			<match type="any">
				<pattern type="string">libwww</pattern>
				<pattern type="string">libcurl</pattern>
				<pattern type="string">Python-urllib</pattern>
				<pattern type="string">Wget</pattern>
				<pattern type="regex">^PHP/</pattern>
				<pattern type="regex">^Java/</pattern>
				<pattern type="regex">E?Links</pattern>
			</match>
			<define name="BrowserEngine">
				<pattern type="regex" value="TextBased">E?Links</pattern>
				<pattern type="string" value="TextBased">Lynx</pattern>
			</define>
			<define name="BrowserName">
				<pattern type="string" value="ELinks">ELinks</pattern>
				<pattern type="string" value="Links">Links</pattern>
				<pattern type="string" value="Lynx">Lynx</pattern>
			</define>
			<define name="isBrowser">
				<pattern type="string" value="false">libcurl</pattern>
				<pattern type="string" value="false">Python-urllib</pattern>
				<pattern type="string" value="false">Wget</pattern>
				<pattern type="regex" value="false">^PHP/</pattern>
				<pattern type="regex" value="false">^Java/</pattern>
				<pattern type="string" value="false">libwww-perl</pattern>
			</define>
		</branch>

		<branch type="default" name="UnknownEngine">
			<define name="BrowserEngine">Unknown</define>
			<define name="BrowserName">Unknown</define>
			<define name="isBrowser">false</define>
			<branch name="iTunes">
				<match type="any">
					<pattern type="string">iTunes/</pattern>
				</match>
				<define name="BrowserName" value="iTunes"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">iTunes/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="Dillo">
				<match type="any">
					<pattern type="string">Dillo/</pattern>
				</match>
				<define name="BrowserName" value="Dillo"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Dillo/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="NCSAMosaic">
				<match type="any">
					<pattern type="string">NCSA Mosaic/</pattern>
				</match>
				<define name="BrowserName" value="NCSA Mosaic"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">NCSA Mosaic/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="NetSurf">
				<match type="any">
					<pattern type="string">NetSurf/</pattern>
				</match>
				<define name="BrowserName" value="NetSurf"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">NetSurf/(&ver2d;)</pattern>
				</define>
				<define name="isBrowser" value="true"/>
			</branch>
			<branch name="UnixNetscape">
				<match type="any">
					<pattern type="regex">Mozilla/4.*X11</pattern>
				</match>
				<define name="BrowserName" value="Netscape"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Mozilla/(&ver2d;)</pattern>
				</define>
				<define name="isBrowser" value="true"/>
			</branch>
		</branch>

		<branch type="common" name="BrowserToolbars">
			<branch name="YandexBar">
				<match type="any">
					<pattern type="string">YB/</pattern>
				</match>
				<define name="YandexBar" value="true"/>
				<define name="YandexBarVersion">
					<pattern type="regex" value="$1">YB/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="MailRuSputnik">
				<match type="any">
					<pattern type="string">sputnik</pattern>
				</match>
				<define name="MailRuSputnik" value="true"/>
				<define name="MailRuSputnikVersion">
					<pattern type="regex" value="$1.$2">MRSPUTNIK ([&num;]+),&s;+([&num;]+)</pattern>
					<pattern type="regex" value="$1">sputnik (&ver;)</pattern>
				</define>
			</branch>

			<branch name="MailRuAgent">
				<match type="any">
					<pattern type="string">MRA</pattern>
				</match>
				<define name="MailRuAgent" value="true"/>
				<define name="MailRuAgentVersion">
					<pattern type="regex" value="$1">MRA (&ver;)</pattern>
				</define>
			</branch>

			<branch name="GoogleToolBar">
				<match type="any">
					<pattern type="string">GTB</pattern>
					<pattern type="string">GoogleT</pattern>
				</match>
				<define name="GoogleToolBar" value="true"/>
				<define name="GoogleToolBarVersion">
					<pattern type="regex" value="$1">GTB(&ver;)</pattern>
					<pattern type="regex" value="$1">GoogleT(&ver;)</pattern>
				</define>
			</branch>
		</branch>

		<branch type="common" name="DesktopOS">
			<!--
			<branch name="FakeRobotOS">
				<match type="any">
					<pattern type="regex">Version/5.0.5 Safari/(?!533.21.1)</pattern>
				</match>
				<define name="OSFamily" value="Unknown"/>
				<define name="isRobot" value="true"/>
				<define name="isBrowser" value="false"/>				
			</branch>
			-->
			
			<branch name="Windows">
				<match type="any">
					<pattern type="string">Windows</pattern>
					<pattern type="string">Win16</pattern>
					<pattern type="string">WinNT</pattern>
					<pattern type="string">Win9</pattern>
					<pattern type="string">Win32</pattern>
					<pattern type="string">Win64</pattern>
				</match>
				<define name="OSFamily">Windows</define>
				<define name="OSName">
					<pattern type="string" value="Windows 98">Windows 98</pattern>
					<pattern type="string" value="Windows 98">Win98</pattern>
					<pattern type="string" value="Windows 2000">Windows NT 5.0</pattern>
					<pattern type="string" value="Windows 2000">Windows 2000</pattern>
					<pattern type="string" value="Windows XP">Windows NT 5.1</pattern>
					<pattern type="string" value="Windows XP">Windows XP</pattern>
					<pattern type="string" value="Windows Server 2003">Windows NT 5.2</pattern>
					<pattern type="string" value="Windows Vista">Windows NT 6.0</pattern>
					<pattern type="string" value="Windows 7">Windows NT 6.1</pattern>
					<pattern type="string" value="Windows 8">Windows NT 6.2</pattern>
					<pattern type="string" value="Windows 8.1">Windows NT 6.3</pattern>
					<pattern type="string" value="Windows 10">Windows NT 6.4</pattern>
					<pattern type="string" value="Windows 10">Windows NT 10.0</pattern>
					<pattern type="string" value="Windows NT 4.0">Windows NT;</pattern>
					<pattern type="string" value="Windows NT 3.51">WinNT3.51</pattern>
					<pattern type="string" value="Windows NT 4.0">WinNT</pattern>
					<pattern type="string" value="Windows ME">Windows ME</pattern>
					<pattern type="string" value="Windows 95">Windows 95</pattern>
					<pattern type="string" value="Windows 95">Win95</pattern>
					<pattern type="string" value="Windows 3.11">Win16</pattern>
				</define>
				<define name="OSVersion">
					<pattern type="string" value="4.1.1998">Windows 98</pattern>
					<pattern type="string" value="4.1.1998">Win98</pattern>
					<pattern type="regex" value="$1">Windows NT (&ver;)</pattern>
					<pattern type="string" value="5.0.2195">Windows 2000</pattern>
					<pattern type="string" value="5.1.2600">Windows XP</pattern>
					<pattern type="string" value="4.0.1381">Windows NT;</pattern>
					<pattern type="string" value="3.51">WinNT3.51</pattern>
					<pattern type="string" value="4.0.1381">WinNT</pattern>
					<pattern type="string" value="4.90.3000">Windows ME</pattern>
					<pattern type="string" value="4.0.950">Windows 95</pattern>
					<pattern type="string" value="4.0.950">Win95</pattern>
					<pattern type="string" value="3.11">Win16</pattern>
				</define>
				<define name="x64">
					<pattern type="string" value="true">WOW64</pattern>
					<pattern type="string" value="true">Win64</pattern>
					<pattern type="string" value="true">x64</pattern>
				</define>
				<define name="isTouch">
					<pattern type="string" value="true">Tablet PC</pattern>
					<pattern type="string" value="true">Touch</pattern>
				</define>
			</branch>

			<branch name="Unix">
				<match type="any">
					<pattern type="string">OpenBSD</pattern>
					<pattern type="string">NetBSD</pattern>
					<pattern type="string">FreeBSD</pattern>
					<pattern type="string">Linux</pattern>
					<pattern type="string">SunOS</pattern>
					<pattern type="string">QNX</pattern>
					<pattern type="string">UNIX</pattern>
					<pattern type="string">AIX</pattern>
					<pattern type="string">IRIX</pattern>
					<pattern type="string"> CrOS</pattern>
					<pattern type="regex">X11[^0-9]</pattern>
				</match>
				<define name="OSFamily">
					<pattern type="string" value="OpenBSD">OpenBSD</pattern>
					<pattern type="string" value="Linux">Linux</pattern>
					<pattern type="string" value="Linux">Ubuntu</pattern>
					<pattern type="string" value="QNX">QNX</pattern>
					<pattern type="string" value="SunOS">SunOS</pattern>
					<pattern type="string" value="FreeBSD">FreeBSD</pattern>
					<pattern type="string" value="NetBSD">NetBSD</pattern>
					<pattern type="string" value="UNIX">UNIX</pattern>
					<pattern type="string" value="AIX">AIX</pattern>
					<pattern type="string" value="IRIX">IRIX</pattern>
					<pattern type="string" value="ChromeOS"> CrOS</pattern>
					<pattern type="string" value="HP-UX">HP-UX</pattern>
					<pattern type="string" value="UnknownNix">X11</pattern>
				</define>
				<define name="x64">
					<pattern type="string" value="true">x86_64</pattern>
					<pattern type="string" value="true">amd64</pattern>
				</define>
				<branch name="LinuxDistr">
					<match>
						<pattern type="string">Linux</pattern>
						<pattern type="string">Ubuntu</pattern>
					</match>
					<branch name="Ubuntu">
						<match>
							<pattern type="string">Ubuntu</pattern>
						</match>
						<define name="OSName">							
							<pattern type="string" value="Ubuntu">Ubuntu</pattern>							
						</define>
						<define name="OSVersion">
							<pattern type="regex" value="$1">Ubuntu/(&ver;)</pattern>
						</define>
					</branch>
					<branch name="Mint">
						<match>
							<pattern type="string">Mint</pattern>
						</match>
						<define name="OSName">Mint</define>
						<define name="OSVersion">
							<pattern type="regex" value="$1">Mint/(&ver;)</pattern>
						</define>
					</branch>
					<branch name="Fedora">
						<match>
							<pattern type="string">Fedora</pattern>
						</match>
						<define name="OSName">Fedora</define>
						<define name="OSVersion">
							<pattern type="regex" value="$1">fc(&ver;)</pattern>
						</define>
					</branch>
					<branch name="Mandriva">
						<match>
							<pattern type="string">Mandriva</pattern>
						</match>
						<define name="OSName">Mandriva</define>
						<define name="OSVersion">
							<pattern type="regex" value="$1">mdv(&ver;)</pattern>
						</define>
					</branch>
					<branch name="RedHat">
						<match>
							<pattern type="string">Red Hat/</pattern>
						</match>
						<define name="OSName">RedHat</define>
						<define name="OSVersion">
							<pattern type="regex" value="$1.$2">el([&num;]+)_([&num;]+)</pattern>
							<pattern type="regex" value="$1">el([&num;]+)</pattern>
						</define>
					</branch>
					<branch name="CentOS">
						<match>
							<pattern type="string">CentOS</pattern>
						</match>
						<define name="OSName">CentOS</define>
						<define name="OSVersion">
							<pattern type="regex" value="$1">el(&ver;)</pattern>
						</define>
					</branch>
					<branch name="ASPLinux">
						<match>
							<pattern type="string">ASPLinux</pattern>
						</match>
						<define name="OSName">ASPLinux</define>
						<define name="OSVersion">
							<pattern type="regex" value="$1">ASPLinux/(&ver3d;)</pattern>
						</define>
					</branch>
					<branch name="OtherDistr" type="default">
						<define name="OSName">
							<pattern type="string" value="Debian">Debian</pattern>
							<pattern type="string" value="SUSE">SUSE</pattern>
							<pattern type="string" value="Gentoo">Gentoo</pattern>
							<pattern type="string" value="ALTLinux">ALTLinux</pattern>
							<pattern type="string" value="SplashTop">Splashtop</pattern>
						</define>
					</branch>
				</branch>
			</branch>
			<branch name="MacOS">
				<match type="any">
					<pattern type="string">Macintosh</pattern>
					<pattern type="string">Mac OS X</pattern>
					<pattern type="string">PPC</pattern>
					<pattern type="string">Darwin</pattern>
					<pattern type="string">Mac_PowerPC</pattern>
				</match>
				<define name="OSFamily">MacOS</define>
				<define name="OSVersion">
					<pattern type="regex" value="$1.$2.$3">Mac OS X ([&num;]+)_([&num;]+)_([&num;]+)</pattern>
					<pattern type="regex" value="$1.$2">Mac OS X ([&num;]+)_([&num;]+)</pattern>					
					<pattern type="regex" value="$1">Mac OS X (&ver;)</pattern>
				</define>
				<define name="OSName">
					<pattern type="regex" value="Mac OS X Tiger">10[_\.]4</pattern>
					<pattern type="regex" value="Mac OS X Leopard">10[_\.]5</pattern>
					<pattern type="regex" value="Mac OS X Snow Leopard">10[_\.]6</pattern>
					<pattern type="regex" value="Mac OS X Lion">10[_\.]7</pattern>
					<pattern type="regex" value="Mac OS X Mountain Lion">10[_\.]8</pattern>
					<pattern type="regex" value="Mac OS X Mavericks">10[_\.]9</pattern>
					<pattern type="regex" value="Mac OS X Yosemite">10[_\.]10</pattern>					
				</define>
			</branch>

			<branch name="OS2">
				<match>
					<pattern type="string">OS/2</pattern>
				</match>
				<define name="OSFamily">OS/2</define>
			</branch>

			<branch type="default" name="UnknownOS">
				<define name="OSFamily">Unknown</define>
			</branch>
		</branch>
	</branch>
	
	<branch type="common" name="TV">
		<define name="isTV">
			<pattern type="string" value="true">LG NetCast</pattern>
			<pattern type="string" value="true">SmartTV</pattern>
			<pattern type="regex" value="true">SMART[\-&s;_]?TV</pattern>
			<pattern type="string" value="true">HbbTV/</pattern>
			<pattern type="string" value="true">NETTV/</pattern>
			<pattern type="string" value="true">PHILIPSTV/</pattern>
			<pattern type="string" value="true">CinemaTV</pattern>
			<pattern type="regex" value="true">Google[&s;_\-]?TV</pattern>			
			<pattern type="string" value="true">MiniTV</pattern>			
			<pattern type="regex" value="true">Android[&s;_\-]?TV</pattern>
			<pattern type="regex" value="true">Star[&s;_\-]?TV</pattern>
			<pattern type="string" value="true">Opera TV</pattern>
			<pattern type="string" value="true">AQUOSBrowser</pattern>
			<pattern type="string" value="true">DTV</pattern>
			<pattern type="string" value="true">IPTV</pattern>
			<pattern type="string" value="true">LG Browser</pattern>			
		</define>
	</branch>
	<branch type="common" name="Misc">			
		<define name="isRobot">
			<pattern type="string" value="true">baiduspider</pattern>
			<pattern type="string" value="true">bingbot</pattern>
			<pattern type="string" value="true">googlebot</pattern>
			<pattern type="string" value="true">google web preview</pattern>
			<pattern type="string" value="true">mediapartners-google</pattern>
			<pattern type="string" value="true">msnbot</pattern>
			<pattern type="string" value="true">yahoo! slurp</pattern>
			<pattern type="string" value="true">+http://yandex.com/bots</pattern>
			<pattern type="string" value="true">YandexBot</pattern>
			<pattern type="string" value="true">Feedfetcher-Google;</pattern>
			<pattern type="string" value="true">WebAlta</pattern>
			<pattern type="string" value="true">StackRambler</pattern>
			<pattern type="string" value="true">msnbot</pattern>
			<pattern type="string" value="true">bingbot</pattern>
			<pattern type="string" value="true">Aport</pattern>
			<pattern type="string" value="true">Mail.Ru/</pattern>
			<pattern type="string" value="true">Yandex/</pattern>
			<pattern type="string" value="true">Statbox/</pattern>
			<pattern type="string" value="true">YandexSomething/</pattern>
			<pattern type="string" value="true">YandexBlog/</pattern>
			<pattern type="string" value="true">Yandex.Server/</pattern>
			<pattern type="string" value="true">YaDirectBot</pattern>
			<pattern type="string" value="true">Jakarta Commons-HttpClient/</pattern>
			<pattern type="string" value="true">TurtleScanner</pattern>
			<pattern type="string" value="true">Novoteka</pattern>
			<pattern type="string" value="true">ia_archiver</pattern>
			<pattern type="string" value="true">heritrix</pattern>
			<pattern type="string" value="true">Twiceler-</pattern>
			<pattern type="string" value="true">psbot/</pattern>
			<pattern type="string" value="true">Alchemy Eye Agent</pattern>
			<pattern type="string" value="true">Echoping/</pattern>
			<pattern type="string" value="true">Friends/</pattern>
			<pattern type="string" value="true">WhatsUp</pattern>
			<pattern type="string" value="true">; HttpSatPinger)</pattern>
			<pattern type="string" value="true">MSRBOT (http://research.microsoft.com/research/sv/msrbot/</pattern>
			<pattern type="string" value="true">MJ12bot/</pattern>
			<pattern type="string" value="true">ichiro/</pattern>
			<pattern type="string" value="true">TECOMAC-Crawler/</pattern>
			<pattern type="string" value="true">Gigabot</pattern>
			<pattern type="string" value="true">Sogou Push Spider</pattern>
			<pattern type="string" value="true">check_http/</pattern>
			<pattern type="string" value="true">http_ping</pattern>
			<pattern type="string" value="true">KeepAliveClient</pattern>
			<pattern type="string" value="true">SamSunf</pattern>
			<pattern type="string" value="true">GenHash</pattern>
			<pattern type="string" value="true">IRLbot</pattern>
			<pattern type="string" value="true">UptimeInspector</pattern>
			<pattern type="string" value="true">liveinternet spider</pattern>
			<pattern type="string" value="true">Begun Robot Crawler</pattern>
			<pattern type="string" value="true">InternetSeer.com</pattern>
			<pattern type="string" value="true">Refer.Ru Favicon Bot</pattern>
			<pattern type="string" value="true">Robot Semonitor</pattern>
			<pattern type="string" value="true">Robot PagePromoter</pattern>
			<pattern type="string" value="true">SESpider</pattern>
			<pattern type="string" value="true">Jakarta Commons-HttpClient</pattern>
			<pattern type="string" value="true">Parasite Eliminator</pattern>
			<pattern type="string" value="true">Spinn3r</pattern>
			<pattern type="string" value="true">YandexImages/</pattern>
			<pattern type="string" value="true">YandexVideo/</pattern>
			<pattern type="string" value="true">YandexMedia/</pattern>
			<pattern type="string" value="true">YandexBlogs/</pattern>
			<pattern type="string" value="true">YandexFavicons/</pattern>
			<pattern type="string" value="true">YandexAddurl/</pattern>
			<pattern type="string" value="true">YandexImageResizer/</pattern>
			<pattern type="string" value="true">YandexDirect/</pattern>
			<pattern type="string" value="true">YandexMetrika/</pattern>
			<pattern type="string" value="true">YandexNews/</pattern>
			<pattern type="string" value="true">YandexCatalog/</pattern>
			<pattern type="string" value="true">YandexWebmaster/</pattern>
			<pattern type="string" value="true">AdsBot-Google</pattern>
			<pattern type="string" value="true">facebookexternalhit/</pattern>			
		</define>
	</branch>
</rules>
