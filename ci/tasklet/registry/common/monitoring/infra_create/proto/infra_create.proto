syntax = "proto3";

package ci.monitoring.infra_create;
option go_package = "a.yandex-team.ru/ci/tasklet/registry/common/monitoring/infra_create/proto;infracreatepb";

import "tasklet/api/tasklet.proto";
import "tasklet/services/ci/proto/ci.proto";
import "tasklet/services/yav/proto/yav.proto";
import "ci/tasklet/common/proto/service.proto";

message InfraType {
    enum Type {
        ANY = 0;
        MAINTENANCE = 1;
        ISSUE = 2;
    }
}

message InfraSeverity {
    enum Severity {
        ANY = 0;
        MINOR = 1;
        MAJOR = 2;
    }
}

enum InfraDataCenter {
    man = 0;
    myt = 1;
    sas = 2;
    vla = 3;
    iva = 4;
    vlx = 5;
}

message InfraPlacement {
    int64 service_id = 2;
    int64 environment_id = 3;
    repeated InfraDataCenter data_centers = 4;
    repeated string tickets = 5;
}

message InfraStatus {
    InfraSeverity.Severity severity = 1;
    InfraType.Type type = 2;
}

message Config {
    message Textual {
        string title = 1;
        string description = 2;
    }
    InfraPlacement placement = 1;
    InfraStatus status = 2;
    Textual textual = 3;
    int64 id = 4;                          // meta id of infra to create
    bool do_not_send_emails = 5;
    string yav_infra_oauth_token_key = 6;  // default key is "infra.token"
    int64 duration = 7; // posible to set event's duration in seconds
}

message Input {
    Config config = 3;
    ci.TaskletContext context = 5;
}

message InfraIdentifier {
    int64 id = 1;
}

message Output {
    InfraIdentifier infra_identifier = 1;
}

message InfraCreateContext {
    option (tasklet.context) = true;

    ci.CiService ci = 1 [(tasklet.inject) = true];
    yav_service.YavService yav = 2 [(tasklet.inject) = true];
}

message InfraCreate {
    option (tasklet.tasklet_interface) = true;

    InfraCreateContext ctx = 1;
    Input input = 2 [(tasklet.input) = true];
    Output output = 3 [(tasklet.output) = true];
}
