syntax = "proto3";

package ci.tracker.transit_issue;

import "ci/tasklet/registry/common/tracker/create_issue/proto/create_issue.proto";
import "ci/tasklet/common/proto/service.proto";
import "tasklet/api/tasklet.proto";
import "tasklet/services/yav/proto/yav.proto";
import "tasklet/services/ci/proto/ci.proto";


message Input {
    ci.TaskletContext context = 1;

    ci.tracker.create_issue.Issue issue = 2; // Release issue, linked from upstream job
    ci.tracker.create_issue.Config config = 3; // Linking configuration, linked from upstream job

    ci.tracker.create_issue.Transition transition = 4; // transition to new status

    // Update issue during transition (add comment, for example; or transit linked issues between statuses)
    ci.tracker.create_issue.UpdateTemplate update_template = 5;
}

message Output {

}

message Context {
    option (tasklet.context) = true;

    string id = 1 [(tasklet.inject) = true];
    yav_service.YavService yav = 2 [(tasklet.inject) = true];
    ci.CiService ci = 3 [(tasklet.inject) = true];
}

message TransitIssue {
    option (tasklet.tasklet_interface) = true;

    Context ctx = 1;

    Input input = 2 [(tasklet.input) = true];
    Output output = 3 [(tasklet.output) = true];
}
