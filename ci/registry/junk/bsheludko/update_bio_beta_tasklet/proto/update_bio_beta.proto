syntax = "proto3";

import "ci/tasklet/common/proto/service.proto";
import "tasklet/api/tasklet.proto";
import "tasklet/services/yav/proto/yav.proto";

package voicetech.tasklet;

message Context {
  option (.tasklet.context) = true;
  yav_service.YavService yav = 1 [(.tasklet.inject) = true];
}

message UpdateBioBetaInput {
  string beta_name = 1;

  string cpu_component_name = 2;

  string lingware_resource_id = 5;
  
  string bio_server_cpu_resource_id = 6;

  string bio_server_cpu_runner_resource_id = 7;
  
  string bio_server_cpu_evlogdump_resource_id = 8;

  string bio_server_parent_service_id = 9;

  string apphost_node = 13;

  repeated string legacy_redirections = 14;

  string yabio_balancer = 15;

  string release_ticket = 20;

  int32 wait_beta_minutes = 100;
}

message UpdateBioBetaInputWrapper {
  ci.TaskletContext context = 1;
  UpdateBioBetaInput config = 2;
}

message Output {
  string uniproxy_url = 1;
  string host_address_for_stress_test = 5;
}

message UpdateBioBetaOutputWrapper {
  Output output = 1;
}

message UpdateBIOBeta {
  option (.tasklet.tasklet_interface) = true;

  UpdateBioBetaInputWrapper input = 1 [(.tasklet.input) = true];
  UpdateBioBetaOutputWrapper output = 2 [(.tasklet.output) = true];

  Context ctx = 3;
}