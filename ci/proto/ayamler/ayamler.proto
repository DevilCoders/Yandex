syntax = "proto3";

package ci.proto.ayamler;

option java_package = "ru.yandex.ci.ayamler";
option go_package = "a.yandex-team.ru/ci/proto/ayamler";

service AYamlerService {
    rpc GetStrongMode (GetStrongModeRequest) returns (GetStrongModeResponse);
    rpc GetStrongModeBatch (GetStrongModeBatchRequest) returns (GetStrongModeBatchResponse);

    rpc GetAbcServiceSlugBatch (GetAbcServiceSlugBatchRequest) returns (GetAbcServiceSlugBatchResponse);
}

// GetStrongMode
// GetStrongModeBatch
message GetStrongModeRequest {
    string path = 1;
    string revision = 2;
    // This is a ci-check author (commit author in case of post-commit check and pr author in case of pr)
    string login = 3;
}

message GetStrongModeResponse {
    StrongMode strong_mode = 1;
}

message GetStrongModeBatchRequest {
    repeated GetStrongModeRequest request = 1;
}

message GetStrongModeBatchResponse {
    repeated StrongMode strong_mode = 1;
}

message StrongMode {
    string path = 1;    // for example 'ci/core/src/test'
    string revision = 2;
    string login = 5;   // login is got from request
    StrongModeStatus status = 3;
    AYaml ayaml = 4;    // can be empty, when no a.yaml with explicitly defined strong mode found
    bool is_owner = 6; // is user developer of this path
}

enum StrongModeStatus {
    // treat UNKNOWN as an error, cause server should return default value, when no explicit strong mode found
    UNKNOWN = 0;
    ON = 1;
    OFF = 2;
    NOT_FOUND = 3;      // return NOT_FOUND for path ci/path-doesnt-exist
}

// GetAbcServiceBatch
message GetAbcServiceSlugRequest {
    string path = 1;
    string revision = 2;
}

message GetAbcServiceSlugBatchRequest {
    repeated GetAbcServiceSlugRequest request = 1;
}

message GetAbcServiceSlugBatchResponse {
    repeated AbcService abc_service = 1;
}

message AbcService {
    string path = 1;    // for example 'ci/core/src/test'
    string revision = 2;
    string slug = 3;
    AYaml ayaml = 4;    // can be empty, when no a.yaml with explicitly defined strong mode found
}

// Common
message AYaml {
    string path = 1;
    bool valid = 2;
    string errorMessage = 3;
    string service = 4;
}
