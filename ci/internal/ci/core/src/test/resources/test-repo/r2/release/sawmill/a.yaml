service: ci
title: Yandex CI

ci:
  secret: sec-01dy7t26dyht1bj4w3yn94fsa
  runtime:
    sandbox-owner: CI
  releases:
    demo-sawmill-release:
      title: Demo samwill release
      description: |
        Demo sawmill description **with some formatting**
        And multiline
      flow: release-sawmill
      rollback-flows:
        - release-sawmill-rollback
        - release-sawmill-rollback-wrong-stage
      flow-vars:
        c-title: Дровосек
        c-description: Рубит деревья на бревна
        perf: производительная
      stages:
        prepare-wood:
          title: Готовим материалы
        build-furniture:
          title: Выпускаем мебель
          rollback: true
      auto: true

    demo-sawmill-no-displacement-release:
      title: Demo samwill release
      flow: release-sawmill-displacement
      hotfix-flows:
        - release-sawmill-hotfix1
        - release-sawmill-hotfix2
      stages:
        start:
          title: Начало flow
        prepare-wood:
          title: Готовим материалы
        wait-stage:
          title: Ожидание
        build-furniture:
          title: Выпускаем мебель

    demo-sawmill-displacement-release:
      title: Demo samwill release
      flow: release-sawmill-displacement
      branches:
        pattern: releases/ci/release-component-2
        independent-stages: true
      stages:
        start:
          title: Начало flow
        prepare-wood:
          title: Готовим материалы
        wait-stage:
          title: Ожидание
          displace: true
        build-furniture:
          title: Выпускаем мебель

    demo-sawmill-release-conditional:
      title: Demo samwill release
      flow: release-sawmill-conditional
      stages:
        prepare-wood:
          title: Готовим материалы
        build-furniture:
          title: Выпускаем мебель

    demo-sawmill-release-conditional-vars:
      title: Demo samwill release
      flow: release-sawmill-conditional-vars
      flow-vars:
        run-sawmill-1: false
      stages:
        prepare-wood:
          title: Готовим материалы
        build-furniture:
          title: Выпускаем мебель

    empty-release:
      flow: empty-flow
      branches:
        pattern: releases/ci/release-component-2
      permissions:
        start-flow:
          - service: ci
            scope: administration

    empty-manual-release:
      flow: empty-manual-flow
      branches:
        pattern: releases/ci/release-component-2

    simplest-release:
      title: Simplest release process
      flow: simplest-flow
      flow-vars:
        lipa: Липа
      hotfix-flows:
        - flow: simplest-hotfix-flow
          flow-vars:
            lipa: бревно из липы
      rollback-flows:
        - simplest-rollback-flow
      stages:
        single:
          title: single
          rollback: true
      branches:
        # отказываем от генерации шаблона, чтобы чтобы иметь независимое имя ветки в тестах
        pattern: releases/ci/release-component-2

    simplest-release-with-retry:
      title: Simplest release process
      flow: simplest-flow-with-retry
      branches:
        # отказываем от генерации шаблона, чтобы чтобы иметь независимое имя ветки в тестах
        pattern: releases/ci/release-component-2

    simplest-release-with-start-version:
      title: Simplest release process
      flow: simplest-flow
      start-version: 42
      branches:
        pattern: releases/ci/release-with-start-version-${version}

    simplest-release-override-multiple-resources:
      title: Simple release process
      flow: simplest-flow-override-multiple-resources
      stages:
        single:
          title: Single

    simplest-release-override-single-resource:
      title: Simple release process
      flow: simplest-flow-override-single-resource
      stages:
        single:
          title: Single


    simplest-release-with-manual:
      flow: simplest-flow-with-manual
      stages:
        s1:
          title: S1
        s2:
          title: S2
          rollback: true

    simplest-sandbox-release:
      title: Simplest release process
      flow: simplest-sandbox-flow
      stages:
        single:
          title: Single

    simplest-sandbox-template-release:
      title: Simplest release process
      flow: simplest-sandbox-template-flow
      stages:
        single:
          title: Single

    simplest-sandbox-context-release:
      title: Simplest release process
      flow: simplest-sandbox-context-flow
      stages:
        single:
          title: Single
      runtime:
        sandbox:
          kill-timeout: 5m
          tags:
            - tag-1
            - tag-2
          hints:
            - hint-1
            - hint-2

    simplest-tasklet-v2-release:
      title: Simplest release process
      flow: simplest-tasklet-v2-flow
      stages:
        single:
          title: Single
      flow-vars:
        lipa: Липа

    simplest-tasklet-v2-simple-release:
      flow: simplest-tasklet-v2-simple-flow
      flow-vars:
        input: value

    simplest-tasklet-v2-simple-invalid-release:
      flow: simplest-tasklet-v2-simple-invalid-flow
      flow-vars:
        input: value

    simplest-multiply-release:
      title: Simplest release process
      flow: simplest-multiply-flow
      flow-vars:
        var1: value1
      stages:
        single:
          title: Single

    simplest-multiply-virtual-release:
      title: Simplest release process
      flow: simplest-multiply-virtual-flow
      stages:
        first:
          title: First
        second:
          title: Second
          rollback: true

    simplest-multiply-virtual-release-vars:
      title: Simplest release process
      flow: simplest-multiply-virtual-flow-vars
      flow-vars:
        timbers:
          - name: новое бревно из дерева Липа
          - name: новое бревно из дерева Береза
        boards-per-timber: 3
        sawmill: Лесопилка
        saw: Пилит
      stages:
        single:
          title: Single

    simplest-sandbox-multiply-release:
      title: Simplest release process
      flow: simplest-sandbox-multiply-flow
      stages:
        single:
          title: Single

    simplest-sandbox-binary-release:
      title: Simplest release process
      flow: simplest-sandbox-binary-flow
      stages:
        single:
          title: Single
      flow-vars:
        test-version: testing
        direct-version: 3

    tickets-release:
      flow: tickets-flow
      flow-vars:
        token: my-token

    conditional-fail:
      flow: sandbox-task-with-conditional-fail

    conditional-fail-with-resources:
      flow: sandbox-task-with-conditional-fail-with-resources


  actions:
    simplest-flow:
      flow: simplest-flow
      flow-vars:
        lipa: Липа
      triggers:
        - on: commit

    simplest-action-with-cleanup:
      flow: simplest-flow-with-cleanup
      flow-vars:
        var1: переменная из action
      triggers:
        - on: commit
      cleanup:
        conditions:
          - reasons: new-diff-set
            interrupt: true

    simplest-action-with-cleanup-without-jobs:
      flow: simplest-flow-with-manual-trigger
      triggers:
        - on: commit
      cleanup:
        on-status:
          - WAITING_FOR_MANUAL_TRIGGER
        conditions:
          - reasons: new-diff-set
            interrupt: true

    simplest-action-with-cleanup-auto:
      title: Flow из action
      description: |
        Flow из action **with some formatting**
        And multiline
      flow: simplest-flow-with-cleanup
      flow-vars:
        var1: переменная из action, delay
      triggers:
        - on: commit
      cleanup:
        delay: 1s

    simplest-action-with-cleanup-fail:
      flow: simplest-flow-with-cleanup-fail
      flow-vars:
        var1: переменная из action, failure
      triggers:
        - on: commit

    simplest-action-with-cleanup-fail-success-only:
      flow: simplest-flow-with-cleanup-fail
      flow-vars:
        var1: переменная из action, failure
      triggers:
        - on: commit
      cleanup: # IGNORE FAILURE state
        delay: 1s
        on-status:
          - SUCCESS

    simplest-action-with-cleanup-fail-auto:
      flow: simplest-flow-with-cleanup-fail
      flow-vars:
        var1: переменная из action, failure auto
      triggers:
        - on: commit
      cleanup: # SUCCESS + FAILURE
        delay: 1s

    simplest-action-with-cleanup-dependent:
      flow: simplest-flow-with-cleanup-dependent
      triggers:
        - on: commit
      cleanup:
        conditions:
          - reasons: new-diff-set
            interrupt: true

  flows:
    release-sawmill:
      title: Release Woodcutter
      jobs:
        woodcutter:
          title: ${flow-vars.c-title}
          description: ${flow-vars.c-description}
          task: demo/woodflow/woodcutter
          stage: prepare-wood
          input:
            trees:
              - type: Липа, которую заказал ${context.flow_triggered_by}
              - type: Береза, которую срубили по просьбе ${context.flow_triggered_by} на flow ${context.title}

        sawmill-1:
          title: Лесопилка ${flow-vars.perf}
          description: Пилит бревна на доски
          task: demo/woodflow/sawmill
          input:
            document:
              title: Лесопилка "${context.flow_triggered_by}" ${flow-vars.perf}, начинает работу над "${tasks.woodcutter.timbers[].name | sort(@) | @[0]}"
              boardsPerTimber: 4
          needs: woodcutter

        sawmill-2:
          title: Лесопилка обычная
          description: Пилит бревна на доски
          task: demo/woodflow/sawmill
          input:
            document:
              title: Лесопилка обычная, пилит ${length(tasks.woodcutter.timbers)} бревна
              boardsPerTimber: 3
          needs: woodcutter

        start-furniture:
          title: Запуск сборки
          task: dummy
          stage: build-furniture
          needs:
            - sawmill-1
            - sawmill-2

        furniture-factory:
          title: Мебельная фабрика
          description: Из досок собирает мебель
          task: demo/woodflow/furniture-factory_allow
          needs:
            - start-furniture

        sawmill-post-process:
          title: Проверка ссылок на ресурсы
          task: demo/woodflow/sawmill_allow
          needs: furniture-factory
          input:
            timebrs: ${tasks.woodcutter.timbers}
            document:
              title: Лесопилка обычная, пилит ${length(tasks.woodcutter.timbers)} бревна
              boardsPerTimber: 1

    release-sawmill-rollback:
      title: Release Woodcutter
      jobs:
        furniture-factory:
          title: Мебельная фабрика
          description: Из досок собирает мебель
          task: demo/woodflow/furniture-factory
          stage: build-furniture

    release-sawmill-rollback-wrong-stage:
      title: Release Woodcutter
      jobs:
        woodcutter:
          task: demo/woodflow/woodcutter
          # Задача в стадии `rollback: false`
          # Ресурсы из предыдущего запуска добавляться не должны для существующего job-а
          stage: prepare-wood
          manual: true
          input:
            trees:
              - type: Липа

    release-sawmill-displacement:
      title: Release Woodcutter
      jobs:
        start:
          title: Начало flow
          task: dummy
          stage: start

        woodcutter:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/woodcutter
          stage: prepare-wood
          needs: start
          input:
            trees:
              - type: Липа, которую заказал ${context.flow_triggered_by}
              - type: Береза, которую срубили по просьбе ${context.flow_triggered_by} на flow ${context.title}

        sawmill-1:
          title: Лесопилка производительная
          description: Пилит бревна на доски
          task: demo/woodflow/sawmill
          input:
            document:
              title: Лесопилка "${context.flow_triggered_by}" производительная, начинает работу над "${tasks.woodcutter.timbers[].name | sort(@) | @[0]}"
              boardsPerTimber: 4
          needs: woodcutter

        sawmill-2:
          title: Лесопилка обычная
          description: Пилит бревна на доски
          task: demo/woodflow/sawmill
          input:
            document:
              title: Лесопилка обычная, пилит ${length(tasks.woodcutter.timbers)} бревна
              boardsPerTimber: 3
          needs: woodcutter

        sawmill-join:
          title: Ожидание sawmill
          task: dummy
          stage: wait-stage
          needs:
            - sawmill-1
            - sawmill-2

        sawmill-wait:
          title: Ручное подтверждение
          task: dummy
          manual:
            enabled: true
            approvers:
              - service: testenv
                scope: administration
          needs: sawmill-join

        start-furniture:
          title: Запуск сборки
          task: dummy
          stage: build-furniture
          needs: sawmill-wait

        furniture-factory:
          title: Мебельная фабрика
          description: Из досок собирает мебель
          task: demo/woodflow/furniture-factory
          needs:
            - start-furniture


    release-sawmill-hotfix1:
      title: Release Hotfix 1
      jobs:
        start:
          title: Начало flow
          task: dummy
          stage: start
        woodcutter:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/woodcutter
          stage: prepare-wood
          needs: start
          input:
            trees:
              - type: Дерево
        start-furniture:
          title: Запуск сборки
          task: dummy
          stage: build-furniture
          needs: woodcutter

    release-sawmill-hotfix2:
      title: Release Hotfix 2
      jobs:
        start-furniture:
          title: Запуск сборки
          task: dummy
          stage: build-furniture


    release-sawmill-conditional:
      title: Release Woodcutter
      jobs:
        woodcutter:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/woodcutter
          stage: prepare-wood
          input:
            trees:
              - type: Липа, которую заказал ${context.flow_triggered_by}
              - type: Береза, которую срубили по просьбе ${context.flow_triggered_by}

        sawmill-1:
          title: Лесопилка производительная
          description: Пилит бревна на доски
          task: demo/woodflow/sawmill
          # Условие, которое запретит запускаться этой джобе
          if: ${length(tasks.woodcutter.timbers[]) == `0`}
          input:
            document:
              title: Лесопилка "${context.flow_triggered_by}" производительная, начинает работу над "${tasks.woodcutter.timbers[].name | sort(@) | @[0]}"
              boardsPerTimber: 4
          needs: woodcutter

        sawmill-2:
          title: Лесопилка обычная
          description: Пилит бревна на доски
          task: demo/woodflow/sawmill
          # Условие, которое разрешит запускаться этой джобе
          if: ${length(tasks.woodcutter.timbers[])}
          input:
            document:
              title: Лесопилка обычная, пилит ${length(tasks.woodcutter.timbers)} бревна
              boardsPerTimber: 3
          needs: woodcutter

        start-furniture:
          title: Запуск сборки
          task: dummy
          stage: build-furniture
          needs:
            - sawmill-1
            - sawmill-2

        furniture-factory:
          title: Мебельная фабрика
          description: Из досок собирает мебель
          task: demo/woodflow/furniture-factory
          needs:
            - start-furniture

    release-sawmill-conditional-vars:
      title: Release Woodcutter
      jobs:
        woodcutter:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/woodcutter
          stage: prepare-wood
          input:
            trees:
              - type: Липа, которую заказал ${context.flow_triggered_by}
              - type: Береза, которую срубили по просьбе ${context.flow_triggered_by}

        sawmill-1:
          title: Лесопилка производительная
          description: Пилит бревна на доски
          task: demo/woodflow/sawmill
          # Условие, которое запретит запускаться этой джобе
          if: ${flow-vars.run-sawmill-1}
          input:
            document:
              title: Лесопилка "${context.flow_triggered_by}" производительная, начинает работу над "${tasks.woodcutter.timbers[].name | sort(@) | @[0]}"
              boardsPerTimber: 4
          needs: woodcutter

        sawmill-2:
          title: Лесопилка обычная
          description: Пилит бревна на доски
          task: demo/woodflow/sawmill
          # Условие, которое разрешит запускаться этой джобе
          if: ${context.flow_triggered_by == 'andreevdm'}
          input:
            document:
              title: Лесопилка обычная, пилит ${length(tasks.woodcutter.timbers)} бревна
              boardsPerTimber: 3
          needs: woodcutter

        start-furniture:
          title: Запуск сборки
          task: dummy
          stage: build-furniture
          needs:
            - sawmill-1
            - sawmill-2

        furniture-factory:
          title: Мебельная фабрика
          description: Из досок собирает мебель
          task: demo/woodflow/furniture-factory
          needs:
            - start-furniture

    empty-flow:
      jobs:
        # пустой флоу, задача которого запуститься и успешно завершиться
        # не добавляйте сюда джобы, не замедляйте entire тесты
        start:
          task: dummy

    empty-manual-flow:
      jobs:
        start:
          task: dummy

        end:
          needs: [ start ]
          manual: true
          task: dummy

    simplest-flow:
      title: Simplest release process
      jobs:
        start:
          task: dummy

        woodcutter:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/woodcutter_allow
          needs: start
          input:
            trees:
              - type: ${flow-vars.lipa}
              - type: Береза

        furniture-factory:
          title: Фабрика
          task: demo/woodflow/furniture-factory
          needs: start
          attempts:
            max: 2
            backoff: const
            initial-backoff: 1s
            if-output: ${not_null(flow-vars.restart, `true`)}
          input:
            boards:
              - source:
                  name: бревно из липы
                producer: ООО Пилорама
              - source:
                  name: бревно из липы
                producer: ОАО Липа не липа
              - source:
                  name: бревно из липы
                producer: ИП Иванов


    simplest-flow-with-manual:
      jobs:
        woodcutter:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/woodcutter_allow
          stage: s1
          manual: true
          input:
            trees:
              - type: Липа
              - type: Береза

        furniture-factory:
          title: Фабрика
          task: demo/woodflow/furniture-factory
          needs: woodcutter
          stage: s2
          input:
            boards:
              - source:
                  name: бревно из липы
                producer: ООО Пилорама
              - source:
                  name: бревно из липы
                producer: ОАО Липа не липа
              - source:
                  name: бревно из липы
                producer: ИП Иванов

    simplest-flow-with-retry:
      title: Simplest release process
      jobs:
        furniture-factory:
          title: Фабрика
          task: demo/woodflow/furniture-factory
          attempts: 2
          input:
            boards:
              - source:
                  name: бревно из липы
                producer: ООО Пилорама
              - source:
                  name: бревно из липы
                producer: ОАО Липа не липа
              - source:
                  name: бревно из липы
                producer: ИП Иванов


    simplest-hotfix-flow:
      title: Simplest hotfix process
      jobs:
        furniture-factory:
          title: Фабрика
          task: demo/woodflow/furniture-factory
          input:
            boards:
              - source:
                  name: ${flow-vars.lipa}, hotfix
                producer: ООО Пилорама hotfix 1
              - source:
                  name: ${flow-vars.lipa}, hotfix
                producer: ОАО Липа не липа hotfix 2
              - source:
                  name: ${flow-vars.lipa}, hotfix
                producer: ИП Иванов ${context.flow_type} 3

    simplest-rollback-flow:
      title: Simplest rollback process
      jobs:
        furniture-factory-rollback:
          title: Дровосек Rollback
          description: Рубит деревья на бревна, Rollback
          task: demo/woodflow/furniture-factory
          input:
            boards:
              - source:
                  name: бревно из липы, rollback
                producer: ООО Пилорама rollback 1
              - source:
                  name: бревно из липы, rollback
                producer: ОАО Липа не липа rollback 2
              - source:
                  name: бревно из липы, rollback
                producer: ИП Иванов ${context.flow_type} 3

    simplest-flow-with-manual-trigger:
      title: Simplest flow with manual
      jobs:
        job-1:
          task: dummy
        job-2:
          task: dummy
          needs: job-1
          manual: true

    simplest-flow-with-cleanup:
      title: Simplest flow with cleanup
      cleanup-jobs:
        cleanup-job-1:
          title: Очистка 1, ${flow-vars.var1}
          task: dummy
        cleanup-job-2:
          title: Очистка 2, ${flow-vars.var1}
          task: dummy
      jobs:
        job-1:
          title: Задача 1, ${flow-vars.var1}
          task: dummy
        job-2:
          title: Задача 2, ${flow-vars.var1}
          task: dummy
          needs: job-1
          manual: true

    simplest-flow-with-cleanup-dependent:
      title: Simplest flow with cleanup dependent
      cleanup-jobs:
        cleanup-job-1:
          title: Очистка 1
          task: dummy
        cleanup-job-2:
          title: Очистка 2
          task: dummy
        cleanup-job-1-1:
          title: Очистка 1.1
          task: dummy
          needs: cleanup-job-1
      jobs:
        job-1:
          title: Задача 1
          task: dummy
        job-2:
          title: Задача 1
          task: dummy
          needs: job-1
          manual: true

    simplest-flow-with-cleanup-fail:
      title: Simplest flow with cleanup
      cleanup-jobs:
        cleanup-job-1:
          title: Очистка 1, ${flow-vars.var1}
          task: dummy
        cleanup-job-2:
          title: Очистка 2, ${flow-vars.var1}
          task: dummy
      jobs:
        job-1:
          title: Задача 1, ${flow-vars.var1}
          task: dummy
        job-2:
          title: Задача 2, ${flow-vars.var1}
          task: demo/woodflow/sawmill_sandbox_source
          needs: job-1
          manual:
            enabled: true
            prompt: Подтверждение ${flow-vars.var1}...


    simplest-flow-override-multiple-resources:
      title: Simplest release process
      jobs:
        generate:
          title: Генерация из Sandbox
          task: demo/woodflow/sawmill_sandbox
          stage: single
        furniture-factory:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/furniture-factory
          needs: generate
          input:
            # Список будет переопределен - возьмем только 3 первых элемента из 4
            # Результатом выражения будет список, который должен быть специальным образом обработан
            boards: |
              ${(tasks.generate.resources[?type == 'LOG'] | @[?attributes.title == 'Сосна'].{"source":
                {"name": @.attributes.title}, "producer": 'Тест'})[0:3]}

    simplest-flow-override-single-resource:
      title: Simplest release process
      jobs:
        generate:
          title: Генерация из Sandbox
          task: demo/woodflow/sawmill_sandbox
          stage: single
        furniture-factory:
          title: Байпасс
          description: Выдает на выходе то, что и на входе
          task: demo/woodflow/picklock
          needs: generate
          input:
            # Формируем объект для передачи
            # Результатом выражения будет объект
            yav_filter: |
              ${tasks.generate.resources[?type == 'LOG'] | {"keys": @[].attributes.title} }

    simplest-sandbox-flow:
      title: Flow с Sandbox задачами
      jobs:
        generate:
          title: Генерация из Sandbox
          task: demo/woodflow/sawmill_sandbox
          stage: single
          requirements:
            sandbox:
              semaphores:
                acquires:
                  - name: acquire-${context.flow_triggered_by}
        furniture-factory:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/furniture-factory
          stage: single
          needs: generate
          input:
            boards:
              - source:
                  name: бревно из липы
                producer: ${(tasks.generate.resources[?type == 'PRODUCER'])[0].attributes.title}
              - source:
                  name: бревно из липы
                producer: ${(tasks.generate.resources[?type == 'PRODUCER'])[1].attributes.title}
              - source:
                  name: бревно из липы
                producer: ${tasks.generate.output_params.name}


    simplest-sandbox-template-flow:
      title: Flow с Sandbox задачами
      jobs:
        generate:
          title: Генерация из Sandbox
          task: demo/woodflow/sawmill_sandbox_template
          stage: single
        furniture-factory:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/furniture-factory
          stage: single
          needs: generate
          input:
            boards:
              - source:
                  name: бревно из липы
                producer: ${(tasks.generate.resources[?type == 'PRODUCER'])[0].attributes.title}
              - source:
                  name: бревно из липы
                producer: ${(tasks.generate.resources[?type == 'PRODUCER'])[1].attributes.title}
              - source:
                  name: бревно из липы
                producer: ${tasks.generate.output_params.name}

    simplest-sandbox-context-flow:
      title: Flow с Sandbox задачами
      jobs:
        generate:
          title: Генерация из Sandbox
          task: demo/woodflow/sawmill_sandbox
          stage: single
          requirements:
            sandbox:
              priority:
                class: USER
                subclass: HIGH
          context-input:
            param_string: Test
            param_int: 42
            param_resolve: ${context.flow_triggered_by}
          kill-timeout: 6m
          runtime:
            sandbox:
              kill-timeout: 7m
              tags:
                - job-tag-1 by ${context.flow_triggered_by}
                - job-tag-2
              hints:
                - job-hint-1
                - job-hint-2 by ${context.flow_triggered_by}
        furniture-factory:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/furniture-factory
          stage: single
          needs: generate
          input:
            boards:
              - source:
                  name: бревно из липы
                producer: ${(tasks.generate.resources[?type == 'PRODUCER'])[0].attributes.title}
              - source:
                  name: бревно из липы
                producer: ${(tasks.generate.resources[?type == 'PRODUCER'])[1].attributes.title}
              - source:
                  name: бревно из липы
                producer: ${tasks.generate.output_params.name}


    simplest-tasklet-v2-flow:
      title: Simplest release process
      jobs:
        start:
          task: dummy

        woodcutter:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/woodcutter-tasklet-v2
          needs: start
          input:
            trees:
              - type: ${flow-vars.lipa}
              - type: Береза

        furniture-factory:
          title: Фабрика
          task: demo/woodflow/furniture-factory-tasklet-v2
          needs: start
          attempts:
            max: 2
            backoff: const
            initial-backoff: 1s
          input:
            boards:
              - source:
                  name: бревно из липы
                producer: ООО Пилорама
              - source:
                  name: бревно из липы
                producer: ОАО Липа не липа
              - source:
                  name: бревно из липы
                producer: ИП Иванов

    simplest-tasklet-v2-simple-flow:
      title: Simplest release process
      jobs:
        simple:
          task: demo/woodflow/simple-v2
          input:
            simple_data_field:
              simple_string: ${flow-vars.input}

    simplest-tasklet-v2-simple-invalid-flow:
      title: Simplest release process
      jobs:
        simple:
          task: demo/woodflow/simple-v2
          version: invalid-version # Обрабатывается особым образом в текущей реализации TaskletV2TestServer
          input:
            simple_data_field:
              simple_string: ${flow-vars.input}


    simplest-multiply-flow:
      title: Flow с размноженными Tasklet задачами
      jobs:
        dummy:
          task: dummy
          multiply:
            by: |
              ${`[1, 2, 3]`}
        woodcutter:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/woodcutter
          stage: single
          needs: dummy
          input:
            trees:
              - type: Липа
              - type: Береза
        sawmill-1:
          title: Лесопилка производительная
          description: Пилит бревна на доски
          task: demo/woodflow/sawmill
          stage: single
          needs: woodcutter
          manual: # Влияет только на сгенерированные кубики
            enabled: true
            prompt: Process ${flow-vars.var1} for ${by.name} от ${context.job_instance_id.job_id}?
          multiply:
            by: ${tasks.woodcutter.timbers}
            title: Лесопилка для ${by.name} от ${context.flow_triggered_by}
            description: Описание лесопилки для ${by.name}
            as-field: WoodflowCi.Timber # Deprecated
          input:
            document:
              title: Пилит ${by.name} by ${context.flow_triggered_by}
              # Должно быть 3
              boardsPerTimber: ${add(length(tasks.woodcutter.timbers), `1`)}

        furniture-factory:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/furniture-factory
          stage: single
          needs: sawmill-1

        prepare:
          title: Репорт списка задач
          task: demo/woodflow/sawmill_sandbox_source
          stage: single
          needs: sawmill-1
          multiply:
            by: ${`[3]`}
          input:
            # Сгенерированные задачи
            boards_1_count: ${length(tasks.sawmill-1-1.boards)}
            boards_2_count: ${by} # Check if we can access `by` expression in `input`
          requirements:
            sandbox:
              semaphores:
                acquires:
                  - name: acquire-${context.flow_triggered_by}-${by}


    simplest-multiply-virtual-flow:
      title: Flow с размноженными Tasklet задачами
      jobs:
        woodcutter:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/woodcutter
          stage: first
          input:
            trees:
              - type: Липа
              - type: Береза
        sawmill-1:
          title: Лесопилка производительная
          description: Пилит бревна на доски
          task: demo/woodflow/sawmill
          needs: woodcutter
          multiply:
            # Список объектов, генерируемый встроенным JMESPath evaluator-ом (все между символами `)
            # Этот входящий список объектов будет перемножен с результатами `woodcutter`-а!
            by: |
              ${
                `[
                    {"name": "новое бревно из дерева Липа"},
                    {"name": "новое бревно из дерева Береза"}
                ]`
              }
            title: Лесопилка для ${by.name}
          input:
            timbers:
              - ${by}
            document:
              title: Пилит ${by.name} by ${context.flow_triggered_by}
              # Должно быть 3
              boardsPerTimber: ${add(length(tasks.woodcutter.timbers), `1`)}

        prepare:
          title: Репорт списка задач
          task: demo/woodflow/sawmill_sandbox_source
          needs: sawmill-1
          input:
            # Сгенерированные задачи
            boards_1_count: ${length(tasks.sawmill-1-1.boards)}
            boards_2_count: ${length(tasks.sawmill-1-2.boards)}

        furniture-factory:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/furniture-factory_allow
          stage: second
          needs:
            - sawmill-1
            - prepare

    simplest-multiply-virtual-flow-vars:
      title: Flow с размноженными Tasklet задачами
      jobs:
        woodcutter:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/woodcutter
          stage: single
          input:
            trees:
              - type: Липа
              - type: Береза

        sawmill-1:
          title: Лесопилка производительная
          description: Пилит бревна на доски
          task: demo/woodflow/sawmill
          needs: woodcutter
          multiply:
            # Этот входящий список объектов будет перемножен с результатами `woodcutter`-а!
            by: ${flow-vars.timbers}
            title: ${flow-vars.sawmill} для ${by.name}
          input:
            timbers:
              - ${by}
            document:
              title: ${flow-vars.saw} ${by.name} by ${context.flow_triggered_by}
              boardsPerTimber: ${flow-vars.boards-per-timber}

        furniture-factory:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/furniture-factory
          stage: single
          needs: sawmill-1

        prepare:
          title: Репорт списка задач
          task: demo/woodflow/sawmill_sandbox_source
          stage: single
          needs: sawmill-1
          input:
            # Сгенерированные задачи
            boards_1_count: ${length(tasks.sawmill-1-1.boards)}
            boards_2_count: ${length(tasks.sawmill-1-2.boards)}



    simplest-sandbox-multiply-flow:
      title: Flow с размноженными Sandbox задачами в виде ресурсов
      jobs:
        prepare:
          title: Подготовка списка задач
          task: demo/woodflow/sawmill_sandbox_source
          stage: single
        generate:
          title: Генерация из Sandbox
          task: demo/woodflow/sawmill_sandbox
          stage: single
          needs: prepare
          multiply:
            by: ${tasks.prepare.resources[?type == 'SRC']}
          input:
            type: PRODUCER
            produced: ${by.attributes.name} by ${context.flow_triggered_by}
          runtime:
            sandbox:
              tags:
                - job-tag-1 by ${by.attributes.name}
                - job-tag-2
              hints:
                - job-hint-1
                - job-hint-2 by ${by.attributes.name}
        furniture-factory:
          title: Дровосек
          description: Рубит деревья на бревна
          task: demo/woodflow/furniture-factory
          stage: single
          needs: generate
          input:
            boards:
              - source:
                  name: бревно из липы
                producer: ${(tasks.generate-1.resources[?type == 'PRODUCER'])[0].attributes.title}
              - source:
                  name: бревно из липы
                producer: ${(tasks.generate-2.resources[?type == 'PRODUCER'])[0].attributes.title}
              - source:
                  name: бревно из липы
                producer: ${(tasks.generate-3.resources[?type == 'PRODUCER'])[0].attributes.title}

    simplest-sandbox-binary-flow:
      title: Flow с бинарными Sandbox задачами
      jobs:
        start:
          task: dummy
          stage: single
        prepare1:
          title: Подготовка 1
          task: demo/woodflow/sawmill_sandbox_binary
          needs: start
        prepare2:
          title: Подготовка 2
          task: demo/woodflow/sawmill_sandbox_binary
          needs: start
          version: ${flow-vars.test-version}
        prepare3:
          title: Подготовка 3
          task: demo/woodflow/sawmill_sandbox_binary
          needs: start
          version: ${flow-vars.direct-version}
        prepare4:
          title: Подготовка 3
          task: demo/woodflow/sawmill_sandbox_binary
          needs: prepare3
          requirements:
            sandbox:
              tasks_resource: ${tasks.prepare3.resources[?type == 'MY_TYPE'].attributes.version | single(@)}
              container_resource: ${tasks.prepare3.resources[?type == 'MY_TYPE'].attributes.version | single(@)}
              tcpdump_args: "-A 'tcp port 8080'"
        complete:
          title: Завершение
          task: dummy
          needs:
            - prepare1
            - prepare2
            - prepare3
            - prepare4

    tickets-flow:
      jobs:
        start-release:
          task: demo/internal/create_issue_test
          input:
            config:
              secret:
                key: ${flow-vars.token}
              link:
                queues:
                  - CI
                  - CIDEMO
            template:
              queue: CIDEMO
        check-completion:
          task: dummy
          needs: start-release
          # secret.key is resolved by flow-vars
          # result is rendered exactly as proto
          # keep old 'resources' way of accessing resources
          if: ${ tasks.start-release.config.secret.key == 'my-token' && tasks.start-release.issue.issue == 'CI-123' && (tasks.start-release.resources[?issue != null])[0].issue == 'CI-123' }

    sandbox-task-with-conditional-fail:
      jobs:
        run:
          task: demo/woodflow/sawmill_sandbox_binary
        on-success:
          task: dummy
          needs: run
        on-failure:
          task: dummy
          needs: run
          needs-type: fail
        complete:
          task: dummy
          needs:
            - on-success
            - on-failure
          needs-type: any

    sandbox-task-with-conditional-fail-with-resources:
      jobs:
        run:
          task: demo/woodflow/sawmill_sandbox_binary
          runtime:
            get-output-on-fail: true
        on-success:
          task: dummy
          needs: run
        on-failure:
          task: dummy
          needs: run
          needs-type: fail
        complete:
          task: dummy
          needs:
            - on-success
            - on-failure
          needs-type: any
