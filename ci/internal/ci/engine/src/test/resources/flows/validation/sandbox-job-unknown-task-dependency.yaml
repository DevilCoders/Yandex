service: ci
title: Test
ci:
  secret: sec-xxx
  runtime:
    sandbox:
      owner: CI

  flows:

    flow-invalid-job:
      jobs:
        job-unknown:
          task: ci-test/some-sandbox-task-1
        job-with-input-2:
          task: ci-test/some-sandbox-task-3
          needs: job-1

    flow-no-job:
      jobs:
        job-with-input-2:
          task: ci-test/some-sandbox-task-3
          needs: job-2

    flow-invalid-job-tasklet:
      jobs:
        job-unknownt:
          task: ci-test/some-sandbox-task-1
        job-with-input-2t:
          task: ci-test/some-task-2
          needs: job-1t

    flow-no-job-tasklet:
      jobs:
        job-with-input-2t:
          task: ci-test/some-task-1
          needs: job-2t

    flow-no-job-1:
      jobs:
        job-unknown:
          task: ci-test/some-sandbox-task-1
        job-with-input-2:
          # По умолчанию ожидаем ${tasks.job-1...}
          task: ci-test/some-sandbox-task-3
          needs: job-unknown

    flow-no-needs-job-1:
      jobs:
        job-1:
          task: ci-test/some-sandbox-task-1
        job-with-input-2:
          # По умолчанию ожидаем ${tasks.job-1...}, то эта таска не указана в списке зависимых
          task: ci-test/some-sandbox-task-3

    flow-no-job-1-x:
      jobs:
        job-1:
          task: ci-test/some-sandbox-task-1
        job-with-input-2:
          task: ci-test/some-sandbox-task-3
          needs: job-1
          input:
            # Ссылаемся на неверный job
            build_type: "${tasks.job-1-x.package.type}"
