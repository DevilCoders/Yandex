type: object
$schema: "http://json-schema.org/draft-04/schema#"

anyOf:
  - required: [ "title", "tasklet", "versions" ]
  - required: [ "title", "tasklet-v2" ]
  - required: [ "title", "sandbox-task" ]
  - required: [ "title", "internal-task" ]

properties:
  title:
    type: string
  maintainers:
    type: string
  description:
    type: string
  sources:
    type: string
  deprecated:
    type: string

  tasklet:
    $ref: "#/definitions/tasklet"
  tasklet-v2:
    $ref: "#/definitions/tasklet-v2"
  sandbox-task:
    $ref: "#/definitions/sandbox-task"
  internal-task:
    $ref: "#/definitions/internal-task"

  parameters:
    $ref: "#/definitions/object_or_null"

  resources:
    $ref: "#/definitions/object_or_null"

  requirements:
    $ref: "schema://ci/schemas/a-yaml#/definitions/requirements"

  runtime:
    $ref: "schema://ci/schemas/a-yaml#/definitions/runtime_config"

  attempts:
    $ref: "schema://ci/schemas/a-yaml#/definitions/job_attempts"

  auto-rollback-mode:
    $ref: "#/definitions/auto-rollback-mode"

  versions:
    $ref: "#/definitions/versions"

definitions:
  auto-rollback-mode:
    type: string
    enum:
      - EXECUTE
      - SKIP
      - DENY

  tasklet:
    type: object
    required:
      - implementation

    properties:
      implementation:
        type: string
      single-input:
        type: boolean
      single-output:
        type: boolean
      singleInput:
        type: boolean
      singleOutput:
        type: boolean

  tasklet-v2:
    type: object
    required:
      - namespace
      - tasklet
    properties:
      namespace:
        type: string
      tasklet:
        type: string
      single-input:
        type: boolean
      single-output:
        type: boolean

  sandbox-task:
    type: object
    anyOf:
      - required: [ "name" ]
      - required: [ "template" ]

    properties:
      name:
        type: string
      template:
        type: string
      required-parameters:
        type: array
        items:
          type: string
      badges-configs:
        type: array
        items:
          type: object
          required: [ "id" ]
          properties:
            id:
              type: string
            module:
              type: string

      accept-resource-states:
        type: array
        items:
          type: string
          enum:
            - BROKEN
            - DELETED
            - READY
            - NOT_READY

  internal-task:
    type: object
    properties:
      uuid:
        type: string
      produces:
        type: string

  object_or_null:
    anyOf:
      - type: "null"
      - type: object

  versions:
    type: object
    required: ["stable"]
