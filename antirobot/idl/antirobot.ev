option optimize_for = SPEED;

import "mapreduce/yt/interface/protos/extension.proto";

import "library/cpp/eventlog/proto/events_extension.proto";

package NAntirobotEvClass;

message TProtoseqRecord {
    optional bytes event = 1;
    optional int64 timestamp = 2;
}

message THeader {
    option (message_id) = 100;
    required bytes Reqid = 1;
    optional uint32 IpDeprecated = 2;
    optional bytes Addr = 11;
    optional uint32 UidNs = 3;
    optional uint64 UidId = 4;
    optional bytes Uid = 12;
    required bytes YandexUid = 5;
    optional uint32 PartnerIpDeprecated = 6;
    optional bytes PartnerAddr = 13;
    optional uint64 Timestamp = 14; // Set by evlog_split.
    optional string SourceUri = 15; // Set by evlog_split.
    optional string UniqueKey = 16;
}

message TBanReasons {
    option (message_id) = 101;
    optional bool Matrixnet = 1;
    optional bool Yql = 2;
    optional bool Cbb = 3;
}

message TAntirobotFactors {
    option (message_id) = 1;
    required THeader Header = 1;
    required bool IsRobot = 2;
    repeated float Factors = 3 [(NYT.flags) = SERIALIZATION_YT];
    required bool InitiallyWasXmlsearch = 4;
    required uint32 FactorsVersion = 5;
}

message TCaptchaRedirect {
    option (message_id) = 2;
    required THeader Header = 1;
    required bool Again = 2;
    required bool IsXmlPartner = 3;
    required bool IsRandom = 4;
    required string Token = 5;
    optional uint32 ClientType = 6;
    optional string CaptchaType = 7;
    optional TBanReasons BanReasons = 8;
    optional uint32 HostType = 9;
    optional string Key = 10;
}

message TCaptchaShow {
    option (message_id) = 3;
    required THeader Header = 1;
    required bool Again = 2;
    required bool IsXmlPartner = 3;
    required string Key = 4;
    required string Token = 5;
    optional bool TestCookieSet = 6;
    optional bool TestCookieSuccess = 7;
    optional uint32 ClientType = 8;
    optional string CaptchaType = 9;
    optional TBanReasons BanReasons = 10;
    optional uint32 HostType = 11;
}

message TCaptchaCheck {
    option (message_id) = 4;
    required THeader Header = 1;
    required string Key = 2;
    required string Token = 3;
    required bool Success = 4;
    required bytes NewSpravka = 5;
    optional bool EnteredHiddenImage = 9;
    optional bool CaptchaConnectError = 10;
    optional bool PreprodSuccess = 11;
    optional bool FuryConnectError = 12;
    optional bool FuryPreprodConnectError = 13;
    optional string WarningMessages = 14;
    optional string SiteKey = 15;
    optional uint32 ClientType = 16;
}

message TBadRequest {
    option (message_id) = 5;
    optional string Message = 1;
}

message TRequestData {
    option (message_id) = 6;
    required THeader Header = 1;
    required string Data = 2;
}

message TCaptchaTokenExpired {
    option (message_id) = 7;
    required THeader Header = 1;
    required string Token = 2;
}

message TCaptchaImageShow {
    option (message_id) = 8;
    required THeader Header = 1;
    required string Token = 2;
}

message TCaptchaImageError {
    option (message_id) = 9;
    required THeader Header = 1;
    required string Token = 2;
    required int64 ErrorCode = 3;
    optional string Request = 4;
}

message TRequestGeneralMessage {
    option (message_id) = 12;
    required THeader Header = 1;
    required uint32 Level = 2;
    required string Message = 3;
}

message TGeneralMessage {
    option (message_id) = 13;
    required uint32 Level = 1;
    required string Message = 2;
}

message TWizardError {
    option (message_id) = 14;
    required THeader Header = 1;
}

enum TBlockType {
    Block = 0;
    Unblock = 1;
};

message TBlockEvent {
    option (message_id) = 20;
    required THeader Header = 1;
    required TBlockType BlockType = 2;
    required uint32 Category = 3;
    required string Description = 4;
}

message TCaptchaVoice {
    option (message_id) = 21;
    required THeader Header = 1;
    required string Token = 2;
}

message TCaptchaVoiceIntro {
    option (message_id) = 22;
    required THeader Header = 1;
    required string Token = 2;
}

message TCbbRuleParseResult {
    option (message_id) = 23;
    optional string Rule = 1;
    optional string Status = 2;
}

message TCbbRulesUpdated {
    option (message_id) = 24;
    optional string ContainerName = 1;
    repeated TCbbRuleParseResult ParseResults = 2 [(NYT.flags) = SERIALIZATION_YT];
}

message TCacherFactors {
    option (message_id) = 25;

    required THeader Header = 1;

    optional uint32 NumDocs = 2;
    optional uint32 PageNum = 3;
    optional uint32 HeadersCount = 4;

    // factors from geo
    optional bool IsProxy = 5;
    optional bool IsTor = 6;
    optional bool IsVpn = 7;
    optional bool IsHosting = 8;

    optional bool RefererFromYandex = 9;
    optional bool IsBadProtocol = 10;
    optional bool IsBadUserAgent = 11;
    optional bool IsConnectionKeepAlive = 12;
    optional bool HaveUnknownHeaders = 13;

    optional uint32 IpSubnetMatch = 14;
    optional float SpravkaLifetime = 15;
    optional float FraudJa3 = 16;
    optional float FraudSubnet = 17;

    // cgi params
    optional bool CgiParamText = 18;
    optional bool CgiParamLr = 19;
    optional bool CgiParamClid = 20;
    optional bool CgiParamTld = 21;
    optional bool CgiParamUrl = 22;
    optional bool CgiParamSite = 23;
    optional bool CgiParamLang = 24;

    // cookie
    optional bool CookieL = 25;
    optional bool CookieMy = 26;
    optional bool CookieSessionId = 27;
    optional bool CookieYabsFrequency = 28;
    optional bool CookieYandexLogin = 29;
    optional bool CookieYandexuid = 30;
    optional bool CookieYs = 31;
    optional bool CookieFuid01 = 32;

    // http header
    optional bool HeaderAcceptEncoding = 33;
    optional bool HeaderAcceptLanguage = 34;
    optional bool HeaderAuthorization = 35;
    optional bool HeaderCacheControl = 36;
    optional bool HeaderCookie = 37;
    optional bool HeaderConnection = 38;
    optional bool HeaderContentLength = 39;
    optional bool HeaderContentType = 40;
    optional bool HeaderReferer = 41;
    optional bool HeaderUserAgent = 42;
    optional bool HeaderXForwardedFor = 43;

    optional bool InRobotSet = 44;
    optional bool HasValidSpravka = 45;

    optional float FormulaResult = 46;
    optional float FormulaThreshold = 47;

    optional float FraudSubnetNew = 48;

    optional bool IsRobot = 49;
    optional bool IsMobile = 50;
    optional bool IsBrowser = 51;
    optional bool HistorySupport = 52;
    optional bool IsEmulator = 53;
    optional bool IsBrowserEngine = 54;
    optional bool IsBrowserEngineVersion = 55;
    optional bool IsBrowserVersion = 56;
    optional bool IsOSName = 57;
    optional bool IsOSVersion = 58;
    optional bool IsOSFamily = 59;
    optional bool IsOSFamilyAndroid = 60;
    optional bool IsOSFamilyWindows= 61;
    optional bool IsOSFamilyiOS= 62;
    optional bool IsOSFamilyMacOS = 63;
    optional bool IsOSFamilyLinux = 64;
    optional bool ITP = 65;
    optional bool ITPFakeCookie = 66;
    optional bool localStorageSupport = 67;
    optional bool IsBadUserAgentNew = 68;

    repeated uint32 LastVisits = 69 [(NYT.flags) = SERIALIZATION_YT];

    optional float P0fITTLDistance = 70;
    optional float P0fMSS = 71;
    optional float P0fWSize = 72;
    optional float P0fScale = 73;
    optional float P0fEOL = 74;
    optional float P0fUnknownOptionID = 75;
    optional float P0fVersion = 76;
    optional float P0fObservedTTL = 77;
    optional float P0fOlen = 78;

    optional bool P0fLayoutNOP = 79;
    optional bool P0fLayoutMSS = 80;
    optional bool P0fLayoutWS = 81;
    optional bool P0fLayoutSOK = 82;
    optional bool P0fLayoutSACK = 83;
    optional bool P0fLayoutTS = 84;

    optional bool P0fQuirksDF = 85;
    optional bool P0fQuirksIDp = 86;
    optional bool P0fQuirksIDn = 87;
    optional bool P0fQuirksECN = 88;
    optional bool P0fQuirks0p = 89;
    optional bool P0fQuirksFlow = 90;
    optional bool P0fQuirksSEQn = 91;
    optional bool P0fQuirksACKp = 92;
    optional bool P0fQuirksACKn = 93;
    optional bool P0fQuirksUPTRp = 94;
    optional bool P0fQuirksURGFp = 95;
    optional bool P0fQuirksPUSHFp = 96;
    optional bool P0fQuirksTS1n = 97;
    optional bool P0fQuirksTS2p = 98;
    optional bool P0fQuirksOPTp = 99;
    optional bool P0fQuirksEXWS = 100;
    optional bool P0fQuirksBad = 101;

    optional bool P0fPClass = 102;

    optional float Ja3TlsVersion = 103;
    optional float Ja3CiphersLen = 104;
    optional float Ja3ExtensionsLen = 105;

    optional float Ja3C159 = 106;
    optional float Ja3C57_61 = 107;
    optional float Ja3C53 = 108;
    optional float Ja3C60_49187 = 109;
    optional float Ja3C53_49187 = 110;
    optional float Ja3C52393_103 = 111;
    optional float Ja3C49162 = 112;
    optional float Ja3C50 = 113;
    optional float Ja3C51 = 114;
    optional float Ja3C255 = 115;
    optional float Ja3C52392 = 116;
    optional float Ja3C10 = 117;
    optional float Ja3C157_49200 = 118;
    optional float Ja3C49200 = 119;
    optional float Ja3C49171_103 = 120;
    optional float Ja3C49191_52394 = 121;
    optional float Ja3C49192_52394 = 122;
    optional float Ja3C65_52394 = 123;
    optional float Ja3C157 = 124;
    optional float Ja3C52393_49200 = 125;
    optional float Ja3C49159 = 126;
    optional float Ja3C4865 = 127;
    optional float Ja3C158_61 = 128;
    optional float Ja3C49196_47 = 129;
    optional float Ja3C103 = 130;
    optional float Ja3C103_49196 = 131;
    optional float Ja3C52393_49188 = 132;
    optional float Ja3C60_65 = 133;
    optional float Ja3C49195_69 = 134;
    optional float Ja3C154 = 135;
    optional float Ja3C49187_49188 = 136;
    optional float Ja3C49199_60 = 137;
    optional float Ja3C49195_51 = 138;
    optional float Ja3C49235 = 139;
    optional float Ja3C47 = 140;
    optional float Ja3C49169 = 141;
    optional float Ja3C49249 = 142;
    optional float Ja3C49171_60 = 143;
    optional float Ja3C49188_49196 = 144;
    optional float Ja3C61 = 145;
    optional float Ja3C156_255 = 146;
    optional float Ja3C47_57 = 147;
    optional float Ja3C186 = 148;
    optional float Ja3C49245 = 149;
    optional float Ja3C156_52394 = 150;
    optional float Ja3C20 = 151;
    optional float Ja3C49188_49195 = 152;
    optional float Ja3C52394_52392 = 153;
    optional float Ja3C53_49162 = 154;
    optional float Ja3C49191 = 155;
    optional float Ja3C49245_49249 = 156;
    optional float Ja3C49171 = 157;
    optional float Ja3C53_52393 = 158;
    optional float Ja3C51_49199 = 159;
    optional float Ja3C49234 = 160;
    optional float Ja3C49315 = 161;
    optional float Ja3C158 = 162;
    optional float Ja3C49187_49161 = 163;
    optional float Ja3C107 = 164;
    optional float Ja3C52394 = 165;
    optional float Ja3C49162_61 = 166;
    optional float Ja3C153 = 167;
    optional float Ja3C49170 = 168;
    optional float Ja3C156 = 169;
    optional float Ja3C52393_60 = 170;
    optional float Ja3C49195_49192 = 171;
    optional float Ja3C7 = 172;
    optional float Ja3C49187_103 = 173;
    optional float Ja3C61_49172 = 174;
    optional float Ja3C159_49188 = 175;
    optional float Ja3C49171_49187 = 176;
    optional float Ja3C49196_49188 = 177;
    optional float Ja3C158_49161 = 178;
    optional float Ja3C49193 = 179;
    optional float AcceptUniqueKeysNumber = 180;
    optional float AcceptEncodingUniqueKeysNumber = 181;
    optional float AcceptCharsetUniqueKeysNumber = 182;
    optional float AcceptLanguageUniqueKeysNumber = 183;
    optional float AcceptAnySpace = 184;
    optional float AcceptEncodingAnySpace = 185;
    optional float AcceptCharsetAnySpace = 186;
    optional float AcceptLanguageAnySpace = 187;
    optional float AcceptLanguageHasRussian = 188;

    optional float MarketJwsStateIsDefaultExpiredRatio = 189;
    optional float MarketJwsStateIsDefaultRatio = 190;
    optional float MarketJwsStateIsInvalidRatio = 191;
    optional float MarketJwsStateIsSuspExpiredRatio = 192;
    optional float MarketJwsStateIsSuspRatio = 193;
    optional float MarketJwsStateIsValidExpiredRatio = 194;
    optional float MarketJwsStateIsValidRatio = 195;
    optional float MarketJa3BlockedCntRatio = 196;
    optional float MarketJa3CatalogReqsCntRatio = 197;
    optional float MarketJa3EnemyCntRatio = 198;
    optional float MarketJa3EnemyRedirectsCntRatio = 199;
    optional float MarketJa3FuidCntRatio = 200;
    optional float MarketJa3HostingCntRatio = 201;
    optional float MarketJa3IcookieCntRatio = 202;
    optional float MarketJa3Ipv4CntRatio = 203;
    optional float MarketJa3Ipv6CntRatio = 204;
    optional float MarketJa3LoginCntRatio = 205;
    optional float MarketJa3MobileCntRatio = 206;
    optional float MarketJa3OtherHandlesReqsCntRatio = 207;
    optional float MarketJa3ProductReqsCntRatio = 208;
    optional float MarketJa3ProxyCntRatio = 209;
    optional float MarketJa3RefererIsEmptyCntRatio = 210;
    optional float MarketJa3RefererIsNotYandexCntRatio = 211;
    optional float MarketJa3RefererIsYandexCntRatio = 212;
    optional float MarketJa3RobotsCntRatio = 213;
    optional float MarketJa3SearchReqsCntRatio = 214;
    optional float MarketJa3SpravkaCntRatio = 215;
    optional float MarketJa3TorCntRatio = 216;
    optional float MarketJa3VpnCntRatio = 217;
    optional float MarketJa3YndxIpCntRatio = 218;
    optional float MarketSubnetBlockedCntRatio = 219;
    optional float MarketSubnetCatalogReqsCntRatio = 220;
    optional float MarketSubnetEnemyCntRatio = 221;
    optional float MarketSubnetEnemyRedirectsCntRatio = 222;
    optional float MarketSubnetFuidCntRatio = 223;
    optional float MarketSubnetHostingCntRatio = 224;
    optional float MarketSubnetIcookieCntRatio = 225;
    optional float MarketSubnetIpv4CntRatio = 226;
    optional float MarketSubnetIpv6CntRatio = 227;
    optional float MarketSubnetLoginCntRatio = 228;
    optional float MarketSubnetMobileCntRatio = 229;
    optional float MarketSubnetOtherHandlesReqsCntRatio = 230;
    optional float MarketSubnetProductReqsCntRatio = 231;
    optional float MarketSubnetProxyCntRatio = 232;
    optional float MarketSubnetRefererIsEmptyCntRatio = 233;
    optional float MarketSubnetRefererIsNotYandexCntRatio = 234;
    optional float MarketSubnetRefererIsYandexCntRatio = 235;
    optional float MarketSubnetRobotsCntRatio = 236;
    optional float MarketSubnetSearchReqsCntRatio = 237;
    optional float MarketSubnetSpravkaCntRatio = 238;
    optional float MarketSubnetTorCntRatio = 239;
    optional float MarketSubnetVpnCntRatio = 240;
    optional float MarketSubnetYndxIpCntRatio = 241;
    optional float MarketUABlockedCntRatio = 242;
    optional float MarketUACatalogReqsCntRatio = 243;
    optional float MarketUAEnemyCntRatio = 244;
    optional float MarketUAEnemyRedirectsCntRatio = 245;
    optional float MarketUAFuidCntRatio = 246;
    optional float MarketUAHostingCntRatio = 247;
    optional float MarketUAIcookieCntRatio = 248;
    optional float MarketUAIpv4CntRatio = 249;
    optional float MarketUAIpv6CntRatio = 250;
    optional float MarketUALoginCntRatio = 251;
    optional float MarketUAMobileCntRatio = 252;
    optional float MarketUAOtherHandlesReqsCntRatio = 253;
    optional float MarketUAProductReqsCntRatio = 254;
    optional float MarketUAProxyCntRatio = 255;
    optional float MarketUARefererIsEmptyCntRatio = 256;
    optional float MarketUARefererIsNotYandexCntRatio = 257;
    optional float MarketUARefererIsYandexCntRatio = 258;
    optional float MarketUARobotsCntRatio = 259;
    optional float MarketUASearchReqsCntRatio = 260;
    optional float MarketUASpravkaCntRatio = 261;
    optional float MarketUATorCntRatio = 262;
    optional float MarketUAVpnCntRatio = 263;
    optional float MarketUAYndxIpCntRatio = 264;
    optional float SecFetchDest = 265;
    optional float AcceptLanguage = 266;
    optional float Cookie = 267;
    optional float UpgradeInsecureRequests = 268;
    optional float AcceptEncoding = 269;
    optional float Dnt = 270;
    optional float Origin = 271;
    optional float UserAgent = 272;
    optional float Host = 273;
    optional float Referer = 274;
    optional float Authority = 275;
    optional float CacheControl = 276;
    optional float XForwardedProto = 277;
    optional float KeepAlive = 278;
    optional float Pragma = 279;
    optional float ProxyConnection = 280;
    optional float Rtt = 281;
    optional float AutoruJa3 = 282;
    optional float AutoruSubnet = 283;
    optional float AutoruUA = 284;

    optional bool HasCookieAmcuid = 285;
    optional bool HasCookieCurrentRegionId = 286;
    optional bool HasCookieCycada = 287;
    optional bool HasCookieLocalOffersFirst = 288;
    optional bool HasCookieLr = 289;
    optional bool HasCookieMarketYs = 290;
    optional bool HasCookieOnstock = 291;
    optional bool HasCookieYandexHelp = 292;
    optional bool HasCookieCmpMerge = 293;
    optional bool HasCookieComputer = 294;
    optional bool HasCookieHeadBaner = 295;
    optional bool HasCookieUtmSource = 296;

    optional bool ChromeHodor = 297;

    optional bool CookieYoungerThanMinute = 298;
    optional bool CookieYoungerThanHour = 299;
    optional bool CookieYoungerThanDay = 300;
    optional bool CookieYoungerThanWeek = 301;
    optional bool CookieYoungerThanMonth = 302;
    optional bool CookieYoungerThanThreeMonthes = 303;
    optional bool CookieOlderThanMonth = 304;
    optional bool CookieOlderThanThreeMonthes = 305;
};

message TVerochkaRecord {
    option (message_id) = 26;
    required THeader Header = 1;
    optional string JsPrint = 2;
    optional bool IsValid = 3;
    optional string Ja3 = 4;
    optional string Referer = 5;
    optional string RequestContent = 6;
    optional string RequestString = 7;
};

message TCaptchaIframeShow {
    option (message_id) = 27;
    required THeader Header = 1;
    optional string SiteKey = 2;
    optional uint32 Status = 3;
}
