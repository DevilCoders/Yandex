worker_processes  16;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;


events {
    worker_connections  2048;
    use epoll;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" $status length:$body_bytes_sent request_time:$request_time UA:"$http_user_agent"';
    access_log /var/log/nginx/access.log main;
    sendfile        on;

    keepalive_timeout  10;

    # https://st.yandex-team.ru/ANTIADB-1181
    # Примерное распределение времен ответов от серверов партнеров. Взято из статистики, снятой в проде.
    # В таблице первый элемент - это задержка ответа, второй - вероятность, что такая задержка случилась.
    # Сумма вероятностей должна поддерживаться равной 1
    init_by_lua_block {
        math.randomseed(os.clock() * 100000000000)

        local dist = {
            {0.2, 0.9},
            {0.4, 0.09},
            {2.5, 0.008},
            {6.5, 0.002},
        }

        function random_request_time()
            local rnd = math.random()
            for i=1,#dist do
                rnd = rnd - dist[i][2]
                if rnd <= 0 then
                    return dist[i][1]
                end
            end
            return dist[#dist][1]
        end
    }

    server {
        listen 80;
        listen [::]:80;

        location /telegraph.xml {
            content_by_lua_block {
                local fh = io.open("/usr/share/nginx/html/telegraph.xml", "rb");
                local contents = fh:read("*a");
                fh:close();
                ngx.say(contents:gsub("{{ taget_addr }}", ngx.var.arg_target));
                return ngx.exit(200);
            }
        }

        # # uncomment to enable response random delay
        # location / {
        #     content_by_lua_block{
        #         ngx.sleep(random_request_time());
        #         ngx.exec("@process");
        #     }
        # }

        # location @process {
        #     root   /usr/share/nginx/html;
        #     index  index.html index.htm;
        # }

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            content_by_lua_block {
                ngx.say("Error");
                return ngx.exit(500);
            }
        }
    }

}