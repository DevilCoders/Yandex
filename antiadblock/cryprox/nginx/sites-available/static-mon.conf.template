proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=detect_zone:10m inactive=30m max_size=100M;

limit_req_zone $http_x_forwarded_for zone=detect_perip:50m rate=800r/s;

server {
    listen                      0.0.0.0:80;
    listen                      [::]:80;

    resolver                    [::1];
    log_subrequest on;

    server_name                 static-mon.yandex.net static-mon.yandex-net.ru;

    proxy_buffering             on;
    proxy_buffer_size           64k;
    proxy_buffers               8 64k;
    proxy_busy_buffers_size     64k;
    proxy_max_temp_file_size    0;
    merge_slashes               off;
    proxy_connect_timeout       60s;
    proxy_read_timeout          60s;
    proxy_send_timeout          60s;
    large_client_header_buffers 4 16k;
    gzip off;

    limit_req zone=detect_perip burst=100;

    set $detect_lib_path "/lib.browser.min.js";
    if ($arg_test) {
        set $detect_lib_path "/beta.lib.browser.min.js";
    }

    if ($arg_pid) {
        # for cached requests use service_id from pid= query arg
        set $service_id $arg_pid;
    }

    # get crypt value cookie
    location /static/optional.js {
        if ($request_method = 'OPTIONS' ) {
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Headers' $http_access_control_request_headers,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        proxy_pass                  http://${CRYPROX};
        proxy_ignore_client_abort   off;
        ${PROXY_ADD_X_FORWARDED_FOR}
        proxy_set_header            X-AAB-RequestId                 $aab_requestid;
        proxy_set_header            X-AAB-Proxy                     0;
        # To force not chunked response with Content-Length header inside
        proxy_set_header            Accept-Encoding                 "deflate, br";
        proxy_hide_header           Access-Control-Allow-Origin;
        proxy_http_version 1.1;
        add_header            Access-Control-Allow-Origin $http_origin;
        add_header            Access-Control-Allow-Credentials "true";
        # Different cache (client) on different domains. To not cache Access-Control-Allow-Origin from another origin
        add_header            Vary                            "Origin";
    }


    # Cache for cookie_of_the_day
    location ~ ^/cookie_of_the_day {
        proxy_pass              http://${CRYPROX};
        proxy_set_header        Host aab-pub.s3.yandex.net;
        proxy_cache             detect_zone;
        proxy_cache_key         "$http_x_aab_partnertoken";
        proxy_cache_min_uses    1;
        proxy_cache_valid       200 1m;
        proxy_cache_use_stale   error timeout updating;
    }

    # get_crypted_url
    location ~ ^/get_crypted_url {
        proxy_pass              http://${CRYPROX};
        proxy_set_header        Host aab-pub.s3.yandex.net;
        proxy_cache             detect_zone;
        proxy_cache_key         "$http_x_aab_partnertoken|$arg_url|$arg_host";
        proxy_cache_min_uses    1;
        proxy_cache_valid       200 1m;
        proxy_cache_use_stale   error timeout updating;
    }

    location ~ ^/advert {
        log_by_lua_block {
            log_detect()
        }

        echo_read_request_body;
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # by default
    location /static/main.js {
        if ($request_method = 'OPTIONS' ) {
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Headers' $http_access_control_request_headers,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        rewrite /static/main.js $detect_lib_path break;

        proxy_pass                  http://${CRYPROX};
        proxy_ignore_client_abort   off;
        proxy_set_header            Host                            aab-pub.s3.yandex.net;
        ${PROXY_ADD_X_FORWARDED_FOR}
        proxy_set_header            X-AAB-RequestId                 $aab_requestid;
        proxy_set_header            X-AAB-Proxy                     0;
        # To force not chunked response with Content-Length header inside
        proxy_set_header            Accept-Encoding                 "deflate, br";
        proxy_hide_header           Access-Control-Allow-Origin;
        proxy_http_version 1.1;

        proxy_cache detect_zone;
        proxy_cache_key "$arg_pid|$http_x_forwarded_proto|$arg_cb|$arg_test";
        proxy_cache_min_uses 1;
        proxy_cache_valid 200 1m;
        proxy_cache_use_stale error timeout updating;

        # Not a typo. Use custom header Content-Lenght to validate detect script
        add_header            Access-Control-Expose-Headers   Content-Lenght;
        add_header            Access-Control-Allow-Origin $http_origin;
        add_header            Access-Control-Allow-Credentials "true";
        header_filter_by_lua_block {
            ngx.header['Content-Lenght'] = ngx.header['Content-Length'];
            ngx.header['Content-Length'] = nil;
            if ngx.header["x-aab-serviceid"] ~= nil then
                ngx.var.service_id = ngx.header["x-aab-serviceid"]
                ngx.header["x-aab-serviceid"] = nil
            end
        }
        add_header            Cache-Control                   "max-age=600,private";
        # Different cache on different domains. To not cache Access-Control-Allow-Origin from another origin
        add_header            Vary                            "Origin";
    }

}
