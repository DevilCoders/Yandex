// https://razladki-wow.test.n.yandex-team.ru/workspace/250/version/4
let __requests_all__input = single({project='Antiadblock', cluster='cryprox-prod', service='antiadblock_nginx', service_id='*', host='cluster', browser='ALL', sensor='request_aggregate', status='2XX_sum'});
let __requests_all = drop_tail(group_by_time(60s, 'avg', __requests_all__input), 1);
let __requests_403___input = single({project='Antiadblock', cluster='cryprox-prod', service='antiadblock_nginx', service_id='*', host='cluster', browser='ALL', sensor='request', status='403'});
let __requests_403__input = replace_nan(__requests_403___input, 0.0);
let __requests_403 = drop_tail(group_by_time(60s, 'avg', __requests_403__input), 1);
let __part_403__numer = __requests_403;
let __part_403__denom = __requests_all;
let __part_403 = __part_403__numer / __part_403__denom + 0 * (__part_403__numer + __part_403__denom);
let __threshold_learn___i_input = __part_403;
let __threshold_learn___input_vec = tail(__threshold_learn___i_input, 900s);
let __threshold_learn___s__input = __part_403;
let __threshold_learn___s_train = drop_tail(__threshold_learn___s__input, 43200s);
let __threshold_learn___adj_vec = seasonal_adjusted(__threshold_learn___s_train, __threshold_learn___input_vec, 6, 'anyday', 0h, 0.0);
let __threshold_learn___lower_bad_crit = transform((-7.0) - __threshold_learn___adj_vec, 'heaviside');
let __threshold_learn___upper_bad_crit = transform(__threshold_learn___adj_vec - (7.0), 'heaviside');
let __threshold_learn___out_crit = __threshold_learn___lower_bad_crit + __threshold_learn___upper_bad_crit;
let __threshold_learn___out_warn = __threshold_learn___lower_bad_crit + __threshold_learn___upper_bad_crit;
let __threshold_learn__viol = __threshold_learn___out_warn + __threshold_learn___out_crit;
let __threshold_learn__crit = 0.5 * sum(__threshold_learn__viol * (__threshold_learn__viol - 1));
let __threshold_learn = __threshold_learn__crit > 0.7 * count(__threshold_learn__viol);
let __threshold_fixed____input = __part_403;
let __threshold_fixed___input = tail(__threshold_fixed____input, 900s);
let __threshold_fixed___lower_crit = 0.0;
let __threshold_fixed___lower_bad_crit = transform(__threshold_fixed___lower_crit - __threshold_fixed___input, 'heaviside');
let __threshold_fixed___upper_crit = 0.08;
let __threshold_fixed___upper_bad_crit = transform(__threshold_fixed___input - __threshold_fixed___upper_crit, 'heaviside');
let __threshold_fixed___out_crit = __threshold_fixed___lower_bad_crit + __threshold_fixed___upper_bad_crit;
let __threshold_fixed___out_warn = __threshold_fixed___lower_bad_crit + __threshold_fixed___upper_bad_crit;
let __threshold_fixed__viol = __threshold_fixed___out_warn + __threshold_fixed___out_crit;
let __threshold_fixed__crit = 0.5 * sum(__threshold_fixed__viol * (__threshold_fixed__viol - 1));
let __threshold_fixed = __threshold_fixed__crit > 0.7 * count(__threshold_fixed__viol);
let __result__arg1 = __threshold_learn;
let __result__arg2 = __threshold_fixed;
let __result = __result__arg1 || __result__arg2;
let status = __result;
alarm_if(status);
