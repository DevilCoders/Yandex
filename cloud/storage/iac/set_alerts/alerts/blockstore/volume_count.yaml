definitions:
  - &alert_id "{{.ID}}_nbs_volume_count"
  - &alert_name "{{.Name}} NBS Volume Count"
  - &alert_annotations_tag "yc-{{.Cluster}}-nbs-solomon"
  - &alert_annotations_host "cloud_{{.Cluster}}_nbs_{{.Zone}}"
  - &alert_annotations_service "solomon_alert_nbs_volume_count"
  - &alert_juggler_description "(doc: https://nda.ya.ru/t/Gosfn-ac5Fnyrs)"
  - &alert_window_secs 300
  - &alert_delay_secs 0
alerts:
  - id: *alert_id
    name: *alert_name
    description: *alert_juggler_description
    window_secs: *alert_window_secs
    delay_secs: *alert_delay_secs
    channels:
      - id: juggler
    annotations:
      tags: *alert_annotations_tag
      host: *alert_annotations_host
      service: *alert_annotations_service
      juggler_description: *alert_juggler_description
    clusters:
      - prod_vla
      - prod_sas
      - prod_myt
      - israel
    expression:
      program: |-
        let volumes = {project="kikimr", cluster="{{.SolomonCluster}}", service="tablets", type="SchemeShard", host="cluster", sensor="MAX(SchemeShard/BlockStoreVolumes)"};
        let partitions = {project="kikimr", cluster="{{.SolomonCluster}}", service="tablets", type="SchemeShard", host="cluster", sensor="MAX(SchemeShard/BlockStorePartitionShards)"};
        let partitions2 = {project="kikimr", cluster="{{.SolomonCluster}}", service="tablets", type="SchemeShard", host="cluster", sensor="MAX(SchemeShard/BlockStorePartition2Shards)"};

        let tablets = last(volumes) + last(partitions) + last(partitions2);
        let tabletsLimit = 800000;

        alarm_if(tablets >= tabletsLimit * 0.9);
        warn_if(tablets >= tabletsLimit * 0.8);
