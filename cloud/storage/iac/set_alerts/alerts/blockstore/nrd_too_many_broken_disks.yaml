definitions:
  - &alert_id "{{.ID}}_nbs_nrd_too_many_broken_disks"
  - &alert_name "{{.Name}} NBS NRD too many broken disks"
  - &alert_annotations_tag "yc-{{.Cluster}}-nbs-solomon"
  - &alert_annotations_host "solomon-alert-cloud_{{.Cluster}}_nbs_{{.Zone}}"
  - &alert_annotations_service "solomon_alert_nbs_nrd_too_many_broken_disks"
  - &alert_description "(doc: https://nda.ya.ru/t/0APa3WoJ5FnQVC)"
  - &alert_juggler_description |-
      В кластере сломано слишком много дисков ({{ expression.p }}).
      {{alert.description}}
  - &prod_alert_program |
      let unavailable = {
        project="{{.SolomonProjectID}}",
        cluster="{{.SolomonCluster}}",
        service="disk_registry",
        host="cluster",
        sensor="DisksInTemporarilyUnavailableState"
      };

      let error = {
        project="{{.SolomonProjectID}}",
        cluster="{{.SolomonCluster}}",
        service="disk_registry",
        host="cluster",
        sensor="DisksInErrorState"
      };

      let online = {
        project="{{.SolomonProjectID}}",
        cluster="{{.SolomonCluster}}",
        service="disk_registry",
        host="cluster",
        sensor="DisksInOnlineState"
      };

      let migration = {
        project="{{.SolomonProjectID}}",
        cluster="{{.SolomonCluster}}",
        service="disk_registry",
        host="cluster",
        sensor="DisksInMigrationState"
      };

      let broken = series_sum(error + unavailable);
      let all_disks = broken + series_sum(online + migration);

      let v = last(broken  /all_disks);
      let p = to_fixed(100.0 * v, 2) + "%";
      alarm_if(v > 0.03);
      warn_if(v > 0.01);
  - &preprod_alert_program |
      let unavailable = {
        project="{{.SolomonProjectID}}",
        cluster="{{.SolomonCluster}}",
        service="disk_registry",
        host="control-{{.Zone}}",
        sensor="DisksInTemporarilyUnavailableState"
      };

      let error = {
        project="{{.SolomonProjectID}}",
        cluster="{{.SolomonCluster}}",
        service="disk_registry",
        host="control-{{.Zone}}",
        sensor="DisksInErrorState"
      };

      let online = {
        project="{{.SolomonProjectID}}",
        cluster="{{.SolomonCluster}}",
        service="disk_registry",
        host="control-{{.Zone}}",
        sensor="DisksInOnlineState"
      };

      let migration = {
        project="{{.SolomonProjectID}}",
        cluster="{{.SolomonCluster}}",
        service="disk_registry",
        host="control-{{.Zone}}",
        sensor="DisksInMigrationState"
      };

      let broken = series_sum(error + unavailable);
      let all_disks = broken + series_sum(online + migration);

      let v = last(broken / all_disks);
      let p = to_fixed(100.0 * v, 2) + "%";
      alarm_if(v > 0.25);
      warn_if(v > 0.1);
  - &alert_debug |
      v: {{expression.v}}
      p: {{expression.p}}
alerts:
  - id: *alert_id
    name: *alert_name
    description: *alert_description
    debug: *alert_debug
    channels:
      - id: juggler
    annotations:
      tags: *alert_annotations_tag
      host: *alert_annotations_host
      service: *alert_annotations_service
      juggler_description: *alert_juggler_description
    clusters:
      - preprod_vla
      - preprod_sas
      - preprod_myt
    expression:
      program: *preprod_alert_program

  - id: *alert_id
    name: *alert_name
    description: *alert_description
    debug: *alert_debug
    channels:
      - id: juggler
    annotations:
      tags: *alert_annotations_tag
      host: *alert_annotations_host
      service: *alert_annotations_service
      juggler_description: *alert_juggler_description
    clusters:
      - prod_vla
      - prod_sas
      - prod_myt
      - israel
    expression:
      program: *prod_alert_program