definitions:
  - &alert_id "{{.ID}}_nbs_server_endpoint_errors"
  - &alert_name "{{.Name}} NBS Server Endpoint Errors"
  - &alert_annotations_tag "yc-{{.Cluster}}-nbs-solomon"
  - &alert_annotations_host "{{`{{labels.host}}`}}.{{.HostDomain}}"
  - &alert_annotations_service "solomon_alert_nbs_server_endpoint_errors"
  - &alert_juggler_description "(doc: https://nda.ya.ru/t/AgcBN7fo5FnmNb)"
  - &alert_window_secs 900
  - &alert_debug |-
      max_other_errors: {{expression.max_other_errors}}
      max_session_errors: {{expression.max_session_errors}}
      max_throttle_errors: {{expression.max_throttle_errors}}
      max_total_errors: {{expression.max_total_errors}}
      reassign_gauge: {{expression.reassign_gauge}}
alerts:
  - id: *alert_id
    name: *alert_name
    description: *alert_juggler_description
    group_by_labels:
      - host
    channels:
      - id: juggler
    annotations:
      tags: *alert_annotations_tag
      host: *alert_annotations_host
      service: *alert_annotations_service
      juggler_description: *alert_juggler_description
    clusters:
      - preprod
    expression:
      program: |-
        let endpoint_requests='StartEndpoint|StopEndpoint|ListEndpoints|KickEndpoint';

        let total_errors = integrate_fn(group_lines('sum', {
          project='{{.SolomonProjectID}}',
          cluster='{{.SolomonCluster}}',
          service='server',
          host='{{.Hosts}}',
          request='{{`{{endpoint_requests}}`}}',
          sensor='Errors'
        }));

        let throttle_errors = integrate_fn(group_lines('sum', {
          project='{{.SolomonProjectID}}',
          cluster='{{.SolomonCluster}}',
          service='server',
          host='{{.Hosts}}',
          request='{{`{{endpoint_requests}}`}}',
          sensor='Errors/Throttling'
        }));

        let session_errors = integrate_fn(group_lines('sum', {
          project='{{.SolomonProjectID}}',
          cluster='{{.SolomonCluster}}',
          service='server',
          host='{{.Hosts}}',
          request='{{`{{endpoint_requests}}`}}',
          sensor='Errors/Session'
        }));

        let other_errors = total_errors - throttle_errors - session_errors;

        no_data_if(count(total_errors) == 0);
        no_data_if(count(throttle_errors) == 0);
        no_data_if(count(session_errors) == 0);

        let max_session_errors = max(session_errors);
        let max_throttle_errors = max(throttle_errors);
        let max_total_errors = max(total_errors);
        let max_other_errors = max(other_errors);

        alarm_if(max_session_errors >= 600);
        alarm_if(max_other_errors >= 1800);

        warn_if(max_session_errors >= 10);
        warn_if(max_other_errors >= 900);

  - id: *alert_id
    name: *alert_name
    description: *alert_juggler_description
    window_secs: *alert_window_secs
    debug: *alert_debug
    group_by_labels:
      - host
    channels:
      - id: juggler
    annotations:
      tags: *alert_annotations_tag
      host: *alert_annotations_host
      service: *alert_annotations_service
      juggler_description: *alert_juggler_description
    clusters:
      - prod_vla
      - prod_sas
      - israel
    expression:
      program: |-
        let endpoint_requests='StartEndpoint|StopEndpoint|ListEndpoints|KickEndpoint';

        let total_errors = integrate_fn(group_lines('sum', {
          project='{{.SolomonProjectID}}',
          cluster='{{.SolomonCluster}}',
          service='server',
          host='{{.Hosts}}',
          request='{{`{{endpoint_requests}}`}}',
          sensor='Errors'
        }));

        let throttle_errors = integrate_fn(group_lines('sum', {
          project='{{.SolomonProjectID}}',
          cluster='{{.SolomonCluster}}',
          service='server',
          host='{{.Hosts}}',
          request='{{`{{endpoint_requests}}`}}',
          sensor='Errors/Throttling'
        }));

        let session_errors = integrate_fn(group_lines('sum', {
          project='{{.SolomonProjectID}}',
          cluster='{{.SolomonCluster}}',
          service='server',
          host='{{.Hosts}}',
          request='{{`{{endpoint_requests}}`}}',
          sensor='Errors/Session'
        }));

        let other_errors = total_errors - throttle_errors - session_errors;

        no_data_if(count(total_errors) == 0);
        no_data_if(count(throttle_errors) == 0);
        no_data_if(count(session_errors) == 0);

        let max_session_errors = max(session_errors);
        let max_throttle_errors = max(throttle_errors);
        let max_total_errors = max(total_errors);
        let max_other_errors = max(other_errors);

        let reassign_gauge = 1;

        alarm_if(max_session_errors >= 600 * reassign_gauge);
        alarm_if(max_other_errors >= 1800 * reassign_gauge);

        warn_if(max_session_errors >= 10 * reassign_gauge);
        warn_if(max_other_errors >= 300 * reassign_gauge);

  - id: *alert_id
    name: *alert_name
    description: *alert_juggler_description
    window_secs: *alert_window_secs
    debug: *alert_debug
    group_by_labels:
      - host
    channels:
      - id: juggler
    annotations:
      tags: *alert_annotations_tag
      host: *alert_annotations_host
      service: *alert_annotations_service
      juggler_description: *alert_juggler_description
    clusters:
      - prod_myt
    expression:
      program: |-
        let endpoint_requests='StartEndpoint|StopEndpoint|ListEndpoints|KickEndpoint';

        let total_errors = integrate_fn(group_lines('sum', {
          project='{{.SolomonProjectID}}',
          cluster='{{.SolomonCluster}}',
          service='server',
          host='myt*',
          request='{{`{{endpoint_requests}}`}}',
          sensor='Errors'
        }));

        let throttle_errors = integrate_fn(group_lines('sum', {
          project='{{.SolomonProjectID}}',
          cluster='{{.SolomonCluster}}',
          service='server',
          host='myt*',
          request='{{`{{endpoint_requests}}`}}',
          sensor='Errors/Throttling'
        }));

        let session_errors = integrate_fn(group_lines('sum', {
          project='{{.SolomonProjectID}}',
          cluster='{{.SolomonCluster}}',
          service='server',
          host='myt*',
          request='{{`{{endpoint_requests}}`}}',
          sensor='Errors/Session'
        }));

        let reassign_count = integrate_fn(group_lines('sum', {
          project='{{.SolomonProjectID}}',
          cluster='{{.SolomonCluster}}',
          service='server',
          host='myt*',
          sensor='AppCriticalEvents/ReassignTablet'
        }));

        let other_errors = total_errors - throttle_errors - session_errors;

        no_data_if(count(total_errors) == 0);
        no_data_if(count(throttle_errors) == 0);
        no_data_if(count(session_errors) == 0);

        let max_session_errors = max(session_errors);
        let max_throttle_errors = max(throttle_errors);
        let max_total_errors = max(total_errors);
        let max_other_errors = max(other_errors);

        let reassign_gauge = max(reassign_count) > 0 ? 5.0 : 1;

        alarm_if(max_session_errors >= 600 * reassign_gauge);
        alarm_if(max_other_errors >= 1800 * reassign_gauge);

        warn_if(max_session_errors >= 10 * reassign_gauge);
        warn_if(max_other_errors >= 300 * reassign_gauge);
