definitions:
  - &alert_annotations_tag "yc-{{.Cluster}}-disk-manager-solomon"
  - &alert_annotations_host "{{`{{labels.host}}`}}.svc.{{.SvmDomain}}"
  - &alert_juggler_revision |-
      cluster: {{expression.cluster_rev}}
      host: {{expression.host_rev}}
alerts:
  - id: "yc-disk-manager-server-version-{{.ID}}"
    name: "{{.Name}} Disk Manager Server Version"
    delay_secs: 360
    window_secs: 300
    group_by_labels:
      - host
    channels:
      - id: juggler
        notify_about_statuses:
          - OK
          - ERROR
          - ALARM
          - NO_DATA
          - WARN
    annotations:
      tags: *alert_annotations_tag
      host: *alert_annotations_host
      service: "solomon_alert_disk-manager_server_version"
      juggler_description: *alert_juggler_revision
    clusters:
      - testing
      - preprod
      - prod
      - israel
    expression:
      program: |-
        let cluster = top_max(1, {cluster="{{.SolomonCluster}}", service="meta", host=="cluster", sensor="serverVersion"});
        let host = top_max(1, {cluster="{{.SolomonCluster}}", service="meta", host="disk-manager-*", sensor="serverVersion"});

        no_data_if(count(host) == 0);

        let cluster_rev = get_label(cluster, 'revision');
        let host_rev = get_label(host, 'revision');

        warn_if(cluster_rev != host_rev);

  - id: "yc-disk-manager-config-version-{{.ID}}"
    name: "{{.Name}} Disk Manager Config Version"
    delay_secs: 360
    window_secs: 300
    group_by_labels:
      - host
    channels:
      - id: juggler
        notify_about_statuses:
          - OK
          - ERROR
          - ALARM
          - NO_DATA
          - WARN
    annotations:
      tags: *alert_annotations_tag
      host: *alert_annotations_host
      service: "solomon_alert_disk-manager_config_version"
      juggler_description: *alert_juggler_revision
    clusters:
      - testing
      - preprod
      - prod
      - israel
    expression:
      program: |-
        let cluster = top_max(1, {cluster="{{.SolomonCluster}}", service="meta", host=="cluster", sensor="configVersion"});
        let host = top_max(1, {cluster="{{.SolomonCluster}}", service="meta", host="disk-manager-*", sensor="configVersion"});

        no_data_if(count(host) == 0);

        let cluster_rev = get_label(cluster, 'revision');
        let host_rev = get_label(host, 'revision');

        warn_if(cluster_rev != host_rev);

  - id: "yc-disk-manager-dataplane-server-version-{{.ID}}"
    name: "{{.Name}} Disk Manager Dataplane Server Version"
    delay_secs: 360
    window_secs: 300
    group_by_labels:
      - host
    channels:
      - id: juggler
        notify_about_statuses:
          - OK
          - ERROR
          - ALARM
          - NO_DATA
          - WARN
    annotations:
      tags: *alert_annotations_tag
      host: *alert_annotations_host
      service: "solomon_alert_disk-manager_dataplane_server_version"
      juggler_description: *alert_juggler_revision
    clusters:
      - testing
      - preprod
      - prod
      - israel
    expression:
      program: |-
        let cluster = top_max(1, {cluster="dataplane_{{.SolomonCluster}}", service="meta", host=="cluster", sensor="serverVersion"});
        let host = top_max(1, {cluster="dataplane_{{.SolomonCluster}}", service="meta", host="snapshot-*", sensor="serverVersion"});

        no_data_if(count(host) == 0);

        let cluster_rev = get_label(cluster, 'revision');
        let host_rev = get_label(host, 'revision');

        warn_if(cluster_rev != host_rev);

  - id: "yc-disk-manager-dataplane-config-version-{{.ID}}"
    name: "{{.Name}} Disk Manager Dataplane Config Version"
    delay_secs: 360
    window_secs: 300
    group_by_labels:
      - host
    channels:
      - id: juggler
        notify_about_statuses:
          - OK
          - ERROR
          - ALARM
          - NO_DATA
          - WARN
    annotations:
      tags: *alert_annotations_tag
      host: *alert_annotations_host
      service: "solomon_alert_disk-manager_dataplane_config_version"
      juggler_description: *alert_juggler_revision
    clusters:
      - testing
      - preprod
      - prod
      - israel
    expression:
      program: |-
        let cluster = top_max(1, {cluster="dataplane_{{.SolomonCluster}}", service="meta", host=="cluster", sensor="configVersion"});
        let host = top_max(1, {cluster="dataplane_{{.SolomonCluster}}", service="meta", host="snapshot-*", sensor="configVersion"});

        no_data_if(count(host) == 0);

        let cluster_rev = get_label(cluster, 'revision');
        let host_rev = get_label(host, 'revision');

        warn_if(cluster_rev != host_rev);
