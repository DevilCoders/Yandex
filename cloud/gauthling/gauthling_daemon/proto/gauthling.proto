syntax = "proto3";

package rpc;

service GauthlingService {
    // Healthcheck for balancer
    rpc Ping(Status) returns (Status) {
    };

    rpc Auth(AuthRequest) returns (AuthResponse) {
    }

    rpc AuthWithSign(AuthWithSignRequest) returns (AuthResponse) {
    }

    rpc AuthWithAmazonSign(AuthWithSignRequest) returns (AuthResponse) {
    }

    rpc Authz(AuthzRequest) returns (AuthzResponse) {
    }
}

message Status {
    int32 uptime = 1;
    int32 storage_update_time_delta = 2;
    int64 storage_serial = 3;
}

message AuthRequest {
    bytes token = 1;
}

message AuthWithSignRequest {
    bytes token = 1;
    string signedString = 2;
    string signature = 3;
    string datestamp = 4;
    string service = 5;
    string region = 6;
}

enum AuthState {
    AUTHENTICATED = 0;
    UNAUTHENTICATED = 1;
}

message AuthResponse {
    AuthState state = 1;
}

message AuthzRequest {
    bytes token = 1;
    map <string, string> invocation_context = 2;
}

enum AuthzState {
    AUTHORIZED = 0;
    UNAUTHORIZED = 1;
}

message AuthzResponse {
    AuthzState state = 1;
}
