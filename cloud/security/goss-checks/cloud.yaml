# Yandex Cloud Configuration baseline
# Based on CIS Benchmark for Ubuntu 20.04 LTS

command:
  # 1.1.1.1 Ensure mounting of cramfs filesystems is disabled (Automated)
  modprobe -n -v cramfs:
    exit-status: 1
    skip: true
  lsmod | grep cramfs:
    exit-status: 1

  # 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled (Automated)
  modprobe -n -v freevxfs:
    exit-status: 0
    stdout:
      - "install /bin/false"
    skip: true
  lsmod | grep freevxfs:
    exit-status: 1

  # 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled (Automated)
  modprobe -n -v jffs2:
    exit-status: 0
    stdout:
      - "install /bin/false"
    skip: true
  lsmod | grep jffs2:
    exit-status: 1

  # 1.1.1.4 Ensure mounting of hfs filesystems is disabled (Automated)
  modprobe -n -v hfs:
    exit-status: 0
    stdout:
      - "install /bin/false"
    skip: true
  lsmod | grep hfs:
    exit-status: 1

  # 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled (Automated)
  modprobe -n -v hfsplus:
    exit-status: 0
    stdout:
      - "install /bin/false"
    skip: true
  lsmod | grep hfsplus:
    exit-status: 1

  # 1.1.1.6 Ensure mounting of udf filesystems is disabled (Automated)
  modprobe -n -v udf:
    exit-status: 0
    stdout:
      - "install /bin/false"
    skip: true
  lsmod | grep udf:
    exit-status: 1

  # 1.1.2 Ensure /tmp is configured (Automated)
  systemctl is-enabled tmp.mount:
    exit-status: 0
    stdout:
      - "enabled"
    # TODO: check what todo with tmp
    skip: true

  # 1.1.22 Ensure sticky bit is set on all world-writable directories (Automated)
  #df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null:
  #  exit-status: 0
  #  stdout: []
  #  timeout: 1000000

  # 1.1.24 Disable USB Storage (Automated)
  #modprobe -n -v usb-storage:
  #  exit-status: 0
  #  stdout:
  #    - "install /bin/false"
  lsmod | grep usb-storage:
    exit-status: 1

  # TODO: think about pty as compute node uses sudo
  # 1.3.2 Ensure sudo commands use pty (Automated)
  #grep -Ei '^\s*Defaults\s+([^#]+,\s*)?use_pty(,\s+\S+\s*)*(\s+#.*)?$' /etc/sudoers /etc/sudoers.d/*:
  #  exit-status: 0
  #  stdout:
  #    - "Defaults use_pty"

  # TODO: think about sudo log as we get all the sudo logs in Splunk via rsyslog
  # 1.3.3 Ensure sudo log file exists (Automated)
  #grep -Ei '^\s*Defaults\s+logfile=\S+' /etc/sudoers /etc/sudoers.d/*:
  #  exit-status: 0
  #  stdout:
  #    - 'Defaults logfile="/var/log/sudo.log"'

  # 1.5.2 Ensure permissions on bootloader config are configured (Automated)
  stat -c "%a-%u-%g-%U-%G" /boot/grub/grub.cfg:
    exit-status: 0
    stdout:
      - "444-0-0-root-root"

  # 1.6 Additional Process Hardening
  # 1.6.1 Ensure XD/NX support is enabled (Automated)
  journalctl -k | egrep "NX.*protection:.*active":
    exit-status: 0

  # TODO: think and check
  # 1.6.4 Ensure core dumps are restricted (Automated)
  #grep -E '^(\*|\s).*hard.*core.*(\s+#.*)?$' /etc/security/limits.conf /etc/security/limits.d/* 2>/dev/null:
  #  exit-status: 0
  #  stdout:
  #    - "* hard core 0"
  #sysctl fs.suid_dumpable:
  #  exit-status: 0
  #  stdout:
  #    - "fs.suid_dumpable = 0"
  #systemctl is-enabled coredump.service:
  #  exit-status: 0

  # 1.7 Mandatory Access Control
  # 1.7.1.2 Ensure AppArmor is enabled in the bootloader configuration
  grep "^\s*linux" /boot/grub/grub.cfg | grep -v "apparmor=1":
    exit-status: 1
    stdout: []
    # TODO: check and that's checked in osquery
    skip: true
  grep "^\s*linux" /boot/grub/grub.cfg | grep -v "security=apparmor":
    exit-status: 1
    stdout: []
    # TODO: check if we need this
    skip: true

  # 1.7.1.3 Ensure all AppArmor Profiles are in enforce or complain mode
  #test $(expr `apparmor_status --enforced` + `apparmor_status --complaining`) = $(apparmor_status --profiled):
  #  exit-status: 0

  # 1.7.1.4 Ensure all AppArmor Profiles are enforcing (Automated): level 2

  # 1.9 Ensure updates, patches, and additional security software are installed (Manual)
  #/usr/lib/update-notifier/apt-check:
  #  exit-status: 0
  #  stdout:
  #    - "0,0"

  # 1.10 Ensure GDM is removed or login is configured (Automated)
  #dpkg -s gdm3:
  #  exit-status: 1

  # 2.2 Special Purpose Services
  # 2.2.1 Time Synchronization
  # 2.2.1.1 Ensure time synchronization is in use (Automated)
  #dpkg -s chrony:
  #  exit-status: 0
  #systemctl is-enabled chrony:
  #  exit-status: 0
  #  stdout:
  #    - "enabled"

  # TODO: check ntpd
  # 2.2.1.3 Ensure chrony is configured (Automated)
  #grep -E "^(server|pool)" /etc/chrony/chrony.conf:
  #  exit-status: 0
  #  stdout:
  #    - "server metadata.google.internal iburst"

  # 2.2.15 Ensure mail transfer agent is configured for local-only mode (Automated)
  ss -lntu | grep -E ':25\s' | grep -E -v '\s(127.0.0.1|::1):25\s':
    exit-status: 1
    stdout: []
    # TODO: skipped as we have the same test for ports
    skip: true

  # TODO: think
  # 5.2.2 Ensure permissions on SSH private host key files are configured (Automated)
  #bash /tmp/test_section_05_level1/5-2-2.sh:
  #  exit-status: 0
  #  stdout:
  #    - "Ownership and permissions of private key are correct"
  #  stderr: [ ]
  #  timeout: 10000

  # TODO: think
  # 5.2.3 Ensure permissions on SSH public host key files are configured (Automated)
  #bash /tmp/test_section_05_level1/5-2-3.sh:
  #  exit-status: 0
  #  stdout:
  #    - "Ownership and permissions of public key are correct"
  #  stderr: [ ]
  #  timeout: 10000

  # 5.4.3 Ensure default group for the root account is GID 0 (Automated)
  cat /etc/passwd | grep "^root:" | cut -f4 -d":":
    exit-status: 0
    stdout:
      - "0"

  # TODO: think
  # 5.4.4 Ensure default user umask is 027 or more restrictive (Automated)
  #bash /tmp/test_section_05_level1/5-2-4.sh:
  #  exit-status: 0
  #  stdout:
  #    - "Default user umask is set"
  #  stderr: [ ]
  #  timeout: 10000

  # 6.1.10 Ensure no world writable files exist (Automated)
  df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002:
    exit-status: 0
    stderr: []
    stdout: []
    timeout: 100000

  # 6.1.11 Ensure no unowned files or directories exist (Automated)
  df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nouser:
    exit-status: 0
    stderr: []
    stdout: []
    timeout: 100000

  # 6.1.12 Ensure no ungrouped files or directories exist (Automated)
  df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nogroup:
    exit-status: 0
    stderr: []
    stdout: []
    timeout: 100000

  # TODO: SUID executables
  # 6.1.13 Audit SUID executables (Manual)
  #bash /tmp/test_section_06_level1/6-1-13.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # TODO: SGID executables
  # 6.1.14 Audit SGID executables (Manual)
  #bash /tmp/test_section_06_level1/6-1-14.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # 6.2 User and Group Settings
  # 6.2.1 Ensure password fields are not empty (Automated)
  awk -F':' '($2 == "" ) { print $1 " does not have a password "}' /etc/shadow:
    exit-status: 0
    stderr: []
    timeout: 10000

  # 6.2.2 Ensure root is the only UID 0 account (Automated)
  awk -F':' '($3 == 0) { print $1 }' /etc/passwd:
    exit-status: 0
    stderr: []
    stdout:
      - "root"
    timeout: 10000

  # TODO: think
  # 6.2.3 Ensure root PATH Integrity (Automated)
  #bash /tmp/test_section_06_level1/6-2-3.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # 6.2.4 Ensure all users' home directories exist (Automated)
  #bash /tmp/test_section_06_level1/6-2-4.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # TODO:
  # 6.2.5 Ensure users' home directories permissions are 750 or more restrictive (Automated)
  #bash /tmp/test_section_06_level1/6-2-5.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # 6.2.6 Ensure users own their home directories (Automated)
  #bash /tmp/test_section_06_level1/6-2-6.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # 6.2.7 Ensure users' dot files are not group or world writable (Automated)
  #bash /tmp/test_section_06_level1/6-2-7.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # 6.2.8 Ensure no users have .forward files (Automated)
  #bash /tmp/test_section_06_level1/6-2-8.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # 6.2.9 Ensure no users have .netrc files (Automated)
  #bash /tmp/test_section_06_level1/6-2-9.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # 6.2.10 Ensure users' .netrc Files are not group or world accessible (Automated)
  #bash /tmp/test_section_06_level1/6-2-10.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # 6.2.11 Ensure no users have .rhosts files (Automated)
  #bash /tmp/test_section_06_level1/6-2-11.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # 6.2.12 Ensure all groups in /etc/passwd exist in /etc/group (Automated)
  #bash /tmp/test_section_06_level1/6-2-12.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # 6.2.13 Ensure no duplicate UIDs exist (Automated)
  #bash /tmp/test_section_06_level1/6-2-13.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # 6.2.14 Ensure no duplicate GIDs exist (Automated)
  #bash /tmp/test_section_06_level1/6-2-14.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # 6.2.15 Ensure no duplicate user names exist (Automated)
  #bash /tmp/test_section_06_level1/6-2-15.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # 6.2.16 Ensure no duplicate group names exist (Automated)
  #bash /tmp/test_section_06_level1/6-2-16.sh:
  #  exit-status: 0
  #  stderr: []
  #  timeout: 10000

  # 6.2.17 Ensure shadow group is empty (Automated)
  grep ^shadow:[^:]*:[^:]*:[^:]+ /etc/group || exit 0:
    exit-status: 0
    stderr: []
    stdout: []
    timeout: 10000
  awk -F':' '($4 == "<shadow-gid>") { print }' /etc/passwd || exit 0:
    exit-status: 0
    stderr: []
    stdout: []
    timeout: 10000

  # TODO: move hash to vars
  # TODO: allowed root users file hash
  # TODO: CA file hashes
  # Yandex Cloud Specific
  # Check sha256 hash of the kernel
  sha256sum /boot/vmlinuz-$(uname -r):
    exit-status: 0
    stdout:
      - "6e04cbf36dd07f07ee44df9ba576d5a548d7363802cb051a617941b80454386a"

kernel-param:
  # 1.6.2 Ensure address space layout randomization (ASLR) is enabled (Automated)
  kernel.randomize_va_space:
    value: "2"
  # 3.2.1 Ensure packet redirect sending is disabled (Automated)
  net.ipv4.conf.all.send_redirects:
    value: "0"
  #net.ipv4.conf.default.send_redirects:
  #  value: "0"
  # 3.2.2 Ensure IP forwarding is disabled (Automated)
  net.ipv4.ip_forward:
    value: "0"
  net.ipv6.conf.all.forwarding:
    value: "0"
  # 3.3.1 Ensure source routed packets are not accepted (Automated)
  #net.ipv4.conf.all.accept_source_route:
  #  value: "0"
  #net.ipv4.conf.default.accept_source_route:
  #  value: "0"
  # 3.3.2 Ensure ICMP redirects are not accepted (Automated)
  #net.ipv4.conf.all.accept_redirects:
  #  value: "0"
  #net.ipv4.conf.default.accept_redirects:
  #  value: "0"
  # 3.3.3 Ensure secure ICMP redirects are not accepted (Automated)
  #net.ipv4.conf.all.secure_redirects:
  #  value: "0"
  #net.ipv4.conf.default.secure_redirects:
  #  value: "0"
  # 3.3.4 Ensure suspicious packets are logged (Automated)
  #net.ipv4.conf.all.log_martians:
  #  value: "1"
    # TODO: check
  #  skip: true
  #net.ipv4.conf.default.log_martians:
  #  value: "1"
    # TODO: check
  #  skip: true
  # 3.3.5 Ensure broadcast ICMP requests are ignored (Automated)
  net.ipv4.icmp_echo_ignore_broadcasts:
    value: "1"
  # 3.3.6 Ensure bogus ICMP responses are ignored (Automated)
  net.ipv4.icmp_ignore_bogus_error_responses:
    value: "1"
  # 3.3.7 Ensure Reverse Path Filtering is enabled (Automated)
  #net.ipv4.conf.all.rp_filter:
  #  value: "1"
  net.ipv4.conf.default.rp_filter:
    value: "1"
  # 3.3.8 Ensure TCP SYN Cookies is enabled (Automated)
  net.ipv4.tcp_syncookies:
    value: "1"
  # 3.3.9 Ensure IPv6 router advertisements are not accepted (Automated)
  #net.ipv6.conf.all.accept_ra:
  #  value: "0"
  # TODO: check
  #  skip: true
  net.ipv6.conf.default.accept_ra:
    value: "0"

file:
  # 5.1.2 Ensure permissions on /etc/crontab are configured (Automated)
  /etc/crontab:
    exists: true
    # TODO(e-sidorov): think about changing to 0600
    # now it's rw-r-r
    mode: "0644"
    owner: root
    group: root

  # 5.1.3 Ensure permissions on /etc/cron.hourly are configured (Automated)
  /etc/cron.hourly/:
    exists: true
    # TODO(e-sidorov): think about 700
    mode: "0755"
    owner: root
    group: root

  # 5.1.4 Ensure permissions on /etc/cron.daily are configured (Automated)
  /etc/cron.daily/:
    exists: true
    #TODO: 0700
    mode: "0755"
    owner: root
    group: root

  # 5.1.5 Ensure permissions on /etc/cron.weekly are configured (Automated)
  /etc/cron.weekly/:
    exists: true
    # TODO(e-sidorov): 700
    mode: "0755"
    owner: root
    group: root

  # 5.1.6 Ensure permissions on /etc/cron.monthly are configured (Automated)
  /etc/cron.monthly/:
    exists: true
    #TODO(e-sidorov): 700
    mode: "0755"
    owner: root
    group: root

  # 5.1.7 Ensure permissions on /etc/cron.d are configured (Automated)
  /etc/cron.d/:
    exists: true
    # TODO: 0700
    mode: "0755"
    owner: root
    group: root

  # 5.1.8 Ensure cron is restricted to authorized users (Automated)
  /etc/cron.allow:
    exists: true
    mode: "0700"
    owner: root
    group: root
    contains:
      - "root"
    #TODO: check
    skip: true

  # TODO(e-sidorov); check as we don't have at.allow
  # 5.1.9 Ensure at is restricted to authorized users (Automated)
  /etc/at.allow:
    exists: true
    mode: "0700"
    owner: root
    group: root
    contains:
      - "root"
    #TODO: check
    skip: true

  # 5.2 Configure SSH Server
  # 5.2.1 Ensure permissions on /etc/ssh/sshd_config are configured (Scored)
  # 5.2.4 Ensure SSH LogLevel is appropriate (Automated)
  # 5.2.5 Ensure SSH X11 forwarding is disabled (Automated)
  # 5.2.6 Ensure SSH MaxAuthTries is set to 4 or less (Automated)
  # 5.2.7 Ensure SSH IgnoreRhosts is enabled (Automated)
  # 5.2.8 Ensure SSH HostbasedAuthentication is disabled (Automated)
  # 5.2.9 Ensure SSH root login is disabled (Automated)
  # 5.2.10 Ensure SSH PermitEmptyPasswords is disabled (Automated)
  # 5.2.11 Ensure SSH PermitUserEnvironment is disabled (Automated)
  # 5.2.12 Ensure only strong Ciphers are used (Automated)
  # 5.2.13 Ensure only strong MAC algorithms are used (Automated)
  # 5.2.14 Ensure only strong Key Exchange algorithms are used (Automated)
  # 5.2.15 Ensure SSH Idle Timeout Interval is configured (Automated)
  # 5.2.16 Ensure SSH LoginGraceTime is set to one minute or less (Automated)
  # 5.2.17 Ensure SSH access is limited (Automated)
  # 5.2.19 Ensure SSH PAM is enabled (Automated)
  # 5.2.20 Ensure SSH AllowTcpForwarding is disabled (Automated)
  # 5.2.21 Ensure SSH MaxStartups is configured (Automated)
  # 5.2.22 Ensure SSH MaxSessions is limited (Automated)
  /etc/ssh/sshd_config:
    exists: true
    mode: "0644"
    owner: root
    group: root
    contains:
      - "Protocol 2"
      #- "LogLevel INFO"
      #- "X11Forwarding no"
      #- "MaxAuthTries 2"
      - "IgnoreRhosts yes"
      - "HostbasedAuthentication no"
      #- "PermitRootLogin no"
      - "PermitEmptyPasswords no"
      # TODO: think
      #- "PermitUserEnvironment no"
      #- "MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com"
      #- "ClientAliveInterval 300"
      #- "ClientAliveCountMax 0"
      #- "LoginGraceTime 60"
      - "Banner /etc/issue.net"
      #- "DenyUsers root"
      - "UsePAM yes"
      #- "AllowTcpForwarding no"
      #- "MaxStartups 10:30:100"
      #- "MaxSessions 10"

  #TODO: rsyslog & trapdoor
  # 5.2.18 Ensure SSH warning banner is configured (Automated)
  /etc/issue.net:
    exists: true
    mode: "0644"
    owner: root
    group: root

  #TODO:
  # - oslogin
  # - break glass
  # - who is allowed to login as root
  # PAM_mkhomedir

  # 5.3.1 Ensure password creation requirements are configured (Automated)
  #/etc/security/pwquality.conf:
  #  exists: true
  #  mode: "0644"
  #  owner: root
  #  group: root
  #  contains:
  #    - "minlen = 14"
  #    - "minclass = 4"
  #/etc/pam.d/common-password:
  #  exists: true
  #  mode: "0644"
  #  owner: root
  #  group: root
  #  contains:
  #    - "pam_pwquality.so retry=3"

  # 5.4 User Accounts and Environment
  # 5.4.1 Set Shadow Password Suite Parameters
  # 5.4.1.1 Ensure password expiration is 365 days or less (Automated)
  # 5.4.1.2 Ensure minimum days between password changes is configured (Automated)
  # 5.4.1.3 Ensure password expiration warning days is 7 or more (Automated)
  #/etc/login.defs:
  #  exists: true
  #  mode: "0644"
  #  owner: root
  #  group: root
  #  contains:
  #    - "PASS_MAX_DAYS   365"
  #    - "PASS_MIN_DAYS   1"
  #    - "PASS_WARN_AGE   7"

  # TODO: osquery tag file
  # 1.8 Warning Banners
  # 1.8.1 Command Line Warning Banners
  # 1.8.1.1 Ensure message of the day is configured properly (Automated)
  # 1.8.1.4 Ensure permissions on /etc/motd are configured (Automated)
  #/etc/motd:
  #  exists: true
  #  mode: "0644"
  #  owner: root
  #  group: root
  #  contains:
  #    - "Authorized uses only. All activity may be monitored and reported."

  # 1.8.1.2 Ensure local login warning banner is configured properly (Automated)
  # 1.8.1.5 Ensure permissions on /etc/issue are configured (Automated)
  #/etc/issue:
  #  exists: true
  #  mode: "0644"
  #  owner: root
  #  group: root
  #  contains:
  #    - "Authorized uses only. All activity may be monitored and reported."

  # 1.8.1.3 Ensure remote login warning banner is configured properly (Automated)
  # 1.8.1.6 Ensure permissions on /etc/issue.net are configured (Automated)
  #/etc/issue.net:
  #  exists: true
  #  mode: "0644"
  #  owner: root
  #  group: root
  #  contains:
  #    - "Authorized uses only. All activity may be monitored and reported."

  # 6.1.2 Ensure permissions on /etc/passwd are configured (Automated)
  /etc/passwd:
    exists: true
    mode: "0644"
    owner: root
    group: root

  # 6.1.3 Ensure permissions on /etc/gshadow- are configured (Automated)
  /etc/gshadow-:
    exists: true
    mode: "0600"
    owner: root
    # TODO: should it be shadow?
    group: root

  # 6.1.4 Ensure permissions on /etc/shadow are configured (Automated)
  /etc/shadow:
    exists: true
    #TODO(e-sidorov): 640 or 600
    mode: "0640"
    owner: root
    group: shadow

  # 6.1.5 Ensure permissions on /etc/group are configured (Automated)
  /etc/group:
    exists: true
    mode: "0644"
    owner: root
    group: root

  # 6.1.6 Ensure permissions on /etc/passwd- are configured (Automated)
  /etc/passwd-:
    exists: true
    mode: "0600"
    owner: root
    group: root

  # 6.1.7 Ensure permissions on /etc/shadow- are configured (Automated)
  /etc/shadow-:
    exists: true
    mode: "0600"
    owner: root
    group: root

  # 6.1.8 Ensure permissions on /etc/group- are configured (Automated)
  /etc/group-:
    exists: true
    mode: "0600"
    owner: root
    group: root

  # 6.1.9 Ensure permissions on /etc/gshadow are configured (Automated)
  /etc/gshadow:
    exists: true
    mode: "0640"
    owner: root
    group: shadow

package:
  # 1.3.1 Ensure sudo is installed (Automated)
  sudo:
    installed: true

  # 1.6.3 Ensure prelink is disabled (Automated)
  prelink:
    installed: false

  # 1.7.1 Configure AppArmor
  apparmor:
    installed: true

  # 2.1 inetd Services
  # 2.1.1 Ensure xinetd is not installed (Automated)
  xinetd:
    installed: false

  # 2.1.2 Ensure openbsd-inetd is not installed (Automated)
  openbsd-inetd:
    installed: false

  # 2.2.2 Ensure X Window System is not installed (Automated)
  xserver-xorg*:
    installed: false

  #  2.2.3 Ensure Avahi Server is not installed (Automated)
  avahi-daemon:
    installed: false

  # 2.2.4 Ensure CUPS is not installed (Automated)
  cups:
    installed: false
    # TODO(e-sidorov): remove cups from cloud servers
    skip: true

  # 2.2.5 Ensure DHCP Server is not installed (Automated)
  isc-dhcp-server:
    installed: false

  # 2.2.6 Ensure LDAP server is not installed (Automated)
  slapd:
    installed: false

  # 2.2.7 Ensure NFS is not installed (Automated)
  nfs-kernel-server:
    installed: false

  # 2.2.8 Ensure DNS Server is not installed (Automated)
  bind9:
    installed: false

  # 2.2.9 Ensure FTP Server is not installed (Automated)
  vsftpd:
    installed: false
    # TODO(e-sidorov): remove vsftpd from cloud configuration
    skip: true

  # 2.2.10 Ensure HTTP server is not installed (Automated)
  apache2:
    installed: false

  # 2.2.11 Ensure IMAP and POP3 server are not installed (Automated)
  dovecot-imapd:
    installed: false
    # TODO(e-sidorov): remove from cloud servers
    skip: true
  dovecot-pop3d:
    installed: false

  # 2.2.12 Ensure Samba is not installed (Automated)
  samba:
    installed: false

  # 2.2.13 Ensure HTTP Proxy Server is not installed (Automated)
  squid:
    installed: false

  # 2.2.14 Ensure SNMP Server is not installed (Automated)
  snmpd:
    installed: false

  # 2.2.16 Ensure rsync service is not installed (Automated)
  rsync:
    installed: false
    # TODO: remove
    skip: true

  # 2.2.17 Ensure NIS Server is not installed (Automated)
  # 2.3 Service Clients
  # 2.3.1 Ensure NIS Client is not installed (Automated)
  nis:
    installed: false

  # 2.3.2 Ensure rsh client is not installed (Automated)
  rsh-client:
    installed: false
    # TODO(e-sidorov): remove rsh-client from cloud servers
    skip: true

  # 2.3.3 Ensure talk client is not installed (Automated)
  talk:
    installed: false

  # 2.3.4 Ensure telnet client is not installed (Automated)
  #telnet:
  #  installed: false

  # 2.3.5 Ensure LDAP client is not installed (Automated)
  ldap-utils:
    installed: false

  # 2.3.6 Ensure RPC is not installed (Automated)
  rpcbind:
    installed: false

  # Yandex Cloud specific packages
  osquery-vanilla:
    installed: true

  osquery-yandex-generic-config:
    installed: true

  telnet-server:
    installed: false

  # Yandex Specific profiles
  apparmor-ycloud-dhcp-prof:
    installed: true

  apparmor-ycloud-sssd-prof:
    installed: true

  apparmor-ycloud-svc-serialssh-prof:
    installed: true

  apparmor-ycloud-ycommon-prof:
    installed: true

mount:
  # 1.1.6 Ensure /dev/shm is configured (Automated)
  # 1.1.7 Ensure nodev option set on /dev/shm partition (Automated)
  # 1.1.8 Ensure nosuid option set on /dev/shm partition (Automated)
  # 1.1.9 Ensure noexec option set on /dev/shm partition (Automated)
  /dev/shm:
    exists: true
    opts:
      - nodev
      - nosuid
      # TODO: think
      #- noexec
  /sys/kernel/security:
    exists: true
    opts:
      - rw
      - nodev
      - nosuid
      - relatime
      - noexec

  # 1.1.3 Ensure nodev option set on /tmp partition (Automated)
  # 1.1.4 Ensure nosuid option set on /tmp partition (Automated)
  # 1.1.5 Ensure noexec option set on /tmp partition (Automated)
  /tmp:
    exists: true
    opts:
      - nosuid
      - noexec
    # TODO: mount separate tmp
    skip: true

port:
  # IPv4 for sshd must be disabled
  tcp:22:
    listening: false
  # SSHD listens only on IPv6
  tcp6:22:
    listening: true
    ip:
      - '::'

  # SMTP listens only localhost
  tcp:25:
    listening: true
    ip:
      - "127.0.0.1"
  tcp6:25:
    listening: true
    ip:
      - '::1'

service:
  sshd:
    enabled: true
    running: true

  osqueryd:
    enabled: true
    running: true

  ntp:
    enabled: true
    running: true

  # 1.1.23 Disable Automounting (Automated)
  autofs:
    enabled: false
    running: false

  # 5.1.1 Ensure cron daemon is enabled and running (Automated)
  cron:
    enabled: true
    running: true

  tmp.mount:
    enabled: true
    running: true
    # TODO: check
    skip: true

process:
  osqueryd:
    running: true
    skip: false
