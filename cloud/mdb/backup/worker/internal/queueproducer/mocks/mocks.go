// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/backup/worker/internal/queueproducer (interfaces: QueueProducer)

// Package mocks is a generated GoMock package.
package mocks

import (
	models "a.yandex-team.ru/cloud/mdb/backup/worker/internal/models"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockQueueProducer is a mock of QueueProducer interface.
type MockQueueProducer struct {
	ctrl     *gomock.Controller
	recorder *MockQueueProducerMockRecorder
}

// MockQueueProducerMockRecorder is the mock recorder for MockQueueProducer.
type MockQueueProducerMockRecorder struct {
	mock *MockQueueProducer
}

// NewMockQueueProducer creates a new mock instance.
func NewMockQueueProducer(ctrl *gomock.Controller) *MockQueueProducer {
	mock := &MockQueueProducer{ctrl: ctrl}
	mock.recorder = &MockQueueProducerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQueueProducer) EXPECT() *MockQueueProducerMockRecorder {
	return m.recorder
}

// ProduceQueue mocks base method.
func (m *MockQueueProducer) ProduceQueue(arg0, arg1 context.Context) (chan models.BackupJob, chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProduceQueue", arg0, arg1)
	ret0, _ := ret[0].(chan models.BackupJob)
	ret1, _ := ret[1].(chan error)
	return ret0, ret1
}

// ProduceQueue indicates an expected call of ProduceQueue.
func (mr *MockQueueProducerMockRecorder) ProduceQueue(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProduceQueue", reflect.TypeOf((*MockQueueProducer)(nil).ProduceQueue), arg0, arg1)
}
