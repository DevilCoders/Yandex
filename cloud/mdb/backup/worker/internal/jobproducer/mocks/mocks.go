// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/backup/worker/internal/jobproducer (interfaces: JobProducer)

// Package mocks is a generated GoMock package.
package mocks

import (
	models "a.yandex-team.ru/cloud/mdb/backup/worker/internal/models"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockJobProducer is a mock of JobProducer interface.
type MockJobProducer struct {
	ctrl     *gomock.Controller
	recorder *MockJobProducerMockRecorder
}

// MockJobProducerMockRecorder is the mock recorder for MockJobProducer.
type MockJobProducerMockRecorder struct {
	mock *MockJobProducer
}

// NewMockJobProducer creates a new mock instance.
func NewMockJobProducer(ctrl *gomock.Controller) *MockJobProducer {
	mock := &MockJobProducer{ctrl: ctrl}
	mock.recorder = &MockJobProducerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJobProducer) EXPECT() *MockJobProducerMockRecorder {
	return m.recorder
}

// ProduceBackupJob mocks base method.
func (m *MockJobProducer) ProduceBackupJob(arg0 context.Context, arg1 chan models.BackupJob) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProduceBackupJob", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProduceBackupJob indicates an expected call of ProduceBackupJob.
func (mr *MockJobProducerMockRecorder) ProduceBackupJob(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProduceBackupJob", reflect.TypeOf((*MockJobProducer)(nil).ProduceBackupJob), arg0, arg1)
}
