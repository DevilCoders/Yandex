service: dbaas
title: MDB
arcanum:
  auto_merge:
    enabled: true
    requirements:
    - system: arcanum
      type: comment_issues_closed
  # In case of any questions:
  # 1. Look at documentation:
  #     https://docs.yandex-team.ru/arcanum/pr/devexp
  #     https://docs.yandex-team.ru/arcanum/pr/review_configuration
  # 2. Write to devtools support https://forms.yandex-team.ru/surveys/devtools/?service=arcanum
  # 3. Join telegram channel https://t.me/+5mNt-TYK_fozNWEy
  review:
    auto_assign: false
    groups:
      - name: "gendb"
        roles: [ "gendb:@id=16", "internalmdb:developer" ]
      - name: "core"
        roles: [ "mdbcoreteam:@id=17", "internalmdb:developer" ]
      - name: "analytic_dbs"
        roles: [ "analytic_dbs:developer", "internalmdb:developer" ]
      - name: "specdb"
        roles: [ "nonrelational_dbs:developer", "internalmdb:developer" ]
      - name: "elasticsearch"
        roles: [ "esaas:@id=16", "internalmdb:developer" ]
      - name: "dataproc"
        roles: [ "dataprocessing:@id=16", "internalmdb:developer" ]
      - name: "mdb"
        roles: [ "internalmdb:developer" ]
    override_policy: "override"
    rules:
      - reviewers:
          - name: "mdb"
            ship: 1
            assign: 1
      - subpaths: "dbaas-internal-api-image/dbaas_internal_api/modules/postgres/**, dbaas-internal-api-image/dbaas_internal_api/modules/mysql/**, mdb-internal-api/internal/logic/sqlserver/**, mdb-internal-api/internal/api/grpc/sqlserver/**, mdb-internal-api/internal/logic/greenplum/**, mdb-internal-api/internal/api/grpc/greenplum/**, windows/**, mdb-my-toolkit/**, mysync/**, pgsync/**, gpsync/**, salt/salt/components/postgres/**, salt/salt/components/mysql/**, salt/salt/components/sqlserver/**, salt/salt/components/greenplum/**, salt/salt/components/odyssey/**"
        reviewers:
          - name: "gendb"
            assign: 1
            ship: 1
      - subpaths: "pg/s3db/**, pg/s3meta/**, pg/pgproxy/**"
        reviewers:
          - name: "gendb"
            assign: 1
            ship: 1
      - subpaths: "internal/**, *cms/**, **/*cms*/**, **/*cms*, *deploy/**, **/*deploy*/**, **/*deploy*, *deploydb/**,image-releaser/**, *katan/**, **/*katan*/**, **/*katan*, *health/**, **/*health*/**, **/*health*, *maintenance/**, **/*maintenance*/**, **/*maintenance*, *secrets/**, **/*secrets*/**, **/*secrets*, *secretsdb/**, *mlock/**, **/*mlock*/**, **/*mlock*, *mlockdb/**, *dns/**, **/*dns*/**, **/*dns*, *dispenser*/**, **/*dispenser*/**, **/*dispenser*, *metrics*/**, **/*metrics*/**, **/*metrics*, mdb-event-producer/**, mdb-internal-api/**, mdb-vpc/**, salt/**/*controlplane*/**, bootstrap/**, backup/**, salt/salt/components/backup/**, salt/salt/components/monrun2/backup/**"
        reviewers:
          - name: "core"
            assign: 1
            ship: 1
      - subpaths: "cli/dbaas/**, clickhouse/**, dbaas-internal-api-image/dbaas_internal_api/modules/clickhouse/**, dbaas-internal-api-image/tests/modules/clickhouse/**, dbaas_infra_tests/tests/features/clickhouse*, dbaas_worker/**/clickhouse/**, e2e-tests/**/*clickhouse*, juggler-config/**/*clickhouse*, juggler-config/**/*zookeeper*, mdb-internal-api/**/clickhouse/**, salt/pillar/**/*logsdb.sls, salt/pillar/mdb_dbaas_templates/ch.sls, salt/pillar/mdb_dbaas_templates/zk.sls, salt/salt/_modules/*clickhouse*.py, salt/salt/_modules/*zookeeper*.py, salt/salt/_states/*clickhouse*.py, salt/salt/_states/*zookeeper*.py, salt/salt/components/clickhouse*/**, salt/salt/components/zk*/**, salt/salt/components/dbaas-compute/apparmor/*clickhouse*, salt/salt/components/dbaas-compute/apparmor/*zookeeper*, salt/salt/components/dbaas-cron/**/*clickhouse*, salt/salt/components/dbaas-cron/**/*zookeeper*, salt/salt/components/mdb-metrics/conf/ch*/**, salt/salt/components/mdb-metrics/conf/zk*/**, salt/salt/components/monrun2/clickhouse/**, salt/salt/components/monrun2/zookeeper/**, salt-tests/**/*clickhouse/**, salt-tests/**/*zookeeper/**, scripts/chadmin/**, scripts/pssh_aliases/**, solomon-charts/**/*clickhouse*, solomon-charts/**/*zookeeper*"
        reviewers:
          - name: "analytic_dbs"
            assign: 1
            ship: 1
      - subpaths: "dbaas-internal-api-image/dbaas_internal_api/modules/mongodb/**, dbaas-internal-api-image/dbaas_internal_api/modules/redis/**, dbaas-internal-api-image/tests/modules/mongodb/**, dbaas-internal-api-image/tests/modules/redis/**, dbaas_infra_tests/tests/features/*mongodb*, dbaas_infra_tests/tests/features/*redis*, dbaas_worker/**/mongodb/**, dbaas_worker/**/redis/**, e2e-tests/**/*mongodb*, e2e-tests/**/*redis*, juggler-config/**/*mongodb*, juggler-config/**/*redis*, mdb-internal-api/**/mongodb/**, mdb-internal-api/**/redis/**, salt/pillar/mdb_dbaas_templates/mongodb.sls, salt/pillar/mdb_dbaas_templates/redis.sls, salt/salt/_modules/*mongodb*.py, salt/salt/_modules/*redis*.py, salt/salt/_states/*mongodb*.py, salt/salt/_states/*redis*.py, salt/salt/components/mongodb*/**, salt/salt/components/redis*/**, salt/salt/components/dbaas-compute/apparmor/*mongodb*, salt/salt/components/dbaas-compute/apparmor/*redis*, salt/salt/components/dbaas-cron/**/*mongodb*, salt/salt/components/dbaas-cron/**/*redis*, salt/salt/components/mdb-metrics/conf/mongodb*/**, salt/salt/components/mdb-metrics/conf/redis*/**, salt/salt/components/monrun2/mongodb/**, salt/salt/components/monrun2/redis/**, salt-tests/**/*mongodb/**, salt-tests/**/*redis/**, solomon-charts/**/*mongodb*, solomon-charts/**/*redis*, rdsync/**"
        reviewers:
          - name: "specdb"
            assign: 1
            ship: 1
      - subpaths: "dbaas_infra_tests/tests/features/*elasticsearch*, dbaas_worker/**/elasticsearch/**, e2e-tests/**/*elasticsearch*, juggler-config/**/*elasticsearch*, mdb-internal-api/**/elasticsearch/**, salt/pillar/mdb_dbaas_templates/elasticsearch.sls, salt/salt/_modules/*elasticsearch*.py, salt/salt/_states/*elasticsearch*.py, salt/salt/components/elasticsearch*/**, salt/salt/components/dbaas-compute/apparmor/*elasticsearch*, salt/salt/components/dbaas-cron/**/*elasticsearch*, salt/salt/components/mdb-metrics/conf/es*/**, salt/salt/components/monrun2/elasticsearch/**, salt-tests/**/*elasticsearch/**, solomon-charts/**/*elasticsearch*"
        reviewers:
          - name: "elasticsearch"
            assign: 1
            ship: 1
      - subpaths: "dataproc*/**"
        reviewers:
          - name: "dataproc"
            assign: 1
            ship: 1

ci:
  release-title-source: flow
  secret: sec-01em4582tw1zp1p7msw85baw4v
  runtime:
    sandbox-owner: MDB
  autocheck:
    strong: true
    fast-targets:
    - cloud/mdb
    large-autostart:
    - cloud/mdb/mdb-health/*
    - cloud/mdb/mdb-pgcheck/*
  permissions:
    start-flow:
      - service: dbaas
      - service: doublecloud_sre
  actions:
    graphene-dsl:
      title: Update graphene jobs dsl
      flow: jenkins-job-mdb-common-post
      flow-vars:
        task_title: GRAPHENE_GEN_JOBS
        build_job: graphene-gen-jobs
      triggers:
      - on: commit
        into:
        - trunk
        filters:
        - discovery: any
          abs-paths:
          - cloud/mdb/graphene/dsl/**
    vm-image-build-dsl:
      title: Update vm image jobs dsl
      flow: jenkins-job-mdb-common-post
      flow-vars:
        task_title: VM_IMAGE_GEN_JOBS
        build_job: dbaas_gen_images
      triggers:
      - on: commit
        into:
        - trunk
        filters:
        - discovery: any
          abs-paths:
          - cloud/mdb/vm-image-build/dsl/**
          - cloud/mdb/vm-image-build/versions/**
    jenkins-dsl:
      title: Update jenkins ci jobs dsl
      flow: jenkins-job-mdb-common-post
      flow-vars:
        task_title: DBAAS_GEN_JOBS
        build_job: dbaas_gen_jobs
      triggers:
      - on: commit
        into:
        - trunk
        filters:
        - discovery: any
          abs-paths:
          - cloud/mdb/jenkins-jobs/**
    jenkins-test-mdb-infra:
      title: Run jenkins job TEST_MDB_INFRA
      flow: jenkins-job-mdb-infra
      flow-vars:
        task_title: TEST_MDB_INFRA
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - dbaas_infra_tests/**
    jenkins-test-mdb-worker:
      title: Run jenkins job TEST_MDB_WORKER
      flow: jenkins-job-mdb-worker
      flow-vars:
        task_title: TEST_MDB_WORKER
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - dbaas_worker/**
    jenkins-test-mdb-solomon-charts:
      title: Run jenkins job TEST_MDB_SOLOMON_CHARTS
      flow: jenkins-job-mdb-solomon-charts
      flow-vars:
        task_title: TEST_MDB_SOLOMON_CHARTS
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - solomon-charts/**
    jenkins-test-mdb-go:
      title: Run jenkins job TEST_MDB_GO
      flow: jenkins-job-mdb-go
      flow-vars:
        task_title: TEST_MDB_GO
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - deploy/**
          - deploydb/**
          - mdb-health/**
          - mdb-internal-api/**
          - mdb-secrets/**
          - secretsdb/**
    jenkins-test-mdb-checks:
      title: Run jenkins job TEST_MDB_CHECKS
      flow: jenkins-job-mdb-checks
      flow-vars:
        task_title: TEST_MDB_CHECKS
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - juggler-config/**
    jenkins-test-manual-mdb-salt:
      title: Manual run salt components tests
      flow: jenkins-manual-job-mdb-salt
      flow-vars:
        task_title: TEST_MDB_SALT
      triggers:
      - on: pr
        required: false
        filters:
        - discovery: dir
          sub-paths:
          - salt/**
          - backup/**
    jenkins-test-mdb-salt:
      title: Run essential salt components tests
      flow: jenkins-job-mdb-salt
      flow-vars:
        task_title: TEST_MDB_SALT
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - salt/salt/_grains/**
          - salt/salt/_modules/**
          - salt/salt/_states/**
          - salt/salt/components/clickhouse/**
          - salt/salt/components/clickhouse_cluster/**
          - salt/salt/components/common/**
          - salt/salt/components/common-windows/**
          - salt/salt/components/elasticsearch/**
          - salt/salt/components/elasticsearch_cluster/**
          - salt/salt/components/opensearch/**
          - salt/salt/components/opensearch_cluster/**
          - salt/salt/components/greenplum/**
          - salt/salt/components/greenplum_cluster/**
          - salt/salt/components/kafka/**
          - salt/salt/components/kafka_cluster/**
          - salt/salt/components/mongodb/**
          - salt/salt/components/mongodb_cluster/**
          - salt/salt/components/mysql/**
          - salt/salt/components/mysql_cluster/**
          - salt/salt/components/postgres/**
          - salt/salt/components/postgres_cluster/**
          - salt/salt/components/redis/**
          - salt/salt/components/redis_cluster/**
          - salt/salt/components/sqlserver/**
          - salt/salt/components/sqlserver_cluster/**
          - salt/salt/components/zk/**
          - salt/pillar/metadb_default_versions.sls
    jenkins-test-mdb-dataproc-infra:
      title: Run jenkins job TEST_MDB_DATAPROC_INFRA
      flow: jenkins-job-mdb-dataproc-infra
      flow-vars:
        task_title: TEST_MDB_DATAPROC_INFRA
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - dataproc-infra-tests/**
          - dataproc-agent/**
          - dataproc-manager/**
    jenkins-test-mdb-internalapi:
      title: Run jenkins job TEST_MDB_INTERNALAPI
      flow: jenkins-job-mdb-internalapi
      flow-vars:
        task_title: TEST_MDB_INTERNALAPI
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - dbaas-internal-api-image/**
    jenkins-test-mdb-mysync:
      title: Run jenkins job TEST_MDB_MYSYNC
      flow: jenkins-job-mdb-mysync
      flow-vars:
        task_title: TEST_MDB_MYSYNC
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - mysync/**
          - internal/dcs/**
          - internal/testutil/**
    jenkins-test-mdb-rdsync:
      title: Run jenkins job TEST_MDB_RDSYNC
      flow: jenkins-job-mdb-common-pre
      flow-vars:
        task_title: TEST_MDB_RDSYNC
        build_job: arcadia-rdsync-test
        poll_timeout: 21000
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - rdsync/**
    jenkins-test-mdb-ch-tools:
      title: Run jenkins job TEST_MDB_CH_TOOLS
      flow: jenkins-job-mdb-ch-tools
      flow-vars:
        task_title: TEST_MDB_CH_TOOLS
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - clickhouse/tools/**
    jenkins-test-mdb-ch-versions:
      title: Run jenkins job TEST_MDB_CH_VERSIONS
      flow: jenkins-job-mdb-ch-versions
      flow-vars:
        task_title: TEST_MDB_CH_VERSIONS
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - clickhouse/versions/**
    jenkins-test-mdb-metadb:
      title: Run jenkins job TEST_MDB_METADB
      flow: jenkins-job-mdb-metadb
      flow-vars:
        task_title: TEST_MDB_METADB
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - dbaas_metadb/**
    jenkins-test-mdb-backup-service:
      title: Run jenkins job TEST_MDB_BACKUP_SERVICE
      flow: jenkins-job-mdb-backup-service
      flow-vars:
        task_title: TEST_MDB_BACKUP_SERVICE
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - backup/**
    jenkins-test-mdb-dataproc-image-2-1-infra:
      title: Run jenkins job TEST_MDB_DATAPROC_IMAGE_INFRA
      flow: jenkins-job-mdb-dataproc-image-infra
      flow-vars:
        image_version: "2_1"
        task_title: TEST_MDB_DATAPROC_IMAGE_INFRA
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - images/dataproc21/**
    jenkins-test-mdb-dataproc-image-2-0-infra:
      title: Run jenkins job TEST_MDB_DATAPROC_IMAGE_INFRA
      flow: jenkins-job-mdb-dataproc-image-infra
      flow-vars:
        image_version: "2_0"
        task_title: TEST_MDB_DATAPROC_IMAGE_INFRA
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - images/dataproc/**
    jenkins-test-mdb-dataproc-image-1-4-infra:
      title: Run jenkins job TEST_MDB_DATAPROC_IMAGE_INFRA
      flow: jenkins-job-mdb-dataproc-image-infra
      flow-vars:
        image_version: "1_4"
        task_title: TEST_MDB_DATAPROC_IMAGE_INFRA
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - images/dataproc14/**
    jenkins-test-mdb-idm-service:
      title: Run jenkins job TEST_MDB_IDM_SERVICE
      flow: jenkins-job-mdb-idm-service
      flow-vars:
        task_title: TEST_MDB_IDM_SERVICE
      triggers:
      - on: pr
        filters:
        - discovery: dir
          sub-paths:
          - idm_service/**
    jenkins-test-mdb-pgsync:
      title: Run jenkins job TEST_MDB_PGSYNC
      flow: jenkins-job-mdb-common-pre
      flow-vars:
        task_title: TEST_MDB_PGSYNC
        build_job: arcadia_pgsync_behave_test
        poll_timeout: 21000
      triggers:
        - on: pr
          filters:
            - discovery: dir
              sub-paths:
                - pgsync/**
    jenkins-test-mdb-gpsync:
      title: Run jenkins job TEST_MDB_GPSYNC
      flow: jenkins-job-mdb-common-pre
      flow-vars:
        task_title: TEST_MDB_GPSYNC
        build_job: arcadia_gpsync_behave_test
        poll_timeout: 14400
      triggers:
        - on: pr
          filters:
            - discovery: dir
              sub-paths:
                - gpsync/**
    pgsync-deb:
      title: Build pgsync deb package
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbPgsync
      triggers:
        - on: commit
          into:
            - trunk
          filters:
            - author-services:
                - dbaas
              discovery: any
              abs-paths:
                - cloud/mdb/pgsync/**
    gpsync-deb:
      title: Build gpsync deb package
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbGpsync
      triggers:
        - on: commit
          into:
            - trunk
          filters:
            - author-services:
                - dbaas
              discovery: any
              abs-paths:
                - cloud/mdb/gpsync/**
  flows:
    build-deb:
      title: Build deb
      jobs:
        start:
          title: Start flow
          stage: start-flow
          task: dummy
        build:
          title: Build deb
          stage: build
          needs: start
          task: projects/cloud/mdb/run_teamcity_build
          attempts: 3
          input:
            build_type:
              id: ${flow-vars.build_type_id}
              properties:
                revision: "${to_string(context.target_revision.number)}"
    teamcity-build:
      title: Run TeamCity build
      jobs:
        start:
          title: Start flow
          stage: start-flow
          task: dummy
        build:
          title: Run TeamCityBuild
          stage: build
          needs: start
          task: projects/cloud/mdb/run_teamcity_build
          attempts: 3
          input:
            build_type:
              id: ${flow-vars.build_type_id}
              properties:
                commit-hash: "${context.target_revision.hash}"
    teamcity-deb-arc:
      title: Run TeamCity build
      jobs:
        start:
          title: Start flow
          stage: start-flow
          task: dummy
        build:
          title: Run TeamCityBuild
          stage: build
          needs: start
          task: projects/cloud/mdb/run_teamcity_build
          attempts: 3
          input:
            build_type:
              id: MDB_ArcDebPkg
              properties:
                arc-commit: "${context.target_revision.hash}"
                pkg-json-path: "${flow-vars.pkg_json}"
                custom-version: "${flow-vars.custom_version}"
    jenkins-job-mdb-infra:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_INFRA
    jenkins-job-mdb-worker:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_WORKER
    jenkins-job-mdb-solomon-charts:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_SOLOMON_CHARTS
    jenkins-job-mdb-go:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_GO
    jenkins-job-mdb-checks:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_CHECKS
    jenkins-manual-job-mdb-salt:
      title: Manual run Jenkins job
      jobs:
        manual-run-jenkins-job:
          title: ${flow-vars.task_title}
          manual: true
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_SALT
    jenkins-job-mdb-salt:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_SALT
    jenkins-job-mdb-dataproc-infra:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_DATAPROC_INFRA
    jenkins-job-mdb-internalapi:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_INTERNALAPI
    jenkins-job-mdb-mysync:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_MYSYNC
    jenkins-job-mdb-ch-tools:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_CH_TOOLS
    jenkins-job-mdb-ch-versions:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_CH_VERSIONS
    jenkins-job-mdb-metadb:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_METADB
    jenkins-job-mdb-backup-service:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_BACKUP_SERVICE
    jenkins-job-mdb-dataproc-image-infra:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
            image_version: ${flow-vars.image_version}
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_DATAPROC_IMAGE_INFRA
    jenkins-job-mdb-idm-service:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            arcadia_patch: 'enable'
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/TEST_MDB_IDM_SERVICE
    jenkins-job-mdb-common-pre:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            job: ${flow-vars.build_job}
            poll_timeout: ${flow-vars.poll_timeout}
            arcadia_patch: 'enable'
          kill-timeout: 6h
          context-input:
            __GSID: "ARCANUM:${context.launch_pull_request_info.pull_request.id}"
          task: projects/mdb/testenv/MDB_JENKINS_COMMON
    jenkins-job-mdb-common-post:
      title: Run Jenkins job
      jobs:
        run-jenkins-job:
          title: ${flow-vars.task_title}
          input:
            is_post: true
            job: ${flow-vars.build_job}
          task: projects/mdb/testenv/MDB_JENKINS_COMMON
  releases:
    backup-deb:
      title: Build backup deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbBackup
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/backup/**
    ch-tools-deb:
      title: Build mdb-ch-tools deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbChTools
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/clickhouse/tools/**
    clickhouse-versions-datacloud:
      title: Commit ClickHouse versions to mdb-contolplane
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_DatacloudClickhouseVersions
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/datacloud/generated/clickhouse_versions.yaml
    clickhouse-versions-compute:
      title: Commit ClickHouse versions to contolplane helmcharts for compute
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_MdbClickhouseVersions
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/salt/pillar/generated/compute/clickhouse_versions.yaml
    cms-instance-api-deb:
      title: Build cms instance api deb
      flow: teamcity-deb-arc
      flow-vars:
        pkg_json: cloud/mdb/cms/api/cmd/mdb-cms-instance-api/pkg.json
        custom_version: "1.{svn_revision}"
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/cms/api/cmd/mdb-cms-instance-api/**
    cms-instance-autoduty-deb:
      title: Build cms instance autoduty deb
      flow: teamcity-deb-arc
      flow-vars:
        pkg_json: cloud/mdb/cms/api/cmd/mdb-cms-instance-autoduty/pkg.json
        custom_version: "1.{svn_revision}"
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/cms/api/cmd/mdb-cms-instance-autoduty/**
    cms-wall-e-deb:
      title: Build cms wall-e deb
      flow: teamcity-deb-arc
      flow-vars:
        pkg_json: cloud/mdb/cms/pkg.json
        custom_version: "2.{svn_revision}"
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/cms/pkg.json
            - cloud/mdb/cms/api/cmd/mdb-cms-api/**
            - cloud/mdb/cms/api/cmd/mdb-cms-autoduty/**
    cmsdb-migrations-docker:
      title: Build cmsdb-migrations docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_CmsdbMigrationsDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/cms/db/**
            - cloud/mdb/datacloud/docker/cmsdb-migrations/**
    config-salt-baremetal-deb:
      title: Build config-salt-baremetal deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbConfigSaltBaremetal
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-config-salt-baremetal/**
    config-salt-deb:
      title: Build config-salt deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbConfigSalt
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-config-salt/**
    config-salt-v3-deb:
      title: Build config-salt-v3 deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbConfigSaltV3
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-config-salt/**
            - cloud/mdb/mdb-config-salt-v3/**
    dataproc-manager-docker:
      title: Build dataproc-manager docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_DataprocManagerDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/dataproc-manager/**
            - cloud/mdb/bootstrap/docker/dataproc-manager/**
    dataproc-ui-proxy-deb:
      title: Build dataproc-ui-proxy deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_DataprocUiProxy
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/dataproc-ui-proxy/**
    dbaas-e2e-deb:
      title: Build dbaas-e2e deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_DbaasE2e
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/e2e-tests/**
    dbaas-worker-deb:
      title: Build dbaas-worker deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_DbaasWorker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/dbaas_worker/**
    dbaas-worker-docker:
      title: Build dbaas-worker docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_DbaasWorkerDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/dbaas_worker/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/dbaas-worker/**
    deploy-agent-deb:
      title: Build deploy-agent deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbDeployAgent
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/deploy/agent/**
    deploy-api-deb:
      title: Build deploy-api deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbDeployApi
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/deploy/api/**
    deploy-saltkeys-deb:
      title: Build deploy-saltkeys deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbDeploySaltkeys
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/deploy/saltkeys/**
    deploy-api-docker:
      title: Build deploy-api docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_DeployApiDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/deploy/api/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/deploy-api/**
    deploy-cleaner-docker:
      title: Build deploy-cleaner docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_DeployCleanerDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/deploy/api/cmd/mdb-deploy-cleaner/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/deploy-cleaner/**
    deploy-salt-docker:
      title: Build deploy-salt docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_DeploySaltDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/deploy/saltkeys/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/deploy-salt/**
            - cloud/mdb/salt/salt/components/deploy/salt-master/**
    deploydb-migrations-docker:
      title: Build deploydb-migrations docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_DeploydbMigrationsDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/deploydb/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/deploydb-migrations/**
    disklock-deb:
      title: Build mdb-disklock deb
      flow: teamcity-deb-arc
      flow-vars:
        pkg_json: cloud/mdb/mdb-disklock/pkg.json
        custom_version: "1.{svn_revision}"
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-disklock/**
    dns-deb:
      title: Build dns deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbDns
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-dns/**
    dns-docker:
      title: Build dns docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_DnsDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-dns/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/dns/**
    e2e-test-docker:
      title: Build e2e-test docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_E2eTestsDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/e2e-tests/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/e2e-tests/**
    event-producer-deb:
      title: Build event-producer deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbEventProducer
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-event-producer/**
    go-api-deb:
      title: Build go-int-api deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbInternalApiSvn
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-internal-api/**
    grpc-ping-deb:
      title: Build grpc-ping deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_GrpcPing
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/grpc-ping/**
    grpcurl-deb:
      title: Build grpcurl deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_Grpcurl
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - discovery: any
          abs-paths:
            - cloud/mdb/tools/grpcurl/**
            - vendor/github.com/fullstorydev/grpcurl/cmd/grpcurl
    health-deb:
      title: Build health deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbHealth
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-health/**
    health-docker:
      title: Build health docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_HealthDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-health/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/health/**
    iam-token-reissuer-deb:
      title: Build iam-token-reissuer deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_IamTokenReissuer
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/tools/iam_token_reissuer/**
    image-releaser-deb:
      title: Build image-releaser deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbImageReleaser
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/image-releaser/**
    internal-api-docker:
      title: Build internal-api docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_InternalApiDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-internal-api/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/internal-api/**
    jaeger-agent-deb:
      title: Build jaeger-agent deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_JaegerAgent
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - discovery: any
          abs-paths:
            - cloud/mdb/tools/jaeger-agent/**
            - vendor/github.com/jaegertracing/jaeger/cmd/agent
    kafka-agent-deb:
      title: Build kafka-agent deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_KafkaAgent
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/kafka_agent/**
    katan-deb:
      title: Build katan deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbKatan
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/katan/**
    katandb-migrations-docker:
      title: Build katandb-migrations docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_KatandbMigrationsDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/katan/db/**
            - cloud/mdb/datacloud/docker/katandb-migrations/**
    logs-api-docker:
      title: Build logs-api docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_LogsApiDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/logs-api/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/logs-api/**
    maintenance-deb:
      title: Build maintenance deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbMaintenance
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-maintenance/**
    maintenance-docker:
      title: Build maintenance docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_MaintenanceDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-maintenance/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/maintenance/**
    mdb-selfdns-client-plugins-mdb-porto-deb:
      title: Build mdb-selfdns-client-plugins-mdb-porto deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbSelfdnsClientPluginsMdbPorto
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-selfdns-client-plugins/cmd/mdb-porto/**
            - cloud/mdb/mdb-selfdns-client-plugins/internal/mdb-porto/**
    metadb-migrations-docker:
      title: Build metadb-migrations docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_MetadbMigrationsDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/dbaas_metadb/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/metadb-migrations/**
            - cloud/mdb/tools/vr_gen/**
            - cloud/mdb/tools/vr_gen2/**
    mlock-cli-deb:
      title: Build mlock-cli deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbMlockCli
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mlock/cmd/mdb-mlock-cli/**
    mlock-deb:
      title: Build mlock deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbMlock
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mlock/cmd/mdb-mlock/**
    mlock-docker:
      title: Build mlock docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_MdbMlockDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mlock/cmd/mdb-mlock/**
            - cloud/mdb/mlock/cmd/mdb-mlock-cli/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/mlock/**
    mlockdb-migrations-docker:
      title: Build mlockdb-migrations docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_MlockMigrationsDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mlockdb/**
            - cloud/mdb/datacloud/docker/mlockdb-migrations/**
    pg-change-owner:
      title: Build pg_change_owner deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_PgChangeOwner
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/tools/pg_change_owner/**
    pillar-config-docker:
      title: Build pillar-config docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_PillarConfigDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-pillar-config/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/pillar-config/**
    pillar-secrets-docker:
      title: Build pillar-secrets docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_PillarSecretsDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-pillar-secrets/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/pillar-secrets/**
    porto-agent-deb:
      title: Build porto-agent deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbPortoAgent
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-porto-agent/**
    py-api-deb:
      title: Build py-int-api deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_DbaasInternalApi
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/dbaas-internal-api-image/**
    py-api-docker:
      title: Build py-int-api docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_PyApiDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/dbaas-internal-api-image/**
    release-promote-docker:
      title: Build release-promote docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_ReleasePromoteDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/release/cmd/**
            - cloud/mdb/datacloud/docker/relese-promote/**
    mdb-reaper-docker:
      title: Build mdb-reaper docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_MdbReaperDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-reaper/cmd/**
            - cloud/mdb/datacloud/docker/reaper/**
    retry-deb:
      title: Build retry deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_Retry
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/tools/retry/**
    salt-sync-deb:
      title: Build salt-sync deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbSaltSync
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-salt-sync/**
    search-producer-deb:
      title: Build search-producer deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbSearchProducer
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-search-producer/**
    secrets-deb:
      title: Build secrets deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_MdbSecrets
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-secrets/**
    secrets-api-docker:
      title: Build mdb-secrets docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_SecretsApiDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-secrets/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/secrets-api/**
    secretsdb-migrations-docker:
      title: Build secretsdb migrations docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_SecretsdbMigrationsDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/secretsdb/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/secretsdb-migrations/**
    ui-docker:
      title: Build ui docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_UiDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/ui/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/ui/**
    backstage-docker:
      title: Build backstage docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_BackstageDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/datacloud/docker/backstage/**
            - cloud/mdb/backstage/**
    backstagedb-migrations-docker:
      title: Build backstagedb-migrations docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_BackstagedbMigrationsDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/backstagedb-migrations/**
    temporaldb-migrations-docker:
      title: Build temporaldb-migrations docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_TemporalMigrationsDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
            - doublecloud_sre
          discovery: any
          abs-paths:
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/temporaldb-migrations/**
    vpc-api-docker:
      title: Build vpc-api docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_VpcApiDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-vpc/cmd/mdb-vpc-api/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/vpc-api/**
    vpc-worker-docker:
      title: Build vpc-worker docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_VpcWorkerDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-vpc/cmd/mdb-vpc-worker/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/vpc-worker/**
    vpcdb-migrations-docker:
      title: Build vpcdb-migrations docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_VpcdbMigrationsDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/mdb-vpc/db/**
            - cloud/mdb/datacloud/docker/base/**
            - cloud/mdb/datacloud/docker/vpcdb-migrations/**
    yazk-flock-deb:
      title: Build yazk-flock deb
      flow: build-deb
      flow-vars:
        build_type_id: MDB_YazkFlock
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/yazk-flock/**
    backup-worker-docker:
      title: Build backup-worker docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_BackupWorkerDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/backup/**
            - cloud/mdb/datacloud/docker/backup-worker/**
    backup-scheduler-docker:
      title: Build backup-scheduler docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_BackupSchedulerDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/backup/**
            - cloud/mdb/datacloud/docker/backup-scheduler/**
    backup-cli-docker:
      title: Build backup-cli docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_BackupCliDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/backup/**
            - cloud/mdb/datacloud/docker/backup-cli/**
    image-releaser-docker:
      title: Build image-releaser docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_ImageReleaserDocker
      auto: true
      stages:
        - id: start-flow
          displace: {on-status: [FAILURE]}
        - id: build
          displace: {on-status: [FAILURE]}
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/image-releaser/**
            - cloud/mdb/bootstrap/docker/image-releaser/**
    billing-sender-docker:
      title: Build billing-sender docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_BillingSenderDocker
      auto: true
      stages:
        - id: start-flow
          displace: { on-status: [ FAILURE ] }
        - id: build
          displace: { on-status: [ FAILURE ] }
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/billing/internal/**
            - cloud/mdb/billing/sender/**
            - cloud/mdb/datacloud/docker/billing-sender/**
    billingdb-migrations-docker:
      title: Build billingdb-migrations docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_BillingDBMigrationsDocker
      auto: true
      stages:
        - id: start-flow
          displace: { on-status: [ FAILURE ] }
        - id: build
          displace: { on-status: [ FAILURE ] }
      filters:
        - author-services:
          - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/billing/db/**
            - cloud/mdb/datacloud/docker/billingdb-migrations/**
    bookkeeper-docker:
      title: Build bookkeeper docker
      flow: teamcity-build
      flow-vars:
        build_type_id: MDB_BookkeeperDocker
      auto: true
      stages:
        - id: start-flow
          displace: { on-status: [ FAILURE ] }
        - id: build
          displace: { on-status: [ FAILURE ] }
      filters:
        - author-services:
            - dbaas
          discovery: any
          abs-paths:
            - cloud/mdb/billing/bookkeeper/**
            - cloud/mdb/billing/internal/**
            - cloud/mdb/datacloud/docker/bookkeeper/**
