// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/api/grpc (interfaces: StreamClusterLogsRequest)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
)

// MockStreamClusterLogsRequest is a mock of StreamClusterLogsRequest interface.
type MockStreamClusterLogsRequest struct {
	ctrl     *gomock.Controller
	recorder *MockStreamClusterLogsRequestMockRecorder
}

// MockStreamClusterLogsRequestMockRecorder is the mock recorder for MockStreamClusterLogsRequest.
type MockStreamClusterLogsRequestMockRecorder struct {
	mock *MockStreamClusterLogsRequest
}

// NewMockStreamClusterLogsRequest creates a new mock instance.
func NewMockStreamClusterLogsRequest(ctrl *gomock.Controller) *MockStreamClusterLogsRequest {
	mock := &MockStreamClusterLogsRequest{ctrl: ctrl}
	mock.recorder = &MockStreamClusterLogsRequestMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStreamClusterLogsRequest) EXPECT() *MockStreamClusterLogsRequestMockRecorder {
	return m.recorder
}

// GetClusterId mocks base method.
func (m *MockStreamClusterLogsRequest) GetClusterId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterId")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetClusterId indicates an expected call of GetClusterId.
func (mr *MockStreamClusterLogsRequestMockRecorder) GetClusterId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterId", reflect.TypeOf((*MockStreamClusterLogsRequest)(nil).GetClusterId))
}

// GetColumnFilter mocks base method.
func (m *MockStreamClusterLogsRequest) GetColumnFilter() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetColumnFilter")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetColumnFilter indicates an expected call of GetColumnFilter.
func (mr *MockStreamClusterLogsRequestMockRecorder) GetColumnFilter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetColumnFilter", reflect.TypeOf((*MockStreamClusterLogsRequest)(nil).GetColumnFilter))
}

// GetFilter mocks base method.
func (m *MockStreamClusterLogsRequest) GetFilter() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFilter")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFilter indicates an expected call of GetFilter.
func (mr *MockStreamClusterLogsRequestMockRecorder) GetFilter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFilter", reflect.TypeOf((*MockStreamClusterLogsRequest)(nil).GetFilter))
}

// GetFromTime mocks base method.
func (m *MockStreamClusterLogsRequest) GetFromTime() *timestamppb.Timestamp {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFromTime")
	ret0, _ := ret[0].(*timestamppb.Timestamp)
	return ret0
}

// GetFromTime indicates an expected call of GetFromTime.
func (mr *MockStreamClusterLogsRequestMockRecorder) GetFromTime() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFromTime", reflect.TypeOf((*MockStreamClusterLogsRequest)(nil).GetFromTime))
}

// GetRecordToken mocks base method.
func (m *MockStreamClusterLogsRequest) GetRecordToken() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRecordToken")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRecordToken indicates an expected call of GetRecordToken.
func (mr *MockStreamClusterLogsRequestMockRecorder) GetRecordToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRecordToken", reflect.TypeOf((*MockStreamClusterLogsRequest)(nil).GetRecordToken))
}

// GetToTime mocks base method.
func (m *MockStreamClusterLogsRequest) GetToTime() *timestamppb.Timestamp {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToTime")
	ret0, _ := ret[0].(*timestamppb.Timestamp)
	return ret0
}

// GetToTime indicates an expected call of GetToTime.
func (mr *MockStreamClusterLogsRequestMockRecorder) GetToTime() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToTime", reflect.TypeOf((*MockStreamClusterLogsRequest)(nil).GetToTime))
}
