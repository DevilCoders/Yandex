// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/logic/internal/search (interfaces: Docs)

// Package mocks is a generated GoMock package.
package mocks

import (
	search "a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/logic/internal/search"
	operations "a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/models/operations"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDocs is a mock of Docs interface.
type MockDocs struct {
	ctrl     *gomock.Controller
	recorder *MockDocsMockRecorder
}

// MockDocsMockRecorder is the mock recorder for MockDocs.
type MockDocsMockRecorder struct {
	mock *MockDocs
}

// NewMockDocs creates a new mock instance.
func NewMockDocs(ctrl *gomock.Controller) *MockDocs {
	mock := &MockDocs{ctrl: ctrl}
	mock.recorder = &MockDocsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDocs) EXPECT() *MockDocsMockRecorder {
	return m.recorder
}

// StoreDoc mocks base method.
func (m *MockDocs) StoreDoc(arg0 context.Context, arg1, arg2, arg3 string, arg4 operations.Operation, arg5 search.AttributesExtractor) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreDoc", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreDoc indicates an expected call of StoreDoc.
func (mr *MockDocsMockRecorder) StoreDoc(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreDoc", reflect.TypeOf((*MockDocs)(nil).StoreDoc), arg0, arg1, arg2, arg3, arg4, arg5)
}

// StoreDocDelete mocks base method.
func (m *MockDocs) StoreDocDelete(arg0 context.Context, arg1, arg2, arg3 string, arg4 operations.Operation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreDocDelete", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreDocDelete indicates an expected call of StoreDocDelete.
func (mr *MockDocsMockRecorder) StoreDocDelete(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreDocDelete", reflect.TypeOf((*MockDocs)(nil).StoreDocDelete), arg0, arg1, arg2, arg3, arg4)
}

// StoreDocReindex mocks base method.
func (m *MockDocs) StoreDocReindex(arg0 context.Context, arg1, arg2 string, arg3 search.AttributesExtractor) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreDocReindex", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreDocReindex indicates an expected call of StoreDocReindex.
func (mr *MockDocsMockRecorder) StoreDocReindex(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreDocReindex", reflect.TypeOf((*MockDocs)(nil).StoreDocReindex), arg0, arg1, arg2, arg3)
}
