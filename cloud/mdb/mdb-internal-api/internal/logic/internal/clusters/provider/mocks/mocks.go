// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/logic/internal/clusters/provider (interfaces: ClusterSecrets)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockClusterSecrets is a mock of ClusterSecrets interface.
type MockClusterSecrets struct {
	ctrl     *gomock.Controller
	recorder *MockClusterSecretsMockRecorder
}

// MockClusterSecretsMockRecorder is the mock recorder for MockClusterSecrets.
type MockClusterSecretsMockRecorder struct {
	mock *MockClusterSecrets
}

// NewMockClusterSecrets creates a new mock instance.
func NewMockClusterSecrets(ctrl *gomock.Controller) *MockClusterSecrets {
	mock := &MockClusterSecrets{ctrl: ctrl}
	mock.recorder = &MockClusterSecretsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterSecrets) EXPECT() *MockClusterSecretsMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockClusterSecrets) Generate() ([]byte, []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Generate indicates an expected call of Generate.
func (mr *MockClusterSecretsMockRecorder) Generate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockClusterSecrets)(nil).Generate))
}
