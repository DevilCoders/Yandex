// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/logic/airflow (interfaces: Airflow)

// Package mocks is a generated GoMock package.
package mocks

import (
	airflow "a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/logic/airflow"
	afmodels "a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/logic/airflow/afmodels"
	operations "a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/models/operations"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAirflow is a mock of Airflow interface.
type MockAirflow struct {
	ctrl     *gomock.Controller
	recorder *MockAirflowMockRecorder
}

// MockAirflowMockRecorder is the mock recorder for MockAirflow.
type MockAirflowMockRecorder struct {
	mock *MockAirflow
}

// NewMockAirflow creates a new mock instance.
func NewMockAirflow(ctrl *gomock.Controller) *MockAirflow {
	mock := &MockAirflow{ctrl: ctrl}
	mock.recorder = &MockAirflowMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAirflow) EXPECT() *MockAirflowMockRecorder {
	return m.recorder
}

// CreateMDBCluster mocks base method.
func (m *MockAirflow) CreateMDBCluster(arg0 context.Context, arg1 airflow.CreateMDBClusterArgs) (operations.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMDBCluster", arg0, arg1)
	ret0, _ := ret[0].(operations.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateMDBCluster indicates an expected call of CreateMDBCluster.
func (mr *MockAirflowMockRecorder) CreateMDBCluster(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMDBCluster", reflect.TypeOf((*MockAirflow)(nil).CreateMDBCluster), arg0, arg1)
}

// MDBCluster mocks base method.
func (m *MockAirflow) MDBCluster(arg0 context.Context, arg1 string) (afmodels.MDBCluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MDBCluster", arg0, arg1)
	ret0, _ := ret[0].(afmodels.MDBCluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MDBCluster indicates an expected call of MDBCluster.
func (mr *MockAirflowMockRecorder) MDBCluster(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MDBCluster", reflect.TypeOf((*MockAirflow)(nil).MDBCluster), arg0, arg1)
}
