// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/logic/metastore (interfaces: Metastore)

// Package mocks is a generated GoMock package.
package mocks

import (
	metastore "a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/logic/metastore"
	models "a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/logic/metastore/models"
	operations "a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/models/operations"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMetastore is a mock of Metastore interface.
type MockMetastore struct {
	ctrl     *gomock.Controller
	recorder *MockMetastoreMockRecorder
}

// MockMetastoreMockRecorder is the mock recorder for MockMetastore.
type MockMetastoreMockRecorder struct {
	mock *MockMetastore
}

// NewMockMetastore creates a new mock instance.
func NewMockMetastore(ctrl *gomock.Controller) *MockMetastore {
	mock := &MockMetastore{ctrl: ctrl}
	mock.recorder = &MockMetastoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetastore) EXPECT() *MockMetastoreMockRecorder {
	return m.recorder
}

// CreateMDBCluster mocks base method.
func (m *MockMetastore) CreateMDBCluster(arg0 context.Context, arg1 metastore.CreateMDBClusterArgs) (operations.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMDBCluster", arg0, arg1)
	ret0, _ := ret[0].(operations.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateMDBCluster indicates an expected call of CreateMDBCluster.
func (mr *MockMetastoreMockRecorder) CreateMDBCluster(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMDBCluster", reflect.TypeOf((*MockMetastore)(nil).CreateMDBCluster), arg0, arg1)
}

// DeleteCluster mocks base method.
func (m *MockMetastore) DeleteCluster(arg0 context.Context, arg1 string) (operations.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCluster", arg0, arg1)
	ret0, _ := ret[0].(operations.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteCluster indicates an expected call of DeleteCluster.
func (mr *MockMetastoreMockRecorder) DeleteCluster(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCluster", reflect.TypeOf((*MockMetastore)(nil).DeleteCluster), arg0, arg1)
}

// MDBCluster mocks base method.
func (m *MockMetastore) MDBCluster(arg0 context.Context, arg1 string) (models.MDBCluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MDBCluster", arg0, arg1)
	ret0, _ := ret[0].(models.MDBCluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MDBCluster indicates an expected call of MDBCluster.
func (mr *MockMetastoreMockRecorder) MDBCluster(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MDBCluster", reflect.TypeOf((*MockMetastore)(nil).MDBCluster), arg0, arg1)
}

// MDBClusters mocks base method.
func (m *MockMetastore) MDBClusters(arg0 context.Context, arg1 string, arg2, arg3 int64) ([]models.MDBCluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MDBClusters", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]models.MDBCluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MDBClusters indicates an expected call of MDBClusters.
func (mr *MockMetastoreMockRecorder) MDBClusters(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MDBClusters", reflect.TypeOf((*MockMetastore)(nil).MDBClusters), arg0, arg1, arg2, arg3)
}
