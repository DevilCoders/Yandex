// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/logic/mysql (interfaces: MySQL)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	compute "a.yandex-team.ru/cloud/mdb/internal/compute/compute"
	console "a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/models/console"
	gomock "github.com/golang/mock/gomock"
)

// MockMySQL is a mock of MySQL interface.
type MockMySQL struct {
	ctrl     *gomock.Controller
	recorder *MockMySQLMockRecorder
}

// MockMySQLMockRecorder is the mock recorder for MockMySQL.
type MockMySQLMockRecorder struct {
	mock *MockMySQL
}

// NewMockMySQL creates a new mock instance.
func NewMockMySQL(ctrl *gomock.Controller) *MockMySQL {
	mock := &MockMySQL{ctrl: ctrl}
	mock.recorder = &MockMySQLMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMySQL) EXPECT() *MockMySQLMockRecorder {
	return m.recorder
}

// GetDefaultVersions mocks base method.
func (m *MockMySQL) GetDefaultVersions(arg0 context.Context) ([]console.DefaultVersion, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDefaultVersions", arg0)
	ret0, _ := ret[0].([]console.DefaultVersion)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDefaultVersions indicates an expected call of GetDefaultVersions.
func (mr *MockMySQLMockRecorder) GetDefaultVersions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDefaultVersions", reflect.TypeOf((*MockMySQL)(nil).GetDefaultVersions), arg0)
}

// GetHostGroupType mocks base method.
func (m *MockMySQL) GetHostGroupType(arg0 context.Context, arg1 []string) (map[string]compute.HostGroupHostType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHostGroupType", arg0, arg1)
	ret0, _ := ret[0].(map[string]compute.HostGroupHostType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHostGroupType indicates an expected call of GetHostGroupType.
func (mr *MockMySQLMockRecorder) GetHostGroupType(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHostGroupType", reflect.TypeOf((*MockMySQL)(nil).GetHostGroupType), arg0, arg1)
}
