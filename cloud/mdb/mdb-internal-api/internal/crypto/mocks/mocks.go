// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/crypto (interfaces: Crypto)

// Package mocks is a generated GoMock package.
package mocks

import (
	secret "a.yandex-team.ru/cloud/mdb/internal/secret"
	pillars "a.yandex-team.ru/cloud/mdb/mdb-internal-api/internal/models/pillars"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCrypto is a mock of Crypto interface.
type MockCrypto struct {
	ctrl     *gomock.Controller
	recorder *MockCryptoMockRecorder
}

// MockCryptoMockRecorder is the mock recorder for MockCrypto.
type MockCryptoMockRecorder struct {
	mock *MockCrypto
}

// NewMockCrypto creates a new mock instance.
func NewMockCrypto(ctrl *gomock.Controller) *MockCrypto {
	mock := &MockCrypto{ctrl: ctrl}
	mock.recorder = &MockCryptoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCrypto) EXPECT() *MockCryptoMockRecorder {
	return m.recorder
}

// Encrypt mocks base method.
func (m *MockCrypto) Encrypt(arg0 []byte) (pillars.CryptoKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Encrypt", arg0)
	ret0, _ := ret[0].(pillars.CryptoKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Encrypt indicates an expected call of Encrypt.
func (mr *MockCryptoMockRecorder) Encrypt(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Encrypt", reflect.TypeOf((*MockCrypto)(nil).Encrypt), arg0)
}

// GenerateRandomString mocks base method.
func (m *MockCrypto) GenerateRandomString(arg0 int, arg1 []int32) (secret.String, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateRandomString", arg0, arg1)
	ret0, _ := ret[0].(secret.String)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateRandomString indicates an expected call of GenerateRandomString.
func (mr *MockCryptoMockRecorder) GenerateRandomString(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRandomString", reflect.TypeOf((*MockCrypto)(nil).GenerateRandomString), arg0, arg1)
}
