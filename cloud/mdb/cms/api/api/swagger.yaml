swagger: "2.0"
info:
  description: "Provides API for management MDB hosts with Wall-e."
  version: "1.0.0"
  title: "MDB Wall-e CMS API"
  contact:
    email: "mdb@yandex-team.ru"
  license:
    name: "Proprietary"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /ping:
    get:
      tags:
        - stability
      summary: "Check if instance available"
      operationId: "Ping"
      responses:
        200:
          description: "Instance can serve requests"
        default:
          $ref: "#/responses/Error"
  /walle/v1.4/tasks:
    parameters:
      - $ref: '#/parameters/RequestIdHeader'
      - $ref: '#/parameters/Authorization'
    post:
      tags:
        - tasks
      summary: "Register request to manage nodes"
      operationId: "RegisterRequestToManageNodes"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ManagementRequest'
        - name: dry_run
          in: query
          required: false
          type: boolean
      responses:
        200:
          description: "Get status of a request"
          schema:
            $ref: "#/definitions/ManagementRequestStatusResponse"
        default:
          $ref: "#/responses/Error"
    get:
      tags:
        - tasks
      operationId: "ListUnhandledManagementRequests"
      summary: "List of management requests awaiting to be handled. If none found - 404."
      responses:
        200:
          description: "List requests"
          schema:
            $ref: "#/definitions/TasksResultsArray"
        default:
          $ref: "#/responses/Error"
  /walle/v1.4/tasks/{task_id}:
    parameters:
      - $ref: '#/parameters/RequestIdHeader'
      - $ref: '#/parameters/TaskId'
      - $ref: '#/parameters/Authorization'
    get:
      tags:
        - tasks
      summary: "Return status of a specific request"
      operationId: "GetRequestStatus"
      responses:
        200:
          description: "Request status"
          schema:
            $ref: "#/definitions/ManagementRequestStatusResponse"
        default:
          $ref: "#/responses/Error"
    delete:
      tags:
        - tasks
      summary: "Delete specific request"
      operationId: "DeleteTask"
      responses:
        204:
          description: "Deleted successfully"
        default:
          $ref: "#/responses/Error"
  /monrun/v1/send_events:
    get:
      tags:
        - monrun
      summary: "Send events to monitoring, check it was done successfully"
      operationId: "SendEvents"
      responses:
        200:
          description: "Events were sent successfully"
        default:
          $ref: "#/responses/Error"
parameters:
  RequestIdHeader:
    name: X-Request-Id
    in: header
    description: Unique request ID (must be generated for each separate request, even retries)
    type: string
  Authorization:
    name: X-Ya-Service-Ticket
    in: header
    description: TVM2 ticket.
    type: string
  TaskId:
    name: task_id
    in: path
    required: true
    description: Id of task
    type: string
responses:
  Error:
    description: "Error"
    schema:
      $ref: "#/definitions/Error"
definitions:
  Fqdn:
    type: string
    minLength: 1
    description: Full qualified domain names to process the action on
  ManagementRequestId:
    type: string
    minLength: 1
    maxLength: 255
    description: Id of management request
  TaskStatus:
    type: string
    enum:
      - ok
      - in-process
      - rejected
    description: Current status of request in CMS
  ManagementRequest:
    type: object
    properties:
      id:
        $ref: "#/definitions/ManagementRequestId"
      type:
        type: string
        enum:
          - manual
          - automated
        description: Task type
      issuer:
        type: string
        minLength: 1
        description: Action issuer, a login or anything like wall-e for example
      action:
        type: string
        enum:
          - prepare
          - deactivate
          - power-off
          - reboot
          - profile
          - redeploy
          - repair-link
          - change-disk
          - temporary-unreachable
        description: Requested action
      hosts:
        type: array
        minItems: 1
        items:
          $ref: "#/definitions/Fqdn"
        description: Hosts to process the action on
      comment:
        type: string
        description: optional comment from task's author
      failure_type:
        type: string
        description: optional failure type
      extra:
        type: object
        description: additional task parameters
      scenario_info:
        type: object
        description: scenario information https://st.yandex-team.ru/WALLE-4194#617fe59a8a0a1c07b57bd687
        properties:
          scenario_id:
            type: integer
          scenario_type:
            type: string
            enum:
              - itdc-maintenance
              - noc-hard
              - noc-soft
              - etc
        additionalProperties: true
    required:
      - id
      - type
      - issuer
      - action
      - hosts
    additionalProperties: true
  ManagementRequestStatusResponse:
    type: object
    properties:
      id:
        $ref: "#/definitions/ManagementRequestId"
      hosts:
        type: array
        minItems: 1
        items:
          $ref: "#/definitions/Fqdn"
        description: Hosts to process the action on, must match value from the request
      status:
        $ref: "#/definitions/TaskStatus"
      message:
        type: string
        description: Message for the current status
    required:
      - id
      - hosts
      - status
  TasksResultsArray:
    type: object
    properties:
      result:
        type: array
        items:
          $ref: "#/definitions/ManagementRequestStatusResponse"
  Error:
    type: object
    properties:
      message:
        description: "Error description"
        type: string
