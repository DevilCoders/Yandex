// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Provides API for management MDB hosts with Wall-e.",
    "title": "MDB Wall-e CMS API",
    "contact": {
      "email": "mdb@yandex-team.ru"
    },
    "license": {
      "name": "Proprietary"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/monrun/v1/send_events": {
      "get": {
        "tags": [
          "monrun"
        ],
        "summary": "Send events to monitoring, check it was done successfully",
        "operationId": "SendEvents",
        "responses": {
          "200": {
            "description": "Events were sent successfully"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "stability"
        ],
        "summary": "Check if instance available",
        "operationId": "Ping",
        "responses": {
          "200": {
            "description": "Instance can serve requests"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/walle/v1.4/tasks": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "List of management requests awaiting to be handled. If none found - 404.",
        "operationId": "ListUnhandledManagementRequests",
        "responses": {
          "200": {
            "description": "List requests",
            "schema": {
              "$ref": "#/definitions/TasksResultsArray"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Register request to manage nodes",
        "operationId": "RegisterRequestToManageNodes",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagementRequest"
            }
          },
          {
            "type": "boolean",
            "name": "dry_run",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get status of a request",
            "schema": {
              "$ref": "#/definitions/ManagementRequestStatusResponse"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/RequestIdHeader"
        },
        {
          "$ref": "#/parameters/Authorization"
        }
      ]
    },
    "/walle/v1.4/tasks/{task_id}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Return status of a specific request",
        "operationId": "GetRequestStatus",
        "responses": {
          "200": {
            "description": "Request status",
            "schema": {
              "$ref": "#/definitions/ManagementRequestStatusResponse"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Delete specific request",
        "operationId": "DeleteTask",
        "responses": {
          "204": {
            "description": "Deleted successfully"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/RequestIdHeader"
        },
        {
          "$ref": "#/parameters/TaskId"
        },
        {
          "$ref": "#/parameters/Authorization"
        }
      ]
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Error description",
          "type": "string"
        }
      }
    },
    "Fqdn": {
      "description": "Full qualified domain names to process the action on",
      "type": "string",
      "minLength": 1
    },
    "ManagementRequest": {
      "type": "object",
      "required": [
        "id",
        "type",
        "issuer",
        "action",
        "hosts"
      ],
      "properties": {
        "action": {
          "description": "Requested action",
          "type": "string",
          "enum": [
            "prepare",
            "deactivate",
            "power-off",
            "reboot",
            "profile",
            "redeploy",
            "repair-link",
            "change-disk",
            "temporary-unreachable"
          ]
        },
        "comment": {
          "description": "optional comment from task's author",
          "type": "string"
        },
        "extra": {
          "description": "additional task parameters",
          "type": "object"
        },
        "failure_type": {
          "description": "optional failure type",
          "type": "string"
        },
        "hosts": {
          "description": "Hosts to process the action on",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Fqdn"
          }
        },
        "id": {
          "$ref": "#/definitions/ManagementRequestId"
        },
        "issuer": {
          "description": "Action issuer, a login or anything like wall-e for example",
          "type": "string",
          "minLength": 1
        },
        "scenario_info": {
          "description": "scenario information https://st.yandex-team.ru/WALLE-4194#617fe59a8a0a1c07b57bd687",
          "type": "object",
          "properties": {
            "scenario_id": {
              "type": "integer"
            },
            "scenario_type": {
              "type": "string",
              "enum": [
                "itdc-maintenance",
                "noc-hard",
                "noc-soft",
                "etc"
              ]
            }
          },
          "additionalProperties": true
        },
        "type": {
          "description": "Task type",
          "type": "string",
          "enum": [
            "manual",
            "automated"
          ]
        }
      },
      "additionalProperties": true
    },
    "ManagementRequestId": {
      "description": "Id of management request",
      "type": "string",
      "maxLength": 255,
      "minLength": 1
    },
    "ManagementRequestStatusResponse": {
      "type": "object",
      "required": [
        "id",
        "hosts",
        "status"
      ],
      "properties": {
        "hosts": {
          "description": "Hosts to process the action on, must match value from the request",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Fqdn"
          }
        },
        "id": {
          "$ref": "#/definitions/ManagementRequestId"
        },
        "message": {
          "description": "Message for the current status",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/TaskStatus"
        }
      }
    },
    "TaskStatus": {
      "description": "Current status of request in CMS",
      "type": "string",
      "enum": [
        "ok",
        "in-process",
        "rejected"
      ]
    },
    "TasksResultsArray": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagementRequestStatusResponse"
          }
        }
      }
    }
  },
  "parameters": {
    "Authorization": {
      "type": "string",
      "description": "TVM2 ticket.",
      "name": "X-Ya-Service-Ticket",
      "in": "header"
    },
    "RequestIdHeader": {
      "type": "string",
      "description": "Unique request ID (must be generated for each separate request, even retries)",
      "name": "X-Request-Id",
      "in": "header"
    },
    "TaskId": {
      "type": "string",
      "description": "Id of task",
      "name": "task_id",
      "in": "path",
      "required": true
    }
  },
  "responses": {
    "Error": {
      "description": "Error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Provides API for management MDB hosts with Wall-e.",
    "title": "MDB Wall-e CMS API",
    "contact": {
      "email": "mdb@yandex-team.ru"
    },
    "license": {
      "name": "Proprietary"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/monrun/v1/send_events": {
      "get": {
        "tags": [
          "monrun"
        ],
        "summary": "Send events to monitoring, check it was done successfully",
        "operationId": "SendEvents",
        "responses": {
          "200": {
            "description": "Events were sent successfully"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "stability"
        ],
        "summary": "Check if instance available",
        "operationId": "Ping",
        "responses": {
          "200": {
            "description": "Instance can serve requests"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/walle/v1.4/tasks": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "List of management requests awaiting to be handled. If none found - 404.",
        "operationId": "ListUnhandledManagementRequests",
        "responses": {
          "200": {
            "description": "List requests",
            "schema": {
              "$ref": "#/definitions/TasksResultsArray"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Register request to manage nodes",
        "operationId": "RegisterRequestToManageNodes",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagementRequest"
            }
          },
          {
            "type": "boolean",
            "name": "dry_run",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get status of a request",
            "schema": {
              "$ref": "#/definitions/ManagementRequestStatusResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Unique request ID (must be generated for each separate request, even retries)",
          "name": "X-Request-Id",
          "in": "header"
        },
        {
          "type": "string",
          "description": "TVM2 ticket.",
          "name": "X-Ya-Service-Ticket",
          "in": "header"
        }
      ]
    },
    "/walle/v1.4/tasks/{task_id}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Return status of a specific request",
        "operationId": "GetRequestStatus",
        "responses": {
          "200": {
            "description": "Request status",
            "schema": {
              "$ref": "#/definitions/ManagementRequestStatusResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Delete specific request",
        "operationId": "DeleteTask",
        "responses": {
          "204": {
            "description": "Deleted successfully"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Unique request ID (must be generated for each separate request, even retries)",
          "name": "X-Request-Id",
          "in": "header"
        },
        {
          "type": "string",
          "description": "Id of task",
          "name": "task_id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "TVM2 ticket.",
          "name": "X-Ya-Service-Ticket",
          "in": "header"
        }
      ]
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Error description",
          "type": "string"
        }
      }
    },
    "Fqdn": {
      "description": "Full qualified domain names to process the action on",
      "type": "string",
      "minLength": 1
    },
    "ManagementRequest": {
      "type": "object",
      "required": [
        "id",
        "type",
        "issuer",
        "action",
        "hosts"
      ],
      "properties": {
        "action": {
          "description": "Requested action",
          "type": "string",
          "enum": [
            "prepare",
            "deactivate",
            "power-off",
            "reboot",
            "profile",
            "redeploy",
            "repair-link",
            "change-disk",
            "temporary-unreachable"
          ]
        },
        "comment": {
          "description": "optional comment from task's author",
          "type": "string"
        },
        "extra": {
          "description": "additional task parameters",
          "type": "object"
        },
        "failure_type": {
          "description": "optional failure type",
          "type": "string"
        },
        "hosts": {
          "description": "Hosts to process the action on",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Fqdn"
          }
        },
        "id": {
          "$ref": "#/definitions/ManagementRequestId"
        },
        "issuer": {
          "description": "Action issuer, a login or anything like wall-e for example",
          "type": "string",
          "minLength": 1
        },
        "scenario_info": {
          "description": "scenario information https://st.yandex-team.ru/WALLE-4194#617fe59a8a0a1c07b57bd687",
          "type": "object",
          "properties": {
            "scenario_id": {
              "type": "integer"
            },
            "scenario_type": {
              "type": "string",
              "enum": [
                "itdc-maintenance",
                "noc-hard",
                "noc-soft",
                "etc"
              ]
            }
          },
          "additionalProperties": true
        },
        "type": {
          "description": "Task type",
          "type": "string",
          "enum": [
            "manual",
            "automated"
          ]
        }
      },
      "additionalProperties": true
    },
    "ManagementRequestId": {
      "description": "Id of management request",
      "type": "string",
      "maxLength": 255,
      "minLength": 1
    },
    "ManagementRequestScenarioInfo": {
      "description": "scenario information https://st.yandex-team.ru/WALLE-4194#617fe59a8a0a1c07b57bd687",
      "type": "object",
      "properties": {
        "scenario_id": {
          "type": "integer"
        },
        "scenario_type": {
          "type": "string",
          "enum": [
            "itdc-maintenance",
            "noc-hard",
            "noc-soft",
            "etc"
          ]
        }
      },
      "additionalProperties": true
    },
    "ManagementRequestStatusResponse": {
      "type": "object",
      "required": [
        "id",
        "hosts",
        "status"
      ],
      "properties": {
        "hosts": {
          "description": "Hosts to process the action on, must match value from the request",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Fqdn"
          }
        },
        "id": {
          "$ref": "#/definitions/ManagementRequestId"
        },
        "message": {
          "description": "Message for the current status",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/TaskStatus"
        }
      }
    },
    "TaskStatus": {
      "description": "Current status of request in CMS",
      "type": "string",
      "enum": [
        "ok",
        "in-process",
        "rejected"
      ]
    },
    "TasksResultsArray": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagementRequestStatusResponse"
          }
        }
      }
    }
  },
  "parameters": {
    "Authorization": {
      "type": "string",
      "description": "TVM2 ticket.",
      "name": "X-Ya-Service-Ticket",
      "in": "header"
    },
    "RequestIdHeader": {
      "type": "string",
      "description": "Unique request ID (must be generated for each separate request, even retries)",
      "name": "X-Request-Id",
      "in": "header"
    },
    "TaskId": {
      "type": "string",
      "description": "Id of task",
      "name": "task_id",
      "in": "path",
      "required": true
    }
  },
  "responses": {
    "Error": {
      "description": "Error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
}
