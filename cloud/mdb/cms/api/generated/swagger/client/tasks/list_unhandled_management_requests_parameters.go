// Code generated by go-swagger; DO NOT EDIT.

package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListUnhandledManagementRequestsParams creates a new ListUnhandledManagementRequestsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListUnhandledManagementRequestsParams() *ListUnhandledManagementRequestsParams {
	return &ListUnhandledManagementRequestsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListUnhandledManagementRequestsParamsWithTimeout creates a new ListUnhandledManagementRequestsParams object
// with the ability to set a timeout on a request.
func NewListUnhandledManagementRequestsParamsWithTimeout(timeout time.Duration) *ListUnhandledManagementRequestsParams {
	return &ListUnhandledManagementRequestsParams{
		timeout: timeout,
	}
}

// NewListUnhandledManagementRequestsParamsWithContext creates a new ListUnhandledManagementRequestsParams object
// with the ability to set a context for a request.
func NewListUnhandledManagementRequestsParamsWithContext(ctx context.Context) *ListUnhandledManagementRequestsParams {
	return &ListUnhandledManagementRequestsParams{
		Context: ctx,
	}
}

// NewListUnhandledManagementRequestsParamsWithHTTPClient creates a new ListUnhandledManagementRequestsParams object
// with the ability to set a custom HTTPClient for a request.
func NewListUnhandledManagementRequestsParamsWithHTTPClient(client *http.Client) *ListUnhandledManagementRequestsParams {
	return &ListUnhandledManagementRequestsParams{
		HTTPClient: client,
	}
}

/* ListUnhandledManagementRequestsParams contains all the parameters to send to the API endpoint
   for the list unhandled management requests operation.

   Typically these are written to a http.Request.
*/
type ListUnhandledManagementRequestsParams struct {

	/* XRequestID.

	   Unique request ID (must be generated for each separate request, even retries)
	*/
	XRequestID *string

	/* XYaServiceTicket.

	   TVM2 ticket.
	*/
	XYaServiceTicket *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list unhandled management requests params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListUnhandledManagementRequestsParams) WithDefaults() *ListUnhandledManagementRequestsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list unhandled management requests params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListUnhandledManagementRequestsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list unhandled management requests params
func (o *ListUnhandledManagementRequestsParams) WithTimeout(timeout time.Duration) *ListUnhandledManagementRequestsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list unhandled management requests params
func (o *ListUnhandledManagementRequestsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list unhandled management requests params
func (o *ListUnhandledManagementRequestsParams) WithContext(ctx context.Context) *ListUnhandledManagementRequestsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list unhandled management requests params
func (o *ListUnhandledManagementRequestsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list unhandled management requests params
func (o *ListUnhandledManagementRequestsParams) WithHTTPClient(client *http.Client) *ListUnhandledManagementRequestsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list unhandled management requests params
func (o *ListUnhandledManagementRequestsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXRequestID adds the xRequestID to the list unhandled management requests params
func (o *ListUnhandledManagementRequestsParams) WithXRequestID(xRequestID *string) *ListUnhandledManagementRequestsParams {
	o.SetXRequestID(xRequestID)
	return o
}

// SetXRequestID adds the xRequestId to the list unhandled management requests params
func (o *ListUnhandledManagementRequestsParams) SetXRequestID(xRequestID *string) {
	o.XRequestID = xRequestID
}

// WithXYaServiceTicket adds the xYaServiceTicket to the list unhandled management requests params
func (o *ListUnhandledManagementRequestsParams) WithXYaServiceTicket(xYaServiceTicket *string) *ListUnhandledManagementRequestsParams {
	o.SetXYaServiceTicket(xYaServiceTicket)
	return o
}

// SetXYaServiceTicket adds the xYaServiceTicket to the list unhandled management requests params
func (o *ListUnhandledManagementRequestsParams) SetXYaServiceTicket(xYaServiceTicket *string) {
	o.XYaServiceTicket = xYaServiceTicket
}

// WriteToRequest writes these params to a swagger request
func (o *ListUnhandledManagementRequestsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.XRequestID != nil {

		// header param X-Request-Id
		if err := r.SetHeaderParam("X-Request-Id", *o.XRequestID); err != nil {
			return err
		}
	}

	if o.XYaServiceTicket != nil {

		// header param X-Ya-Service-Ticket
		if err := r.SetHeaderParam("X-Ya-Service-Ticket", *o.XYaServiceTicket); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
