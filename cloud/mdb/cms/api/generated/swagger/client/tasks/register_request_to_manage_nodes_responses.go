// Code generated by go-swagger; DO NOT EDIT.

package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/cms/api/generated/swagger/models"
)

// RegisterRequestToManageNodesReader is a Reader for the RegisterRequestToManageNodes structure.
type RegisterRequestToManageNodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterRequestToManageNodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRegisterRequestToManageNodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewRegisterRequestToManageNodesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRegisterRequestToManageNodesOK creates a RegisterRequestToManageNodesOK with default headers values
func NewRegisterRequestToManageNodesOK() *RegisterRequestToManageNodesOK {
	return &RegisterRequestToManageNodesOK{}
}

/* RegisterRequestToManageNodesOK describes a response with status code 200, with default header values.

Get status of a request
*/
type RegisterRequestToManageNodesOK struct {
	Payload *models.ManagementRequestStatusResponse
}

func (o *RegisterRequestToManageNodesOK) Error() string {
	return fmt.Sprintf("[POST /walle/v1.4/tasks][%d] registerRequestToManageNodesOK  %+v", 200, o.Payload)
}
func (o *RegisterRequestToManageNodesOK) GetPayload() *models.ManagementRequestStatusResponse {
	return o.Payload
}

func (o *RegisterRequestToManageNodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ManagementRequestStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterRequestToManageNodesDefault creates a RegisterRequestToManageNodesDefault with default headers values
func NewRegisterRequestToManageNodesDefault(code int) *RegisterRequestToManageNodesDefault {
	return &RegisterRequestToManageNodesDefault{
		_statusCode: code,
	}
}

/* RegisterRequestToManageNodesDefault describes a response with status code -1, with default header values.

Error
*/
type RegisterRequestToManageNodesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the register request to manage nodes default response
func (o *RegisterRequestToManageNodesDefault) Code() int {
	return o._statusCode
}

func (o *RegisterRequestToManageNodesDefault) Error() string {
	return fmt.Sprintf("[POST /walle/v1.4/tasks][%d] RegisterRequestToManageNodes default  %+v", o._statusCode, o.Payload)
}
func (o *RegisterRequestToManageNodesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *RegisterRequestToManageNodesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
