// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/cms/api/internal/healthiness (interfaces: Healthiness)

// Package mocks is a generated GoMock package.
package mocks

import (
	healthiness "a.yandex-team.ru/cloud/mdb/cms/api/internal/healthiness"
	models "a.yandex-team.ru/cloud/mdb/cms/api/internal/models"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHealthiness is a mock of Healthiness interface.
type MockHealthiness struct {
	ctrl     *gomock.Controller
	recorder *MockHealthinessMockRecorder
}

// MockHealthinessMockRecorder is the mock recorder for MockHealthiness.
type MockHealthinessMockRecorder struct {
	mock *MockHealthiness
}

// NewMockHealthiness creates a new mock instance.
func NewMockHealthiness(ctrl *gomock.Controller) *MockHealthiness {
	mock := &MockHealthiness{ctrl: ctrl}
	mock.recorder = &MockHealthinessMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHealthiness) EXPECT() *MockHealthinessMockRecorder {
	return m.recorder
}

// ByInstances mocks base method.
func (m *MockHealthiness) ByInstances(arg0 context.Context, arg1 []models.Instance) (healthiness.HealthCheckResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ByInstances", arg0, arg1)
	ret0, _ := ret[0].(healthiness.HealthCheckResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ByInstances indicates an expected call of ByInstances.
func (mr *MockHealthinessMockRecorder) ByInstances(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ByInstances", reflect.TypeOf((*MockHealthiness)(nil).ByInstances), arg0, arg1)
}
