// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/cms/api/internal/logic/autoduty/instances/steps (interfaces: InstanceStep)

// Package mocks is a generated GoMock package.
package mocks

import (
	stepcontext "a.yandex-team.ru/cloud/mdb/cms/api/internal/logic/autoduty/instances/opcontext"
	steps "a.yandex-team.ru/cloud/mdb/cms/api/internal/logic/autoduty/instances/steps"
	log "a.yandex-team.ru/library/go/core/log"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockInstanceStep is a mock of InstanceStep interface.
type MockInstanceStep struct {
	ctrl     *gomock.Controller
	recorder *MockInstanceStepMockRecorder
}

// MockInstanceStepMockRecorder is the mock recorder for MockInstanceStep.
type MockInstanceStepMockRecorder struct {
	mock *MockInstanceStep
}

// NewMockInstanceStep creates a new mock instance.
func NewMockInstanceStep(ctrl *gomock.Controller) *MockInstanceStep {
	mock := &MockInstanceStep{ctrl: ctrl}
	mock.recorder = &MockInstanceStepMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInstanceStep) EXPECT() *MockInstanceStepMockRecorder {
	return m.recorder
}

// Name mocks base method.
func (m *MockInstanceStep) Name() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

// Name indicates an expected call of Name.
func (mr *MockInstanceStepMockRecorder) Name() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Name", reflect.TypeOf((*MockInstanceStep)(nil).Name))
}

// RunStep mocks base method.
func (m *MockInstanceStep) RunStep(arg0 context.Context, arg1 *stepcontext.OperationContext, arg2 log.Logger) steps.RunResult {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunStep", arg0, arg1, arg2)
	ret0, _ := ret[0].(steps.RunResult)
	return ret0
}

// RunStep indicates an expected call of RunStep.
func (mr *MockInstanceStepMockRecorder) RunStep(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunStep", reflect.TypeOf((*MockInstanceStep)(nil).RunStep), arg0, arg1, arg2)
}
