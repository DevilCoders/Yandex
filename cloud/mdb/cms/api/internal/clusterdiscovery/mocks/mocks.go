// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/cms/api/internal/clusterdiscovery (interfaces: OtherLegsDiscovery)

// Package mocks is a generated GoMock package.
package mocks

import (
	clusterdiscovery "a.yandex-team.ru/cloud/mdb/cms/api/internal/clusterdiscovery"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockOtherLegsDiscovery is a mock of OtherLegsDiscovery interface.
type MockOtherLegsDiscovery struct {
	ctrl     *gomock.Controller
	recorder *MockOtherLegsDiscoveryMockRecorder
}

// MockOtherLegsDiscoveryMockRecorder is the mock recorder for MockOtherLegsDiscovery.
type MockOtherLegsDiscoveryMockRecorder struct {
	mock *MockOtherLegsDiscovery
}

// NewMockOtherLegsDiscovery creates a new mock instance.
func NewMockOtherLegsDiscovery(ctrl *gomock.Controller) *MockOtherLegsDiscovery {
	mock := &MockOtherLegsDiscovery{ctrl: ctrl}
	mock.recorder = &MockOtherLegsDiscoveryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOtherLegsDiscovery) EXPECT() *MockOtherLegsDiscoveryMockRecorder {
	return m.recorder
}

// FindInShardOrSubcidByFQDN mocks base method.
func (m *MockOtherLegsDiscovery) FindInShardOrSubcidByFQDN(arg0 context.Context, arg1 string) (clusterdiscovery.Neighbourhood, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindInShardOrSubcidByFQDN", arg0, arg1)
	ret0, _ := ret[0].(clusterdiscovery.Neighbourhood)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindInShardOrSubcidByFQDN indicates an expected call of FindInShardOrSubcidByFQDN.
func (mr *MockOtherLegsDiscoveryMockRecorder) FindInShardOrSubcidByFQDN(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindInShardOrSubcidByFQDN", reflect.TypeOf((*MockOtherLegsDiscovery)(nil).FindInShardOrSubcidByFQDN), arg0, arg1)
}
