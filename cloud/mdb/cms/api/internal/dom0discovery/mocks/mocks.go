// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/cms/api/internal/dom0discovery (interfaces: Dom0Discovery)

// Package mocks is a generated GoMock package.
package mocks

import (
	dom0discovery "a.yandex-team.ru/cloud/mdb/cms/api/internal/dom0discovery"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDom0Discovery is a mock of Dom0Discovery interface.
type MockDom0Discovery struct {
	ctrl     *gomock.Controller
	recorder *MockDom0DiscoveryMockRecorder
}

// MockDom0DiscoveryMockRecorder is the mock recorder for MockDom0Discovery.
type MockDom0DiscoveryMockRecorder struct {
	mock *MockDom0Discovery
}

// NewMockDom0Discovery creates a new mock instance.
func NewMockDom0Discovery(ctrl *gomock.Controller) *MockDom0Discovery {
	mock := &MockDom0Discovery{ctrl: ctrl}
	mock.recorder = &MockDom0DiscoveryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDom0Discovery) EXPECT() *MockDom0DiscoveryMockRecorder {
	return m.recorder
}

// Dom0Instances mocks base method.
func (m *MockDom0Discovery) Dom0Instances(arg0 context.Context, arg1 string) (dom0discovery.DiscoveryResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Dom0Instances", arg0, arg1)
	ret0, _ := ret[0].(dom0discovery.DiscoveryResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Dom0Instances indicates an expected call of Dom0Instances.
func (mr *MockDom0DiscoveryMockRecorder) Dom0Instances(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dom0Instances", reflect.TypeOf((*MockDom0Discovery)(nil).Dom0Instances), arg0, arg1)
}
