// Code generated by go-swagger; DO NOT EDIT.

package unhealthyaggregatedinfo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"a.yandex-team.ru/cloud/mdb/mdb-health/generated/swagger/models"
)

// GetUnhealthyAggregatedInfoOKCode is the HTTP code returned for type GetUnhealthyAggregatedInfoOK
const GetUnhealthyAggregatedInfoOKCode int = 200

/*GetUnhealthyAggregatedInfoOK Reports aggregated info

swagger:response getUnhealthyAggregatedInfoOK
*/
type GetUnhealthyAggregatedInfoOK struct {

	/*
	  In: Body
	*/
	Payload *models.UAInfo `json:"body,omitempty"`
}

// NewGetUnhealthyAggregatedInfoOK creates GetUnhealthyAggregatedInfoOK with default headers values
func NewGetUnhealthyAggregatedInfoOK() *GetUnhealthyAggregatedInfoOK {

	return &GetUnhealthyAggregatedInfoOK{}
}

// WithPayload adds the payload to the get unhealthy aggregated info o k response
func (o *GetUnhealthyAggregatedInfoOK) WithPayload(payload *models.UAInfo) *GetUnhealthyAggregatedInfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get unhealthy aggregated info o k response
func (o *GetUnhealthyAggregatedInfoOK) SetPayload(payload *models.UAInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUnhealthyAggregatedInfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetUnhealthyAggregatedInfoDefault Error

swagger:response getUnhealthyAggregatedInfoDefault
*/
type GetUnhealthyAggregatedInfoDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUnhealthyAggregatedInfoDefault creates GetUnhealthyAggregatedInfoDefault with default headers values
func NewGetUnhealthyAggregatedInfoDefault(code int) *GetUnhealthyAggregatedInfoDefault {
	if code <= 0 {
		code = 500
	}

	return &GetUnhealthyAggregatedInfoDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get unhealthy aggregated info default response
func (o *GetUnhealthyAggregatedInfoDefault) WithStatusCode(code int) *GetUnhealthyAggregatedInfoDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get unhealthy aggregated info default response
func (o *GetUnhealthyAggregatedInfoDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get unhealthy aggregated info default response
func (o *GetUnhealthyAggregatedInfoDefault) WithPayload(payload *models.Error) *GetUnhealthyAggregatedInfoDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get unhealthy aggregated info default response
func (o *GetUnhealthyAggregatedInfoDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUnhealthyAggregatedInfoDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
