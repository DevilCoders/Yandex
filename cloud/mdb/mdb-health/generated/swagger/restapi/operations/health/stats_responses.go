// Code generated by go-swagger; DO NOT EDIT.

package health

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"a.yandex-team.ru/cloud/mdb/mdb-health/generated/swagger/models"
)

// StatsOKCode is the HTTP code returned for type StatsOK
const StatsOKCode int = 200

/*StatsOK Reports service stats

swagger:response statsOK
*/
type StatsOK struct {

	/*
	  In: Body
	*/
	Payload models.Stats `json:"body,omitempty"`
}

// NewStatsOK creates StatsOK with default headers values
func NewStatsOK() *StatsOK {

	return &StatsOK{}
}

// WithPayload adds the payload to the stats o k response
func (o *StatsOK) WithPayload(payload models.Stats) *StatsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the stats o k response
func (o *StatsOK) SetPayload(payload models.Stats) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.Stats{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*StatsDefault Error

swagger:response statsDefault
*/
type StatsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStatsDefault creates StatsDefault with default headers values
func NewStatsDefault(code int) *StatsDefault {
	if code <= 0 {
		code = 500
	}

	return &StatsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the stats default response
func (o *StatsDefault) WithStatusCode(code int) *StatsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the stats default response
func (o *StatsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the stats default response
func (o *StatsDefault) WithPayload(payload *models.Error) *StatsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the stats default response
func (o *StatsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
