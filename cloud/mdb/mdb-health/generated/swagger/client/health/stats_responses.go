// Code generated by go-swagger; DO NOT EDIT.

package health

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/mdb-health/generated/swagger/models"
)

// StatsReader is a Reader for the Stats structure.
type StatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewStatsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStatsOK creates a StatsOK with default headers values
func NewStatsOK() *StatsOK {
	return &StatsOK{}
}

/* StatsOK describes a response with status code 200, with default header values.

Reports service stats
*/
type StatsOK struct {
	Payload models.Stats
}

func (o *StatsOK) Error() string {
	return fmt.Sprintf("[GET /stats][%d] statsOK  %+v", 200, o.Payload)
}
func (o *StatsOK) GetPayload() models.Stats {
	return o.Payload
}

func (o *StatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatsDefault creates a StatsDefault with default headers values
func NewStatsDefault(code int) *StatsDefault {
	return &StatsDefault{
		_statusCode: code,
	}
}

/* StatsDefault describes a response with status code -1, with default header values.

Error
*/
type StatsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the stats default response
func (o *StatsDefault) Code() int {
	return o._statusCode
}

func (o *StatsDefault) Error() string {
	return fmt.Sprintf("[GET /stats][%d] Stats default  %+v", o._statusCode, o.Payload)
}
func (o *StatsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *StatsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
