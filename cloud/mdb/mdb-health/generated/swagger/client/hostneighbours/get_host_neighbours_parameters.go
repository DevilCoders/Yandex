// Code generated by go-swagger; DO NOT EDIT.

package hostneighbours

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetHostNeighboursParams creates a new GetHostNeighboursParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetHostNeighboursParams() *GetHostNeighboursParams {
	return &GetHostNeighboursParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetHostNeighboursParamsWithTimeout creates a new GetHostNeighboursParams object
// with the ability to set a timeout on a request.
func NewGetHostNeighboursParamsWithTimeout(timeout time.Duration) *GetHostNeighboursParams {
	return &GetHostNeighboursParams{
		timeout: timeout,
	}
}

// NewGetHostNeighboursParamsWithContext creates a new GetHostNeighboursParams object
// with the ability to set a context for a request.
func NewGetHostNeighboursParamsWithContext(ctx context.Context) *GetHostNeighboursParams {
	return &GetHostNeighboursParams{
		Context: ctx,
	}
}

// NewGetHostNeighboursParamsWithHTTPClient creates a new GetHostNeighboursParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetHostNeighboursParamsWithHTTPClient(client *http.Client) *GetHostNeighboursParams {
	return &GetHostNeighboursParams{
		HTTPClient: client,
	}
}

/* GetHostNeighboursParams contains all the parameters to send to the API endpoint
   for the get host neighbours operation.

   Typically these are written to a http.Request.
*/
type GetHostNeighboursParams struct {

	/* XRequestID.

	   Unique request ID (must be generated for each separate request, even retries)
	*/
	XRequestID *string

	/* Fqdns.

	   List of fqdns to retrieve data for
	*/
	Fqdns []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get host neighbours params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetHostNeighboursParams) WithDefaults() *GetHostNeighboursParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get host neighbours params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetHostNeighboursParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get host neighbours params
func (o *GetHostNeighboursParams) WithTimeout(timeout time.Duration) *GetHostNeighboursParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get host neighbours params
func (o *GetHostNeighboursParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get host neighbours params
func (o *GetHostNeighboursParams) WithContext(ctx context.Context) *GetHostNeighboursParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get host neighbours params
func (o *GetHostNeighboursParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get host neighbours params
func (o *GetHostNeighboursParams) WithHTTPClient(client *http.Client) *GetHostNeighboursParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get host neighbours params
func (o *GetHostNeighboursParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXRequestID adds the xRequestID to the get host neighbours params
func (o *GetHostNeighboursParams) WithXRequestID(xRequestID *string) *GetHostNeighboursParams {
	o.SetXRequestID(xRequestID)
	return o
}

// SetXRequestID adds the xRequestId to the get host neighbours params
func (o *GetHostNeighboursParams) SetXRequestID(xRequestID *string) {
	o.XRequestID = xRequestID
}

// WithFqdns adds the fqdns to the get host neighbours params
func (o *GetHostNeighboursParams) WithFqdns(fqdns []string) *GetHostNeighboursParams {
	o.SetFqdns(fqdns)
	return o
}

// SetFqdns adds the fqdns to the get host neighbours params
func (o *GetHostNeighboursParams) SetFqdns(fqdns []string) {
	o.Fqdns = fqdns
}

// WriteToRequest writes these params to a swagger request
func (o *GetHostNeighboursParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.XRequestID != nil {

		// header param X-Request-Id
		if err := r.SetHeaderParam("X-Request-Id", *o.XRequestID); err != nil {
			return err
		}
	}

	if o.Fqdns != nil {

		// binding items for fqdns
		joinedFqdns := o.bindParamFqdns(reg)

		// query array param fqdns
		if err := r.SetQueryParam("fqdns", joinedFqdns...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetHostNeighbours binds the parameter fqdns
func (o *GetHostNeighboursParams) bindParamFqdns(formats strfmt.Registry) []string {
	fqdnsIR := o.Fqdns

	var fqdnsIC []string
	for _, fqdnsIIR := range fqdnsIR { // explode []string

		fqdnsIIV := fqdnsIIR // string as string
		fqdnsIC = append(fqdnsIC, fqdnsIIV)
	}

	// items.CollectionFormat: "csv"
	fqdnsIS := swag.JoinByFormat(fqdnsIC, "csv")

	return fqdnsIS
}
