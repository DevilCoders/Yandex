// Code generated by go-swagger; DO NOT EDIT.

package unhealthyaggregatedinfo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/mdb-health/generated/swagger/models"
)

// GetUnhealthyAggregatedInfoReader is a Reader for the GetUnhealthyAggregatedInfo structure.
type GetUnhealthyAggregatedInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUnhealthyAggregatedInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUnhealthyAggregatedInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetUnhealthyAggregatedInfoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetUnhealthyAggregatedInfoOK creates a GetUnhealthyAggregatedInfoOK with default headers values
func NewGetUnhealthyAggregatedInfoOK() *GetUnhealthyAggregatedInfoOK {
	return &GetUnhealthyAggregatedInfoOK{}
}

/* GetUnhealthyAggregatedInfoOK describes a response with status code 200, with default header values.

Reports aggregated info
*/
type GetUnhealthyAggregatedInfoOK struct {
	Payload *models.UAInfo
}

func (o *GetUnhealthyAggregatedInfoOK) Error() string {
	return fmt.Sprintf("[GET /unhealthyaggregatedinfo][%d] getUnhealthyAggregatedInfoOK  %+v", 200, o.Payload)
}
func (o *GetUnhealthyAggregatedInfoOK) GetPayload() *models.UAInfo {
	return o.Payload
}

func (o *GetUnhealthyAggregatedInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UAInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnhealthyAggregatedInfoDefault creates a GetUnhealthyAggregatedInfoDefault with default headers values
func NewGetUnhealthyAggregatedInfoDefault(code int) *GetUnhealthyAggregatedInfoDefault {
	return &GetUnhealthyAggregatedInfoDefault{
		_statusCode: code,
	}
}

/* GetUnhealthyAggregatedInfoDefault describes a response with status code -1, with default header values.

Error
*/
type GetUnhealthyAggregatedInfoDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get unhealthy aggregated info default response
func (o *GetUnhealthyAggregatedInfoDefault) Code() int {
	return o._statusCode
}

func (o *GetUnhealthyAggregatedInfoDefault) Error() string {
	return fmt.Sprintf("[GET /unhealthyaggregatedinfo][%d] GetUnhealthyAggregatedInfo default  %+v", o._statusCode, o.Payload)
}
func (o *GetUnhealthyAggregatedInfoDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUnhealthyAggregatedInfoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
