// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ServiceRole Allowed service roles
//
// swagger:model ServiceRole
type ServiceRole string

func NewServiceRole(value ServiceRole) *ServiceRole {
	v := value
	return &v
}

const (

	// ServiceRoleMaster captures enum value "Master"
	ServiceRoleMaster ServiceRole = "Master"

	// ServiceRoleReplica captures enum value "Replica"
	ServiceRoleReplica ServiceRole = "Replica"

	// ServiceRoleUnknown captures enum value "Unknown"
	ServiceRoleUnknown ServiceRole = "Unknown"
)

// for schema
var serviceRoleEnum []interface{}

func init() {
	var res []ServiceRole
	if err := json.Unmarshal([]byte(`["Master","Replica","Unknown"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		serviceRoleEnum = append(serviceRoleEnum, v)
	}
}

func (m ServiceRole) validateServiceRoleEnum(path, location string, value ServiceRole) error {
	if err := validate.EnumCase(path, location, value, serviceRoleEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this service role
func (m ServiceRole) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateServiceRoleEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this service role based on context it is used
func (m ServiceRole) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
