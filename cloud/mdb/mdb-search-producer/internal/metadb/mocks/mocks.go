// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/mdb-search-producer/internal/metadb (interfaces: MetaDB)

// Package mocks is a generated GoMock package.
package mocks

import (
	metadb "a.yandex-team.ru/cloud/mdb/mdb-search-producer/internal/metadb"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMetaDB is a mock of MetaDB interface.
type MockMetaDB struct {
	ctrl     *gomock.Controller
	recorder *MockMetaDBMockRecorder
}

// MockMetaDBMockRecorder is the mock recorder for MockMetaDB.
type MockMetaDBMockRecorder struct {
	mock *MockMetaDB
}

// NewMockMetaDB creates a new mock instance.
func NewMockMetaDB(ctrl *gomock.Controller) *MockMetaDB {
	mock := &MockMetaDB{ctrl: ctrl}
	mock.recorder = &MockMetaDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetaDB) EXPECT() *MockMetaDBMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockMetaDB) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockMetaDBMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockMetaDB)(nil).Close))
}

// IsReady mocks base method.
func (m *MockMetaDB) IsReady(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsReady", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// IsReady indicates an expected call of IsReady.
func (mr *MockMetaDBMockRecorder) IsReady(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsReady", reflect.TypeOf((*MockMetaDB)(nil).IsReady), arg0)
}

// NonEnumeratedSearchDocs mocks base method.
func (m *MockMetaDB) NonEnumeratedSearchDocs(arg0 context.Context, arg1 int64) ([]metadb.NonEnumeratedSearchDoc, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NonEnumeratedSearchDocs", arg0, arg1)
	ret0, _ := ret[0].([]metadb.NonEnumeratedSearchDoc)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NonEnumeratedSearchDocs indicates an expected call of NonEnumeratedSearchDocs.
func (mr *MockMetaDBMockRecorder) NonEnumeratedSearchDocs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NonEnumeratedSearchDocs", reflect.TypeOf((*MockMetaDB)(nil).NonEnumeratedSearchDocs), arg0, arg1)
}

// OnUnsentSearchQueueDoc mocks base method.
func (m *MockMetaDB) OnUnsentSearchQueueDoc(arg0 context.Context, arg1 int64, arg2 metadb.OnSearchQueueEventsHandler) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OnUnsentSearchQueueDoc", arg0, arg1, arg2)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OnUnsentSearchQueueDoc indicates an expected call of OnUnsentSearchQueueDoc.
func (mr *MockMetaDBMockRecorder) OnUnsentSearchQueueDoc(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnUnsentSearchQueueDoc", reflect.TypeOf((*MockMetaDB)(nil).OnUnsentSearchQueueDoc), arg0, arg1, arg2)
}

// UnsentSearchDocs mocks base method.
func (m *MockMetaDB) UnsentSearchDocs(arg0 context.Context, arg1 int64) ([]metadb.UnsentSearchDoc, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnsentSearchDocs", arg0, arg1)
	ret0, _ := ret[0].([]metadb.UnsentSearchDoc)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UnsentSearchDocs indicates an expected call of UnsentSearchDocs.
func (mr *MockMetaDBMockRecorder) UnsentSearchDocs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnsentSearchDocs", reflect.TypeOf((*MockMetaDB)(nil).UnsentSearchDocs), arg0, arg1)
}
