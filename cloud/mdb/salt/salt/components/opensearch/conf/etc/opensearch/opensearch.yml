# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
cluster.name: {{ salt.mdb_opensearch.cluster_name() }}

# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
node.name: {{ salt.mdb_opensearch.fqdn() }}

node.roles: {{ salt.mdb_opensearch.node_roles() | yaml }}

#
# Add custom attributes to the node:
#
node.attr.zone: {{ salt.mdb_opensearch.geo() }}

# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
path.data: /var/lib/opensearch
#
# Path to log files:
#
path.logs: /var/log/opensearch
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# OpenSearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
network.host: [{{ salt.mdb_opensearch.fqdn() }}, localhost]
network.publish_host: {{ salt.mdb_opensearch.fqdn() }}
#
# Set a custom port for HTTP:
#
http.port: 9201
http.publish_port: 9200  # what is returned by _nodes/_all/http api call
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when this node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
discovery.seed_hosts: {{ salt.mdb_opensearch.seed_peers() | yaml }}
#
# Bootstrap the cluster using an initial set of master-eligible nodes:
#
cluster.initial_master_nodes: {{ salt.mdb_opensearch.initial_master_nodes() | yaml }}
#
# For more information, consult the discovery and cluster formation module documentation.
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
#
# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true

cluster.routing.allocation.awareness.attributes: zone

#
# ---------------------------------- Hunspell -----------------------------------
#
# Set the hunspell token filter settings
indices.analysis.hunspell.dictionary.ignore_case: true
indices.analysis.hunspell.dictionary.lazy: true

#
# ---------------------------------- Security -----------------------------------
#
plugins.security.ssl.http.enabled: true
plugins.security.ssl.http.pemkey_filepath: certs/server.key
plugins.security.ssl.http.pemcert_filepath: certs/server.crt
plugins.security.ssl.http.pemtrustedcas_filepath: certs/ca.pem

plugins.security.ssl.transport.pemkey_filepath: certs/server.key
plugins.security.ssl.transport.pemcert_filepath: certs/server.crt
plugins.security.ssl.transport.pemtrustedcas_filepath: certs/ca.pem

plugins.security.allow_default_init_securityindex: true
plugins.security.restapi.roles_enabled: ["security_rest_api_access"]

plugins.security.nodes_dn:
  - 'CN=*.{{ salt.mdb_opensearch.original_domain() }}'

