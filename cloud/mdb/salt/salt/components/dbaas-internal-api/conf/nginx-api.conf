server {
    listen 80;
    listen [::]:80;
    server_name {{ salt['pillar.get']('data:internal_api:server_name') }} localhost;

    include /etc/nginx/includes/unistat.conf;

    location ~ ^/(ping|stat) {
        include uwsgi_params;
        request_id_from_header on;
        request_id_header_name X-Request-Id;
        uwsgi_param HTTP_X_REQUEST_ID $request_id;
        uwsgi_param HTTP_X_REAL_IP $remote_addr;
        add_header X-Request-Id $request_id always;
        uwsgi_pass 127.0.0.1:3030;
    }

    location / {
        rewrite (.*)$ https://$host$request_uri permanent;
    }
}

server {
    listen {{ salt['pillar.get']('data:internal_api:tls_port', 443) }} spdy ssl;
    listen [::]:{{ salt['pillar.get']('data:internal_api:tls_port', 443) }} spdy ssl;
    server_name {{ salt['pillar.get']('data:internal_api:server_name') }} localhost;

    ssl_certificate /etc/nginx/ssl/dbaas-internal-api.pem;
    ssl_certificate_key /etc/nginx/ssl/dbaas-internal-api.key;

    ssl_protocols TLSv1.2;

    server_tokens off;

    ssl_prefer_server_ciphers on;
    ssl_ciphers kEECDH+AESGCM+AES128:kEECDH+AES128;

    ssl_session_cache shared:dbaas-internal-api:128m;
    ssl_session_timeout 28h;
    # Handle renames
    rewrite ^/mds/(.*) /mdb/$1;
    # Rewrite cloud-wide url rules
    rewrite ^/mdb/v1alpha1/(.*) /mdb/v1/$1 last;

    error_page 404 = @intercept404;

    location @intercept404 {
        proxy_set_header Host $host;
        proxy_set_header X-Yandex-NotFound-Project "api_cloud";
        proxy_pass http://any.yandex.ru;
    }

    include /etc/nginx/includes/unistat.conf;

    location = / {
        return 404;
    }

    location / {
        include uwsgi_params;
        request_id_from_header on;
        request_id_header_name X-Request-Id;
        uwsgi_param HTTP_X_REQUEST_ID $request_id;
        uwsgi_param HTTP_X_REAL_IP $remote_addr;
        add_header X-Request-Id $request_id always;
        uwsgi_pass 127.0.0.1:3030;
    }
}
