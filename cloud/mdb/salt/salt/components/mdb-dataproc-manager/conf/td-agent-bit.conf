{%- set logging_config = salt['pillar.get']('data:mdb-dataproc-manager:config:logging') -%}
@SET ENDPOINT_URL={{ logging_config['url'] }}
@SET LOG_GROUP_ID={{ logging_config['log_group_id'] }}
@SET RESOURCE_TYPE=mdb.dataproc.manager
@SET RESOURCE_ID={{ salt.grains.get('fqdn') }}
@SET AUTH_TYPE=iam-key-file:/opt/yandex/dataproc-manager/etc/sa_key_for_logging.json
@SET MESSAGE_KEY=log
@SET MESSAGE_TAG_KEY=log_type

[SERVICE]
    # Flush
    # =====
    # set an interval of seconds before to flush records to a destination
    flush        5

    # Daemon
    # ======
    # instruct Fluent Bit to run in foreground or background mode.
    daemon       Off

    # Log_Level
    # =========
    # Set the verbosity level of the service, values can be:
    #
    # - error
    # - warning
    # - info
    # - debug
    # - trace
    #
    # by default 'info' is set, that means it includes 'error' and 'warning'.
    log_level    info

    # Parsers File
    # ============
    # specify an optional 'Parsers' configuration file
    parsers_file parsers.conf

    # Plugins File
    # ============
    # specify an optional 'Plugins' configuration file to load external plugins.
    plugins_file plugins.conf

    # HTTP Server
    # ===========
    # Enable/Disable the built-in HTTP Server for metrics
    http_server  Off
    http_listen  0.0.0.0
    http_port    2020

    # Storage
    # =======
    # Fluent Bit can use memory and filesystem buffering based mechanisms
    #
    # - https://docs.fluentbit.io/manual/administration/buffering-and-storage
    #
    # storage metrics
    # ---------------
    # publish storage pipeline metrics in '/api/v1/storage'. The metrics are
    # exported only if the 'http_server' option is enabled.
    #
    storage.metrics on

    # storage.path
    # ------------
    # absolute file system path to store filesystem data buffers (chunks).
    #
    # storage.path /tmp/storage

    # storage.sync
    # ------------
    # configure the synchronization mode used to store the data into the
    # filesystem. It can take the values normal or full.
    #
    # storage.sync normal

    # storage.checksum
    # ----------------
    # enable the data integrity check when writing and reading data from the
    # filesystem. The storage layer uses the CRC32 algorithm.
    #
    # storage.checksum off

    # storage.backlog.mem_limit
    # -------------------------
    # if storage.path is set, Fluent Bit will look for data chunks that were
    # not delivered and are still in the storage layer, these are called
    # backlog data. This option configure a hint of maximum value of memory
    # to use when processing these records.
    #
    # storage.backlog.mem_limit 5M

[INPUT]
    name tail
    tag mdb-dataproc-manager
    path /var/log/supervisor/mdb-dataproc-manager.log
    Multiline On
    Parser_Firstline golog_error_multiline_firstline
    Multiline_Flush 1

[FILTER]
    match mdb-dataproc-manager
    name parser
    Key_name log
    parser golog_request
    parser golog_only_message

[OUTPUT]
    Name yc-logging
    level_key level
    Match mdb-dataproc-manager
    group_id ${LOG_GROUP_ID}
    resource_type ${RESOURCE_TYPE}
    resource_id ${RESOURCE_ID}
    message_tag_key ${MESSAGE_TAG_KEY}
    authorization ${AUTH_TYPE}
    message_key ${MESSAGE_KEY}
    endpoint ${ENDPOINT_URL}
