[metadb_hosts_count]
plugin = postgres
module = pg_query
interval = 3600

rowsignal = 1
query = SELECT concat_ws('/', coalesce(cluster_type::text, 'all'), coalesce(roles[1]::text, 'all'), flavor_name) AS hosts_count, SUM(hosts_count) AS c FROM stats.per_cluster_type GROUP BY GROUPING SETS ((cluster_type, roles, flavor_name), (cluster_type, flavor_name), (flavor_name));
databases = dbaas_metadb

yasm_suffix = vmmv
yasm_tags_cmd = /usr/local/yasmagent/mail_postgresql_getter.py
yasm_ttl = 7200

[metadb_hosts_space_used]
plugin = postgres
module = pg_query
interval = 3600

rowsignal = 1
query = SELECT concat_ws('/', coalesce(cluster_type::text, 'all'), coalesce(roles[1]::text, 'all'), disk_type) AS space_used, SUM(coalesce(ssd_space_used, 0) + coalesce(hdd_space_used, 0)) AS c FROM stats.per_cluster_type GROUP BY GROUPING SETS ((cluster_type, roles, disk_type), (cluster_type, disk_type), (disk_type));
databases = dbaas_metadb

yasm_suffix = vmmv
yasm_tags_cmd = /usr/local/yasmagent/mail_postgresql_getter.py
yasm_ttl = 7200

[metadb_clusters_count]
plugin = postgres
module = pg_query
interval = 3600

rowsignal = 1
query = SELECT concat_ws('/', coalesce(type::text, 'all'), coalesce(status::text, 'all')) AS clusters_status, count(*) FROM dbaas.clusters GROUP BY GROUPING SETS ((type), (status), (type, status));
databases = dbaas_metadb

yasm_suffix = vmmv
yasm_tags_cmd = /usr/local/yasmagent/mail_postgresql_getter.py
yasm_ttl = 7200

[metadb_flavor_hosts_count]
plugin = postgres
module = pg_query
interval = 3600

rowsignal = 1
query = SELECT concat_ws('/', coalesce(flavor_type, 'all'), coalesce(flavor_generation::text, 'all'), coalesce(cluster_type::text, 'all')) AS flavor_hosts_count, SUM(hosts_count) AS c FROM stats.per_cluster_type GROUP BY GROUPING SETS ((flavor_type), (flavor_generation), (flavor_type, flavor_generation), (flavor_type, cluster_type), (flavor_generation, cluster_type), (flavor_type, flavor_generation, cluster_type), (cluster_type)) ORDER BY 1;
databases = dbaas_metadb

yasm_suffix = vmmv
yasm_tags_cmd = /usr/local/yasmagent/mail_postgresql_getter.py
yasm_ttl = 7200

[metadb_cluster_type_memory]
plugin = postgres
module = pg_query
interval = 3600

rowsignal = 1
query = WITH stats AS (
            SELECT
                c.type,
                CASE WHEN c.status = 'STOPPED' THEN 'stopped'
                     ELSE 'running'
                END AS status,
                coalesce(sum(f.memory_limit), 0) AS value
            FROM dbaas.clusters c
            JOIN dbaas.subclusters sc USING (cid)
            JOIN dbaas.hosts h USING (subcid)
            JOIN dbaas.flavors f ON f.id = h.flavor
            WHERE dbaas.visible_cluster_status(c.status)
            GROUP BY c.type, c.status
        )
        SELECT
            concat_ws('/', type, 'memory', status) AS metric,
            sum(value)
        FROM stats
        GROUP BY metric;

databases = dbaas_metadb
yasm_suffix = vmmv
yasm_tags_cmd = /usr/local/yasmagent/mail_postgresql_getter.py
yasm_ttl = 7200

[metadb_cluster_type_cpu]
plugin = postgres
module = pg_query
interval = 3600

rowsignal = 1
query = WITH stats AS (
            SELECT
                c.type,
                CASE WHEN c.status = 'STOPPED' THEN 'stopped'
                     ELSE 'running'
                END AS status,
                coalesce(sum(f.cpu_limit), 0) AS value
            FROM dbaas.clusters c
            JOIN dbaas.subclusters sc USING (cid)
            JOIN dbaas.hosts h USING (subcid)
            JOIN dbaas.flavors f ON f.id = h.flavor
            WHERE dbaas.visible_cluster_status(c.status)
            GROUP BY c.type, c.status
        )
        SELECT
            concat_ws('/', type, 'cpu', status) AS metric,
            sum(value)
        FROM stats
        GROUP BY metric;

databases = dbaas_metadb
yasm_suffix = vmmv
yasm_tags_cmd = /usr/local/yasmagent/mail_postgresql_getter.py
yasm_ttl = 7200

[metadb_subcluster_type_memory]
plugin = postgres
module = pg_query
interval = 3600

rowsignal = 1
query = WITH stats AS (
            SELECT
                c.type AS cluster_type,
                CASE WHEN c.type = 'clickhouse_cluster' THEN
                    CASE WHEN sc.roles && '{clickhouse_cluster}' THEN 'clickhouse_subcluster'
                         WHEN sc.roles && '{zk}' THEN 'zookeeper_subcluster'
                    END
                END AS subcluster_type,
                CASE WHEN c.status = 'STOPPED' THEN 'stopped'
                     ELSE 'running'
                END AS status,
                coalesce(sum(f.memory_limit), 0) AS value
            FROM dbaas.clusters c
            JOIN dbaas.subclusters sc USING (cid)
            JOIN dbaas.hosts h USING (subcid)
            JOIN dbaas.flavors f ON f.id = h.flavor
            WHERE dbaas.visible_cluster_status(c.status)
            GROUP BY c.type, sc.roles, c.status
        )
        SELECT
            concat_ws('/', cluster_type, subcluster_type, 'memory', status) AS metric,
            sum(value)
        FROM stats
        WHERE subcluster_type IS NOT NULL
        GROUP BY cluster_type, subcluster_type, status;

databases = dbaas_metadb
yasm_suffix = vmmv
yasm_tags_cmd = /usr/local/yasmagent/mail_postgresql_getter.py
yasm_ttl = 7200

[metadb_subcluster_type_cpu]
plugin = postgres
module = pg_query
interval = 3600

rowsignal = 1
query = WITH stats AS (
            SELECT
                c.type AS cluster_type,
                CASE WHEN c.type = 'clickhouse_cluster' THEN
                    CASE WHEN sc.roles && '{clickhouse_cluster}' THEN 'clickhouse_subcluster'
                         WHEN sc.roles && '{zk}' THEN 'zookeeper_subcluster'
                    END
                END AS subcluster_type,
                CASE WHEN c.status = 'STOPPED' THEN 'stopped'
                     ELSE 'running'
                END AS status,
                coalesce(sum(f.cpu_limit), 0) AS value
            FROM dbaas.clusters c
            JOIN dbaas.subclusters sc USING (cid)
            JOIN dbaas.hosts h USING (subcid)
            JOIN dbaas.flavors f ON f.id = h.flavor
            WHERE dbaas.visible_cluster_status(c.status)
            GROUP BY c.type, sc.roles, c.status
        )
        SELECT
            concat_ws('/', cluster_type, subcluster_type, 'cpu', status) AS metric,
            sum(value)
        FROM stats
        WHERE subcluster_type IS NOT NULL
        GROUP BY cluster_type, subcluster_type, status;

databases = dbaas_metadb
yasm_suffix = vmmv
yasm_tags_cmd = /usr/local/yasmagent/mail_postgresql_getter.py
yasm_ttl = 7200
