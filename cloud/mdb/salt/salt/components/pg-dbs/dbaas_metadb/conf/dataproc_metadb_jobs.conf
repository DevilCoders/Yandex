[metadb_dataproc_jobs_statuses]
plugin = postgres
module = pg_query
interval = 300

rowsignal = 1
query = SELECT concat_ws('/', job_type, status) AS dataproc_job_status, COUNT(*) FROM ( SELECT CASE WHEN job_spec::json->'pyspark_job' IS NOT NULL THEN 'pyspark' WHEN job_spec::json->'hive_job' IS NOT NULL THEN 'hive' WHEN job_spec::json->'spark_job' IS NOT NULL THEN 'spark' WHEN job_spec::json->'mapreduce_job' IS NOT NULL THEN 'mapreduce' ELSE 'unknown' END AS job_type, status FROM dbaas.hadoop_jobs WHERE create_ts >= current_timestamp - '1 day'::interval) AS jobs GROUP BY (job_type, status);
databases = dbaas_metadb

yasm_suffix = vmmv
yasm_tags_cmd = /usr/local/yasmagent/mail_postgresql_getter.py
yasm_ttl = 7200

[metadb_dataproc_jobs_timings]
plugin = postgres
module = pg_query
interval = 300

rowsignal = 1
query = SELECT concat_ws('/', coalesce(job_type::text, 'all'), time_min::text || 'min') AS dataproc_job_timings, count(*) FROM (SELECT CASE WHEN job_spec::json->'pyspark_job' IS NOT NULL THEN 'pyspark' WHEN job_spec::json->'hive_job' IS NOT NULL THEN 'hive' WHEN job_spec::json->'spark_job' IS NOT NULL THEN 'spark' WHEN job_spec::json->'mapreduce_job' IS NOT NULL THEN 'mapreduce' ELSE 'unknown' END AS job_type, CASE WHEN (end_ts - start_ts) <= '1 minutes'::interval THEN 1 WHEN (end_ts - start_ts) <= '3 minutes'::interval THEN 3 WHEN (end_ts - start_ts) <= '5 minutes'::interval THEN 5 WHEN (end_ts - start_ts) <= '10 minutes'::interval THEN 10 WHEN (end_ts - start_ts) <= '15 minutes'::interval THEN 15 WHEN (end_ts - start_ts) <= '20 minutes'::interval THEN 20 WHEN (end_ts - start_ts) <= '30 minutes'::interval THEN 30 WHEN (end_ts - start_ts) <= '45 minutes'::interval THEN 45 WHEN (end_ts - start_ts) <= '60 minutes'::interval THEN 60 WHEN (end_ts - start_ts) <= '90 minutes'::interval THEN 90 WHEN (end_ts - start_ts) <= '120 minutes'::interval THEN 120 WHEN (end_ts - start_ts) <= '180 minutes'::interval THEN 180 WHEN (end_ts - start_ts) <= '300 minutes'::interval THEN 300 WHEN (end_ts - start_ts) <= '600 minutes'::interval THEN 600 WHEN (end_ts - start_ts) <= '1440 minutes'::interval THEN 1440 ELSE 100500 END AS time_min FROM dbaas.hadoop_jobs WHERE status IN ('DONE', 'ERROR') AND end_ts >= CURRENT_TIMESTAMP - '1 day'::interval) a GROUP BY GROUPING SETS ((job_type, time_min), (time_min));
databases = dbaas_metadb

yasm_suffix = vmmv
yasm_tags_cmd = /usr/local/yasmagent/mail_postgresql_getter.py
yasm_ttl = 7200
