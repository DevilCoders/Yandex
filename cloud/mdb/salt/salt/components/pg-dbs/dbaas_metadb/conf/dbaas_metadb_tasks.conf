[metadb_task_statuses]
plugin = postgres
module = pg_query
interval = 300

rowsignal = 1
query = SELECT concat_ws('/', coalesce(task_type, 'all'), task_status) AS task_status, count FROM (SELECT task_type, CASE WHEN (result IS NULL AND start_ts IS NOT NULL) THEN 'processing' WHEN (result IS NULL AND start_ts IS NULL) THEN 'pending' WHEN result = true THEN 'succeeded' WHEN rev_c.status::text NOT LIKE '%%ERROR' THEN 'rejected' WHEN (NOT code.managed(c) AND q.errors->0->'exposable' = 'true'::jsonb) THEN 'user-failed' ELSE 'failed' END AS task_status, count(*) FROM dbaas.worker_queue q JOIN dbaas.clusters c ON (q.cid = c.cid) LEFT JOIN dbaas.clusters_revs rev_c ON (q.cid = rev_c.cid AND q.finish_rev = rev_c.rev) WHERE unmanaged=false AND code.visible(c) AND NOT q.hidden AND q.create_ts >= current_timestamp - '1 day'::interval AND q.delayed_until IS NULL GROUP BY GROUPING SETS ((1, 2), (2))) a
databases = dbaas_metadb

yasm_suffix = vmmv
yasm_tags_cmd = /usr/local/yasmagent/mail_postgresql_getter.py
yasm_ttl = 7200

[metadb_task_timings]
plugin = postgres
module = pg_query
interval = 300

rowsignal = 1
query = SELECT concat_ws('/', coalesce(task_type::text, 'all'), time_min::text || 'min') AS task_timings, count(*) FROM (SELECT task_type, CASE WHEN (end_ts - start_ts) <= '1 minutes'::interval THEN 1 WHEN (end_ts - start_ts) <= '3 minutes'::interval THEN 3 WHEN (end_ts - start_ts) <= '5 minutes'::interval THEN 5 WHEN (end_ts - start_ts) <= '10 minutes'::interval THEN 10 WHEN (end_ts - start_ts) <= '15 minutes'::interval THEN 15 WHEN (end_ts - start_ts) <= '20 minutes'::interval THEN 20 WHEN (end_ts - start_ts) <= '30 minutes'::interval THEN 30 WHEN (end_ts - start_ts) <= '45 minutes'::interval THEN 45 WHEN (end_ts - start_ts) <= '60 minutes'::interval THEN 60 ELSE 100500 END AS time_min FROM dbaas.worker_queue WHERE unmanaged=false AND result IS NOT NULL AND end_ts >= current_timestamp - '1 day'::interval) a GROUP BY GROUPING SETS ((task_type, time_min), (time_min));
databases = dbaas_metadb

yasm_suffix = vmmv
yasm_tags_cmd = /usr/local/yasmagent/mail_postgresql_getter.py
yasm_ttl = 7200

[metadb_task_versions]
plugin = postgres
module = pg_query
interval = 300

rowsignal = 1
query = SELECT concat_ws('/', coalesce(version::text, 'all'), status) AS task_version, count FROM (SELECT version, CASE WHEN (result IS NULL AND start_ts IS NOT NULL) THEN 'processing' WHEN (result IS NULL AND start_ts IS NULL) THEN 'pending' WHEN result = true THEN 'succeeded' ELSE 'failed' END AS status, count(*) FROM dbaas.worker_queue JOIN dbaas.clusters c USING (cid) WHERE unmanaged=false GROUP BY GROUPING SETS ((1, 2), (2))) a;
databases = dbaas_metadb

yasm_suffix = vmmv
yasm_tags_cmd = /usr/local/yasmagent/mail_postgresql_getter.py
yasm_ttl = 7200
