[pg_conns]
plugin = postgres
module = pg_query
interval = 5

query = select datname, count(*) filter (where state = 'idle') as conn_idle, count(*) filter (where state = 'idle in transaction (aborted)') as conn_aborted, count(*) filter (where state = 'idle in transaction') as conn_idle_in_transaction, count(*) filter (where state = 'active') as conn_active, count(*) filter (where state = 'active' and wait_event is not null) as conn_waiting from pg_stat_activity where datname not in ('postgres', 'template1', 'template0') and usename <> 'postgres' group by datname
databases = postgres
prefix_columns = datname

yasm_suffix = vmmv,tmmx

[pg_oldest_prepared_xact]
plugin = postgres
module = pg_query
interval = 5

query = select coalesce((select EXTRACT(EPOCH FROM(now() - prepared)) from pg_prepared_xacts where owner not in ('monitor', 'postgres')), 0) as oldest_prepared_xact_duration
databases = postgres

yasm_suffix = tmmx


[pg_oldest_transaction]
plugin = postgres
module = pg_query
interval = 5

query = select coalesce((select EXTRACT(EPOCH FROM(now() - xact_start)) from pg_stat_activity where xact_start is not null and backend_type = 'client backend' and usename not in ('monitor', 'postgres') and state != 'idle' order by 1 desc limit 1), 0) as oldest_transaction_duration
databases = postgres

yasm_suffix = tmmx

[pg_oldest_query]
plugin = postgres
module = pg_query
interval = 5

query = select coalesce((select EXTRACT(EPOCH FROM(now() - query_start)) from pg_stat_activity where backend_type = 'client backend' and usename not in ('monitor', 'postgres') and state != 'idle' order by 1 desc limit 1), 0) as oldest_query_duration
databases = postgres

yasm_suffix = tmmx

[pg_total_conns]
plugin = postgres
module = pg_query
interval = 5

query = select count(*) filter (where state = 'idle') as conn_idle, count(*) filter (where state = 'idle in transaction (aborted)') as conn_aborted, count(*) filter (where state = 'idle in transaction') as conn_idle_in_transaction, count(*) filter (where state = 'active') as conn_active, count(*) filter (where state = 'active' and wait_event is not null) as conn_waiting from pg_stat_activity where pid <> pg_backend_pid()
databases = postgres

yasm_suffix = vmmv,tmmx

[pg_total_connections]
plugin = postgres
module = pg_query
interval = 5

query = SELECT count(*) AS total_connections FROM pg_stat_activity
databases = postgres

yasm_suffix = tmmx

[pg_max_connections]
plugin = postgres
module = pg_query
interval = 5

query = SELECT setting::int AS max_connections FROM pg_settings WHERE name = 'max_connections'
databases = postgres

yasm_suffix = tmmx
