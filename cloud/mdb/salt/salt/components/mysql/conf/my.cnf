{% from "components/mysql/map.jinja" import mysql with context %}

{# cpu_guarantee may be fractional #}
{% set cpu_guarantee = salt['pillar.get']('data:dbaas:flavor:cpu_guarantee', 1) %}
{% set memory_guarantee = salt['pillar.get']('data:dbaas:flavor:memory_guarantee', 1024**3)|int %}

[client]
port = 3307
socket = /var/run/mysqld/mysqld.sock


[mysqld_safe]
nice = 0
socket = /var/run/mysqld/mysqld.sock
log_error = /var/log/mysql/error.log
timezone = Europe/Moscow
log_timestamps = SYSTEM


[mysqld]
user = mysql
port = 3306
{% if mysql.version.num >= 800 %}
admin_port = 3307
admin_address = {{ salt['grains.get']('fqdn') }}
{% else %}
extra_port = 3307
extra_max_connections = {{ salt['pillar.get']('data:mysql:config:extra_max_connections', 100) }}
{% endif %}
pid_file = /var/run/mysqld/mysqld.pid
plugin-dir = /usr/lib/mysql/plugin
socket = /var/run/mysqld/mysqld.sock
log_error = /var/log/mysql/error.log
log_error_verbosity = {{ salt['pillar.get']('data:mysql:config:log_error_verbosity', 3) }}
general_log_file = /var/log/mysql/query.log
{% if salt['pillar.get']('data:mysql:config:general_log', 0) %}
general_log = ON
{% else %}
general_log = OFF
{% endif %}
default_time_zone = {{ salt['pillar.get']('data:mysql:config:default_time_zone', 'Europe/Moscow') }}
{% if mysql.version.num >= 800 %}
character_set_server = {{ salt['pillar.get']('data:mysql:config:character_set_server', 'utf8mb4') }}
collation_server = {{ salt['pillar.get']('data:mysql:config:collation_server', 'utf8mb4_0900_ai_ci') }}
{% else %}
character_set_server = {{ salt['pillar.get']('data:mysql:config:character_set_server', 'latin1') }}
collation_server = {{ salt['pillar.get']('data:mysql:config:collation_server', 'latin1_swedish_ci') }}
{% endif %}
{% if salt['pillar.get']('data:mysql:direct_return_bug_28642318', False) and salt['pillar.get']('data:versions:mysql:minor_version') != '5.7.25' %}
mdb_return_bug_28642318 = ON
{% endif %}
!include /etc/mysql/my_audit.cnf

plugin_load_add=mysql_no_login.so
check_proxy_users=ON
mysql_native_password_proxy_users=ON
sha256_password_proxy_users=ON

basedir = /usr
datadir = /var/lib/mysql
tmpdir = /var/lib/mysql/.tmp
lc_messages_dir	= /usr/share/mysql
secure-file-priv = NULL
max-connect-errors = 4294967295
local_infile = ON
{% if salt['pillar.get']('data:mysql:config:default_authentication_plugin') %}
default-authentication-plugin = {{ salt['pillar.get']('data:mysql:config:default_authentication_plugin') }}
{% endif %}

{% if salt['pillar.get']('data:mysql:use_ssl', True) %}
ssl = ON
ssl-ca = /etc/mysql/ssl/allCAs.pem
ssl-cert = /etc/mysql/ssl/server.crt
ssl-key = /etc/mysql/ssl/server.key
require-secure-transport = {{ 'ON' if salt['pillar.get']('data:dbaas:assign_public_ip', False) else 'OFF' }}
{% endif %}

event_scheduler = ON
skip_external_locking = ON
default_storage_engine = InnoDB
disabled_storage_engines="MyISAM,MRG_MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,CSV,MEMORY"
log_timestamps = SYSTEM
max_allowed_packet = {{ salt['pillar.get']('data:mysql:config:max_allowed_packet', 16777216) }}
{% if mysql.version.num >= 800 %}
regexp_time_limit = {{ salt['pillar.get']('data:mysql:config:regexp_time_limit', 32) }}
{% endif %}
range_optimizer_max_mem_size = {{ salt['pillar.get']('data:mysql:config:range_optimizer_max_mem_size', 8388608) }}
group_concat_max_len = {{ salt['pillar.get']('data:mysql:config:group_concat_max_len', 1024) }}
{% if mysql.version.num < 800 %}
query_cache_type = {{ salt['pillar.get']('data:mysql:config:query_cache_type', 0) }}
query_cache_size = {{ salt['pillar.get']('data:mysql:config:query_cache_size', 0) }}
query_cache_limit = {{ salt['pillar.get']('data:mysql:config:query_cache_limit', 1048576) }}
{% endif %}
net_read_timeout = {{ salt['pillar.get']('data:mysql:config:net_read_timeout', 30) }}
net_write_timeout = {{ salt['pillar.get']('data:mysql:config:net_write_timeout', 60) }}
{% set default_max_connections = [100, memory_guarantee / 33554432] | max | int %}
max_connections =  {{ salt['pillar.get']('data:mysql:config:max_connections', default_max_connections) | int }}
max_prepared_stmt_count = {{ [16382, memory_guarantee/1048576]|max|int }}
thread_handling = one-thread-per-connection
thread_stack = {{ salt['pillar.get']('data:mysql:config:thread_stack', 196608) }}
{% set default_thread_cache_size = (default_max_connections / 10) | int %}
thread_cache_size = {{ salt['pillar.get']('data:mysql:config:thread_cache_size', default_thread_cache_size) }}
auto_increment_increment = {{ salt['pillar.get']('data:mysql:config:auto_increment_increment', 1) }}
auto_increment_offset = {{ salt['pillar.get']('data:mysql:config:auto_increment_offset', 1) }}
interactive_timeout = {{ salt['pillar.get']('data:mysql:config:interactive_timeout', 28800) }}
wait_timeout = {{ salt['pillar.get']('data:mysql:config:wait_timeout', 28800) }}
max_sp_recursion_depth = {{ salt['pillar.get']('data:mysql:config:max_sp_recursion_depth', 0) }}
innodb_compression_level = {{ salt['pillar.get']('data:mysql:config:innodb_compression_level', 6) }}

# Buffers and caches
tmp_table_size = {{ salt['pillar.get']('data:mysql:config:tmp_table_size', 16777216) }}
max_heap_table_size = {{ salt['pillar.get']('data:mysql:config:max_heap_table_size', 16777216) }}
table_open_cache = {{ salt['pillar.get']('data:mysql:config:table_open_cache', 4000) }}
table_open_cache_instances = {{ salt['pillar.get']('data:mysql:config:table_open_cache_instances', 16) }}
table_definition_cache = {{ salt['pillar.get']('data:mysql:config:table_definition_cache', 2000) }}
sort_buffer_size = {{ salt['pillar.get']('data:mysql:config:sort_buffer_size', 262144) }}
join_buffer_size = {{ salt['pillar.get']('data:mysql:config:join_buffer_size', 262144) }}

# Slow log
{% if salt['pillar.get']('data:mysql:config:slow_query_log', False) %}
slow_query_log = ON
long_query_time = {{ salt['pillar.get']('data:mysql:config:long_query_time', 10) }}
log_slow_sp_statements = {{ 'ON' if salt['pillar.get']('data:mysql:config:log_slow_sp_statements', False) else 'OFF' }}
slow_query_log_always_write_time = {{ salt['pillar.get']('data:mysql:config:slow_query_log_always_write_time', 10) }}
log_slow_rate_limit = {{ salt['pillar.get']('data:mysql:config:log_slow_rate_limit', 1) }}
log_slow_rate_type = {{ salt['pillar.get']('data:mysql:config:log_slow_rate_type', 'query') }}
log_slow_filter = {{ salt['pillar.get']('data:mysql:config:log_slow_filter', '') | unique | join(',') }}
{% else %}
slow_query_log = OFF
{% endif %}

log_slow_verbosity = microtime,query_plan,innodb
slow_query_log_use_global_control = log_slow_filter,log_slow_rate_limit,log_slow_verbosity,long_query_time,min_examined_row_limit
slow_query_log_file = /var/log/mysql/slow-query.log

{% if memory_guarantee >= 8*1024**3 %}
{% set innodb_buffer_pool_size_default = 0.5 * memory_guarantee %}
{% elif memory_guarantee >= 4*1024**3 %}
{% set innodb_buffer_pool_size_default = 0.375 * memory_guarantee %}
{% else %}
{% set innodb_buffer_pool_size_default = 0.125 * memory_guarantee %}
{% endif %}

{% if memory_guarantee >= 16*1024**3 %}
{% set innodb_buffer_pool_chunk_size = '128M' %}
{% elif memory_guarantee >= 8*1024**3 %}
{% set innodb_buffer_pool_chunk_size = '64M' %}
{% else %}
{% set innodb_buffer_pool_chunk_size = '32M' %}
{% endif %}

# InnoDB settings
innodb_page_size = {{ salt['pillar.get']('data:mysql:config:innodb_page_size', 16384) }}
innodb_buffer_pool_size = {{ (salt['pillar.get']('data:mysql:config:innodb_buffer_pool_size', innodb_buffer_pool_size_default) // 1024 // 1024)|int }}M
innodb_buffer_pool_chunk_size = {{ innodb_buffer_pool_chunk_size }}
innodb_file_per_table = ON
innodb_numa_interleave = {{ 'ON' if salt['pillar.get']('data:mysql:config:innodb_numa_interleave', False) else 'OFF' }}
innodb_log_buffer_size = {{ salt['pillar.get']('data:mysql:config:innodb_log_buffer_size', 16777216) }}
innodb_log_file_size = {{ salt['pillar.get']('data:mysql:config:innodb_log_file_size', 268435456) }}
innodb_autoinc_lock_mode = 2
innodb_adaptive_hash_index = {{ 'ON' if salt['pillar.get']('data:mysql:config:innodb_adaptive_hash_index', True) else 'OFF' }}
innodb_use_native_aio = ON
innodb_flush_method = O_DIRECT
innodb_flush_log_at_trx_commit = {{ salt['pillar.get']('data:mysql:config:innodb_flush_log_at_trx_commit', 1) }}
innodb_lock_wait_timeout = {{ salt['pillar.get']('data:mysql:config:innodb_lock_wait_timeout', 50) }}
{% if mysql.version.num < 800 %}
innodb_use_global_flush_log_at_trx_commit = OFF
{% endif %}
innodb_print_all_deadlocks = {{ 'ON' if salt['pillar.get']('data:mysql:config:innodb_print_all_deadlocks', False) else 'OFF' }}
transaction_isolation = {{ salt['pillar.get']('data:mysql:config:transaction_isolation', 'REPEATABLE-READ') }}
innodb_thread_concurrency = {{ salt['pillar.get']('data:mysql:config:innodb_thread_concurrency', 0) }}
innodb_read_io_threads = {{ salt['pillar.get']('data:mysql:config:innodb_read_io_threads', 4) }}
innodb_write_io_threads = {{ salt['pillar.get']('data:mysql:config:innodb_write_io_threads', 4) }}
innodb_purge_threads = {{ salt['pillar.get']('data:mysql:config:innodb_purge_threads', 4) }}
innodb_io_capacity = {{ salt['pillar.get']('data:mysql:config:innodb_io_capacity', 200) }}
innodb_io_capacity_max = {{ salt['pillar.get']('data:mysql:config:innodb_io_capacity_max', 2000) }}
{% if salt['pillar.get']('data:mysql:config:innodb_temp_data_file_max_size', 0)|int > 0 %}
innodb_temp_data_file_path = ibtmp1:12M:autoextend:max:{{ salt['pillar.get']('data:mysql:config:innodb_temp_data_file_max_size') }}
{% endif %}
innodb_status_output = {{ 'ON' if salt['pillar.get']('data:mysql:config:innodb_status_output', False) else 'OFF' }}
innodb_online_alter_log_max_size = {{ salt['pillar.get']('data:mysql:config:innodb_online_alter_log_max_size', 134217728) | int }}
innodb_ft_min_token_size = {{ salt['pillar.get']('data:mysql:config:innodb_ft_min_token_size', 3) | int }}
innodb_ft_max_token_size = {{ salt['pillar.get']('data:mysql:config:innodb_ft_max_token_size', 84) | int }}
innodb_strict_mode = {{ 'ON' if salt['pillar.get']('data:mysql:config:innodb_strict_mode', True) else 'OFF' }}
lower_case_table_names = {{ salt['pillar.get']('data:mysql:config:lower_case_table_names', 0) | int }}
{% if mysql.version.num < 800 %}
show_compatibility_56 = {{ 'ON' if salt['pillar.get']('data:mysql:config:show_compatibility_56', False) else 'OFF' }}
{% endif %}

# SQL mode
{% set default_sql_mode = ['ONLY_FULL_GROUP_BY', 'STRICT_TRANS_TABLES', 'NO_ZERO_IN_DATE','NO_ZERO_DATE','ERROR_FOR_DIVISION_BY_ZERO','NO_ENGINE_SUBSTITUTION', 'NO_DIR_IN_CREATE'] %}
sql_mode = {{ ','.join(salt['pillar.get']('data:mysql:config:sql_mode', default_sql_mode) | unique) or "''" }}
explicit_defaults_for_timestamp = {{ 'ON' if salt['pillar.get']('data:mysql:config:explicit_defaults_for_timestamp', True) else 'OFF' }}

# Replication
server_id = {{ salt['pillar.get']('data:mysql:config:server-id', 0) }}
binlog_format = ROW
gtid_mode = ON
enforce_gtid_consistency = ON
log_bin_trust_function_creators = ON
log_slave_updates = ON
max_binlog_size = 100M
binlog_cache_size = {{ salt['pillar.get']('data:mysql:config:binlog_cache_size', 32768) }}
sync_binlog = {{ salt['pillar.get']('data:mysql:config:sync_binlog', 1) }}
binlog_group_commit_sync_delay = {{ salt['pillar.get']('data:mysql:config:binlog_group_commit_sync_delay', 0) }}
binlog_row_image = {{ salt['pillar.get']('data:mysql:config:binlog_row_image', 'FULL') }}
binlog_rows_query_log_events = {{ 'ON' if salt['pillar.get']('data:mysql:config:binlog_rows_query_log_events', False) else 'OFF' }}
expire_logs_days = 14
master_info_repository = TABLE
relay_log_info_repository = TABLE
relay_log_recovery = ON
slave_rows_search_algorithms = {{ ','.join(salt['pillar.get']('data:mysql:config:slave_rows_search_algorithms', ['INDEX_SCAN', 'HASH_SCAN'])) }}
slave_transaction_retries = 256
log_bin = mysql-bin-log-{{ salt['grains.get']('fqdn')|replace('.','-') }}
log_bin_index = /var/lib/mysql/mysql-bin-log.index
relay_log = mysql-relay-log-{{ salt['grains.get']('fqdn')|replace('.','-') }}
relay_log_index = /var/lib/mysql/mysql-relay-log.index

# Semi-sync replication
plugin_load_add = 'rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so'
loose-rpl_semi_sync_master_timeout = 31536000000
loose-rpl_semi_sync_master_wait_no_slave = ON
loose-rpl_semi_sync_master_wait_point = AFTER_SYNC
loose-rpl_semi_sync_master_wait_for_slave_count = {{ salt['pillar.get']('data:mysql:config:rpl_semi_sync_master_wait_for_slave_count', 1) }}

read_only = ON
super_read_only = ON
{% if salt['pillar.get']('data:start_mysync', True) and salt['grains.get']('fqdn') in salt['pillar.get']('data:cluster_nodes:ha', []) %}
offline_mode = ON
{% else %}
offline_mode = OFF
{% endif %}
report_host = {{ salt['grains.get']('fqdn') }}
report_port = 3306

# Parallel slave
slave_parallel_workers = {{ salt['pillar.get']('data:mysql:config:slave_parallel_workers', 8) }}
{% set slave_parallel_type = salt['pillar.get']('data:mysql:config:slave_parallel_type', 'LOGICAL_CLOCK') %}
slave_parallel_type = {{ slave_parallel_type }}
slave_preserve_commit_order = {{ 1 if slave_parallel_type == 'LOGICAL_CLOCK' else 0 }}
transaction_write_set_extraction = XXHASH64
binlog_transaction_dependency_tracking = {{ salt['pillar.get']('data:mysql:config:binlog_transaction_dependency_tracking', 'COMMIT_ORDER') }}

# Performance schema
{% if salt['pillar.get']('data:mysql:config:performance_schema', True) %}
performance_schema = ON
{% if mysql.version.num >= 800 %}
performance_schema_error_size = 0
{% endif %}
performance_schema_hosts_size = 200
performance_schema_accounts_size = 200
performance_schema_max_stage_classes = 200
performance_schema_max_digest_length = {{ salt['pillar.get']('data:mysql:config:max_digest_length', 1024) }}
performance_schema_instrument = '%=ON'
performance_schema_instrument = 'wait/synch/%=OFF'
performance_schema_consumer_events_waits_current             = ON
performance_schema_consumer_events_waits_history             = OFF
performance_schema_consumer_events_waits_history_long        = ON
performance_schema_consumer_events_stages_current            = ON
performance_schema_consumer_events_stages_history            = OFF
performance_schema_consumer_events_stages_history_long       = ON
performance_schema_consumer_events_statements_current        = ON
performance_schema_consumer_events_statements_history        = OFF
performance_schema_consumer_events_statements_history_long   = ON
performance_schema_consumer_events_transactions_current      = ON
performance_schema_consumer_events_transactions_history      = OFF
performance_schema_consumer_events_transactions_history_long = OFF
performance_schema_consumer_global_instrumentation           = ON
performance_schema_consumer_thread_instrumentation           = ON
performance_schema_consumer_statements_digest                = ON
{% else %}
performance_schema = OFF
{% endif %}
max_digest_length = {{ salt['pillar.get']('data:mysql:config:max_digest_length', 1024) }}

[mysqldump]
quick
quote-names
max_allowed_packet = 16M
