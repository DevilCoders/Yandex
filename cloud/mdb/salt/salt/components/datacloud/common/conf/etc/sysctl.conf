# Kernel sysctl configuration file for Red Hat Linux
#
# For binary values, 0 is disabled, 1 is enabled. See sysctl(8) and
# sysctl.conf(5) for more details.
#
# See also https://www.kernel.org/doc/Documentation/sysctl/
#
#=
# Controls IP packet forwarding
net.ipv4.ip_forward = 0
#
#=
# Do not accept source routing
net.ipv4.conf.default.accept_source_route = 0
#
#=
# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 1
#
#=
# Controls whether core dumps will append the PID to the core filename
# Useful for debugging multi-threaded applications
kernel.core_uses_pid = 1
#
#=
# Controls the use of TCP syncookies
net.ipv4.tcp_syncookies = 1
#
#=
# Controls the maximum size of a message, in bytes
kernel.msgmnb = 65536
#
#=
# Controls the default maxmimum size of a mesage queue
kernel.msgmax = 65536
#
#=
# Controls the maximum shared segment size, in bytes
kernel.shmmax = 4294967295
#
#=
# Controls the maximum number of shared memory segments, in pages
kernel.shmall = 268435456
#
#=
# PID allocation wrap value (limit on the maximum number of PID values)
kernel.pid_max = 4194304
#
#=
# Specify a core dumpfile pattern name
kernel.core_pattern={{ salt.pillar.get('data:sysctl:kernel.core_pattern', '/var/cores/core.%p.%e.%s') }}
#
#=
# Log Spoofed Packets
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1
#
#=
# Disables IP source routing
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
#
#=
# Enable ignoring broadcasts request
net.ipv4.icmp_echo_ignore_broadcasts = 1
#
#=
# Enable bad error message Protection
net.ipv4.icmp_ignore_bogus_error_responses = 1
#
#=
# Disable Path MTU discovery
net.ipv4.ip_no_pmtu_disc = 1
#
#=
# Turn on the tcp_sack, tcp_fack and tcp_dsack
net.ipv4.tcp_sack = 1
net.ipv4.tcp_fack = 1
net.ipv4.tcp_dsack = 1
#
#=
# Turn on the tcp_timestamps
net.ipv4.tcp_timestamps = 1
#
#=
# Turn on the tcp_window_scaling
net.ipv4.tcp_window_scaling = 1
#
#=
# Increases the size of the socket queue (effectively, q0).
net.ipv4.tcp_max_syn_backlog = 2048
#
#=
# Increase number of incoming connections backlog
net.core.somaxconn = 16384
net.core.netdev_max_backlog = 4096
#
#=
# Increase the tcp-time-wait buckets pool size
net.ipv4.tcp_max_tw_buckets = 1440000
#
#=
# Decrease keepalive time and probes
net.ipv4.tcp_keepalive_time = 15
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.tcp_keepalive_intvl = 3
#
#=
# Decrease tcp_fin_timeout connection
net.ipv4.tcp_fin_timeout = 15
#
#=
# Bump up default r/wmem to max
net.core.rmem_default = 33554432
net.core.wmem_default = 33554432
#
#=
# Bump up max r/wmem
net.core.rmem_max = 33554432
net.core.wmem_max = 33554432
#
#=
# Bump optmem_max up
net.core.optmem_max = 20480
#
#=
# Increase size of socket buffers
net.ipv4.tcp_rmem = 4096 87380 33554432
net.ipv4.tcp_wmem = 4096 65536 33554432
net.ipv4.tcp_mem = 3092190 4122920 6184380
#
#=
# Tune congestion control for 10G network
net.ipv4.tcp_congestion_control = illinois
#
#=
# https://wiki.yandex-team.ru/noc/osnetworktuning/
net.ipv6.neigh.default.base_reachable_time_ms = 3600000
#net.ipv6.neigh.default.retrans_time_ms = 300000
#net.ipv6.conf.default.accept_dad = 0
#
#=
# Adjust where the gc will leave arp table alone
net.ipv4.neigh.default.gc_thresh1 = 512
#
#=
# Tell the gc when to become aggressive with arp table cleaning
net.ipv4.neigh.default.gc_thresh2 = 2048
#
#=
# Don't allow the arp table to become bigger than this
net.ipv4.neigh.default.gc_thresh3 = 4096
#
#=
# Increase size of file handles and inode cache
fs.file-max = 4500000
#
#=
# Use more RAM and less swap
vm.swappiness = 10
vm.vfs_cache_pressure = 50
#
#=
# Make OOM killer less agressive when there is no swap
vm.overcommit_memory = 0
vm.overcommit_ratio = 80
#
#=
# Reboot in N seconds after kernel panic
kernel.panic = {{ salt.pillar.get('data:sysctl:kernel.panic', '10') }}
# Induce kernel panic on OOM event
vm.panic_on_oom = {{ salt.pillar.get('data:sysctl:vm.panic_on_oom', '0') }}

#
#=
# Increase semaphores
kernel.sem = 250 32000 100 1024
#
#=
# Allow setuid process to make cores
fs.suid_dumpable = 2
#
#=
# Do no accept Router Advertisements
net.ipv6.conf.all.accept_ra = 0
#
#==========
# Following entries are needed for living with tunnel L3 NOC SLB
# See https://wiki.yandex-team.ru/noc/slb-tun-rssetup/
#
# disable root policy filtering due to asymmetric traffic delivery
net.ipv4.conf.default.rp_filter = 0
net.ipv4.conf.all.rp_filter = 0
#
#=
# Disable ICMP Redirect Acceptance
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
# don't send ICMP redirects for we are not a router
net.ipv4.conf.all.send_redirects = 0
#
#=
# Adjust route cache GC so it doesn't work all the time
# (for there are millions of source-addresses out there
# and every single one gets into route cache)
net.ipv4.route.gc_elasticity = 8
net.ipv4.route.gc_interval = 60
net.ipv4.route.gc_min_interval = 0
net.ipv4.route.gc_min_interval_ms = 500
net.ipv4.route.gc_thresh = 3145728
net.ipv4.route.gc_timeout = 60
#
#=
# ip6 requirements
# GC tuning
net.ipv6.neigh.default.gc_thresh1 = 1024
net.ipv6.neigh.default.gc_thresh2 = 2048
net.ipv6.neigh.default.gc_thresh3 = 4096
#=
# default value is way too small, bump it.
net.ipv6.route.max_size = 32768
#
# End tunnel L3 NOC SLB section
#==========

