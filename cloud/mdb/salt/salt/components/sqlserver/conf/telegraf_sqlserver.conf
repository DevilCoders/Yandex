{% extends 'components/mdb-telegraf-windows/conf/telegraf.conf' %}
{% set sli_metric_name = "managed_sqlserver_sli" %}
###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################
{% block output_plugins %}
{{ super() }}
{% block output_plugins_yandex_monitoring %}

[[outputs.yandex_monitoring]]
    project = "{{ salt['pillar.get']('data:dbaas:cloud:cloud_ext_id') }}"
    service = 'managed-sqlserver'
    cluster = "{{ salt['pillar.get']('data:dbaas:folder:folder_ext_id') }}"
    resource_id = "{{ salt['pillar.get']('data:dbaas:cluster_id', '') }}"
    resource_type = 'cluster'
    ca_path = 'C:\ProgramData\yandex\allCAs.pem'
    push_url = "{{ salt['pillar.get']('data:solomon_cloud:push_url') }}"
    namepass = [
            'win_disk',
            'win_cpu',
            'win_net',
            'mdb_performance_counters',
            'mdb_sqlserver_sli',
            'mdb_sql_wait_stats_categorize',
            'mdb_volume_space',
            'managed_sqlserver_sli',
            'mdb_sqlserver_database_io'
    ]
    http_timeout = 10
    tagpass = [ 'database_name', 'instance', 'object', 'objectname' ]
    auth_token_path = 'C:\ProgramData\IAMTokenReissuer\iam_token.txt'
    flush_interval = "20s"
    enable_old_metric_name = true

[[outputs.yandex_monitoring]]
    project = "yandexcloud"
    service = "yandexcloud_dbaas"
    cluster = "mdb_{{ salt['pillar.get']('data:dbaas:cluster_id', '') }}"
    resource_id = "{{ salt['pillar.get']('data:dbaas:cluster_id', '') }}"
    resource_type = 'cluster'
    ca_path = 'C:\ProgramData\yandex\allCAs.pem'
    push_url = "{{ salt['pillar.get']('data:solomon_cloud:push_url') }}"
   namepass = [
            'win_disk',
            'win_cpu',
            'win_net',
            'mdb_performance_counters',
            'mdb_sqlserver_sli',
            'mdb_sql_wait_stats_categorize',
            'mdb_volume_space',
            'managed_sqlserver_sli',
            'mdb_sqlserver_database_io'
    ]
    http_timeout = 10
    tagpass = [ 'database_name', 'instance', 'object', 'objectname' ]
    auth_token_path = 'C:\ProgramData\IAMTokenReissuer\iam_token.txt'
    flush_interval = "20s"
    enable_old_metric_name = true
{% endblock %}
{% endblock %}
###############################################################################
#                            PROCESSOR PLUGINS                                #
###############################################################################
{% block processor_plugins %}
{{ super() }}
[[processors.yandex-monitoring-tags-getter]]
    [[processors.yandex-monitoring-tags-getter.BindTags]]
            tag_name = "node"
            source_name = "is_master"
            ttl = 20.0
            [[processors.yandex-monitoring-tags-getter.BindTags.Rules]]
                    trigger_value = true
                    bind_value = "primary"
            [[processors.yandex-monitoring-tags-getter.BindTags.Rules]]
                    trigger_value = false
                    bind_value = "replica"

{% endblock %}
###############################################################################
#                            AGGREGATOR PLUGINS                               #
###############################################################################
###############################################################################
#                            CONNECTION POOL                                  #
###############################################################################
{% block connection_pool %}
{{ super() }}
[[inputs.sqlserver_connection]]
    address = "host=localhost port=1433 dbname=master"
	name = "connection_1"
	max_connections = 2
	max_idle_connections = 2
{% endblock %}
###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################
{% block input_plugins %}
{{ super() }}
# Read MDB-specifi metrics from SQLServer
[[inputs.mdb_sqlserver]]
    include_queries = [ 'mdb_performance_counters', 'mdb_sqlserver_sli', 'mdb_sql_wait_stats_categorize', 'mdb_volume_space', 'managed_sqlserver_sli', 'mdb_sqlserver_database_io' ]
    fqdn = "{{ salt['pillar.get']('data:dbaas:fqdn', '') }}"

# Read metrics from Microsoft SQL Server
[[inputs.sqlserver]]
## Specify instances to monitor with a list of connection strings.
## All connection parameters are optional.
## By default, the host is localhost, listening on default port, TCP 1433.
##   for Windows, the user is the currently running AD user (SSO).
##   See https://github.com/denisenkom/go-mssqldb for detailed connection
##   parameters, in particular, tls connections can be created like so:
##   "encrypt=true;certificate=<cert>;hostNameInCertificate=<SqlServer host fqdn>"
# servers = [
#  "Server=192.168.1.10;Port=1433;User Id=<user>;Password=<pw>;app name=telegraf;log=1;",
# ]

## Optional parameter, setting this to 2 will use a new version
## of the collection queries that break compatibility with the original
## dashboards.
## Version 2 - is compatible from SQL Server 2012 and later versions and also for SQL Azure DB
query_version = 2

## If you are using AzureDB, setting this to true will gather resource utilization metrics
# azuredb = false

## Possible queries
## Version 2:
## - PerformanceCounters
## - WaitStatsCategorized
## - DatabaseIO
## - ServerProperties
## - MemoryClerk
## - Schedulers
## - SqlRequests
## - VolumeSpace
## - Cpu
## Version 1:
## - PerformanceCounters
## - WaitStatsCategorized
## - CPUHistory
## - DatabaseIO
## - DatabaseSize
## - DatabaseStats
## - DatabaseProperties
## - MemoryClerk
## - VolumeSpace
## - PerformanceMetrics

## A list of queries to include. If not specified, all the above listed queries are used.
include_query = [ 'Schedulers' ]

## A list of queries to explicitly ignore.
#exclude_query = [ 'Schedulers' , 'SqlRequests']


{% endblock %}
###############################################################################
#                            CHECKS                                           #
###############################################################################
{% block checks %}
{{ super() }}
    [[inputs.juggler_runner.Checks]]
        service = "sqlserver_ping"
        execution_interval = 60
        execution_timeout = 10
        name = "mdb_sqlserver_ping_check"
        [inputs.juggler_runner.Checks.args]
            connection_name = "connection_1"

    [[inputs.juggler_runner.Checks]]
        service = "tls"
        execution_interval = 600
        execution_timeout = 10
        name = "mdb_sqlserver_tls_check"
        [inputs.juggler_runner.Checks.args]
            connection_name = "connection_1"

    [[inputs.juggler_runner.Checks]]
        service = "superusers_check"
        execution_interval = 600
        execution_timeout = 10
        name = "mdb_sqlserver_superusers_check"
        [inputs.juggler_runner.Checks.args]
            connection_name = "connection_1"

    [[inputs.juggler_runner.Checks]]
        service = "sqlserver_backup_age"
        random_sleep = 1000
        execution_interval = 1200
        execution_timeout = 1100
        command = '&"C:\Program Files\MDB\juggler\sqlserver_backup_age.ps1" -crit 4 -warn 2'

    [[inputs.juggler_runner.Checks]]
        service = "walg_proxy_status"
        random_sleep = 45
        execution_interval = 1200
        execution_timeout = 60
        command = '&"C:\Program Files\MDB\juggler\service.ps1" -service_name walg-proxy'
{% endblock %}
