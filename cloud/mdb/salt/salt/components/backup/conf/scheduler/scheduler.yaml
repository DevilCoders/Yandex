scheduler:
  schedule_config:
    future_interval: 5m
    past_interval: 120m
    cluster_type_rules:
{% for ctype, rules in salt.pillar.get('data:mdb-backup:scheduler:schedule_config:cluster_type_rules').items() %}
      {{ ctype }}:
        schedule_mode: {{ rules.schedule_mode }}
        exclude_subclusters: {{ rules.exclude_subclusters }}
{% endfor %}
  obsolete_config:
    schedule_delete_after: 168h # 1 week
  purge_config:
    purge_obsoleted_after: 336h # 2 weeks

app:
  app_name: backup_scheduler
  environment:
    {{ salt.pillar.get('data:environment') | yaml(False) | indent(4) }}
  logging:
    level: debug
  solomon:
    project: {{ salt['pillar.get']('data:solomon:project') | yaml }}
    service: {{ salt['pillar.get']('data:solomon:service') | yaml }}
    cluster: {{ salt['pillar.get']('data:solomon:cluster') | yaml }}
    url: {{ salt['pillar.get']('data:solomon:url') | yaml }}
    oauth_token: {{ salt['pillar.get']('data:solomon:oauth_token') | yaml }}
    use_name_tag: {{ salt['pillar.get']('data:solomon:use_name_tag', False) | yaml}}
  service_account:
    id: {{ salt.pillar.get('data:mdb-backup:service_account:id') }}
    key_id: {{ salt.pillar.get('data:mdb-backup:service_account:key_id') }}
    private_key: {{ salt.pillar.get('data:mdb-backup:service_account:private_key') | yaml_encode }}
metadb:
  addrs: {{ salt.pillar.get('data:metadb:hosts') | yaml }}
  db: dbaas_metadb
  user: backup_scheduler
  password: {{ salt.pillar.get('data:config:pgusers:backup_scheduler:password') | yaml_encode }}
  sslmode: 'verify-full'
  sslrootcert: '/opt/yandex/allCAs.pem'
