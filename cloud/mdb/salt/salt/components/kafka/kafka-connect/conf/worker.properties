{%- set admin_password = salt['pillar.get']('data:kafka:admin_password') -%}
{%- set fqdn = salt['grains.get']('id') -%}
# AdminAPI connect properties
group.id=connect-cluster
bootstrap.servers={{ salt['mdb_kafka.kafka_connect_cluster_brokers_list']() }}
sasl.mechanism=SCRAM-SHA-512
security.protocol=SASL_SSL
ssl.truststore.location=/etc/kafka/ssl/server.truststore.jks
ssl.truststore.password={{ admin_password }}
sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="mdb_admin" password="{{ admin_password }}";
# Producer connect properties
producer.sasl.mechanism=SCRAM-SHA-512
producer.security.protocol=SASL_SSL
producer.ssl.truststore.location=/etc/kafka/ssl/server.truststore.jks
producer.ssl.truststore.password={{ admin_password }}
producer.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="mdb_admin" password="{{ admin_password }}";
# Consumer connect properties
consumer.sasl.mechanism=SCRAM-SHA-512
consumer.security.protocol=SASL_SSL
consumer.ssl.truststore.location=/etc/kafka/ssl/server.truststore.jks
consumer.ssl.truststore.password={{ admin_password }}
consumer.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="mdb_admin" password="{{ admin_password }}";
# Worker properties
plugin.path=/etc/kafka-connect/plugins
key.converter=org.apache.kafka.connect.json.JsonConverter
value.converter=org.apache.kafka.connect.json.JsonConverter
key.converter.schemas.enable=true
value.converter.schemas.enable=true
config.storage.topic=__connect-configs
offset.storage.topic=__connect-offsets
status.storage.topic=__connect-status
offset.storage.replication.factor={{ salt.mdb_kafka.default_replication_factor() }}
status.storage.replication.factor={{ salt.mdb_kafka.default_replication_factor() }}
config.storage.replication.factor={{ salt.mdb_kafka.default_replication_factor() }}
offset.flush.interval.ms=1000
# Worker's REST interface properties
listeners=HTTPS://{{ fqdn }}:8083
rest.advertised.host.name={{ fqdn }}
rest.advertised.port=8083
rest.advertised.listener=https
listeners.https.ssl.client.auth=none
listeners.https.ssl.truststore.location=/etc/kafka/ssl/server.truststore.jks
listeners.https.ssl.truststore.password={{ admin_password }}
listeners.https.ssl.keystore.location=/etc/kafka/ssl/server.keystore.jks
listeners.https.ssl.keystore.password={{ admin_password }}
listeners.https.ssl.key.password={{ admin_password }}


