[pg_log_errors]
execution_interval=120
execution_timeout=110
start_random_sleep=90
{% set fqdn = salt['pillar.get']('data:dbaas:fqdn', salt['grains.get']('fqdn', 'unknown')) %}
{% set my_dc = salt['grains.get']('ya:short_dc', fqdn[:3]) %}
{% set env = salt['pillar.get']('yandex:environment', 'prod') %}
{% set cond_group =  salt['grains.get']('ya:group', 'unknown') %}
{% set cond_groups =  salt['grains.get']('ya:conductor', []) %}
command=python /usr/local/yandex/monitoring/pg_log_errors.py -w {{ salt['pillar.get']('data:monrun:pg_log_errors:warn', '20\ 100') }} -c {{ salt['pillar.get']('data:monrun:pg_log_errors:crit', '10000\ 10000') }} -e {{ salt['pillar.get']('data:monrun:pg_log_errors:exclude', '\'ERRCODE_READ_ONLY_SQL_TRANSACTION\'' ) }} -r {{ salt['pillar.get']('data:monrun:pg_log_errors:exclude_replica', '\'ERRCODE_LOCK_NOT_AVAILABLE\'' ) }}
type=postgres
{% if salt['pillar.get']('data:dbaas:vtype') == 'compute' and salt['pillar.get']('data:dbaas:cluster_id') %}
send_for_host={{ salt.dbaas.managed_hostname() }}
{% endif %}
