[pg_xlog_files]
execution_interval=180
execution_timeout=170
start_random_sleep=45
{% set environment = salt['pillar.get']('yandex:environment', 'dev') %}
{% set vtype = salt['pillar.get']('data:dbaas:vtype') %}
{% set warn_limit = salt['pillar.get']('data:monrun:pg_xlog_files:warn', '300') %}
{% set crit_limit = salt['pillar.get']('data:monrun:pg_xlog_files:crit', '900') %}
# wal-verify check runs only if gpg key is configured correctly
{% set gpg_key_exists = salt['pillar.get']('data:s3:gpg_key') %}
{% if (environment == 'dev' or environment == 'qa') and salt['pillar.get']('data:use_walg', True) and salt['pillar.get']('data:use_mdbsecrets', True) and gpg_key_exists %}
command=/usr/local/yandex/monitoring/pg_xlog_files.py -w {{ warn_limit }} -c {{ crit_limit }} --wal-verify-checks integrity timeline
{% else %}
command=/usr/local/yandex/monitoring/pg_xlog_files.py -w {{ warn_limit }} -c {{ crit_limit }}
{% endif %}
type=postgres
{% if vtype == 'compute' and salt['pillar.get']('data:dbaas:cluster_id') %}
send_for_host={{ salt.dbaas.managed_hostname() }}
{% endif %}
