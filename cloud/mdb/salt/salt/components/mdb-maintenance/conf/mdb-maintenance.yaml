cms:
  host: "{{ salt['dbaas.pillar']('data:mdb-maintenance:cms:addr', '') }}"
  transport:
    security:
      tls:
        ca_file: "/opt/yandex/allCAs.pem"
task_configs_dir_name: {{ salt['pillar.get']('data:mdb-maintenance:tasks:configs_dir') }}
metadb:
  addrs: {{ salt['pillar.get']('data:metadb:hosts') | yaml }}
  db: dbaas_metadb
  user: mdb_maintenance
  password: {{ salt['pillar.get']('data:mdb-maintenance:metadb:password') }}
  sslmode: 'verify-full'
  sslrootcert: '/opt/yandex/allCAs.pem'
maintainer:
  allow_clusters_without_mw: true
  created_by_user: mdb-maintainer
  newly_planned_limit: {{ salt['pillar.get']('data:mdb-maintenance:maintainer:newly_planned_limit', 1000) }}
  newly_planned_clouds: {{ salt['pillar.get']('data:mdb-maintenance:maintainer:newly_planned_clouds', 100) }}
  notify_user_directly: {{ salt['pillar.get']('data:mdb-maintenance:maintainer:notify_user_directly', False) }}
  notify_user_directly_denylist: {{ salt['pillar.get']('data:mdb-maintenance:maintainer:notify_user_directly_denylist', []) | yaml }}
  task_id_prefixes:
{% set prefixes = salt['pillar.get']('data:prefixes:tasks') %}
{% for cluster in prefixes | sort %}
    {{ cluster }}_cluster: {{ prefixes[cluster] }}
{% endfor %}
notifier:
  endpoint: {{ salt['pillar.get']('data:mdb-maintenance:notifier:endpoint') }}
  transport:
    logging: {{ salt['pillar.get']('data:mdb-maintenance:notifier:transport:logging') | yaml }}
app:
  logging:
    level: debug
  instrumentation:
    addr: "[::1]:{{ salt['pillar.get']('data:mdb-maintenance:instrumentation:port') }}"
  sentry:
    dsn: {{ salt.pillar.get('data:mdb-maintenance:sentry:dsn') }}
    environment: {{ salt.pillar.get('data:sentry:environment') }}
  solomon:
    project: {{ salt['pillar.get']('data:solomon:project') | yaml }}
    service: {{ salt['pillar.get']('data:solomon:service') | yaml }}
    cluster: {{ salt['pillar.get']('data:solomon:cluster') | yaml }}
    url: {{ salt['pillar.get']('data:solomon:url') | yaml }}
    iam_token: {{ salt['pillar.get']('data:solomon:iam_token') | yaml }}
    oauth_token: {{ salt['pillar.get']('data:solomon:oauth_token') | yaml }}
    use_name_tag: {{ salt['pillar.get']('data:solomon:use_name_tag', False) | yaml}}
  prometheus:
    url: {{ salt['pillar.get']('data:mdb-maintenance:prometheus:url', '') | yaml }}
  service_account:
    id: {{ salt['pillar.get']('data:mdb-maintenance:service_account:id') }}
    key_id: {{ salt['pillar.get']('data:mdb-maintenance:service_account:key_id') }}
    private_key: {{ salt['pillar.get']('data:mdb-maintenance:service_account:private_key') | yaml_encode }}
  app_name: maintenance
  environment:
    {{ salt['dbaas.pillar']('data:environment') | yaml(False) | indent(4) }}
resource_manager:
  target: {{ salt['pillar.get']('data:resource_manager:target', '') | yaml }}
  client_config:
    security:
      tls:
        ca_file: /opt/yandex/allCAs.pem
holidays:
  enabled: {{ salt['dbaas.pillar']('data:mdb-maintenance:holidays:enabled', True) | yaml }}
  memoized: {{ salt['dbaas.pillar']('data:mdb-maintenance:holidays:memoized', True) | yaml }}
  http_client:
    country: {{ salt['dbaas.pillar']('data:mdb-maintenance:holidays:http_client:country', 'rus') | yaml }}
    url: {{ salt['dbaas.pillar']('data:mdb-maintenance:holidays:http_client:url',  'https://api.calendar.yandex-team.ru/intapi') | yaml }}
    timeout: {{ salt['dbaas.pillar']('data:mdb-maintenance:holidays:http_client:timeout',  '10s') | yaml }}
