<?xml version="1.0" encoding="UTF-8"?>

<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<profiles>
    <profile>
        <name>s3:text</name>
        <description>This profile is suitable for using when reading delimited single line records
            from plain text, tab-delimited, files on S3
        </description>
        <plugins>
            <fragmenter>org.greenplum.pxf.plugins.hdfs.HdfsDataFragmenter</fragmenter>
            <accessor>org.greenplum.pxf.plugins.hdfs.LineBreakAccessor</accessor>
            <resolver>org.greenplum.pxf.plugins.hdfs.StringPassResolver</resolver>
        </plugins>
        <protocol>s3a</protocol>
        <handler>org.greenplum.pxf.plugins.s3.S3ProtocolHandler</handler>
        <optionMappings>
            <mapping option="accesskey" property="fs.s3a.access.key"/>
            <mapping option="secretkey" property="fs.s3a.secret.key"/>
            <mapping option="endpoint" property="fs.s3a.endpoint"/>
        </optionMappings>
    </profile>
    <profile>
        <name>s3:csv</name>
        <description>This profile is suitable for using when reading delimited single line records
            from plain text CSV files on S3
        </description>
        <plugins>
            <fragmenter>org.greenplum.pxf.plugins.hdfs.HdfsDataFragmenter</fragmenter>
            <accessor>org.greenplum.pxf.plugins.hdfs.LineBreakAccessor</accessor>
            <resolver>org.greenplum.pxf.plugins.hdfs.StringPassResolver</resolver>
        </plugins>
        <protocol>s3a</protocol>
        <handler>org.greenplum.pxf.plugins.s3.S3ProtocolHandler</handler>
        <optionMappings>
            <mapping option="accesskey" property="fs.s3a.access.key"/>
            <mapping option="secretkey" property="fs.s3a.secret.key"/>
            <mapping option="endpoint" property="fs.s3a.endpoint"/>
        </optionMappings>
    </profile>
    <profile>
        <name>s3:orc</name>
        <description>A profile for reading ORC data from S3</description>
        <plugins>
            <fragmenter>org.greenplum.pxf.plugins.hdfs.HdfsDataFragmenter</fragmenter>
            <accessor>org.greenplum.pxf.plugins.hdfs.orc.ORCVectorizedAccessor</accessor>
            <resolver>org.greenplum.pxf.plugins.hdfs.orc.ORCVectorizedResolver</resolver>
        </plugins>
        <protocol>s3a</protocol>
        <handler>org.greenplum.pxf.plugins.s3.S3ProtocolHandler</handler>
        <optionMappings>
            <mapping option="accesskey" property="fs.s3a.access.key"/>
            <mapping option="secretkey" property="fs.s3a.secret.key"/>
            <mapping option="endpoint" property="fs.s3a.endpoint"/>
        </optionMappings>
    </profile>
    <profile>
        <name>s3:text:multi</name>
        <description>This profile is suitable for using when reading delimited single or multi line
            records (with quoted linefeeds) from plain text files on HDFS. It is not splittable (non
            parallel) and slower than HdfsTextSimple.
        </description>
        <plugins>
            <fragmenter>org.greenplum.pxf.plugins.hdfs.HdfsFileFragmenter</fragmenter>
            <accessor>org.greenplum.pxf.plugins.hdfs.QuotedLineBreakAccessor</accessor>
            <resolver>org.greenplum.pxf.plugins.hdfs.StringPassResolver</resolver>
        </plugins>
        <protocol>s3a</protocol>
        <optionMappings>
            <mapping option="accesskey" property="fs.s3a.access.key"/>
            <mapping option="secretkey" property="fs.s3a.secret.key"/>
            <mapping option="endpoint" property="fs.s3a.endpoint"/>
        </optionMappings>
    </profile>
    <profile>
        <name>s3:parquet</name>
        <description>A profile for reading and writing Parquet data from S3</description>
        <plugins>
            <fragmenter>org.greenplum.pxf.plugins.hdfs.HdfsDataFragmenter</fragmenter>
            <accessor>org.greenplum.pxf.plugins.hdfs.ParquetFileAccessor</accessor>
            <resolver>org.greenplum.pxf.plugins.hdfs.ParquetResolver</resolver>
        </plugins>
        <protocol>s3a</protocol>
        <handler>org.greenplum.pxf.plugins.s3.S3ProtocolHandler</handler>
        <optionMappings>
            <mapping option="accesskey" property="fs.s3a.access.key"/>
            <mapping option="secretkey" property="fs.s3a.secret.key"/>
            <mapping option="endpoint" property="fs.s3a.endpoint"/>
        </optionMappings>
    </profile>
    <profile>
        <name>s3:avro</name>
        <description>This profile is suitable for using when reading Avro files (i.e
            fileName.avro)
        </description>
        <plugins>
            <fragmenter>org.greenplum.pxf.plugins.hdfs.HdfsDataFragmenter</fragmenter>
            <accessor>org.greenplum.pxf.plugins.hdfs.AvroFileAccessor</accessor>
            <resolver>org.greenplum.pxf.plugins.hdfs.AvroResolver</resolver>
        </plugins>
        <protocol>s3a</protocol>
        <optionMappings>
            <mapping option="accesskey" property="fs.s3a.access.key"/>
            <mapping option="secretkey" property="fs.s3a.secret.key"/>
            <mapping option="endpoint" property="fs.s3a.endpoint"/>
        </optionMappings>
    </profile>
    <profile>
        <name>s3:json</name>
        <description>
            Access JSON data either as:
            * one JSON record per line (default)
            * or multiline JSON records with an IDENTIFIER parameter indicating a member name used
            to determine the encapsulating json object to return
        </description>
        <plugins>
            <fragmenter>org.greenplum.pxf.plugins.hdfs.HdfsDataFragmenter</fragmenter>
            <accessor>org.greenplum.pxf.plugins.json.JsonAccessor</accessor>
            <resolver>org.greenplum.pxf.plugins.json.JsonResolver</resolver>
        </plugins>
        <protocol>s3a</protocol>
        <handler>org.greenplum.pxf.plugins.s3.S3ProtocolHandler</handler>
        <optionMappings>
            <mapping option="accesskey" property="fs.s3a.access.key"/>
            <mapping option="secretkey" property="fs.s3a.secret.key"/>
            <mapping option="endpoint" property="fs.s3a.endpoint"/>
        </optionMappings>
    </profile>
    <profile>
        <name>s3:AvroSequenceFile</name>
        <description>
            Read an Avro format stored in sequence file, with separated schema file from S3
        </description>
        <plugins>
            <fragmenter>org.greenplum.pxf.plugins.hdfs.HdfsDataFragmenter</fragmenter>
            <accessor>org.greenplum.pxf.plugins.hdfs.SequenceFileAccessor</accessor>
            <resolver>org.greenplum.pxf.plugins.hdfs.AvroResolver</resolver>
        </plugins>
        <protocol>s3a</protocol>
        <optionMappings>
            <mapping option="accesskey" property="fs.s3a.access.key"/>
            <mapping option="secretkey" property="fs.s3a.secret.key"/>
            <mapping option="endpoint" property="fs.s3a.endpoint"/>
        </optionMappings>
    </profile>
    <profile>
        <name>s3:SequenceFile</name>
        <description>
            Profile for accessing Sequence files serialized with a custom Writable class
        </description>
        <plugins>
            <fragmenter>org.greenplum.pxf.plugins.hdfs.HdfsDataFragmenter</fragmenter>
            <accessor>org.greenplum.pxf.plugins.hdfs.SequenceFileAccessor</accessor>
            <resolver>org.greenplum.pxf.plugins.hdfs.WritableResolver</resolver>
        </plugins>
        <protocol>s3a</protocol>
        <optionMappings>
            <mapping option="accesskey" property="fs.s3a.access.key"/>
            <mapping option="secretkey" property="fs.s3a.secret.key"/>
            <mapping option="endpoint" property="fs.s3a.endpoint"/>
        </optionMappings>
    </profile>
</profiles>
