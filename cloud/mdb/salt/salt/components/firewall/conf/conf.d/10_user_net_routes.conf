{% set ip6_addrs = salt.mdb_network.ip6_interfaces() %}
domain ip6 {
    table mangle {
        chain OUTPUT {
            # By default we route everything through eth1
            MARK set-mark 8;

{% if 'eth0' in ip6_addrs %}
            @def $USERNET_PROJECT_ID = `/usr/local/yandex/ferm_helper.py project_id eth0`;
            # Except for project_id from user's interface
            mod u32 u32 "0x20&0xffffffff=$USERNET_PROJECT_ID"
            MARK set-mark 4;
{% endif %}
        }
    }

    table nat {
        chain POSTROUTING {
{% if 'eth0' in ip6_addrs %}
            outerface eth0 {
                @def $USERNET_ADDRESS = `/usr/local/yandex/ferm_helper.py address eth0`;
                daddr (
                    # All Yandex nets.
                    2a02:6b8::/32
                    # All Yandex.Cloud nets.
                    2a0d:d6c0::/29
                    # IL Yandex.Cloud nets.
                    2a11:f740::/29
                )
                SNAT to-source $USERNET_ADDRESS;
            }
{%     if 'eth1' in ip6_addrs %}
            # Routing rules specify only the next hop and interface, not the source address.
            # In order to allow the returning traffic to get back to this node,
            # the source address must be set here to match that of the outgoing interface.
            # More details could be found on wiki:
            # https://wiki.yandex-team.ru/mdb/internal/operations/network/
            outerface eth1 {
                @def $MANAGED_ADDRESS = `/usr/local/yandex/ferm_helper.py address eth1`;
                daddr (
                    # All Yandex nets.
                    2a02:6b8::/32
                    # All Yandex.Cloud nets.
                    2a0d:d6c0::/29
                    # IL Yandex.Cloud nets.
                    2a11:f740::/29
                )
                SNAT to-source $MANAGED_ADDRESS;
            }
{%     endif %}
{% endif %}
        }
    }
}
