table filter {
    chain INPUT {
        policy DROP;

        # access from yandex nets
{% for cidr in salt['pillar.get']('data:access:yandex_nets:v4', []) %}
        proto tcp saddr '{{ cidr }}' dport (22) ACCEPT;
{% endfor %}
    }

    chain OUTPUT {
        # forbid metadata service from db
        daddr 169.254.169.254 mod owner uid-owner '{{ process_user }}' REJECT reject-with icmp-net-unreachable;
    }
}

domain ip6 {
    table filter {
        chain INPUT {
            policy DROP;

            # access from yandex nets
{% for cidr in salt['pillar.get']('data:access:yandex_nets:v6', []) %}
            proto tcp saddr '{{ cidr }}' dport (22) ACCEPT;
{% endfor %}
        }
    }

    chain OUTPUT {
        # forbid controlplane access from db
{% for nlb_net in salt['pillar.get']('data:access:controlplane_nlb_nets', []) %}
        proto all daddr '{{ nlb_net }}' mod owner uid-owner '{{ process_user }}' REJECT reject-with icmp-net-unreachable;
{% endfor %}
    }
}
