- juggler_check:
  args: "{{ pg_common_checks | hash_merge( unreach_pass, item ) }}"
  with_items:
    - service: pg-ping
      refresh_time: 60
      children:
        service: pg_ping

- juggler_check:
  args: "{{ dict() | hash_replace(pg_common_checks, dict(aggregator='logic_or', aggregator_kwargs=dict(mode='WARN'))) | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: pg-autoconf
      refresh_time: 300
      children:
        service: pg_autoconf

- juggler_check:
  args: "{{ pg_common_checks | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: pg-s3-backup-age
      refresh_time: 1200
      ttl: 7200
      children:
        service: pg_s3_backup_age
      flap:
        stable: 6000
        critical: 30000
      notifications: "{{ notifications_worktime }}"

- juggler_check:
  args: "{{ pg_common_checks | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: pg-connections
      refresh_time: 60
      children:
        service: pg_connections

- juggler_check:
  args: "{{ pg_common_checks | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: pg-log-errors
      refresh_time: 180
      children:
        service: pg_log_errors

- juggler_check:
  args: "{{ pg_common_checks | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: bouncer-ping
      refresh_time: 60
      children:
        service: bouncer_ping

- juggler_check:
  args: "{{ pg_common_checks | hash_merge( pg_log_pass, item ) }}"
  with_items:
    - service: bouncer-log-errors
      refresh_time: 180
      children:
        service: bouncer_log_errors

- juggler_check:
  args: "{{ pg_common_checks | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: pg-partman
      refresh_time: 180
      children:
        service: pg_partman

- juggler_check:
  args: "{{ pg_common_checks | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: pg-replication-alive
      flap:
        stable: 300
        critical: 600
      refresh_time: 60
      children:
        service: pg_replication_alive

- juggler_check:
  args: "{{ pg_common_checks | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: pg-replication-lag
      flap:
        stable: 300
        critical: 600
      refresh_time: 60
      children:
        service: pg_replication_lag

- juggler_check:
  args: "{{ pg_common_checks | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: pg-xlog-files
      refresh_time: 180
      children:
        service: pg_xlog_files

- juggler_check:
  args: "{{ pg_common_checks | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: pg-prepared-xacts
      refresh_time: 60
      children:
        service: pg_prepared_xacts

- juggler_check:
  args: "{{ pg_common_checks | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: pgsync
      flap:
        stable: 180
        critical: 600
      refresh_time: 60
      children:
        service: pgsync
      meta:
        urls:
          - { title: "How to handle?", url: "https://wiki.yandex-team.ru/MDB/internal/Operations/duty-howto/handling-alerts/pgsync/", type: "mdb" }

- juggler_check:
  args: "{{ dict() | hash_replace(pg_common_checks, dict(aggregator='logic_or', aggregator_kwargs=dict(mode='WARN'))) | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: ssd-fw
      refresh_time: 3600
      ttl: 14400
      children:
        service: ssd_fw

- juggler_check:
  args: "{{ pg_common_checks | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: tls
      refresh_time: 3600
      ttl: 14400
      children:
        service: tls
      meta:
        urls:
          - {title: "How to handle?", url: "https://wiki.yandex-team.ru/mdb/internal/operations/duty-howto/handling-alerts/tls/", type: "mdb"}
      notifications: "{{ notifications_worktime }}"

- juggler_check:
  args: "{{ pg_emergency | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: pg-corruption
      notifications: "{{ notifications_worktime }}"
      refresh_time: 180
      flap:
        stable: 600
        critical: 900
      children:
        service: pg_corruption
      aggregator_kwargs:
        nodata_mode: skip

- juggler_check:
  args: "{{ pg_emergency | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: pg-vacuum
      refresh_time: 300
      children:
        service: pg_vacuum
      aggregator_kwargs:
        nodata_mode: skip

- juggler_check:
  args: "{{ pg_emergency | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: superusers-check
      refresh_time: 60
      children:
        service: superusers_check
      aggregator_kwargs:
        nodata_mode: skip

- juggler_check:
  args: "{{ dict() | hash_replace(pg_common_checks, dict(aggregator='logic_or', aggregator_kwargs=dict(mode='WARN'))) | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: pg-shared-libs-outdated
      refresh_time: 3600
      ttl: 10800
      children:
        service: pg_shared_libs_outdated
      aggregator_kwargs:
        nodata_mode: skip
      meta:
        urls:
          - { title: "How to handle?", url: "https://wiki.yandex-team.ru/mdb/internal/operations/duty-howto/handling-alerts/pgsharedlibsoutdated/", type: "mdb" }


- juggler_check:
  args: "{{ dict() | hash_replace(pg_common_checks, dict(aggregator='logic_or')) | hash_merge( pg_unreach_pass, item ) }}"
  with_items:
    - service: pg-version
      refresh_time: 900
      ttl: 2700
      children:
        service: pg_version
      aggregator_kwargs:
        nodata_mode: skip
      meta:
        urls:
          - { title: "How to handle?", url: "https://wiki.yandex-team.ru/MDB/internal/Operations/duty-howto/handling-alerts/pgversion/", type: "mdb" }

