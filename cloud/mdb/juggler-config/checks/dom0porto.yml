- juggler_check:
  args: "{{ dict() | hash_replace(common_checks, dict(aggregator='logic_or', aggregator_kwargs=dict(mode='WARN'))) | hash_merge( unreach_pass, item ) }}"
  with_items:
    - service: orphan-containers
      refresh_time: 300
      ttl: 1800
      meta:
        urls:
          - {title: "How to handle?", url: "https://wiki.yandex-team.ru/MDB/internal/Operations/duty-howto/handling-alerts/orphan_containers/", type: "mdb"}
      children:
        service: orphan_containers

- juggler_check:
  args: "{{ dict() | hash_replace(common_checks, dict(aggregator='logic_or', aggregator_kwargs=dict(mode='WARN'))) | hash_merge( unreach_pass, item ) }}"
  with_items:
    - service: dbm-heartbeat
      refresh_time: 300
      ttl: 1800
      meta:
        urls:
          - {title: "How to handle?", url: "https://wiki.yandex-team.ru/MDB/internal/Operations/duty-howto/handling-alerts/dbm_heartbeat/", type: "mdb"}
      children:
        service: dbm_heartbeat

- juggler_check:
  args: "{{ dict() | hash_replace(common_checks, dict(aggregator='logic_or', aggregator_kwargs=dict(mode='CRIT'))) | hash_merge( unreach_pass, item ) }}"
  with_items:
    - service: duplicated-containers
      notifications: "{{ notifications_duplicated_containers | default(notifications) }}"
      refresh_time: 180
      ttl: 600
      meta:
        urls:
          - { title: "How to handle?", url: "https://wiki.yandex-team.ru/MDB/internal/Operations/duty-howto/handling-alerts/duplicatedcontainers/", type: "mdb" }
      children:
        service: duplicated_containers

- juggler_check:
  args: "{{ dict() | hash_replace(common_checks, dict(aggregator='logic_or', aggregator_kwargs=dict(mode='WARN'))) | hash_merge( unreach_pass, item ) }}"
  with_items:
    - service: netmon-agent-health
      refresh_time: 300
      ttl: 1800
      meta:
        urls:
          - {title: "How to handle?", url: "https://wiki.yandex-team.ru/MDB/internal/Operations/duty-howto/handling-alerts/netmon_agent_health/", type: "mdb"}
      children:
        service: netmon_agent_health

