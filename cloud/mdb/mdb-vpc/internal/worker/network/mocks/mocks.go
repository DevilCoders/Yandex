// Code generated by MockGen. DO NOT EDIT.
// Source: a.yandex-team.ru/cloud/mdb/mdb-vpc/internal/worker/network (interfaces: Service)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "a.yandex-team.ru/cloud/mdb/mdb-vpc/internal/vpcdb/models"
	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CreateNetwork mocks base method.
func (m *MockService) CreateNetwork(arg0 context.Context, arg1 models.Operation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNetwork", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNetwork indicates an expected call of CreateNetwork.
func (mr *MockServiceMockRecorder) CreateNetwork(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNetwork", reflect.TypeOf((*MockService)(nil).CreateNetwork), arg0, arg1)
}

// CreateNetworkConnection mocks base method.
func (m *MockService) CreateNetworkConnection(arg0 context.Context, arg1 models.Operation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNetworkConnection", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNetworkConnection indicates an expected call of CreateNetworkConnection.
func (mr *MockServiceMockRecorder) CreateNetworkConnection(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNetworkConnection", reflect.TypeOf((*MockService)(nil).CreateNetworkConnection), arg0, arg1)
}

// DeleteNetwork mocks base method.
func (m *MockService) DeleteNetwork(arg0 context.Context, arg1 models.Operation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNetwork", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteNetwork indicates an expected call of DeleteNetwork.
func (mr *MockServiceMockRecorder) DeleteNetwork(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNetwork", reflect.TypeOf((*MockService)(nil).DeleteNetwork), arg0, arg1)
}

// DeleteNetworkConnection mocks base method.
func (m *MockService) DeleteNetworkConnection(arg0 context.Context, arg1 models.Operation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNetworkConnection", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteNetworkConnection indicates an expected call of DeleteNetworkConnection.
func (mr *MockServiceMockRecorder) DeleteNetworkConnection(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNetworkConnection", reflect.TypeOf((*MockService)(nil).DeleteNetworkConnection), arg0, arg1)
}

// ImportVPC mocks base method.
func (m *MockService) ImportVPC(arg0 context.Context, arg1 models.Operation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImportVPC", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ImportVPC indicates an expected call of ImportVPC.
func (mr *MockServiceMockRecorder) ImportVPC(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImportVPC", reflect.TypeOf((*MockService)(nil).ImportVPC), arg0, arg1)
}
