// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ClusterInfo cluster info
//
// swagger:model ClusterInfo
type ClusterInfo struct {

	// Cluster ID this host belongs to
	// Required: true
	Cid string `json:"cid"`

	// Primary host's fqdn
	// Required: true
	Primaryfqdn string `json:"primaryfqdn"`

	// Secondary host's fqdn, either replica or closest quorum
	Secondaryfqdn string `json:"secondaryfqdn,omitempty"`

	// Shard ID this host belongs to
	Sid string `json:"sid,omitempty"`
}

// Validate validates this cluster info
func (m *ClusterInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCid(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrimaryfqdn(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClusterInfo) validateCid(formats strfmt.Registry) error {

	if err := validate.RequiredString("cid", "body", m.Cid); err != nil {
		return err
	}

	return nil
}

func (m *ClusterInfo) validatePrimaryfqdn(formats strfmt.Registry) error {

	if err := validate.RequiredString("primaryfqdn", "body", m.Primaryfqdn); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this cluster info based on context it is used
func (m *ClusterInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ClusterInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClusterInfo) UnmarshalBinary(b []byte) error {
	var res ClusterInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
