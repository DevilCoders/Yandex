// Code generated by go-swagger; DO NOT EDIT.

package dns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"a.yandex-team.ru/cloud/mdb/mdb-dns/generated/swagger/models"
)

// PingOKCode is the HTTP code returned for type PingOK
const PingOKCode int = 200

/*PingOK Service is alive and well

swagger:response pingOK
*/
type PingOK struct {
}

// NewPingOK creates PingOK with default headers values
func NewPingOK() *PingOK {

	return &PingOK{}
}

// WriteResponse to the client
func (o *PingOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PingServiceUnavailableCode is the HTTP code returned for type PingServiceUnavailable
const PingServiceUnavailableCode int = 503

/*PingServiceUnavailable Service temporary unavailable and can't work with clients

swagger:response pingServiceUnavailable
*/
type PingServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPingServiceUnavailable creates PingServiceUnavailable with default headers values
func NewPingServiceUnavailable() *PingServiceUnavailable {

	return &PingServiceUnavailable{}
}

// WithPayload adds the payload to the ping service unavailable response
func (o *PingServiceUnavailable) WithPayload(payload *models.Error) *PingServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the ping service unavailable response
func (o *PingServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PingServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
