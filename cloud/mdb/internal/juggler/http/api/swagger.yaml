{
  "produces": [
    "application/json",
    "application/x-protobuf"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Juggler API",
    "version": "v2"
  },
  "host": "juggler-api.search.yandex.net",
  "paths": {
    "/v2/agent/get_config": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/agent/get_config",
        "parameters": [
          {
            "name": "GetConfigRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2AgentGetConfigParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2AgentGetConfigOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2AgentGetConfigBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2AgentGetConfigDefaultBody"
            }
          }
        }
      }
    },
    "/v2/bookmarks/get_bookmarks": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/bookmarks/get_bookmarks",
        "parameters": [
          {
            "name": "GetBookmarksRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2BookmarksGetBookmarksParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2BookmarksGetBookmarksOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2BookmarksGetBookmarksBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2BookmarksGetBookmarksDefaultBody"
            }
          }
        }
      }
    },
    "/v2/bookmarks/remove_bookmark": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/bookmarks/remove_bookmark",
        "parameters": [
          {
            "name": "RemoveBookmarkRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2BookmarksRemoveBookmarkParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2BookmarksRemoveBookmarkOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2BookmarksRemoveBookmarkBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2BookmarksRemoveBookmarkDefaultBody"
            }
          }
        }
      }
    },
    "/v2/bookmarks/set_bookmark": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/bookmarks/set_bookmark",
        "parameters": [
          {
            "name": "SetBookmarkRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2BookmarksSetBookmarkParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2BookmarksSetBookmarkOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2BookmarksSetBookmarkBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2BookmarksSetBookmarkDefaultBody"
            }
          }
        }
      }
    },
    "/v2/checks/get_active_jobs": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/checks/get_active_jobs",
        "parameters": [
          {
            "name": "GetActiveJobsRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetActiveJobsParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetActiveJobsOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetActiveJobsBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetActiveJobsDefaultBody"
            }
          }
        }
      }
    },
    "/v2/checks/get_checks_config": {
      "post": {
        "description": "Returns checks matching any of the specified `filters`",
        "tags": [
          "checks"
        ],
        "operationId": "/v2/checks/get_checks_config",
        "parameters": [
          {
            "name": "GetCheckConfigRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetChecksConfigParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetChecksConfigOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetChecksConfigBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetChecksConfigDefaultBody"
            }
          }
        }
      }
    },
    "/v2/checks/get_checks_count": {
      "post": {
        "description": "Returns the number of checks matching any of the specified `filters`",
        "tags": [
          "checks"
        ],
        "operationId": "/v2/checks/get_checks_count",
        "parameters": [
          {
            "name": "GetCheckCountRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetChecksCountParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetChecksCountOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetChecksCountBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetChecksCountDefaultBody"
            }
          }
        }
      }
    },
    "/v2/checks/get_checks_state": {
      "post": {
        "description": "Returns state of checks matching any of the specified `filters`.\n    **Status filter is applied only to the first 10000 matching checks, so the result might be incorrect for very broad selectors.**\n    ",
        "tags": [
          "checks"
        ],
        "operationId": "/v2/checks/get_checks_state",
        "parameters": [
          {
            "name": "GetCheckStateRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetChecksStateParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetChecksStateOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetChecksStateBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetChecksStateDefaultBody"
            }
          }
        }
      }
    },
    "/v2/checks/get_matching_notify_rules": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/checks/get_matching_notify_rules",
        "parameters": [
          {
            "name": "GetMatchingNotifyRulesRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetMatchingNotifyRulesParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetMatchingNotifyRulesOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetMatchingNotifyRulesBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2ChecksGetMatchingNotifyRulesDefaultBody"
            }
          }
        }
      }
    },
    "/v2/dashboards/get_dashboards": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "dashboards"
        ],
        "operationId": "/v2/dashboards/get_dashboards",
        "parameters": [
          {
            "name": "GetDashboardsRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2DashboardsGetDashboardsParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DashboardsGetDashboardsOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DashboardsGetDashboardsBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DashboardsGetDashboardsDefaultBody"
            }
          }
        }
      }
    },
    "/v2/dashboards/remove_dashboard": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "dashboards"
        ],
        "operationId": "/v2/dashboards/remove_dashboard",
        "parameters": [
          {
            "name": "RemoveDashboardRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2DashboardsRemoveDashboardParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DashboardsRemoveDashboardOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DashboardsRemoveDashboardBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DashboardsRemoveDashboardDefaultBody"
            }
          }
        }
      }
    },
    "/v2/dashboards/set_dashboard": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "dashboards"
        ],
        "operationId": "/v2/dashboards/set_dashboard",
        "parameters": [
          {
            "name": "SetDashboardRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2DashboardsSetDashboardParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DashboardsSetDashboardOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DashboardsSetDashboardBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DashboardsSetDashboardDefaultBody"
            }
          }
        }
      }
    },
    "/v2/downtimes/get_downtimes": {
      "post": {
        "description": "Returns list of downtimes matching any of the specified `filters`.",
        "tags": [
          "downtimes"
        ],
        "operationId": "/v2/downtimes/get_downtimes",
        "parameters": [
          {
            "name": "GetDowntimesRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2DowntimesGetDowntimesParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DowntimesGetDowntimesOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DowntimesGetDowntimesBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DowntimesGetDowntimesDefaultBody"
            }
          }
        }
      }
    },
    "/v2/downtimes/remove_downtimes": {
      "post": {
        "description": "Removes any downtimes with specified `downtime_ids`.",
        "tags": [
          "downtimes"
        ],
        "operationId": "/v2/downtimes/remove_downtimes",
        "parameters": [
          {
            "name": "RemoveDowntimesRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2DowntimesRemoveDowntimesParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DowntimesRemoveDowntimesOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DowntimesRemoveDowntimesBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DowntimesRemoveDowntimesDefaultBody"
            }
          }
        }
      }
    },
    "/v2/downtimes/set_downtimes": {
      "post": {
        "description": "Creates a downtime that would downtime any object (check or raw event) matching any of the specified `filters`.\n    Of course, only if the downtime creator has enough rights to affect particular check.",
        "tags": [
          "downtimes"
        ],
        "operationId": "/v2/downtimes/set_downtimes",
        "parameters": [
          {"$ref": "#/parameters/Authorization"}, # added manually
          {
            "name": "SetDowntimeRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2DowntimesSetDowntimesParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DowntimesSetDowntimesOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DowntimesSetDowntimesBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2DowntimesSetDowntimesDefaultBody"
            }
          }
        }
      }
    },
    "/v2/escalations/get_escalations_log": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "operationId": "/v2/escalations/get_escalations_log",
        "parameters": [
          {
            "name": "GetEscalationsLogsRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2EscalationsGetEscalationsLogParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2EscalationsGetEscalationsLogOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2EscalationsGetEscalationsLogBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2EscalationsGetEscalationsLogDefaultBody"
            }
          }
        }
      }
    },
    "/v2/escalations/stop": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "notifications"
        ],
        "operationId": "/v2/escalations/stop",
        "parameters": [
          {
            "name": "StopEscalationRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2EscalationsStopParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2EscalationsStopOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2EscalationsStopBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2EscalationsStopDefaultBody"
            }
          }
        }
      }
    },
    "/v2/events/get_raw_events": {
      "post": {
        "description": "Returns raw events matching any of the specified `filters`.",
        "tags": [
          "raw events"
        ],
        "operationId": "/v2/events/get_raw_events",
        "parameters": [
          {
            "name": "GetRawEventsRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2EventsGetRawEventsParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2EventsGetRawEventsOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2EventsGetRawEventsBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2EventsGetRawEventsDefaultBody"
            }
          }
        }
      }
    },
    "/v2/history/get_check_history": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "checks"
        ],
        "operationId": "/v2/history/get_check_history",
        "parameters": [
          {
            "name": "GetChecksHistoryPagedRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetCheckHistoryParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetCheckHistoryOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetCheckHistoryBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetCheckHistoryDefaultBody"
            }
          }
        }
      }
    },
    "/v2/history/get_check_history_rollups": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "checks"
        ],
        "operationId": "/v2/history/get_check_history_rollups",
        "parameters": [
          {
            "name": "GetCheckHistoryRollupsRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetCheckHistoryRollupsParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetCheckHistoryRollupsOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetCheckHistoryRollupsBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetCheckHistoryRollupsDefaultBody"
            }
          }
        }
      }
    },
    "/v2/history/get_check_snapshot": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "checks"
        ],
        "operationId": "/v2/history/get_check_snapshot",
        "parameters": [
          {
            "name": "GetCheckSnapshotRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetCheckSnapshotParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetCheckSnapshotOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetCheckSnapshotBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetCheckSnapshotDefaultBody"
            }
          }
        }
      }
    },
    "/v2/history/get_notification_rollups": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "notifications"
        ],
        "operationId": "/v2/history/get_notification_rollups",
        "parameters": [
          {
            "name": "GetNotificationRollupsRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetNotificationRollupsParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetNotificationRollupsOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetNotificationRollupsBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetNotificationRollupsDefaultBody"
            }
          }
        }
      }
    },
    "/v2/history/get_notifications": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "notifications"
        ],
        "operationId": "/v2/history/get_notifications",
        "parameters": [
          {
            "name": "GetNotificationsRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetNotificationsParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetNotificationsOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetNotificationsBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2HistoryGetNotificationsDefaultBody"
            }
          }
        }
      }
    },
    "/v2/mutes/get_mutes": {
      "post": {
        "description": "Returns list of mutes matching any of the specified `filters`.",
        "tags": [
          "mutes"
        ],
        "operationId": "/v2/mutes/get_mutes",
        "parameters": [
          {
            "name": "GetMutesRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2MutesGetMutesParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2MutesGetMutesOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2MutesGetMutesBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2MutesGetMutesDefaultBody"
            }
          }
        }
      }
    },
    "/v2/mutes/remove_mutes": {
      "post": {
        "description": "Removes any mutes with specified `mute_ids`.",
        "tags": [
          "mutes"
        ],
        "operationId": "/v2/mutes/remove_mutes",
        "parameters": [
          {
            "name": "RemoveMutesRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2MutesRemoveMutesParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2MutesRemoveMutesOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2MutesRemoveMutesBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2MutesRemoveMutesDefaultBody"
            }
          }
        }
      }
    },
    "/v2/mutes/set_mutes": {
      "post": {
        "description": "Creates a mute that would mute any notification matching any of the specified `filters`.",
        "tags": [
          "mutes"
        ],
        "operationId": "/v2/mutes/set_mutes",
        "parameters": [
          {
            "name": "SetMuteRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2MutesSetMutesParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2MutesSetMutesOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2MutesSetMutesBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2MutesSetMutesDefaultBody"
            }
          }
        }
      }
    },
    "/v2/namespaces/get_namespaces": {
      "post": {
        "description": "Returns namespaces matching specified `name` or `abc_service`. Glob filters can be used.",
        "tags": [
          "namespaces"
        ],
        "operationId": "/v2/namespaces/get_namespaces",
        "parameters": [
          {
            "name": "ListNamespacesRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2NamespacesGetNamespacesParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesGetNamespacesOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesGetNamespacesBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesGetNamespacesDefaultBody"
            }
          }
        }
      }
    },
    "/v2/namespaces/get_rules_without_namespace": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/namespaces/get_rules_without_namespace",
        "parameters": [
          {
            "name": "GetRulesWithoutNamespaceRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2NamespacesGetRulesWithoutNamespaceParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesGetRulesWithoutNamespaceOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesGetRulesWithoutNamespaceBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesGetRulesWithoutNamespaceDefaultBody"
            }
          }
        }
      }
    },
    "/v2/namespaces/migrate_checks": {
      "post": {
        "description": "Migrates all checks matched by `filters` to specified `namespace`.",
        "tags": [
          "checks"
        ],
        "operationId": "/v2/namespaces/migrate_checks",
        "parameters": [
          {
            "name": "MigrateChecksRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2NamespacesMigrateChecksParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesMigrateChecksOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesMigrateChecksBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesMigrateChecksDefaultBody"
            }
          }
        }
      }
    },
    "/v2/namespaces/remove_namespace": {
      "post": {
        "description": "Removes the namespace with specified `id`.\n    Will fail if it has some checks, unless `force` is used.",
        "tags": [
          "namespaces"
        ],
        "operationId": "/v2/namespaces/remove_namespace",
        "parameters": [
          {
            "name": "RemoveNamespaceRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2NamespacesRemoveNamespaceParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesRemoveNamespaceOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesRemoveNamespaceBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesRemoveNamespaceDefaultBody"
            }
          }
        }
      }
    },
    "/v2/namespaces/set_namespace": {
      "post": {
        "description": "Creates or updates a namespace (depending on whether `id` parameter is set).\n    **Namespace renaming is not supported.**",
        "tags": [
          "namespaces"
        ],
        "operationId": "/v2/namespaces/set_namespace",
        "parameters": [
          {
            "name": "SetNamespaceRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2NamespacesSetNamespaceParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesSetNamespaceOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesSetNamespaceBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2NamespacesSetNamespaceDefaultBody"
            }
          }
        }
      }
    },
    "/v2/suggest/convert_blinov": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/suggest/convert_blinov",
        "parameters": [
          {
            "name": "BlinovRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2SuggestConvertBlinovParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestConvertBlinovOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestConvertBlinovBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestConvertBlinovDefaultBody"
            }
          }
        }
      }
    },
    "/v2/suggest/logins": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/suggest/logins",
        "parameters": [
          {
            "name": "SuggestLoginsRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2SuggestLoginsParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestLoginsOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestLoginsBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestLoginsDefaultBody"
            }
          }
        }
      }
    },
    "/v2/suggest/objects": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/suggest/objects",
        "parameters": [
          {
            "name": "SuggestObjectsRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2SuggestObjectsParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestObjectsOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestObjectsBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestObjectsDefaultBody"
            }
          }
        }
      }
    },
    "/v2/suggestions/get_downtimed_user_checks": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/suggestions/get_downtimed_user_checks",
        "parameters": [
          {
            "name": "TGetInvalidChecksRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetDowntimedUserChecksParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetDowntimedUserChecksOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetDowntimedUserChecksBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetDowntimedUserChecksDefaultBody"
            }
          }
        }
      }
    },
    "/v2/suggestions/get_invalid_user_checks": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/suggestions/get_invalid_user_checks",
        "parameters": [
          {
            "name": "TGetInvalidChecksRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetInvalidUserChecksParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetInvalidUserChecksOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetInvalidUserChecksBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetInvalidUserChecksDefaultBody"
            }
          }
        }
      }
    },
    "/v2/suggestions/get_no_data_user_checks": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/suggestions/get_no_data_user_checks",
        "parameters": [
          {
            "name": "TGetInvalidChecksRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetNoDataUserChecksParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetNoDataUserChecksOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetNoDataUserChecksBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetNoDataUserChecksDefaultBody"
            }
          }
        }
      }
    },
    "/v2/suggestions/get_notify_rules_without_predicates": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/suggestions/get_notify_rules_without_predicates",
        "parameters": [
          {
            "name": "TGetInvalidRulesRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetNotifyRulesWithoutPredicatesParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetNotifyRulesWithoutPredicatesOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetNotifyRulesWithoutPredicatesBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetNotifyRulesWithoutPredicatesDefaultBody"
            }
          }
        }
      }
    },
    "/v2/suggestions/get_unreachable_user_checks": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/suggestions/get_unreachable_user_checks",
        "parameters": [
          {
            "name": "TGetInvalidChecksRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetUnreachableUserChecksParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetUnreachableUserChecksOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetUnreachableUserChecksBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2SuggestionsGetUnreachableUserChecksDefaultBody"
            }
          }
        }
      }
    },
    "/v2/user_config/get_user_config": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/user_config/get_user_config",
        "parameters": [
          {
            "name": "GetUserConfigRequest",
            "in": "body",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2UserConfigGetUserConfigOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2UserConfigGetUserConfigBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2UserConfigGetUserConfigDefaultBody"
            }
          }
        }
      }
    },
    "/v2/user_config/set_user_config": {
      "post": {
        "description": "Experimental API, subject to breakage",
        "tags": [
          "internal"
        ],
        "operationId": "/v2/user_config/set_user_config",
        "parameters": [
          {
            "name": "SetUserConfigRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/v2UserConfigSetUserConfigParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2UserConfigSetUserConfigOKBody"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2UserConfigSetUserConfigBadRequestBody"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v2UserConfigSetUserConfigDefaultBody"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "v2AgentGetConfigBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2AgentGetConfigBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2AgentGetConfigBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2AgentGetConfigDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2AgentGetConfigDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2AgentGetConfigDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2AgentGetConfigOKBody": {
      "type": "object",
      "properties": {
        "bundles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2AgentGetConfigOKBodyBundlesItems"
          }
        },
        "checks_config": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2AgentGetConfigOKBodyChecksConfigItems"
          }
        },
        "limits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2AgentGetConfigOKBodyLimitsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2AgentGetConfigOKBodyMeta"
        },
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2AgentGetConfigOKBodyTargetsItems"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2AgentGetConfigOKBodyBundlesItems": {
      "type": "object",
      "properties": {
        "build_number": {
          "type": "integer"
        },
        "mds_http": {
          "type": "string"
        },
        "mds_https": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "skynet_id": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2AgentGetConfigOKBodyChecksConfigItems": {
      "type": "object",
      "properties": {
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2AgentGetConfigOKBodyChecksConfigItemsChecksItems"
          }
        },
        "host_name": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2AgentGetConfigOKBodyChecksConfigItemsChecksItems": {
      "type": "object",
      "properties": {
        "args": {
          "type": "string"
        },
        "digest": {
          "type": "string"
        },
        "env": {
          "type": "string"
        },
        "instance": {
          "type": "integer"
        },
        "service": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2AgentGetConfigOKBodyLimitsItems": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer"
        },
        "fill_rate": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2AgentGetConfigOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2AgentGetConfigOKBodyTargetsItems": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "relays": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2AgentGetConfigOKBodyTargetsItemsRelaysItems"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2AgentGetConfigOKBodyTargetsItemsRelaysItems": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "weight": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2AgentGetConfigParamsBody": {
      "type": "object",
      "properties": {
        "_ignore_cache": {
          "type": "boolean"
        },
        "bundles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "host_name": {
          "type": "string"
        },
        "scheduler_hosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksGetBookmarksBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2BookmarksGetBookmarksBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksGetBookmarksBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksGetBookmarksDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2BookmarksGetBookmarksDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksGetBookmarksDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksGetBookmarksOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2BookmarksGetBookmarksOKBodyItemsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2BookmarksGetBookmarksOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksGetBookmarksOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "bookmark_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2BookmarksGetBookmarksOKBodyItemsItemsFiltersItems"
          }
        },
        "type": {
          "enum": [
            "CHECKS",
            "RAW_EVENTS",
            "DASHBOARDS"
          ]
        },
        "user": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksGetBookmarksOKBodyItemsItemsFiltersItems": {
      "type": "object",
      "properties": {
        "abc_service": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "match_raw_events": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksGetBookmarksOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksGetBookmarksParamsBody": {
      "type": "object",
      "properties": {
        "types": {
          "type": "array",
          "items": {
            "enum": [
              "CHECKS",
              "RAW_EVENTS",
              "DASHBOARDS"
            ]
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksRemoveBookmarkBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2BookmarksRemoveBookmarkBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksRemoveBookmarkBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksRemoveBookmarkDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2BookmarksRemoveBookmarkDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksRemoveBookmarkDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksRemoveBookmarkOKBody": {
      "type": "object",
      "properties": {
        "bookmark_id": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2BookmarksRemoveBookmarkOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksRemoveBookmarkOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksRemoveBookmarkParamsBody": {
      "type": "object",
      "properties": {
        "bookmark_id": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksSetBookmarkBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2BookmarksSetBookmarkBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksSetBookmarkBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksSetBookmarkDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2BookmarksSetBookmarkDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksSetBookmarkDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksSetBookmarkOKBody": {
      "type": "object",
      "properties": {
        "bookmark_id": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2BookmarksSetBookmarkOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksSetBookmarkOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksSetBookmarkParamsBody": {
      "type": "object",
      "properties": {
        "bookmark_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2BookmarksSetBookmarkParamsBodyFiltersItems"
          }
        },
        "type": {
          "enum": [
            "CHECKS",
            "RAW_EVENTS",
            "DASHBOARDS"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2BookmarksSetBookmarkParamsBodyFiltersItems": {
      "type": "object",
      "properties": {
        "abc_service": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "match_raw_events": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBody": {
      "type": "object",
      "properties": {
        "Checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyChecksItems"
          }
        },
        "ConfigVersion": {
          "type": "string"
        },
        "Digests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyChecksItems": {
      "type": "object",
      "properties": {
        "Digest": {
          "type": "string"
        },
        "Host": {
          "type": "string"
        },
        "Instance": {
          "type": "string"
        },
        "Service": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItems": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValue"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValue": {
      "type": "object",
      "properties": {
        "Common": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommon"
        },
        "RefreshTime": {
          "type": "integer"
        },
        "Ttl": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommon": {
      "type": "object",
      "properties": {
        "Dns": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonDns"
        },
        "Graphite": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonGraphite"
        },
        "Http": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttp"
        },
        "Https": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttps"
        },
        "HttpsCert": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpsCert"
        },
        "IcmpPing": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPing"
        },
        "Mail": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonMail"
        },
        "NannyDeployStatus": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonNannyDeployStatus"
        },
        "Netmon": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonNetmon"
        },
        "Ssh": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonSsh"
        },
        "TcpChat": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonTcpChat"
        },
        "Type": {
          "enum": [
            "NoActive",
            "Meta",
            "IcmpPing",
            "TcpChat",
            "Ssh",
            "Smtp",
            "Imap",
            "Http",
            "Https",
            "X509Cert",
            "HttpsCert",
            "Dns",
            "Graphite",
            "NannyDeployStatus",
            "Netmon"
          ]
        },
        "X509Cert": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonX509Cert"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonDns": {
      "type": "object",
      "properties": {
        "MinResults": {
          "type": "integer"
        },
        "Port": {
          "type": "integer"
        },
        "Query": {
          "type": "string"
        },
        "Question": {
          "type": "string"
        },
        "TargetConfig": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonDnsTargetConfig"
        },
        "Thresholds": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonDnsThresholds"
        },
        "Timeout": {
          "type": "integer"
        },
        "Udp": {
          "type": "boolean"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonDnsTargetConfig": {
      "type": "object",
      "properties": {
        "DisableIpv4": {
          "type": "boolean"
        },
        "DisableIpv6": {
          "type": "boolean"
        },
        "FailLogic": {
          "enum": [
            "Any",
            "Every"
          ]
        },
        "Host": {
          "type": "string"
        },
        "Ip": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonDnsThresholds": {
      "type": "object",
      "properties": {
        "FailThreshold": {
          "type": "integer"
        },
        "WinThreshold": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonGraphite": {
      "type": "object",
      "properties": {
        "BaseUrl": {
          "type": "string"
        },
        "Crit": {
          "type": "string"
        },
        "IgnoreErrors": {
          "type": "boolean"
        },
        "Metric": {
          "type": "string"
        },
        "NullStatus": {
          "enum": [
            "OK",
            "WARN",
            "CRIT",
            "INFO"
          ]
        },
        "TimeWindow": {
          "type": "string"
        },
        "Timeout": {
          "type": "integer"
        },
        "Warn": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttp": {
      "type": "object",
      "properties": {
        "AlwaysShowBody": {
          "type": "boolean"
        },
        "ExpectGzip": {
          "type": "boolean"
        },
        "Headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpHeadersItems"
          }
        },
        "OkCodes": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "Path": {
          "type": "string"
        },
        "Port": {
          "type": "integer"
        },
        "Regexp": {
          "type": "string"
        },
        "Substring": {
          "type": "string"
        },
        "TargetConfig": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpTargetConfig"
        },
        "Thresholds": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpThresholds"
        },
        "Timeout": {
          "type": "integer"
        },
        "WarnCodes": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpHeadersItems": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpTargetConfig": {
      "type": "object",
      "properties": {
        "DisableIpv4": {
          "type": "boolean"
        },
        "DisableIpv6": {
          "type": "boolean"
        },
        "FailLogic": {
          "enum": [
            "Any",
            "Every"
          ]
        },
        "Host": {
          "type": "string"
        },
        "Ip": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpThresholds": {
      "type": "object",
      "properties": {
        "FailThreshold": {
          "type": "integer"
        },
        "WinThreshold": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttps": {
      "type": "object",
      "properties": {
        "AllowSelfSigned": {
          "type": "boolean"
        },
        "BaseHttpOptions": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpsBaseHttpOptions"
        },
        "CritExpire": {
          "type": "integer"
        },
        "SslCiphers": {
          "type": "string"
        },
        "ValidateHostname": {
          "type": "boolean"
        },
        "WarnExpire": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpsBaseHttpOptions": {
      "type": "object",
      "properties": {
        "AlwaysShowBody": {
          "type": "boolean"
        },
        "ExpectGzip": {
          "type": "boolean"
        },
        "Headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpsBaseHttpOptionsHeadersItems"
          }
        },
        "OkCodes": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "Path": {
          "type": "string"
        },
        "Port": {
          "type": "integer"
        },
        "Regexp": {
          "type": "string"
        },
        "Substring": {
          "type": "string"
        },
        "TargetConfig": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpsBaseHttpOptionsTargetConfig"
        },
        "Thresholds": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpsBaseHttpOptionsThresholds"
        },
        "Timeout": {
          "type": "integer"
        },
        "WarnCodes": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpsBaseHttpOptionsHeadersItems": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpsBaseHttpOptionsTargetConfig": {
      "type": "object",
      "properties": {
        "DisableIpv4": {
          "type": "boolean"
        },
        "DisableIpv6": {
          "type": "boolean"
        },
        "FailLogic": {
          "enum": [
            "Any",
            "Every"
          ]
        },
        "Host": {
          "type": "string"
        },
        "Ip": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpsBaseHttpOptionsThresholds": {
      "type": "object",
      "properties": {
        "FailThreshold": {
          "type": "integer"
        },
        "WinThreshold": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpsCert": {
      "type": "object",
      "properties": {
        "CritExpire": {
          "type": "integer"
        },
        "Port": {
          "type": "integer"
        },
        "SslCiphers": {
          "type": "string"
        },
        "SslHostname": {
          "type": "string"
        },
        "TargetConfig": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpsCertTargetConfig"
        },
        "Thresholds": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpsCertThresholds"
        },
        "Timeout": {
          "type": "integer"
        },
        "ValidateHostname": {
          "type": "boolean"
        },
        "WarnExpire": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpsCertTargetConfig": {
      "type": "object",
      "properties": {
        "DisableIpv4": {
          "type": "boolean"
        },
        "DisableIpv6": {
          "type": "boolean"
        },
        "FailLogic": {
          "enum": [
            "Any",
            "Every"
          ]
        },
        "Host": {
          "type": "string"
        },
        "Ip": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonHttpsCertThresholds": {
      "type": "object",
      "properties": {
        "FailThreshold": {
          "type": "integer"
        },
        "WinThreshold": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPing": {
      "type": "object",
      "properties": {
        "TargetConfig": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPingTargetConfig"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPingTargetConfig": {
      "type": "object",
      "properties": {
        "DisableIpv4": {
          "type": "boolean"
        },
        "DisableIpv6": {
          "type": "boolean"
        },
        "FailLogic": {
          "enum": [
            "Any",
            "Every"
          ]
        },
        "Host": {
          "type": "string"
        },
        "Ip": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonMail": {
      "type": "object",
      "properties": {
        "AllowSelfSigned": {
          "type": "boolean"
        },
        "CheckCert": {
          "type": "boolean"
        },
        "CritExpire": {
          "type": "integer"
        },
        "Port": {
          "type": "integer"
        },
        "SslMode": {
          "enum": [
            "Empty",
            "Ssl",
            "StartTls"
          ]
        },
        "TargetConfig": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonMailTargetConfig"
        },
        "Thresholds": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonMailThresholds"
        },
        "Timeout": {
          "type": "integer"
        },
        "ValidateHostname": {
          "type": "boolean"
        },
        "WarnExpire": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonMailTargetConfig": {
      "type": "object",
      "properties": {
        "DisableIpv4": {
          "type": "boolean"
        },
        "DisableIpv6": {
          "type": "boolean"
        },
        "FailLogic": {
          "enum": [
            "Any",
            "Every"
          ]
        },
        "Host": {
          "type": "string"
        },
        "Ip": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonMailThresholds": {
      "type": "object",
      "properties": {
        "FailThreshold": {
          "type": "integer"
        },
        "WinThreshold": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonNannyDeployStatus": {
      "type": "object",
      "properties": {
        "CritTime": {
          "type": "integer"
        },
        "Service": {
          "type": "string"
        },
        "WarnTime": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonNetmon": {
      "type": "object",
      "properties": {
        "CritPercent": {
          "type": "integer"
        },
        "Metric": {
          "type": "string"
        },
        "Network": {
          "type": "string"
        },
        "Protocol": {
          "type": "string"
        },
        "WarnPercent": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonSsh": {
      "type": "object",
      "properties": {
        "Port": {
          "type": "integer"
        },
        "TargetConfig": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonSshTargetConfig"
        },
        "Thresholds": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonSshThresholds"
        },
        "Timeout": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonSshTargetConfig": {
      "type": "object",
      "properties": {
        "DisableIpv4": {
          "type": "boolean"
        },
        "DisableIpv6": {
          "type": "boolean"
        },
        "FailLogic": {
          "enum": [
            "Any",
            "Every"
          ]
        },
        "Host": {
          "type": "string"
        },
        "Ip": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonSshThresholds": {
      "type": "object",
      "properties": {
        "FailThreshold": {
          "type": "integer"
        },
        "WinThreshold": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonTcpChat": {
      "type": "object",
      "properties": {
        "Chats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonTcpChatChatsItems"
          }
        },
        "Port": {
          "type": "integer"
        },
        "TargetConfig": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonTcpChatTargetConfig"
        },
        "Thresholds": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonTcpChatThresholds"
        },
        "Timeout": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonTcpChatChatsItems": {
      "type": "object",
      "properties": {
        "Regexp": {
          "type": "string"
        },
        "Request": {
          "type": "string"
        },
        "StopCharacter": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonTcpChatTargetConfig": {
      "type": "object",
      "properties": {
        "DisableIpv4": {
          "type": "boolean"
        },
        "DisableIpv6": {
          "type": "boolean"
        },
        "FailLogic": {
          "enum": [
            "Any",
            "Every"
          ]
        },
        "Host": {
          "type": "string"
        },
        "Ip": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonTcpChatThresholds": {
      "type": "object",
      "properties": {
        "FailThreshold": {
          "type": "integer"
        },
        "WinThreshold": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonX509Cert": {
      "type": "object",
      "properties": {
        "CritExpire": {
          "type": "integer"
        },
        "Port": {
          "type": "integer"
        },
        "TargetConfig": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonX509CertTargetConfig"
        },
        "Thresholds": {
          "$ref": "#/definitions/v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonX509CertThresholds"
        },
        "Timeout": {
          "type": "integer"
        },
        "ValidateHostname": {
          "type": "boolean"
        },
        "WarnExpire": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonX509CertTargetConfig": {
      "type": "object",
      "properties": {
        "DisableIpv4": {
          "type": "boolean"
        },
        "DisableIpv6": {
          "type": "boolean"
        },
        "FailLogic": {
          "enum": [
            "Any",
            "Every"
          ]
        },
        "Host": {
          "type": "string"
        },
        "Ip": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonX509CertThresholds": {
      "type": "object",
      "properties": {
        "FailThreshold": {
          "type": "integer"
        },
        "WinThreshold": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetActiveJobsParamsBody": {
      "type": "object",
      "properties": {
        "ConfigVersion": {
          "type": "string"
        },
        "InstanceHost": {
          "type": "string"
        },
        "InstanceMtnFqdn": {
          "type": "string"
        },
        "InstancePort": {
          "type": "integer"
        },
        "Services": {
          "type": "array",
          "items": {
            "enum": [
              "NoActive",
              "Meta",
              "IcmpPing",
              "TcpChat",
              "Ssh",
              "Smtp",
              "Imap",
              "Http",
              "Https",
              "X509Cert",
              "HttpsCert",
              "Dns",
              "Graphite",
              "NannyDeployStatus",
              "Netmon"
            ]
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksConfigBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2ChecksGetChecksConfigBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksConfigBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksConfigDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2ChecksGetChecksConfigDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksConfigDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksConfigOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2ChecksGetChecksConfigOKBodyItemsItems"
          }
        },
        "limit": {
          "type": "integer"
        },
        "meta": {
          "$ref": "#/definitions/v2ChecksGetChecksConfigOKBodyMeta"
        },
        "total": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksConfigOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksConfigOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksConfigParamsBody": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2ChecksGetChecksConfigParamsBodyFiltersItems"
          }
        },
        "limit": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksConfigParamsBodyFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksCountBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2ChecksGetChecksCountBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksCountBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksCountDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2ChecksGetChecksCountDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksCountDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksCountOKBody": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/v2ChecksGetChecksCountOKBodyMeta"
        },
        "total": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksCountOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksCountParamsBody": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2ChecksGetChecksCountParamsBodyFiltersItems"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksCountParamsBodyFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksStateBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2ChecksGetChecksStateBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksStateBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksStateDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2ChecksGetChecksStateDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksStateDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksStateOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2ChecksGetChecksStateOKBodyItemsItems"
          }
        },
        "limit": {
          "type": "integer"
        },
        "meta": {
          "$ref": "#/definitions/v2ChecksGetChecksStateOKBodyMeta"
        },
        "response_too_large": {
          "type": "boolean"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2ChecksGetChecksStateOKBodyStatusesItems"
          }
        },
        "total": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksStateOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "aggregation_time": {
          "type": "number"
        },
        "change_time": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "downtime_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "host": {
          "type": "string"
        },
        "meta": {
          "type": "string"
        },
        "mutes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2ChecksGetChecksStateOKBodyItemsItemsMutesItems"
          }
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "state_kind": {
          "enum": [
            "ACTUAL",
            "INVALID",
            "FLAPPING",
            "REWRITTEN_BY_AGGREGATOR",
            "CHILD_GROUP_INVALID",
            "AGGREGATOR_SKIP",
            "DOWNTIME_SKIP",
            "DOWNTIME_FORCE_OK",
            "UNREACH_SKIP",
            "UNREACH_FORCE_OK",
            "NO_DATA_SKIP",
            "NO_DATA_FORCE_OK",
            "NO_DATA_FORCE_CRIT",
            "NO_DATA_FORCE_WARN",
            "RECENT_EVENTS_FORCE_CRIT"
          ]
        },
        "status": {
          "enum": [
            "OK",
            "WARN",
            "CRIT",
            "INFO"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksStateOKBodyItemsItemsMutesItems": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "end_time": {
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "startrek_ticket": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksStateOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksStateOKBodyStatusesItems": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "status": {
          "enum": [
            "OK",
            "WARN",
            "CRIT",
            "INFO"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksStateParamsBody": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2ChecksGetChecksStateParamsBodyFiltersItems"
          }
        },
        "include_mutes": {
          "type": "boolean"
        },
        "limit": {
          "type": "integer"
        },
        "sort": {
          "$ref": "#/definitions/v2ChecksGetChecksStateParamsBodySort"
        },
        "statuses": {
          "type": "array",
          "items": {
            "enum": [
              "OK",
              "WARN",
              "CRIT",
              "INFO"
            ]
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksStateParamsBodyFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetChecksStateParamsBodySort": {
      "type": "object",
      "properties": {
        "field": {
          "enum": [
            "DEFAULT",
            "HOST",
            "SERVICE"
          ]
        },
        "order": {
          "enum": [
            "DESC",
            "ASC"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetMatchingNotifyRulesBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2ChecksGetMatchingNotifyRulesBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetMatchingNotifyRulesBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetMatchingNotifyRulesDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2ChecksGetMatchingNotifyRulesDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetMatchingNotifyRulesDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetMatchingNotifyRulesOKBody": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/v2ChecksGetMatchingNotifyRulesOKBodyMeta"
        },
        "rule_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetMatchingNotifyRulesOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2ChecksGetMatchingNotifyRulesParamsBody": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "service": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DashboardsGetDashboardsBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DashboardsGetDashboardsDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyMeta"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItems"
          }
        },
        "dashboard_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsLinksItems"
          }
        },
        "name": {
          "type": "string"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItems": {
      "type": "object",
      "properties": {
        "aggregate_checks_options": {
          "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsAggregateChecksOptions"
        },
        "col": {
          "type": "integer"
        },
        "colspan": {
          "type": "integer"
        },
        "component_type": {
          "enum": [
            "AGGREGATE_CHECKS",
            "RAW_EVENTS",
            "DOWNTIMES",
            "DOWNTIME_BUTTON",
            "NOTIFICATIONS",
            "IFRAME",
            "ESCALATIONS",
            "MUTES"
          ]
        },
        "downtime_button_options": {
          "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsDowntimeButtonOptions"
        },
        "downtimes_options": {
          "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsDowntimesOptions"
        },
        "elements_in_row": {
          "type": "integer"
        },
        "escalations_options": {
          "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsEscalationsOptions"
        },
        "height_percent": {
          "type": "integer"
        },
        "height_px": {
          "type": "integer"
        },
        "iframe_options": {
          "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsIframeOptions"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsLinksItems"
          }
        },
        "mutes_options": {
          "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsMutesOptions"
        },
        "name": {
          "type": "string"
        },
        "notifications_options": {
          "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsNotificationsOptions"
        },
        "raw_events_options": {
          "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsRawEventsOptions"
        },
        "row": {
          "type": "integer"
        },
        "rowspan": {
          "type": "integer"
        },
        "view_type": {
          "enum": [
            "COMPACT",
            "DETAILED"
          ]
        },
        "width_percent": {
          "type": "integer"
        },
        "width_px": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsAggregateChecksOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsAggregateChecksOptionsFiltersItems"
          }
        },
        "include_mutes": {
          "type": "boolean"
        },
        "limit": {
          "type": "integer"
        },
        "sort": {
          "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsAggregateChecksOptionsSort"
        },
        "statuses": {
          "type": "array",
          "items": {
            "enum": [
              "OK",
              "WARN",
              "CRIT",
              "INFO"
            ]
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsAggregateChecksOptionsFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsAggregateChecksOptionsSort": {
      "type": "object",
      "properties": {
        "field": {
          "enum": [
            "DEFAULT",
            "HOST",
            "SERVICE"
          ]
        },
        "order": {
          "enum": [
            "DESC",
            "ASC"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsDowntimeButtonOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsDowntimeButtonOptionsFiltersItems"
          }
        },
        "source": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsDowntimeButtonOptionsFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsDowntimesOptions": {
      "type": "object",
      "properties": {
        "exclude_future": {
          "type": "boolean"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsDowntimesOptionsFiltersItems"
          }
        },
        "include_expired": {
          "type": "boolean"
        },
        "include_warnings": {
          "type": "boolean"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "sort_by": {
          "enum": [
            "ID",
            "START_TIME",
            "END_TIME"
          ]
        },
        "sort_order": {
          "enum": [
            "DESC",
            "ASC"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsDowntimesOptionsFiltersItems": {
      "type": "object",
      "properties": {
        "downtime_id": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsEscalationsOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsEscalationsOptionsFiltersItems"
          }
        },
        "only_running": {
          "type": "boolean"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsEscalationsOptionsFiltersItems": {
      "type": "object",
      "properties": {
        "escalation_id": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsIframeOptions": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsLinksItems": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsMutesOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsMutesOptionsFiltersItems"
          }
        },
        "include_expired": {
          "type": "boolean"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "sort_by": {
          "enum": [
            "ID",
            "START_TIME",
            "END_TIME"
          ]
        },
        "sort_order": {
          "enum": [
            "DESC",
            "ASC"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsMutesOptionsFiltersItems": {
      "type": "object",
      "properties": {
        "check_id": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "mute_id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsNotificationsOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsNotificationsOptionsFiltersItems"
          }
        },
        "interval": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsNotificationsOptionsFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsRawEventsOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsRawEventsOptionsFiltersItems"
          }
        },
        "limit": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "sort": {
          "$ref": "#/definitions/v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsRawEventsOptionsSort"
        },
        "statuses": {
          "type": "array",
          "items": {
            "enum": [
              "OK",
              "WARN",
              "CRIT",
              "INFO"
            ]
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsRawEventsOptionsFiltersItems": {
      "type": "object",
      "properties": {
        "abc_service": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "match_raw_events": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsComponentsItemsRawEventsOptionsSort": {
      "type": "object",
      "properties": {
        "field": {
          "enum": [
            "DEFAULT",
            "HOST",
            "SERVICE"
          ]
        },
        "order": {
          "enum": [
            "DESC",
            "ASC"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyItemsItemsLinksItems": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsParamsBody": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsGetDashboardsParamsBodyFiltersItems"
          }
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsGetDashboardsParamsBodyFiltersItems": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "dashboard_id": {
          "type": "string"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsRemoveDashboardBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DashboardsRemoveDashboardBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsRemoveDashboardBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsRemoveDashboardDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DashboardsRemoveDashboardDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsRemoveDashboardDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsRemoveDashboardOKBody": {
      "type": "object",
      "properties": {
        "dashboard_id": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DashboardsRemoveDashboardOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsRemoveDashboardOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsRemoveDashboardParamsBody": {
      "type": "object",
      "properties": {
        "dashboard_id": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DashboardsSetDashboardBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DashboardsSetDashboardDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardOKBody": {
      "type": "object",
      "properties": {
        "dashboard_id": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DashboardsSetDashboardOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBody": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItems"
          }
        },
        "dashboard_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyLinksItems"
          }
        },
        "name": {
          "type": "string"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItems": {
      "type": "object",
      "properties": {
        "aggregate_checks_options": {
          "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsAggregateChecksOptions"
        },
        "col": {
          "type": "integer"
        },
        "colspan": {
          "type": "integer"
        },
        "component_type": {
          "enum": [
            "AGGREGATE_CHECKS",
            "RAW_EVENTS",
            "DOWNTIMES",
            "DOWNTIME_BUTTON",
            "NOTIFICATIONS",
            "IFRAME",
            "ESCALATIONS",
            "MUTES"
          ]
        },
        "downtime_button_options": {
          "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsDowntimeButtonOptions"
        },
        "downtimes_options": {
          "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsDowntimesOptions"
        },
        "elements_in_row": {
          "type": "integer"
        },
        "escalations_options": {
          "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsEscalationsOptions"
        },
        "height_percent": {
          "type": "integer"
        },
        "height_px": {
          "type": "integer"
        },
        "iframe_options": {
          "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsIframeOptions"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsLinksItems"
          }
        },
        "mutes_options": {
          "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsMutesOptions"
        },
        "name": {
          "type": "string"
        },
        "notifications_options": {
          "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsNotificationsOptions"
        },
        "raw_events_options": {
          "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsRawEventsOptions"
        },
        "row": {
          "type": "integer"
        },
        "rowspan": {
          "type": "integer"
        },
        "view_type": {
          "enum": [
            "COMPACT",
            "DETAILED"
          ]
        },
        "width_percent": {
          "type": "integer"
        },
        "width_px": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsAggregateChecksOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsAggregateChecksOptionsFiltersItems"
          }
        },
        "include_mutes": {
          "type": "boolean"
        },
        "limit": {
          "type": "integer"
        },
        "sort": {
          "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsAggregateChecksOptionsSort"
        },
        "statuses": {
          "type": "array",
          "items": {
            "enum": [
              "OK",
              "WARN",
              "CRIT",
              "INFO"
            ]
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsAggregateChecksOptionsFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsAggregateChecksOptionsSort": {
      "type": "object",
      "properties": {
        "field": {
          "enum": [
            "DEFAULT",
            "HOST",
            "SERVICE"
          ]
        },
        "order": {
          "enum": [
            "DESC",
            "ASC"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsDowntimeButtonOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsDowntimeButtonOptionsFiltersItems"
          }
        },
        "source": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsDowntimeButtonOptionsFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsDowntimesOptions": {
      "type": "object",
      "properties": {
        "exclude_future": {
          "type": "boolean"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsDowntimesOptionsFiltersItems"
          }
        },
        "include_expired": {
          "type": "boolean"
        },
        "include_warnings": {
          "type": "boolean"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "sort_by": {
          "enum": [
            "ID",
            "START_TIME",
            "END_TIME"
          ]
        },
        "sort_order": {
          "enum": [
            "DESC",
            "ASC"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsDowntimesOptionsFiltersItems": {
      "type": "object",
      "properties": {
        "downtime_id": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsEscalationsOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsEscalationsOptionsFiltersItems"
          }
        },
        "only_running": {
          "type": "boolean"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsEscalationsOptionsFiltersItems": {
      "type": "object",
      "properties": {
        "escalation_id": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsIframeOptions": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsLinksItems": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsMutesOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsMutesOptionsFiltersItems"
          }
        },
        "include_expired": {
          "type": "boolean"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "sort_by": {
          "enum": [
            "ID",
            "START_TIME",
            "END_TIME"
          ]
        },
        "sort_order": {
          "enum": [
            "DESC",
            "ASC"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsMutesOptionsFiltersItems": {
      "type": "object",
      "properties": {
        "check_id": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "mute_id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsNotificationsOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsNotificationsOptionsFiltersItems"
          }
        },
        "interval": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsNotificationsOptionsFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsRawEventsOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsRawEventsOptionsFiltersItems"
          }
        },
        "limit": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "sort": {
          "$ref": "#/definitions/v2DashboardsSetDashboardParamsBodyComponentsItemsRawEventsOptionsSort"
        },
        "statuses": {
          "type": "array",
          "items": {
            "enum": [
              "OK",
              "WARN",
              "CRIT",
              "INFO"
            ]
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsRawEventsOptionsFiltersItems": {
      "type": "object",
      "properties": {
        "abc_service": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "match_raw_events": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyComponentsItemsRawEventsOptionsSort": {
      "type": "object",
      "properties": {
        "field": {
          "enum": [
            "DEFAULT",
            "HOST",
            "SERVICE"
          ]
        },
        "order": {
          "enum": [
            "DESC",
            "ASC"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DashboardsSetDashboardParamsBodyLinksItems": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesGetDowntimesBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DowntimesGetDowntimesBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesGetDowntimesBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesGetDowntimesDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DowntimesGetDowntimesDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesGetDowntimesDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesGetDowntimesOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DowntimesGetDowntimesOKBodyItemsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2DowntimesGetDowntimesOKBodyMeta"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesGetDowntimesOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "downtime_id": {
          "type": "string"
        },
        "end_time": {
          "type": "number"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DowntimesGetDowntimesOKBodyItemsItemsFiltersItems"
          }
        },
        "source": {
          "type": "string"
        },
        "start_time": {
          "type": "number"
        },
        "startrek_ticket": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DowntimesGetDowntimesOKBodyItemsItemsWarningsItems"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesGetDowntimesOKBodyItemsItemsFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesGetDowntimesOKBodyItemsItemsWarningsItems": {
      "type": "object",
      "properties": {
        "rights": {
          "$ref": "#/definitions/v2DowntimesGetDowntimesOKBodyItemsItemsWarningsItemsRights"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesGetDowntimesOKBodyItemsItemsWarningsItemsRights": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesGetDowntimesOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesGetDowntimesParamsBody": {
      "type": "object",
      "properties": {
        "exclude_future": {
          "type": "boolean"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DowntimesGetDowntimesParamsBodyFiltersItems"
          }
        },
        "include_expired": {
          "type": "boolean"
        },
        "include_warnings": {
          "type": "boolean"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "sort_by": {
          "enum": [
            "ID",
            "START_TIME",
            "END_TIME"
          ]
        },
        "sort_order": {
          "enum": [
            "DESC",
            "ASC"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesGetDowntimesParamsBodyFiltersItems": {
      "type": "object",
      "properties": {
        "downtime_id": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesRemoveDowntimesBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DowntimesRemoveDowntimesBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesRemoveDowntimesBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesRemoveDowntimesDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DowntimesRemoveDowntimesDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesRemoveDowntimesDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesRemoveDowntimesOKBody": {
      "type": "object",
      "properties": {
        "downtimes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DowntimesRemoveDowntimesOKBodyDowntimesItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2DowntimesRemoveDowntimesOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesRemoveDowntimesOKBodyDowntimesItems": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "downtime_id": {
          "type": "string"
        },
        "end_time": {
          "type": "number"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DowntimesRemoveDowntimesOKBodyDowntimesItemsFiltersItems"
          }
        },
        "source": {
          "type": "string"
        },
        "start_time": {
          "type": "number"
        },
        "startrek_ticket": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DowntimesRemoveDowntimesOKBodyDowntimesItemsWarningsItems"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesRemoveDowntimesOKBodyDowntimesItemsFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesRemoveDowntimesOKBodyDowntimesItemsWarningsItems": {
      "type": "object",
      "properties": {
        "rights": {
          "$ref": "#/definitions/v2DowntimesRemoveDowntimesOKBodyDowntimesItemsWarningsItemsRights"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesRemoveDowntimesOKBodyDowntimesItemsWarningsItemsRights": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesRemoveDowntimesOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesRemoveDowntimesParamsBody": {
      "type": "object",
      "properties": {
        "downtime_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesSetDowntimesBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DowntimesSetDowntimesBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesSetDowntimesBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesSetDowntimesDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DowntimesSetDowntimesDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesSetDowntimesDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesSetDowntimesOKBody": {
      "type": "object",
      "properties": {
        "downtime_id": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2DowntimesSetDowntimesOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesSetDowntimesOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesSetDowntimesParamsBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "downtime_id": {
          "type": "string"
        },
        "end_time": {
          "type": "number"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DowntimesSetDowntimesParamsBodyFiltersItems"
          }
        },
        "source": {
          "type": "string"
        },
        "start_time": {
          "type": "number"
        },
        "startrek_ticket": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2DowntimesSetDowntimesParamsBodyFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsGetEscalationsLogBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2EscalationsGetEscalationsLogBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsGetEscalationsLogBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsGetEscalationsLogDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2EscalationsGetEscalationsLogDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsGetEscalationsLogDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsGetEscalationsLogOKBody": {
      "type": "object",
      "properties": {
        "escalations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2EscalationsGetEscalationsLogOKBodyEscalationsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2EscalationsGetEscalationsLogOKBodyMeta"
        },
        "total": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsGetEscalationsLogOKBodyEscalationsItems": {
      "type": "object",
      "properties": {
        "end_reason": {
          "enum": [
            "NONE",
            "SCRIPT_ENDED",
            "NOT_ACTUAL_REASON",
            "USER_STOPPED"
          ]
        },
        "escalation_id": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "iteration": {
          "type": "integer"
        },
        "log": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2EscalationsGetEscalationsLogOKBodyEscalationsItemsLogItems"
          }
        },
        "plan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2EscalationsGetEscalationsLogOKBodyEscalationsItemsPlanItems"
          }
        },
        "repeat": {
          "type": "integer"
        },
        "restart_reason": {
          "enum": [
            "NONE_RESTART_REASON",
            "EVENT_RESTART_REASON",
            "RESTART_AFTER_OPTION_RESTART_REASON"
          ]
        },
        "service": {
          "type": "string"
        },
        "stage": {
          "enum": [
            "RUNNING",
            "STOPPED",
            "NOT_ACTUAL"
          ]
        },
        "start_time": {
          "type": "number"
        },
        "stopped": {
          "$ref": "#/definitions/v2EscalationsGetEscalationsLogOKBodyEscalationsItemsStopped"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsGetEscalationsLogOKBodyEscalationsItemsLogItems": {
      "type": "object",
      "properties": {
        "abc_duty_login": {
          "$ref": "#/definitions/v2EscalationsGetEscalationsLogOKBodyEscalationsItemsLogItemsAbcDutyLogin"
        },
        "calls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2EscalationsGetEscalationsLogOKBodyEscalationsItemsLogItemsCallsItems"
          }
        },
        "iteration": {
          "type": "integer"
        },
        "simple_login": {
          "type": "string"
        },
        "skip_reason": {
          "enum": [
            "NONE",
            "GAPS",
            "BAD_PHONE",
            "DISMISSED",
            "REJECTED",
            "MUTED",
            "NO_ABC_DUTY"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsGetEscalationsLogOKBodyEscalationsItemsLogItemsAbcDutyLogin": {
      "type": "object",
      "properties": {
        "abc_duty": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsGetEscalationsLogOKBodyEscalationsItemsLogItemsCallsItems": {
      "type": "object",
      "properties": {
        "end_time": {
          "type": "number"
        },
        "session_id": {
          "type": "string"
        },
        "start_time": {
          "type": "number"
        },
        "status": {
          "enum": [
            "CALLING",
            "FAILED",
            "SUCCESS",
            "TIMED_OUT",
            "STOP_ESCALATION",
            "FAILED_TO_START",
            "SKIPPED",
            "DOES_NOT_MATTER",
            "NO_ANSWER"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsGetEscalationsLogOKBodyEscalationsItemsPlanItems": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "timestamp": {
          "type": "number"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsGetEscalationsLogOKBodyEscalationsItemsStopped": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "time": {
          "type": "number"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsGetEscalationsLogOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsGetEscalationsLogParamsBody": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2EscalationsGetEscalationsLogParamsBodyFiltersItems"
          }
        },
        "only_running": {
          "type": "boolean"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsGetEscalationsLogParamsBodyFiltersItems": {
      "type": "object",
      "properties": {
        "escalation_id": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsStopBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2EscalationsStopBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsStopBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsStopDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2EscalationsStopDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsStopDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsStopOKBody": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/v2EscalationsStopOKBodyMeta"
        },
        "success": {
          "type": "boolean"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsStopOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EscalationsStopParamsBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "escalation_hash": {
          "type": "string"
        },
        "escalation_id": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EventsGetRawEventsBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2EventsGetRawEventsBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EventsGetRawEventsBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EventsGetRawEventsDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2EventsGetRawEventsDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EventsGetRawEventsDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EventsGetRawEventsOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2EventsGetRawEventsOKBodyItemsItems"
          }
        },
        "limit": {
          "type": "integer"
        },
        "meta": {
          "$ref": "#/definitions/v2EventsGetRawEventsOKBodyMeta"
        },
        "response_too_large": {
          "type": "boolean"
        },
        "total": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EventsGetRawEventsOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "digest": {
          "type": "string"
        },
        "heartbeat": {
          "type": "number"
        },
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "received_time": {
          "type": "number"
        },
        "service": {
          "type": "string"
        },
        "status": {
          "enum": [
            "OK",
            "WARN",
            "CRIT",
            "INFO"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EventsGetRawEventsOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EventsGetRawEventsParamsBody": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2EventsGetRawEventsParamsBodyFiltersItems"
          }
        },
        "limit": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "sort": {
          "$ref": "#/definitions/v2EventsGetRawEventsParamsBodySort"
        },
        "statuses": {
          "type": "array",
          "items": {
            "enum": [
              "OK",
              "WARN",
              "CRIT",
              "INFO"
            ]
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EventsGetRawEventsParamsBodyFiltersItems": {
      "type": "object",
      "properties": {
        "abc_service": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "match_raw_events": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2EventsGetRawEventsParamsBodySort": {
      "type": "object",
      "properties": {
        "field": {
          "enum": [
            "DEFAULT",
            "HOST",
            "SERVICE"
          ]
        },
        "order": {
          "enum": [
            "DESC",
            "ASC"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetCheckHistoryBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetCheckHistoryDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryOKBody": {
      "type": "object",
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetCheckHistoryOKBodyMeta"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2HistoryGetCheckHistoryOKBodyStatesItems"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryOKBodyStatesItems": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "sender_node": {
          "type": "string"
        },
        "start_time": {
          "type": "number"
        },
        "state_id": {
          "type": "string"
        },
        "status": {
          "enum": [
            "OK",
            "WARN",
            "CRIT",
            "INFO"
          ]
        },
        "status_time": {
          "type": "number"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryParamsBody": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "service": {
          "type": "string"
        },
        "since": {
          "type": "number"
        },
        "statuses": {
          "type": "array",
          "items": {
            "enum": [
              "OK",
              "WARN",
              "CRIT",
              "INFO"
            ]
          }
        },
        "until": {
          "type": "number"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryRollupsBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetCheckHistoryRollupsBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryRollupsBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryRollupsDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetCheckHistoryRollupsDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryRollupsDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryRollupsOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2HistoryGetCheckHistoryRollupsOKBodyItemsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetCheckHistoryRollupsOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryRollupsOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "last_state": {
          "$ref": "#/definitions/v2HistoryGetCheckHistoryRollupsOKBodyItemsItemsLastState"
        },
        "rollup": {
          "$ref": "#/definitions/v2HistoryGetCheckHistoryRollupsOKBodyItemsItemsRollup"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryRollupsOKBodyItemsItemsLastState": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "sender_node": {
          "type": "string"
        },
        "start_time": {
          "type": "number"
        },
        "state_id": {
          "type": "string"
        },
        "status": {
          "enum": [
            "OK",
            "WARN",
            "CRIT",
            "INFO"
          ]
        },
        "status_time": {
          "type": "number"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryRollupsOKBodyItemsItemsRollup": {
      "type": "object",
      "properties": {
        "counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2HistoryGetCheckHistoryRollupsOKBodyItemsItemsRollupCountsItems"
          }
        },
        "start_time": {
          "type": "number"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryRollupsOKBodyItemsItemsRollupCountsItems": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "status": {
          "enum": [
            "OK",
            "WARN",
            "CRIT",
            "INFO"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryRollupsOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckHistoryRollupsParamsBody": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "resolution": {
          "type": "integer"
        },
        "service": {
          "type": "string"
        },
        "since": {
          "type": "number"
        },
        "until": {
          "type": "number"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckSnapshotBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetCheckSnapshotBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckSnapshotBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckSnapshotDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetCheckSnapshotDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckSnapshotDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckSnapshotOKBody": {
      "type": "object",
      "properties": {
        "description": {
          "$ref": "#/definitions/v2HistoryGetCheckSnapshotOKBodyDescription"
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetCheckSnapshotOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckSnapshotOKBodyDescription": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2HistoryGetCheckSnapshotOKBodyDescriptionChildrenItems"
          }
        },
        "description": {
          "type": "string"
        },
        "description_time": {
          "type": "number"
        },
        "downtime_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state_kind": {
          "enum": [
            "ACTUAL",
            "INVALID",
            "FLAPPING",
            "REWRITTEN_BY_AGGREGATOR",
            "CHILD_GROUP_INVALID",
            "AGGREGATOR_SKIP",
            "DOWNTIME_SKIP",
            "DOWNTIME_FORCE_OK",
            "UNREACH_SKIP",
            "UNREACH_FORCE_OK",
            "NO_DATA_SKIP",
            "NO_DATA_FORCE_OK",
            "NO_DATA_FORCE_CRIT",
            "NO_DATA_FORCE_WARN",
            "RECENT_EVENTS_FORCE_CRIT"
          ]
        },
        "status": {
          "enum": [
            "OK",
            "WARN",
            "CRIT",
            "INFO"
          ]
        },
        "status_time": {
          "type": "number"
        },
        "summary": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckSnapshotOKBodyDescriptionChildrenItems": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "downtime_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "is_check": {
          "type": "boolean"
        },
        "service": {
          "type": "string"
        },
        "state_kind": {
          "enum": [
            "ACTUAL",
            "INVALID",
            "FLAPPING",
            "REWRITTEN_BY_AGGREGATOR",
            "CHILD_GROUP_INVALID",
            "AGGREGATOR_SKIP",
            "DOWNTIME_SKIP",
            "DOWNTIME_FORCE_OK",
            "UNREACH_SKIP",
            "UNREACH_FORCE_OK",
            "NO_DATA_SKIP",
            "NO_DATA_FORCE_OK",
            "NO_DATA_FORCE_CRIT",
            "NO_DATA_FORCE_WARN",
            "RECENT_EVENTS_FORCE_CRIT"
          ]
        },
        "status": {
          "enum": [
            "OK",
            "WARN",
            "CRIT",
            "INFO"
          ]
        },
        "status_time": {
          "type": "number"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckSnapshotOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetCheckSnapshotParamsBody": {
      "type": "object",
      "properties": {
        "state_id": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationRollupsBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetNotificationRollupsBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationRollupsBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationRollupsDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetNotificationRollupsDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationRollupsDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationRollupsOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2HistoryGetNotificationRollupsOKBodyItemsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetNotificationRollupsOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationRollupsOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "rollup": {
          "$ref": "#/definitions/v2HistoryGetNotificationRollupsOKBodyItemsItemsRollup"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationRollupsOKBodyItemsItemsRollup": {
      "type": "object",
      "properties": {
        "counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2HistoryGetNotificationRollupsOKBodyItemsItemsRollupCountsItems"
          }
        },
        "start_time": {
          "type": "number"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationRollupsOKBodyItemsItemsRollupCountsItems": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "host": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "service": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationRollupsOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationRollupsParamsBody": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "resolution": {
          "type": "integer"
        },
        "service": {
          "type": "string"
        },
        "since": {
          "type": "number"
        },
        "until": {
          "type": "number"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationsBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetNotificationsBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationsBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationsDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetNotificationsDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationsDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationsOKBody": {
      "type": "object",
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "meta": {
          "$ref": "#/definitions/v2HistoryGetNotificationsOKBodyMeta"
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2HistoryGetNotificationsOKBodyNotificationsItems"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationsOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationsOKBodyNotificationsItems": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "description_timestamp": {
          "type": "number"
        },
        "host_name": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "sender_node": {
          "type": "string"
        },
        "service_name": {
          "type": "string"
        },
        "state_id": {
          "type": "string"
        },
        "status": {
          "enum": [
            "OK",
            "WARN",
            "CRIT",
            "INFO"
          ]
        },
        "timestamp": {
          "type": "number"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationsParamsBody": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2HistoryGetNotificationsParamsBodyFiltersItems"
          }
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "since": {
          "type": "number"
        },
        "until": {
          "type": "number"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2HistoryGetNotificationsParamsBodyFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesGetMutesBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2MutesGetMutesBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesGetMutesBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesGetMutesDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2MutesGetMutesDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesGetMutesDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesGetMutesOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2MutesGetMutesOKBodyItemsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2MutesGetMutesOKBodyMeta"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesGetMutesOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "end_time": {
          "type": "number"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2MutesGetMutesOKBodyItemsItemsFiltersItems"
          }
        },
        "mute_id": {
          "type": "string"
        },
        "start_time": {
          "type": "number"
        },
        "startrek_ticket": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesGetMutesOKBodyItemsItemsFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesGetMutesOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesGetMutesParamsBody": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2MutesGetMutesParamsBodyFiltersItems"
          }
        },
        "include_expired": {
          "type": "boolean"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "sort_by": {
          "enum": [
            "ID",
            "START_TIME",
            "END_TIME"
          ]
        },
        "sort_order": {
          "enum": [
            "DESC",
            "ASC"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesGetMutesParamsBodyFiltersItems": {
      "type": "object",
      "properties": {
        "check_id": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "mute_id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesRemoveMutesBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2MutesRemoveMutesBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesRemoveMutesBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesRemoveMutesDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2MutesRemoveMutesDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesRemoveMutesDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesRemoveMutesOKBody": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/v2MutesRemoveMutesOKBodyMeta"
        },
        "mutes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2MutesRemoveMutesOKBodyMutesItems"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesRemoveMutesOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesRemoveMutesOKBodyMutesItems": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "end_time": {
          "type": "number"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2MutesRemoveMutesOKBodyMutesItemsFiltersItems"
          }
        },
        "mute_id": {
          "type": "string"
        },
        "start_time": {
          "type": "number"
        },
        "startrek_ticket": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesRemoveMutesOKBodyMutesItemsFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesRemoveMutesParamsBody": {
      "type": "object",
      "properties": {
        "mute_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesSetMutesBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2MutesSetMutesBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesSetMutesBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesSetMutesDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2MutesSetMutesDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesSetMutesDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesSetMutesOKBody": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/v2MutesSetMutesOKBodyMeta"
        },
        "mute_id": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesSetMutesOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesSetMutesParamsBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "end_time": {
          "type": "number"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2MutesSetMutesParamsBodyFiltersItems"
          }
        },
        "mute_id": {
          "type": "string"
        },
        "start_time": {
          "type": "number"
        },
        "startrek_ticket": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2MutesSetMutesParamsBodyFiltersItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetNamespacesBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2NamespacesGetNamespacesBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetNamespacesBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetNamespacesDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2NamespacesGetNamespacesDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetNamespacesDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetNamespacesOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2NamespacesGetNamespacesOKBodyItemsItems"
          }
        },
        "limit": {
          "type": "integer"
        },
        "meta": {
          "$ref": "#/definitions/v2NamespacesGetNamespacesOKBodyMeta"
        },
        "total": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetNamespacesOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "abc_service": {
          "type": "string"
        },
        "autochecks_count": {
          "type": "integer"
        },
        "checks_count": {
          "type": "integer"
        },
        "downtimers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "inherit_downtimers": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetNamespacesOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetNamespacesParamsBody": {
      "type": "object",
      "properties": {
        "abc_service": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "limit": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetRulesWithoutNamespaceBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2NamespacesGetRulesWithoutNamespaceBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetRulesWithoutNamespaceBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetRulesWithoutNamespaceDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2NamespacesGetRulesWithoutNamespaceDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetRulesWithoutNamespaceDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetRulesWithoutNamespaceOKBody": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/v2NamespacesGetRulesWithoutNamespaceOKBodyMeta"
        },
        "rule_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetRulesWithoutNamespaceOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesGetRulesWithoutNamespaceParamsBody": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesMigrateChecksBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2NamespacesMigrateChecksBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesMigrateChecksBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesMigrateChecksDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2NamespacesMigrateChecksDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesMigrateChecksDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesMigrateChecksOKBody": {
      "type": "object",
      "properties": {
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2NamespacesMigrateChecksOKBodyChecksItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2NamespacesMigrateChecksOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesMigrateChecksOKBodyChecksItems": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "service": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesMigrateChecksOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesMigrateChecksParamsBody": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2NamespacesMigrateChecksParamsBodyFiltersItems"
          }
        },
        "namespace": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesMigrateChecksParamsBodyFiltersItems": {
      "type": "object",
      "properties": {
        "abc_service": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "match_raw_events": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesRemoveNamespaceBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2NamespacesRemoveNamespaceBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesRemoveNamespaceBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesRemoveNamespaceDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2NamespacesRemoveNamespaceDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesRemoveNamespaceDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesRemoveNamespaceOKBody": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/v2NamespacesRemoveNamespaceOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesRemoveNamespaceOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesRemoveNamespaceParamsBody": {
      "type": "object",
      "properties": {
        "force": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesSetNamespaceBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2NamespacesSetNamespaceBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesSetNamespaceBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesSetNamespaceDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2NamespacesSetNamespaceDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesSetNamespaceDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesSetNamespaceOKBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2NamespacesSetNamespaceOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesSetNamespaceOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2NamespacesSetNamespaceParamsBody": {
      "type": "object",
      "properties": {
        "abc_service": {
          "type": "string"
        },
        "downtimers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "inherit_downtimers": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestConvertBlinovBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestConvertBlinovBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestConvertBlinovBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestConvertBlinovDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestConvertBlinovDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestConvertBlinovDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestConvertBlinovOKBody": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2SuggestConvertBlinovOKBodyFiltersItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestConvertBlinovOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestConvertBlinovOKBodyFiltersItems": {
      "type": "object",
      "properties": {
        "abc_service": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "match_raw_events": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestConvertBlinovOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestConvertBlinovParamsBody": {
      "type": "object",
      "properties": {
        "blinov": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestLoginsBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestLoginsBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestLoginsBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestLoginsDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestLoginsDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestLoginsDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestLoginsOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2SuggestLoginsOKBodyItemsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestLoginsOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestLoginsOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "enum": [
            "staff_user",
            "telegram_chat",
            "staff_group",
            "abc_service",
            "abc_role",
            "ya_chat"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestLoginsOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestLoginsParamsBody": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer"
        },
        "query": {
          "type": "string"
        },
        "type": {
          "enum": [
            "staff_users",
            "notification_recipients",
            "notification_owners",
            "namespace_owners",
            "dashboard_owners"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestObjectsBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestObjectsBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestObjectsBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestObjectsDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestObjectsDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestObjectsDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestObjectsOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2SuggestObjectsOKBodyItemsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestObjectsOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestObjectsOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "enum": [
            "check",
            "raw_event",
            "group",
            "namespace",
            "address",
            "notify_rule"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestObjectsOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestObjectsParamsBody": {
      "type": "object",
      "properties": {
        "field": {
          "enum": [
            "host",
            "service",
            "tag",
            "instance",
            "namespace",
            "address",
            "abc_service",
            "method",
            "match_raw_events"
          ]
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2SuggestObjectsParamsBodyFiltersItems"
          }
        },
        "limit": {
          "type": "integer"
        },
        "query": {
          "type": "string"
        },
        "type": {
          "enum": [
            "checks",
            "raw_events",
            "downtime_targets",
            "namespaces",
            "dashboards",
            "notify_rules"
          ]
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestObjectsParamsBodyFiltersItems": {
      "type": "object",
      "properties": {
        "abc_service": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "match_raw_events": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetDowntimedUserChecksBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetDowntimedUserChecksBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetDowntimedUserChecksBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetDowntimedUserChecksDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetDowntimedUserChecksDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetDowntimedUserChecksDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetDowntimedUserChecksOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2SuggestionsGetDowntimedUserChecksOKBodyItemsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetDowntimedUserChecksOKBodyMeta"
        },
        "total": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetDowntimedUserChecksOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "change_time": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetDowntimedUserChecksOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetDowntimedUserChecksParamsBody": {
      "type": "object",
      "properties": {
        "include_common": {
          "type": "boolean"
        },
        "limit": {
          "type": "integer"
        },
        "login": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetInvalidUserChecksBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetInvalidUserChecksBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetInvalidUserChecksBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetInvalidUserChecksDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetInvalidUserChecksDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetInvalidUserChecksDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetInvalidUserChecksOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2SuggestionsGetInvalidUserChecksOKBodyItemsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetInvalidUserChecksOKBodyMeta"
        },
        "total": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetInvalidUserChecksOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "change_time": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetInvalidUserChecksOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetInvalidUserChecksParamsBody": {
      "type": "object",
      "properties": {
        "include_common": {
          "type": "boolean"
        },
        "limit": {
          "type": "integer"
        },
        "login": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNoDataUserChecksBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetNoDataUserChecksBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNoDataUserChecksBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNoDataUserChecksDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetNoDataUserChecksDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNoDataUserChecksDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNoDataUserChecksOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2SuggestionsGetNoDataUserChecksOKBodyItemsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetNoDataUserChecksOKBodyMeta"
        },
        "total": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNoDataUserChecksOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "change_time": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNoDataUserChecksOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNoDataUserChecksParamsBody": {
      "type": "object",
      "properties": {
        "include_common": {
          "type": "boolean"
        },
        "limit": {
          "type": "integer"
        },
        "login": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNotifyRulesWithoutPredicatesBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetNotifyRulesWithoutPredicatesBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNotifyRulesWithoutPredicatesBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNotifyRulesWithoutPredicatesDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetNotifyRulesWithoutPredicatesDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNotifyRulesWithoutPredicatesDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNotifyRulesWithoutPredicatesOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2SuggestionsGetNotifyRulesWithoutPredicatesOKBodyItemsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetNotifyRulesWithoutPredicatesOKBodyMeta"
        },
        "total": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNotifyRulesWithoutPredicatesOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "selector": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNotifyRulesWithoutPredicatesOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetNotifyRulesWithoutPredicatesParamsBody": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer"
        },
        "login": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetUnreachableUserChecksBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetUnreachableUserChecksBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetUnreachableUserChecksBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetUnreachableUserChecksDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetUnreachableUserChecksDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetUnreachableUserChecksDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetUnreachableUserChecksOKBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2SuggestionsGetUnreachableUserChecksOKBodyItemsItems"
          }
        },
        "meta": {
          "$ref": "#/definitions/v2SuggestionsGetUnreachableUserChecksOKBodyMeta"
        },
        "total": {
          "type": "integer"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetUnreachableUserChecksOKBodyItemsItems": {
      "type": "object",
      "properties": {
        "change_time": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetUnreachableUserChecksOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2SuggestionsGetUnreachableUserChecksParamsBody": {
      "type": "object",
      "properties": {
        "include_common": {
          "type": "boolean"
        },
        "limit": {
          "type": "integer"
        },
        "login": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2UserConfigGetUserConfigBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2UserConfigGetUserConfigBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2UserConfigGetUserConfigBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2UserConfigGetUserConfigDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2UserConfigGetUserConfigDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2UserConfigGetUserConfigDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2UserConfigGetUserConfigOKBody": {
      "type": "object",
      "properties": {
        "escalation_reports": {
          "type": "boolean"
        },
        "meta": {
          "$ref": "#/definitions/v2UserConfigGetUserConfigOKBodyMeta"
        },
        "read_from_ydb": {
          "type": "boolean"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2UserConfigGetUserConfigOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2UserConfigSetUserConfigBadRequestBody": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2UserConfigSetUserConfigBadRequestBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2UserConfigSetUserConfigBadRequestBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2UserConfigSetUserConfigDefaultBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/v2UserConfigSetUserConfigDefaultBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2UserConfigSetUserConfigDefaultBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2UserConfigSetUserConfigOKBody": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/v2UserConfigSetUserConfigOKBodyMeta"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2UserConfigSetUserConfigOKBodyMeta": {
      "type": "object",
      "properties": {
        "_backend": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "v2UserConfigSetUserConfigParamsBody": {
      "type": "object",
      "properties": {
        "escalation_reports": {
          "type": "boolean"
        },
        "read_from_ydb": {
          "type": "boolean"
        }
      },
      "x-go-gen-location": "operations"
    }
  },
  "tags": [
    {
      "description": "Aggregates configuration and their state",
      "name": "checks"
    },
    {
      "description": "Raw events operations (things that you aggregate)",
      "name": "raw events"
    },
    {
      "description": "Downtimes",
      "name": "downtimes"
    },
    {
      "description": "Basic namespaces CRUD (our access control)",
      "name": "namespaces"
    },
    {
      "description": "Everything related to notifications and escalations",
      "name": "notifications"
    },
    {
      "description": "Dashboard panel configuration",
      "name": "dashboards"
    },
    {
      "description": "Internal operations. Super unstable and will randomly change at any moment.",
      "name": "internal"
    }
  ],
  "parameters": {
    # added manually
    "Authorization": {
      "name": "Authorization",
      "in": "header",
      "description": "OAuth token. It is not in security section because we also use cookies and you can't specify those in swagger 2.0.",
      "type": "string"
    }
  }
}
