// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V2HistoryGetNotificationsOKBodyNotificationsItems v2 history get notifications o k body notifications items
//
// swagger:model v2HistoryGetNotificationsOKBodyNotificationsItems
type V2HistoryGetNotificationsOKBodyNotificationsItems struct {

	// description
	Description string `json:"description,omitempty"`

	// description timestamp
	DescriptionTimestamp float64 `json:"description_timestamp,omitempty"`

	// host name
	HostName string `json:"host_name,omitempty"`

	// login
	Login string `json:"login,omitempty"`

	// method
	Method string `json:"method,omitempty"`

	// sender node
	SenderNode string `json:"sender_node,omitempty"`

	// service name
	ServiceName string `json:"service_name,omitempty"`

	// state id
	StateID string `json:"state_id,omitempty"`

	// status
	// Enum: [OK WARN CRIT INFO]
	Status interface{} `json:"status,omitempty"`

	// timestamp
	Timestamp float64 `json:"timestamp,omitempty"`
}

// Validate validates this v2 history get notifications o k body notifications items
func (m *V2HistoryGetNotificationsOKBodyNotificationsItems) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v2 history get notifications o k body notifications items based on context it is used
func (m *V2HistoryGetNotificationsOKBodyNotificationsItems) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V2HistoryGetNotificationsOKBodyNotificationsItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2HistoryGetNotificationsOKBodyNotificationsItems) UnmarshalBinary(b []byte) error {
	var res V2HistoryGetNotificationsOKBodyNotificationsItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
