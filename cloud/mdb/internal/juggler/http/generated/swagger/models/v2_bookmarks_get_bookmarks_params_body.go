// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V2BookmarksGetBookmarksParamsBody v2 bookmarks get bookmarks params body
//
// swagger:model v2BookmarksGetBookmarksParamsBody
type V2BookmarksGetBookmarksParamsBody struct {

	// types
	Types []interface{} `json:"types"`
}

// Validate validates this v2 bookmarks get bookmarks params body
func (m *V2BookmarksGetBookmarksParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTypes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var v2BookmarksGetBookmarksParamsBodyTypesItemsEnum []interface{}

func init() {
	var res []interface{}
	if err := json.Unmarshal([]byte(`["CHECKS","RAW_EVENTS","DASHBOARDS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v2BookmarksGetBookmarksParamsBodyTypesItemsEnum = append(v2BookmarksGetBookmarksParamsBodyTypesItemsEnum, v)
	}
}

func (m *V2BookmarksGetBookmarksParamsBody) validateTypesItemsEnum(path, location string, value interface{}) error {
	if err := validate.EnumCase(path, location, value, v2BookmarksGetBookmarksParamsBodyTypesItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V2BookmarksGetBookmarksParamsBody) validateTypes(formats strfmt.Registry) error {
	if swag.IsZero(m.Types) { // not required
		return nil
	}

	return nil
}

// ContextValidate validates this v2 bookmarks get bookmarks params body based on context it is used
func (m *V2BookmarksGetBookmarksParamsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V2BookmarksGetBookmarksParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2BookmarksGetBookmarksParamsBody) UnmarshalBinary(b []byte) error {
	var res V2BookmarksGetBookmarksParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
