// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V2HistoryGetCheckSnapshotOKBodyDescription v2 history get check snapshot o k body description
//
// swagger:model v2HistoryGetCheckSnapshotOKBodyDescription
type V2HistoryGetCheckSnapshotOKBodyDescription struct {

	// children
	Children []*V2HistoryGetCheckSnapshotOKBodyDescriptionChildrenItems `json:"children"`

	// description
	Description string `json:"description,omitempty"`

	// description time
	DescriptionTime float64 `json:"description_time,omitempty"`

	// downtime ids
	DowntimeIds []string `json:"downtime_ids"`

	// state kind
	// Enum: [ACTUAL INVALID FLAPPING REWRITTEN_BY_AGGREGATOR CHILD_GROUP_INVALID AGGREGATOR_SKIP DOWNTIME_SKIP DOWNTIME_FORCE_OK UNREACH_SKIP UNREACH_FORCE_OK NO_DATA_SKIP NO_DATA_FORCE_OK NO_DATA_FORCE_CRIT NO_DATA_FORCE_WARN RECENT_EVENTS_FORCE_CRIT]
	StateKind interface{} `json:"state_kind,omitempty"`

	// status
	// Enum: [OK WARN CRIT INFO]
	Status interface{} `json:"status,omitempty"`

	// status time
	StatusTime float64 `json:"status_time,omitempty"`

	// summary
	Summary string `json:"summary,omitempty"`
}

// Validate validates this v2 history get check snapshot o k body description
func (m *V2HistoryGetCheckSnapshotOKBodyDescription) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChildren(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V2HistoryGetCheckSnapshotOKBodyDescription) validateChildren(formats strfmt.Registry) error {
	if swag.IsZero(m.Children) { // not required
		return nil
	}

	for i := 0; i < len(m.Children); i++ {
		if swag.IsZero(m.Children[i]) { // not required
			continue
		}

		if m.Children[i] != nil {
			if err := m.Children[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("children" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this v2 history get check snapshot o k body description based on the context it is used
func (m *V2HistoryGetCheckSnapshotOKBodyDescription) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateChildren(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V2HistoryGetCheckSnapshotOKBodyDescription) contextValidateChildren(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Children); i++ {

		if m.Children[i] != nil {
			if err := m.Children[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("children" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *V2HistoryGetCheckSnapshotOKBodyDescription) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2HistoryGetCheckSnapshotOKBodyDescription) UnmarshalBinary(b []byte) error {
	var res V2HistoryGetCheckSnapshotOKBodyDescription
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
