// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V2SuggestObjectsParamsBody v2 suggest objects params body
//
// swagger:model v2SuggestObjectsParamsBody
type V2SuggestObjectsParamsBody struct {

	// field
	// Enum: [host service tag instance namespace address abc_service method match_raw_events]
	Field interface{} `json:"field,omitempty"`

	// filters
	Filters []*V2SuggestObjectsParamsBodyFiltersItems `json:"filters"`

	// limit
	Limit int64 `json:"limit,omitempty"`

	// query
	Query string `json:"query,omitempty"`

	// type
	// Enum: [checks raw_events downtime_targets namespaces dashboards notify_rules]
	Type interface{} `json:"type,omitempty"`
}

// Validate validates this v2 suggest objects params body
func (m *V2SuggestObjectsParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFilters(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V2SuggestObjectsParamsBody) validateFilters(formats strfmt.Registry) error {
	if swag.IsZero(m.Filters) { // not required
		return nil
	}

	for i := 0; i < len(m.Filters); i++ {
		if swag.IsZero(m.Filters[i]) { // not required
			continue
		}

		if m.Filters[i] != nil {
			if err := m.Filters[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("filters" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this v2 suggest objects params body based on the context it is used
func (m *V2SuggestObjectsParamsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateFilters(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V2SuggestObjectsParamsBody) contextValidateFilters(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Filters); i++ {

		if m.Filters[i] != nil {
			if err := m.Filters[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("filters" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *V2SuggestObjectsParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2SuggestObjectsParamsBody) UnmarshalBinary(b []byte) error {
	var res V2SuggestObjectsParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
