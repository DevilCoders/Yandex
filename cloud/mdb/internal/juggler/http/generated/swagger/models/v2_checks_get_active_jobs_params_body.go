// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V2ChecksGetActiveJobsParamsBody v2 checks get active jobs params body
//
// swagger:model v2ChecksGetActiveJobsParamsBody
type V2ChecksGetActiveJobsParamsBody struct {

	// config version
	ConfigVersion string `json:"ConfigVersion,omitempty"`

	// instance host
	InstanceHost string `json:"InstanceHost,omitempty"`

	// instance mtn fqdn
	InstanceMtnFqdn string `json:"InstanceMtnFqdn,omitempty"`

	// instance port
	InstancePort int64 `json:"InstancePort,omitempty"`

	// services
	Services []interface{} `json:"Services"`
}

// Validate validates this v2 checks get active jobs params body
func (m *V2ChecksGetActiveJobsParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateServices(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var v2ChecksGetActiveJobsParamsBodyServicesItemsEnum []interface{}

func init() {
	var res []interface{}
	if err := json.Unmarshal([]byte(`["NoActive","Meta","IcmpPing","TcpChat","Ssh","Smtp","Imap","Http","Https","X509Cert","HttpsCert","Dns","Graphite","NannyDeployStatus","Netmon"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v2ChecksGetActiveJobsParamsBodyServicesItemsEnum = append(v2ChecksGetActiveJobsParamsBodyServicesItemsEnum, v)
	}
}

func (m *V2ChecksGetActiveJobsParamsBody) validateServicesItemsEnum(path, location string, value interface{}) error {
	if err := validate.EnumCase(path, location, value, v2ChecksGetActiveJobsParamsBodyServicesItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V2ChecksGetActiveJobsParamsBody) validateServices(formats strfmt.Registry) error {
	if swag.IsZero(m.Services) { // not required
		return nil
	}

	return nil
}

// ContextValidate validates this v2 checks get active jobs params body based on context it is used
func (m *V2ChecksGetActiveJobsParamsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V2ChecksGetActiveJobsParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2ChecksGetActiveJobsParamsBody) UnmarshalBinary(b []byte) error {
	var res V2ChecksGetActiveJobsParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
