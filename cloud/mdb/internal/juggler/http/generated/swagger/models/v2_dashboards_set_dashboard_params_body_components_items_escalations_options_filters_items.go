// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V2DashboardsSetDashboardParamsBodyComponentsItemsEscalationsOptionsFiltersItems v2 dashboards set dashboard params body components items escalations options filters items
//
// swagger:model v2DashboardsSetDashboardParamsBodyComponentsItemsEscalationsOptionsFiltersItems
type V2DashboardsSetDashboardParamsBodyComponentsItemsEscalationsOptionsFiltersItems struct {

	// escalation id
	EscalationID string `json:"escalation_id,omitempty"`

	// host
	Host string `json:"host,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// recipients
	Recipients []string `json:"recipients"`

	// service
	Service string `json:"service,omitempty"`

	// tags
	Tags []string `json:"tags"`
}

// Validate validates this v2 dashboards set dashboard params body components items escalations options filters items
func (m *V2DashboardsSetDashboardParamsBodyComponentsItemsEscalationsOptionsFiltersItems) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v2 dashboards set dashboard params body components items escalations options filters items based on context it is used
func (m *V2DashboardsSetDashboardParamsBodyComponentsItemsEscalationsOptionsFiltersItems) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V2DashboardsSetDashboardParamsBodyComponentsItemsEscalationsOptionsFiltersItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2DashboardsSetDashboardParamsBodyComponentsItemsEscalationsOptionsFiltersItems) UnmarshalBinary(b []byte) error {
	var res V2DashboardsSetDashboardParamsBodyComponentsItemsEscalationsOptionsFiltersItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
