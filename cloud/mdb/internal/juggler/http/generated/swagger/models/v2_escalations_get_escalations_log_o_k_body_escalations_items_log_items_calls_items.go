// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V2EscalationsGetEscalationsLogOKBodyEscalationsItemsLogItemsCallsItems v2 escalations get escalations log o k body escalations items log items calls items
//
// swagger:model v2EscalationsGetEscalationsLogOKBodyEscalationsItemsLogItemsCallsItems
type V2EscalationsGetEscalationsLogOKBodyEscalationsItemsLogItemsCallsItems struct {

	// end time
	EndTime float64 `json:"end_time,omitempty"`

	// session id
	SessionID string `json:"session_id,omitempty"`

	// start time
	StartTime float64 `json:"start_time,omitempty"`

	// status
	// Enum: [CALLING FAILED SUCCESS TIMED_OUT STOP_ESCALATION FAILED_TO_START SKIPPED DOES_NOT_MATTER NO_ANSWER]
	Status interface{} `json:"status,omitempty"`
}

// Validate validates this v2 escalations get escalations log o k body escalations items log items calls items
func (m *V2EscalationsGetEscalationsLogOKBodyEscalationsItemsLogItemsCallsItems) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v2 escalations get escalations log o k body escalations items log items calls items based on context it is used
func (m *V2EscalationsGetEscalationsLogOKBodyEscalationsItemsLogItemsCallsItems) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V2EscalationsGetEscalationsLogOKBodyEscalationsItemsLogItemsCallsItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2EscalationsGetEscalationsLogOKBodyEscalationsItemsLogItemsCallsItems) UnmarshalBinary(b []byte) error {
	var res V2EscalationsGetEscalationsLogOKBodyEscalationsItemsLogItemsCallsItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
