// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V2DashboardsSetDashboardParamsBodyComponentsItemsMutesOptionsFiltersItems v2 dashboards set dashboard params body components items mutes options filters items
//
// swagger:model v2DashboardsSetDashboardParamsBodyComponentsItemsMutesOptionsFiltersItems
type V2DashboardsSetDashboardParamsBodyComponentsItemsMutesOptionsFiltersItems struct {

	// check id
	CheckID string `json:"check_id,omitempty"`

	// host
	Host string `json:"host,omitempty"`

	// login
	Login string `json:"login,omitempty"`

	// method
	Method string `json:"method,omitempty"`

	// mute id
	MuteID string `json:"mute_id,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// service
	Service string `json:"service,omitempty"`

	// tags
	Tags []string `json:"tags"`

	// user
	User string `json:"user,omitempty"`
}

// Validate validates this v2 dashboards set dashboard params body components items mutes options filters items
func (m *V2DashboardsSetDashboardParamsBodyComponentsItemsMutesOptionsFiltersItems) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v2 dashboards set dashboard params body components items mutes options filters items based on context it is used
func (m *V2DashboardsSetDashboardParamsBodyComponentsItemsMutesOptionsFiltersItems) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V2DashboardsSetDashboardParamsBodyComponentsItemsMutesOptionsFiltersItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2DashboardsSetDashboardParamsBodyComponentsItemsMutesOptionsFiltersItems) UnmarshalBinary(b []byte) error {
	var res V2DashboardsSetDashboardParamsBodyComponentsItemsMutesOptionsFiltersItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
