// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V2HistoryGetCheckHistoryParamsBody v2 history get check history params body
//
// swagger:model v2HistoryGetCheckHistoryParamsBody
type V2HistoryGetCheckHistoryParamsBody struct {

	// host
	Host string `json:"host,omitempty"`

	// page
	Page int64 `json:"page,omitempty"`

	// page size
	PageSize int64 `json:"page_size,omitempty"`

	// service
	Service string `json:"service,omitempty"`

	// since
	Since float64 `json:"since,omitempty"`

	// statuses
	Statuses []interface{} `json:"statuses"`

	// until
	Until float64 `json:"until,omitempty"`
}

// Validate validates this v2 history get check history params body
func (m *V2HistoryGetCheckHistoryParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatuses(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var v2HistoryGetCheckHistoryParamsBodyStatusesItemsEnum []interface{}

func init() {
	var res []interface{}
	if err := json.Unmarshal([]byte(`["OK","WARN","CRIT","INFO"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v2HistoryGetCheckHistoryParamsBodyStatusesItemsEnum = append(v2HistoryGetCheckHistoryParamsBodyStatusesItemsEnum, v)
	}
}

func (m *V2HistoryGetCheckHistoryParamsBody) validateStatusesItemsEnum(path, location string, value interface{}) error {
	if err := validate.EnumCase(path, location, value, v2HistoryGetCheckHistoryParamsBodyStatusesItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V2HistoryGetCheckHistoryParamsBody) validateStatuses(formats strfmt.Registry) error {
	if swag.IsZero(m.Statuses) { // not required
		return nil
	}

	return nil
}

// ContextValidate validates this v2 history get check history params body based on context it is used
func (m *V2HistoryGetCheckHistoryParamsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V2HistoryGetCheckHistoryParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2HistoryGetCheckHistoryParamsBody) UnmarshalBinary(b []byte) error {
	var res V2HistoryGetCheckHistoryParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
