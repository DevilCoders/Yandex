// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonGraphite v2 checks get active jobs o k body digests items value common graphite
//
// swagger:model v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonGraphite
type V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonGraphite struct {

	// base Url
	BaseURL string `json:"BaseUrl,omitempty"`

	// crit
	Crit string `json:"Crit,omitempty"`

	// ignore errors
	IgnoreErrors bool `json:"IgnoreErrors,omitempty"`

	// metric
	Metric string `json:"Metric,omitempty"`

	// null status
	// Enum: [OK WARN CRIT INFO]
	NullStatus interface{} `json:"NullStatus,omitempty"`

	// time window
	TimeWindow string `json:"TimeWindow,omitempty"`

	// timeout
	Timeout int64 `json:"Timeout,omitempty"`

	// warn
	Warn string `json:"Warn,omitempty"`
}

// Validate validates this v2 checks get active jobs o k body digests items value common graphite
func (m *V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonGraphite) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v2 checks get active jobs o k body digests items value common graphite based on context it is used
func (m *V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonGraphite) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonGraphite) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonGraphite) UnmarshalBinary(b []byte) error {
	var res V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonGraphite
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
