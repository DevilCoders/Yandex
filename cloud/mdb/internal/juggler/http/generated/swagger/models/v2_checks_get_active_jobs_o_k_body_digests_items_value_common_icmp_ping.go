// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPing v2 checks get active jobs o k body digests items value common icmp ping
//
// swagger:model v2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPing
type V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPing struct {

	// target config
	TargetConfig *V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPingTargetConfig `json:"TargetConfig,omitempty"`
}

// Validate validates this v2 checks get active jobs o k body digests items value common icmp ping
func (m *V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPing) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTargetConfig(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPing) validateTargetConfig(formats strfmt.Registry) error {
	if swag.IsZero(m.TargetConfig) { // not required
		return nil
	}

	if m.TargetConfig != nil {
		if err := m.TargetConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("TargetConfig")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this v2 checks get active jobs o k body digests items value common icmp ping based on the context it is used
func (m *V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPing) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateTargetConfig(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPing) contextValidateTargetConfig(ctx context.Context, formats strfmt.Registry) error {

	if m.TargetConfig != nil {
		if err := m.TargetConfig.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("TargetConfig")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPing) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPing) UnmarshalBinary(b []byte) error {
	var res V2ChecksGetActiveJobsOKBodyDigestsItemsValueCommonIcmpPing
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
