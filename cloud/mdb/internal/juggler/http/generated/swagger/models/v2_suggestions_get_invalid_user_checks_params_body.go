// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V2SuggestionsGetInvalidUserChecksParamsBody v2 suggestions get invalid user checks params body
//
// swagger:model v2SuggestionsGetInvalidUserChecksParamsBody
type V2SuggestionsGetInvalidUserChecksParamsBody struct {

	// include common
	IncludeCommon bool `json:"include_common,omitempty"`

	// limit
	Limit int64 `json:"limit,omitempty"`

	// login
	Login string `json:"login,omitempty"`
}

// Validate validates this v2 suggestions get invalid user checks params body
func (m *V2SuggestionsGetInvalidUserChecksParamsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v2 suggestions get invalid user checks params body based on context it is used
func (m *V2SuggestionsGetInvalidUserChecksParamsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V2SuggestionsGetInvalidUserChecksParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2SuggestionsGetInvalidUserChecksParamsBody) UnmarshalBinary(b []byte) error {
	var res V2SuggestionsGetInvalidUserChecksParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
