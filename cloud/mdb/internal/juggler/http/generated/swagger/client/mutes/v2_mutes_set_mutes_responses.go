// Code generated by go-swagger; DO NOT EDIT.

package mutes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/juggler/http/generated/swagger/models"
)

// V2MutesSetMutesReader is a Reader for the V2MutesSetMutes structure.
type V2MutesSetMutesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2MutesSetMutesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV2MutesSetMutesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV2MutesSetMutesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewV2MutesSetMutesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2MutesSetMutesOK creates a V2MutesSetMutesOK with default headers values
func NewV2MutesSetMutesOK() *V2MutesSetMutesOK {
	return &V2MutesSetMutesOK{}
}

/* V2MutesSetMutesOK describes a response with status code 200, with default header values.

V2MutesSetMutesOK v2 mutes set mutes o k
*/
type V2MutesSetMutesOK struct {
	Payload *models.V2MutesSetMutesOKBody
}

func (o *V2MutesSetMutesOK) Error() string {
	return fmt.Sprintf("[POST /v2/mutes/set_mutes][%d] v2MutesSetMutesOK  %+v", 200, o.Payload)
}
func (o *V2MutesSetMutesOK) GetPayload() *models.V2MutesSetMutesOKBody {
	return o.Payload
}

func (o *V2MutesSetMutesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2MutesSetMutesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2MutesSetMutesBadRequest creates a V2MutesSetMutesBadRequest with default headers values
func NewV2MutesSetMutesBadRequest() *V2MutesSetMutesBadRequest {
	return &V2MutesSetMutesBadRequest{}
}

/* V2MutesSetMutesBadRequest describes a response with status code 400, with default header values.

V2MutesSetMutesBadRequest v2 mutes set mutes bad request
*/
type V2MutesSetMutesBadRequest struct {
	Payload *models.V2MutesSetMutesBadRequestBody
}

func (o *V2MutesSetMutesBadRequest) Error() string {
	return fmt.Sprintf("[POST /v2/mutes/set_mutes][%d] v2MutesSetMutesBadRequest  %+v", 400, o.Payload)
}
func (o *V2MutesSetMutesBadRequest) GetPayload() *models.V2MutesSetMutesBadRequestBody {
	return o.Payload
}

func (o *V2MutesSetMutesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2MutesSetMutesBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2MutesSetMutesDefault creates a V2MutesSetMutesDefault with default headers values
func NewV2MutesSetMutesDefault(code int) *V2MutesSetMutesDefault {
	return &V2MutesSetMutesDefault{
		_statusCode: code,
	}
}

/* V2MutesSetMutesDefault describes a response with status code -1, with default header values.

V2MutesSetMutesDefault v2 mutes set mutes default
*/
type V2MutesSetMutesDefault struct {
	_statusCode int

	Payload *models.V2MutesSetMutesDefaultBody
}

// Code gets the status code for the v2 mutes set mutes default response
func (o *V2MutesSetMutesDefault) Code() int {
	return o._statusCode
}

func (o *V2MutesSetMutesDefault) Error() string {
	return fmt.Sprintf("[POST /v2/mutes/set_mutes][%d] /v2/mutes/set_mutes default  %+v", o._statusCode, o.Payload)
}
func (o *V2MutesSetMutesDefault) GetPayload() *models.V2MutesSetMutesDefaultBody {
	return o.Payload
}

func (o *V2MutesSetMutesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2MutesSetMutesDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
