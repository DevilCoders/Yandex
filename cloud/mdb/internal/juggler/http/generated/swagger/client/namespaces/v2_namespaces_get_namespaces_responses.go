// Code generated by go-swagger; DO NOT EDIT.

package namespaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/juggler/http/generated/swagger/models"
)

// V2NamespacesGetNamespacesReader is a Reader for the V2NamespacesGetNamespaces structure.
type V2NamespacesGetNamespacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2NamespacesGetNamespacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV2NamespacesGetNamespacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV2NamespacesGetNamespacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewV2NamespacesGetNamespacesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2NamespacesGetNamespacesOK creates a V2NamespacesGetNamespacesOK with default headers values
func NewV2NamespacesGetNamespacesOK() *V2NamespacesGetNamespacesOK {
	return &V2NamespacesGetNamespacesOK{}
}

/* V2NamespacesGetNamespacesOK describes a response with status code 200, with default header values.

V2NamespacesGetNamespacesOK v2 namespaces get namespaces o k
*/
type V2NamespacesGetNamespacesOK struct {
	Payload *models.V2NamespacesGetNamespacesOKBody
}

func (o *V2NamespacesGetNamespacesOK) Error() string {
	return fmt.Sprintf("[POST /v2/namespaces/get_namespaces][%d] v2NamespacesGetNamespacesOK  %+v", 200, o.Payload)
}
func (o *V2NamespacesGetNamespacesOK) GetPayload() *models.V2NamespacesGetNamespacesOKBody {
	return o.Payload
}

func (o *V2NamespacesGetNamespacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2NamespacesGetNamespacesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2NamespacesGetNamespacesBadRequest creates a V2NamespacesGetNamespacesBadRequest with default headers values
func NewV2NamespacesGetNamespacesBadRequest() *V2NamespacesGetNamespacesBadRequest {
	return &V2NamespacesGetNamespacesBadRequest{}
}

/* V2NamespacesGetNamespacesBadRequest describes a response with status code 400, with default header values.

V2NamespacesGetNamespacesBadRequest v2 namespaces get namespaces bad request
*/
type V2NamespacesGetNamespacesBadRequest struct {
	Payload *models.V2NamespacesGetNamespacesBadRequestBody
}

func (o *V2NamespacesGetNamespacesBadRequest) Error() string {
	return fmt.Sprintf("[POST /v2/namespaces/get_namespaces][%d] v2NamespacesGetNamespacesBadRequest  %+v", 400, o.Payload)
}
func (o *V2NamespacesGetNamespacesBadRequest) GetPayload() *models.V2NamespacesGetNamespacesBadRequestBody {
	return o.Payload
}

func (o *V2NamespacesGetNamespacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2NamespacesGetNamespacesBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2NamespacesGetNamespacesDefault creates a V2NamespacesGetNamespacesDefault with default headers values
func NewV2NamespacesGetNamespacesDefault(code int) *V2NamespacesGetNamespacesDefault {
	return &V2NamespacesGetNamespacesDefault{
		_statusCode: code,
	}
}

/* V2NamespacesGetNamespacesDefault describes a response with status code -1, with default header values.

V2NamespacesGetNamespacesDefault v2 namespaces get namespaces default
*/
type V2NamespacesGetNamespacesDefault struct {
	_statusCode int

	Payload *models.V2NamespacesGetNamespacesDefaultBody
}

// Code gets the status code for the v2 namespaces get namespaces default response
func (o *V2NamespacesGetNamespacesDefault) Code() int {
	return o._statusCode
}

func (o *V2NamespacesGetNamespacesDefault) Error() string {
	return fmt.Sprintf("[POST /v2/namespaces/get_namespaces][%d] /v2/namespaces/get_namespaces default  %+v", o._statusCode, o.Payload)
}
func (o *V2NamespacesGetNamespacesDefault) GetPayload() *models.V2NamespacesGetNamespacesDefaultBody {
	return o.Payload
}

func (o *V2NamespacesGetNamespacesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2NamespacesGetNamespacesDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
