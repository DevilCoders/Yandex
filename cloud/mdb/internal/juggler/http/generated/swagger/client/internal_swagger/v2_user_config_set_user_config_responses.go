// Code generated by go-swagger; DO NOT EDIT.

package internal_swagger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/juggler/http/generated/swagger/models"
)

// V2UserConfigSetUserConfigReader is a Reader for the V2UserConfigSetUserConfig structure.
type V2UserConfigSetUserConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2UserConfigSetUserConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV2UserConfigSetUserConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV2UserConfigSetUserConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewV2UserConfigSetUserConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2UserConfigSetUserConfigOK creates a V2UserConfigSetUserConfigOK with default headers values
func NewV2UserConfigSetUserConfigOK() *V2UserConfigSetUserConfigOK {
	return &V2UserConfigSetUserConfigOK{}
}

/* V2UserConfigSetUserConfigOK describes a response with status code 200, with default header values.

V2UserConfigSetUserConfigOK v2 user config set user config o k
*/
type V2UserConfigSetUserConfigOK struct {
	Payload *models.V2UserConfigSetUserConfigOKBody
}

func (o *V2UserConfigSetUserConfigOK) Error() string {
	return fmt.Sprintf("[POST /v2/user_config/set_user_config][%d] v2UserConfigSetUserConfigOK  %+v", 200, o.Payload)
}
func (o *V2UserConfigSetUserConfigOK) GetPayload() *models.V2UserConfigSetUserConfigOKBody {
	return o.Payload
}

func (o *V2UserConfigSetUserConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2UserConfigSetUserConfigOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UserConfigSetUserConfigBadRequest creates a V2UserConfigSetUserConfigBadRequest with default headers values
func NewV2UserConfigSetUserConfigBadRequest() *V2UserConfigSetUserConfigBadRequest {
	return &V2UserConfigSetUserConfigBadRequest{}
}

/* V2UserConfigSetUserConfigBadRequest describes a response with status code 400, with default header values.

V2UserConfigSetUserConfigBadRequest v2 user config set user config bad request
*/
type V2UserConfigSetUserConfigBadRequest struct {
	Payload *models.V2UserConfigSetUserConfigBadRequestBody
}

func (o *V2UserConfigSetUserConfigBadRequest) Error() string {
	return fmt.Sprintf("[POST /v2/user_config/set_user_config][%d] v2UserConfigSetUserConfigBadRequest  %+v", 400, o.Payload)
}
func (o *V2UserConfigSetUserConfigBadRequest) GetPayload() *models.V2UserConfigSetUserConfigBadRequestBody {
	return o.Payload
}

func (o *V2UserConfigSetUserConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2UserConfigSetUserConfigBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UserConfigSetUserConfigDefault creates a V2UserConfigSetUserConfigDefault with default headers values
func NewV2UserConfigSetUserConfigDefault(code int) *V2UserConfigSetUserConfigDefault {
	return &V2UserConfigSetUserConfigDefault{
		_statusCode: code,
	}
}

/* V2UserConfigSetUserConfigDefault describes a response with status code -1, with default header values.

V2UserConfigSetUserConfigDefault v2 user config set user config default
*/
type V2UserConfigSetUserConfigDefault struct {
	_statusCode int

	Payload *models.V2UserConfigSetUserConfigDefaultBody
}

// Code gets the status code for the v2 user config set user config default response
func (o *V2UserConfigSetUserConfigDefault) Code() int {
	return o._statusCode
}

func (o *V2UserConfigSetUserConfigDefault) Error() string {
	return fmt.Sprintf("[POST /v2/user_config/set_user_config][%d] /v2/user_config/set_user_config default  %+v", o._statusCode, o.Payload)
}
func (o *V2UserConfigSetUserConfigDefault) GetPayload() *models.V2UserConfigSetUserConfigDefaultBody {
	return o.Payload
}

func (o *V2UserConfigSetUserConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2UserConfigSetUserConfigDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
