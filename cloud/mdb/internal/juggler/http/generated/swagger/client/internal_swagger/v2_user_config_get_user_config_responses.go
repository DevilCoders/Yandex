// Code generated by go-swagger; DO NOT EDIT.

package internal_swagger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/juggler/http/generated/swagger/models"
)

// V2UserConfigGetUserConfigReader is a Reader for the V2UserConfigGetUserConfig structure.
type V2UserConfigGetUserConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2UserConfigGetUserConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV2UserConfigGetUserConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV2UserConfigGetUserConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewV2UserConfigGetUserConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2UserConfigGetUserConfigOK creates a V2UserConfigGetUserConfigOK with default headers values
func NewV2UserConfigGetUserConfigOK() *V2UserConfigGetUserConfigOK {
	return &V2UserConfigGetUserConfigOK{}
}

/* V2UserConfigGetUserConfigOK describes a response with status code 200, with default header values.

V2UserConfigGetUserConfigOK v2 user config get user config o k
*/
type V2UserConfigGetUserConfigOK struct {
	Payload *models.V2UserConfigGetUserConfigOKBody
}

func (o *V2UserConfigGetUserConfigOK) Error() string {
	return fmt.Sprintf("[POST /v2/user_config/get_user_config][%d] v2UserConfigGetUserConfigOK  %+v", 200, o.Payload)
}
func (o *V2UserConfigGetUserConfigOK) GetPayload() *models.V2UserConfigGetUserConfigOKBody {
	return o.Payload
}

func (o *V2UserConfigGetUserConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2UserConfigGetUserConfigOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UserConfigGetUserConfigBadRequest creates a V2UserConfigGetUserConfigBadRequest with default headers values
func NewV2UserConfigGetUserConfigBadRequest() *V2UserConfigGetUserConfigBadRequest {
	return &V2UserConfigGetUserConfigBadRequest{}
}

/* V2UserConfigGetUserConfigBadRequest describes a response with status code 400, with default header values.

V2UserConfigGetUserConfigBadRequest v2 user config get user config bad request
*/
type V2UserConfigGetUserConfigBadRequest struct {
	Payload *models.V2UserConfigGetUserConfigBadRequestBody
}

func (o *V2UserConfigGetUserConfigBadRequest) Error() string {
	return fmt.Sprintf("[POST /v2/user_config/get_user_config][%d] v2UserConfigGetUserConfigBadRequest  %+v", 400, o.Payload)
}
func (o *V2UserConfigGetUserConfigBadRequest) GetPayload() *models.V2UserConfigGetUserConfigBadRequestBody {
	return o.Payload
}

func (o *V2UserConfigGetUserConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2UserConfigGetUserConfigBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UserConfigGetUserConfigDefault creates a V2UserConfigGetUserConfigDefault with default headers values
func NewV2UserConfigGetUserConfigDefault(code int) *V2UserConfigGetUserConfigDefault {
	return &V2UserConfigGetUserConfigDefault{
		_statusCode: code,
	}
}

/* V2UserConfigGetUserConfigDefault describes a response with status code -1, with default header values.

V2UserConfigGetUserConfigDefault v2 user config get user config default
*/
type V2UserConfigGetUserConfigDefault struct {
	_statusCode int

	Payload *models.V2UserConfigGetUserConfigDefaultBody
}

// Code gets the status code for the v2 user config get user config default response
func (o *V2UserConfigGetUserConfigDefault) Code() int {
	return o._statusCode
}

func (o *V2UserConfigGetUserConfigDefault) Error() string {
	return fmt.Sprintf("[POST /v2/user_config/get_user_config][%d] /v2/user_config/get_user_config default  %+v", o._statusCode, o.Payload)
}
func (o *V2UserConfigGetUserConfigDefault) GetPayload() *models.V2UserConfigGetUserConfigDefaultBody {
	return o.Payload
}

func (o *V2UserConfigGetUserConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2UserConfigGetUserConfigDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
