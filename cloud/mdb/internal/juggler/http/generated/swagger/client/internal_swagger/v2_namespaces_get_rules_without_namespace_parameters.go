// Code generated by go-swagger; DO NOT EDIT.

package internal_swagger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/juggler/http/generated/swagger/models"
)

// NewV2NamespacesGetRulesWithoutNamespaceParams creates a new V2NamespacesGetRulesWithoutNamespaceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewV2NamespacesGetRulesWithoutNamespaceParams() *V2NamespacesGetRulesWithoutNamespaceParams {
	return &V2NamespacesGetRulesWithoutNamespaceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewV2NamespacesGetRulesWithoutNamespaceParamsWithTimeout creates a new V2NamespacesGetRulesWithoutNamespaceParams object
// with the ability to set a timeout on a request.
func NewV2NamespacesGetRulesWithoutNamespaceParamsWithTimeout(timeout time.Duration) *V2NamespacesGetRulesWithoutNamespaceParams {
	return &V2NamespacesGetRulesWithoutNamespaceParams{
		timeout: timeout,
	}
}

// NewV2NamespacesGetRulesWithoutNamespaceParamsWithContext creates a new V2NamespacesGetRulesWithoutNamespaceParams object
// with the ability to set a context for a request.
func NewV2NamespacesGetRulesWithoutNamespaceParamsWithContext(ctx context.Context) *V2NamespacesGetRulesWithoutNamespaceParams {
	return &V2NamespacesGetRulesWithoutNamespaceParams{
		Context: ctx,
	}
}

// NewV2NamespacesGetRulesWithoutNamespaceParamsWithHTTPClient creates a new V2NamespacesGetRulesWithoutNamespaceParams object
// with the ability to set a custom HTTPClient for a request.
func NewV2NamespacesGetRulesWithoutNamespaceParamsWithHTTPClient(client *http.Client) *V2NamespacesGetRulesWithoutNamespaceParams {
	return &V2NamespacesGetRulesWithoutNamespaceParams{
		HTTPClient: client,
	}
}

/* V2NamespacesGetRulesWithoutNamespaceParams contains all the parameters to send to the API endpoint
   for the v2 namespaces get rules without namespace operation.

   Typically these are written to a http.Request.
*/
type V2NamespacesGetRulesWithoutNamespaceParams struct {

	// GetRulesWithoutNamespaceRequest.
	GetRulesWithoutNamespaceRequest *models.V2NamespacesGetRulesWithoutNamespaceParamsBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the v2 namespaces get rules without namespace params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *V2NamespacesGetRulesWithoutNamespaceParams) WithDefaults() *V2NamespacesGetRulesWithoutNamespaceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the v2 namespaces get rules without namespace params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *V2NamespacesGetRulesWithoutNamespaceParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the v2 namespaces get rules without namespace params
func (o *V2NamespacesGetRulesWithoutNamespaceParams) WithTimeout(timeout time.Duration) *V2NamespacesGetRulesWithoutNamespaceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v2 namespaces get rules without namespace params
func (o *V2NamespacesGetRulesWithoutNamespaceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v2 namespaces get rules without namespace params
func (o *V2NamespacesGetRulesWithoutNamespaceParams) WithContext(ctx context.Context) *V2NamespacesGetRulesWithoutNamespaceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v2 namespaces get rules without namespace params
func (o *V2NamespacesGetRulesWithoutNamespaceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v2 namespaces get rules without namespace params
func (o *V2NamespacesGetRulesWithoutNamespaceParams) WithHTTPClient(client *http.Client) *V2NamespacesGetRulesWithoutNamespaceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v2 namespaces get rules without namespace params
func (o *V2NamespacesGetRulesWithoutNamespaceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGetRulesWithoutNamespaceRequest adds the getRulesWithoutNamespaceRequest to the v2 namespaces get rules without namespace params
func (o *V2NamespacesGetRulesWithoutNamespaceParams) WithGetRulesWithoutNamespaceRequest(getRulesWithoutNamespaceRequest *models.V2NamespacesGetRulesWithoutNamespaceParamsBody) *V2NamespacesGetRulesWithoutNamespaceParams {
	o.SetGetRulesWithoutNamespaceRequest(getRulesWithoutNamespaceRequest)
	return o
}

// SetGetRulesWithoutNamespaceRequest adds the getRulesWithoutNamespaceRequest to the v2 namespaces get rules without namespace params
func (o *V2NamespacesGetRulesWithoutNamespaceParams) SetGetRulesWithoutNamespaceRequest(getRulesWithoutNamespaceRequest *models.V2NamespacesGetRulesWithoutNamespaceParamsBody) {
	o.GetRulesWithoutNamespaceRequest = getRulesWithoutNamespaceRequest
}

// WriteToRequest writes these params to a swagger request
func (o *V2NamespacesGetRulesWithoutNamespaceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.GetRulesWithoutNamespaceRequest != nil {
		if err := r.SetBodyParam(o.GetRulesWithoutNamespaceRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
