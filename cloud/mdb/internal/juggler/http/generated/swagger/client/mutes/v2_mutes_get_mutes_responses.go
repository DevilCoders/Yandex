// Code generated by go-swagger; DO NOT EDIT.

package mutes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/juggler/http/generated/swagger/models"
)

// V2MutesGetMutesReader is a Reader for the V2MutesGetMutes structure.
type V2MutesGetMutesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2MutesGetMutesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV2MutesGetMutesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV2MutesGetMutesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewV2MutesGetMutesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2MutesGetMutesOK creates a V2MutesGetMutesOK with default headers values
func NewV2MutesGetMutesOK() *V2MutesGetMutesOK {
	return &V2MutesGetMutesOK{}
}

/* V2MutesGetMutesOK describes a response with status code 200, with default header values.

V2MutesGetMutesOK v2 mutes get mutes o k
*/
type V2MutesGetMutesOK struct {
	Payload *models.V2MutesGetMutesOKBody
}

func (o *V2MutesGetMutesOK) Error() string {
	return fmt.Sprintf("[POST /v2/mutes/get_mutes][%d] v2MutesGetMutesOK  %+v", 200, o.Payload)
}
func (o *V2MutesGetMutesOK) GetPayload() *models.V2MutesGetMutesOKBody {
	return o.Payload
}

func (o *V2MutesGetMutesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2MutesGetMutesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2MutesGetMutesBadRequest creates a V2MutesGetMutesBadRequest with default headers values
func NewV2MutesGetMutesBadRequest() *V2MutesGetMutesBadRequest {
	return &V2MutesGetMutesBadRequest{}
}

/* V2MutesGetMutesBadRequest describes a response with status code 400, with default header values.

V2MutesGetMutesBadRequest v2 mutes get mutes bad request
*/
type V2MutesGetMutesBadRequest struct {
	Payload *models.V2MutesGetMutesBadRequestBody
}

func (o *V2MutesGetMutesBadRequest) Error() string {
	return fmt.Sprintf("[POST /v2/mutes/get_mutes][%d] v2MutesGetMutesBadRequest  %+v", 400, o.Payload)
}
func (o *V2MutesGetMutesBadRequest) GetPayload() *models.V2MutesGetMutesBadRequestBody {
	return o.Payload
}

func (o *V2MutesGetMutesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2MutesGetMutesBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2MutesGetMutesDefault creates a V2MutesGetMutesDefault with default headers values
func NewV2MutesGetMutesDefault(code int) *V2MutesGetMutesDefault {
	return &V2MutesGetMutesDefault{
		_statusCode: code,
	}
}

/* V2MutesGetMutesDefault describes a response with status code -1, with default header values.

V2MutesGetMutesDefault v2 mutes get mutes default
*/
type V2MutesGetMutesDefault struct {
	_statusCode int

	Payload *models.V2MutesGetMutesDefaultBody
}

// Code gets the status code for the v2 mutes get mutes default response
func (o *V2MutesGetMutesDefault) Code() int {
	return o._statusCode
}

func (o *V2MutesGetMutesDefault) Error() string {
	return fmt.Sprintf("[POST /v2/mutes/get_mutes][%d] /v2/mutes/get_mutes default  %+v", o._statusCode, o.Payload)
}
func (o *V2MutesGetMutesDefault) GetPayload() *models.V2MutesGetMutesDefaultBody {
	return o.Payload
}

func (o *V2MutesGetMutesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2MutesGetMutesDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
