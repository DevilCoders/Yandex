// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/juggler/http/generated/swagger/models"
)

// V2HistoryGetNotificationsReader is a Reader for the V2HistoryGetNotifications structure.
type V2HistoryGetNotificationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2HistoryGetNotificationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV2HistoryGetNotificationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV2HistoryGetNotificationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewV2HistoryGetNotificationsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2HistoryGetNotificationsOK creates a V2HistoryGetNotificationsOK with default headers values
func NewV2HistoryGetNotificationsOK() *V2HistoryGetNotificationsOK {
	return &V2HistoryGetNotificationsOK{}
}

/* V2HistoryGetNotificationsOK describes a response with status code 200, with default header values.

V2HistoryGetNotificationsOK v2 history get notifications o k
*/
type V2HistoryGetNotificationsOK struct {
	Payload *models.V2HistoryGetNotificationsOKBody
}

func (o *V2HistoryGetNotificationsOK) Error() string {
	return fmt.Sprintf("[POST /v2/history/get_notifications][%d] v2HistoryGetNotificationsOK  %+v", 200, o.Payload)
}
func (o *V2HistoryGetNotificationsOK) GetPayload() *models.V2HistoryGetNotificationsOKBody {
	return o.Payload
}

func (o *V2HistoryGetNotificationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2HistoryGetNotificationsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2HistoryGetNotificationsBadRequest creates a V2HistoryGetNotificationsBadRequest with default headers values
func NewV2HistoryGetNotificationsBadRequest() *V2HistoryGetNotificationsBadRequest {
	return &V2HistoryGetNotificationsBadRequest{}
}

/* V2HistoryGetNotificationsBadRequest describes a response with status code 400, with default header values.

V2HistoryGetNotificationsBadRequest v2 history get notifications bad request
*/
type V2HistoryGetNotificationsBadRequest struct {
	Payload *models.V2HistoryGetNotificationsBadRequestBody
}

func (o *V2HistoryGetNotificationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v2/history/get_notifications][%d] v2HistoryGetNotificationsBadRequest  %+v", 400, o.Payload)
}
func (o *V2HistoryGetNotificationsBadRequest) GetPayload() *models.V2HistoryGetNotificationsBadRequestBody {
	return o.Payload
}

func (o *V2HistoryGetNotificationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2HistoryGetNotificationsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2HistoryGetNotificationsDefault creates a V2HistoryGetNotificationsDefault with default headers values
func NewV2HistoryGetNotificationsDefault(code int) *V2HistoryGetNotificationsDefault {
	return &V2HistoryGetNotificationsDefault{
		_statusCode: code,
	}
}

/* V2HistoryGetNotificationsDefault describes a response with status code -1, with default header values.

V2HistoryGetNotificationsDefault v2 history get notifications default
*/
type V2HistoryGetNotificationsDefault struct {
	_statusCode int

	Payload *models.V2HistoryGetNotificationsDefaultBody
}

// Code gets the status code for the v2 history get notifications default response
func (o *V2HistoryGetNotificationsDefault) Code() int {
	return o._statusCode
}

func (o *V2HistoryGetNotificationsDefault) Error() string {
	return fmt.Sprintf("[POST /v2/history/get_notifications][%d] /v2/history/get_notifications default  %+v", o._statusCode, o.Payload)
}
func (o *V2HistoryGetNotificationsDefault) GetPayload() *models.V2HistoryGetNotificationsDefaultBody {
	return o.Payload
}

func (o *V2HistoryGetNotificationsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2HistoryGetNotificationsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
