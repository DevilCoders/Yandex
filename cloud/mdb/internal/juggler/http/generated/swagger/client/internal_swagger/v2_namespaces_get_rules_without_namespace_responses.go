// Code generated by go-swagger; DO NOT EDIT.

package internal_swagger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/juggler/http/generated/swagger/models"
)

// V2NamespacesGetRulesWithoutNamespaceReader is a Reader for the V2NamespacesGetRulesWithoutNamespace structure.
type V2NamespacesGetRulesWithoutNamespaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2NamespacesGetRulesWithoutNamespaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV2NamespacesGetRulesWithoutNamespaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV2NamespacesGetRulesWithoutNamespaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewV2NamespacesGetRulesWithoutNamespaceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2NamespacesGetRulesWithoutNamespaceOK creates a V2NamespacesGetRulesWithoutNamespaceOK with default headers values
func NewV2NamespacesGetRulesWithoutNamespaceOK() *V2NamespacesGetRulesWithoutNamespaceOK {
	return &V2NamespacesGetRulesWithoutNamespaceOK{}
}

/* V2NamespacesGetRulesWithoutNamespaceOK describes a response with status code 200, with default header values.

V2NamespacesGetRulesWithoutNamespaceOK v2 namespaces get rules without namespace o k
*/
type V2NamespacesGetRulesWithoutNamespaceOK struct {
	Payload *models.V2NamespacesGetRulesWithoutNamespaceOKBody
}

func (o *V2NamespacesGetRulesWithoutNamespaceOK) Error() string {
	return fmt.Sprintf("[POST /v2/namespaces/get_rules_without_namespace][%d] v2NamespacesGetRulesWithoutNamespaceOK  %+v", 200, o.Payload)
}
func (o *V2NamespacesGetRulesWithoutNamespaceOK) GetPayload() *models.V2NamespacesGetRulesWithoutNamespaceOKBody {
	return o.Payload
}

func (o *V2NamespacesGetRulesWithoutNamespaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2NamespacesGetRulesWithoutNamespaceOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2NamespacesGetRulesWithoutNamespaceBadRequest creates a V2NamespacesGetRulesWithoutNamespaceBadRequest with default headers values
func NewV2NamespacesGetRulesWithoutNamespaceBadRequest() *V2NamespacesGetRulesWithoutNamespaceBadRequest {
	return &V2NamespacesGetRulesWithoutNamespaceBadRequest{}
}

/* V2NamespacesGetRulesWithoutNamespaceBadRequest describes a response with status code 400, with default header values.

V2NamespacesGetRulesWithoutNamespaceBadRequest v2 namespaces get rules without namespace bad request
*/
type V2NamespacesGetRulesWithoutNamespaceBadRequest struct {
	Payload *models.V2NamespacesGetRulesWithoutNamespaceBadRequestBody
}

func (o *V2NamespacesGetRulesWithoutNamespaceBadRequest) Error() string {
	return fmt.Sprintf("[POST /v2/namespaces/get_rules_without_namespace][%d] v2NamespacesGetRulesWithoutNamespaceBadRequest  %+v", 400, o.Payload)
}
func (o *V2NamespacesGetRulesWithoutNamespaceBadRequest) GetPayload() *models.V2NamespacesGetRulesWithoutNamespaceBadRequestBody {
	return o.Payload
}

func (o *V2NamespacesGetRulesWithoutNamespaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2NamespacesGetRulesWithoutNamespaceBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2NamespacesGetRulesWithoutNamespaceDefault creates a V2NamespacesGetRulesWithoutNamespaceDefault with default headers values
func NewV2NamespacesGetRulesWithoutNamespaceDefault(code int) *V2NamespacesGetRulesWithoutNamespaceDefault {
	return &V2NamespacesGetRulesWithoutNamespaceDefault{
		_statusCode: code,
	}
}

/* V2NamespacesGetRulesWithoutNamespaceDefault describes a response with status code -1, with default header values.

V2NamespacesGetRulesWithoutNamespaceDefault v2 namespaces get rules without namespace default
*/
type V2NamespacesGetRulesWithoutNamespaceDefault struct {
	_statusCode int

	Payload *models.V2NamespacesGetRulesWithoutNamespaceDefaultBody
}

// Code gets the status code for the v2 namespaces get rules without namespace default response
func (o *V2NamespacesGetRulesWithoutNamespaceDefault) Code() int {
	return o._statusCode
}

func (o *V2NamespacesGetRulesWithoutNamespaceDefault) Error() string {
	return fmt.Sprintf("[POST /v2/namespaces/get_rules_without_namespace][%d] /v2/namespaces/get_rules_without_namespace default  %+v", o._statusCode, o.Payload)
}
func (o *V2NamespacesGetRulesWithoutNamespaceDefault) GetPayload() *models.V2NamespacesGetRulesWithoutNamespaceDefaultBody {
	return o.Payload
}

func (o *V2NamespacesGetRulesWithoutNamespaceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2NamespacesGetRulesWithoutNamespaceDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
