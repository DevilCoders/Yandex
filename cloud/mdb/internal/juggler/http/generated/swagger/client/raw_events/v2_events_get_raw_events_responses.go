// Code generated by go-swagger; DO NOT EDIT.

package raw_events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/juggler/http/generated/swagger/models"
)

// V2EventsGetRawEventsReader is a Reader for the V2EventsGetRawEvents structure.
type V2EventsGetRawEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2EventsGetRawEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV2EventsGetRawEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV2EventsGetRawEventsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewV2EventsGetRawEventsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2EventsGetRawEventsOK creates a V2EventsGetRawEventsOK with default headers values
func NewV2EventsGetRawEventsOK() *V2EventsGetRawEventsOK {
	return &V2EventsGetRawEventsOK{}
}

/* V2EventsGetRawEventsOK describes a response with status code 200, with default header values.

V2EventsGetRawEventsOK v2 events get raw events o k
*/
type V2EventsGetRawEventsOK struct {
	Payload *models.V2EventsGetRawEventsOKBody
}

func (o *V2EventsGetRawEventsOK) Error() string {
	return fmt.Sprintf("[POST /v2/events/get_raw_events][%d] v2EventsGetRawEventsOK  %+v", 200, o.Payload)
}
func (o *V2EventsGetRawEventsOK) GetPayload() *models.V2EventsGetRawEventsOKBody {
	return o.Payload
}

func (o *V2EventsGetRawEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2EventsGetRawEventsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2EventsGetRawEventsBadRequest creates a V2EventsGetRawEventsBadRequest with default headers values
func NewV2EventsGetRawEventsBadRequest() *V2EventsGetRawEventsBadRequest {
	return &V2EventsGetRawEventsBadRequest{}
}

/* V2EventsGetRawEventsBadRequest describes a response with status code 400, with default header values.

V2EventsGetRawEventsBadRequest v2 events get raw events bad request
*/
type V2EventsGetRawEventsBadRequest struct {
	Payload *models.V2EventsGetRawEventsBadRequestBody
}

func (o *V2EventsGetRawEventsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v2/events/get_raw_events][%d] v2EventsGetRawEventsBadRequest  %+v", 400, o.Payload)
}
func (o *V2EventsGetRawEventsBadRequest) GetPayload() *models.V2EventsGetRawEventsBadRequestBody {
	return o.Payload
}

func (o *V2EventsGetRawEventsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2EventsGetRawEventsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2EventsGetRawEventsDefault creates a V2EventsGetRawEventsDefault with default headers values
func NewV2EventsGetRawEventsDefault(code int) *V2EventsGetRawEventsDefault {
	return &V2EventsGetRawEventsDefault{
		_statusCode: code,
	}
}

/* V2EventsGetRawEventsDefault describes a response with status code -1, with default header values.

V2EventsGetRawEventsDefault v2 events get raw events default
*/
type V2EventsGetRawEventsDefault struct {
	_statusCode int

	Payload *models.V2EventsGetRawEventsDefaultBody
}

// Code gets the status code for the v2 events get raw events default response
func (o *V2EventsGetRawEventsDefault) Code() int {
	return o._statusCode
}

func (o *V2EventsGetRawEventsDefault) Error() string {
	return fmt.Sprintf("[POST /v2/events/get_raw_events][%d] /v2/events/get_raw_events default  %+v", o._statusCode, o.Payload)
}
func (o *V2EventsGetRawEventsDefault) GetPayload() *models.V2EventsGetRawEventsDefaultBody {
	return o.Payload
}

func (o *V2EventsGetRawEventsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2EventsGetRawEventsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
