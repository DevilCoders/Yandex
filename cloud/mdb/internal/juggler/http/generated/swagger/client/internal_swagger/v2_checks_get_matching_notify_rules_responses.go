// Code generated by go-swagger; DO NOT EDIT.

package internal_swagger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/juggler/http/generated/swagger/models"
)

// V2ChecksGetMatchingNotifyRulesReader is a Reader for the V2ChecksGetMatchingNotifyRules structure.
type V2ChecksGetMatchingNotifyRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2ChecksGetMatchingNotifyRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV2ChecksGetMatchingNotifyRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV2ChecksGetMatchingNotifyRulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewV2ChecksGetMatchingNotifyRulesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2ChecksGetMatchingNotifyRulesOK creates a V2ChecksGetMatchingNotifyRulesOK with default headers values
func NewV2ChecksGetMatchingNotifyRulesOK() *V2ChecksGetMatchingNotifyRulesOK {
	return &V2ChecksGetMatchingNotifyRulesOK{}
}

/* V2ChecksGetMatchingNotifyRulesOK describes a response with status code 200, with default header values.

V2ChecksGetMatchingNotifyRulesOK v2 checks get matching notify rules o k
*/
type V2ChecksGetMatchingNotifyRulesOK struct {
	Payload *models.V2ChecksGetMatchingNotifyRulesOKBody
}

func (o *V2ChecksGetMatchingNotifyRulesOK) Error() string {
	return fmt.Sprintf("[POST /v2/checks/get_matching_notify_rules][%d] v2ChecksGetMatchingNotifyRulesOK  %+v", 200, o.Payload)
}
func (o *V2ChecksGetMatchingNotifyRulesOK) GetPayload() *models.V2ChecksGetMatchingNotifyRulesOKBody {
	return o.Payload
}

func (o *V2ChecksGetMatchingNotifyRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2ChecksGetMatchingNotifyRulesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ChecksGetMatchingNotifyRulesBadRequest creates a V2ChecksGetMatchingNotifyRulesBadRequest with default headers values
func NewV2ChecksGetMatchingNotifyRulesBadRequest() *V2ChecksGetMatchingNotifyRulesBadRequest {
	return &V2ChecksGetMatchingNotifyRulesBadRequest{}
}

/* V2ChecksGetMatchingNotifyRulesBadRequest describes a response with status code 400, with default header values.

V2ChecksGetMatchingNotifyRulesBadRequest v2 checks get matching notify rules bad request
*/
type V2ChecksGetMatchingNotifyRulesBadRequest struct {
	Payload *models.V2ChecksGetMatchingNotifyRulesBadRequestBody
}

func (o *V2ChecksGetMatchingNotifyRulesBadRequest) Error() string {
	return fmt.Sprintf("[POST /v2/checks/get_matching_notify_rules][%d] v2ChecksGetMatchingNotifyRulesBadRequest  %+v", 400, o.Payload)
}
func (o *V2ChecksGetMatchingNotifyRulesBadRequest) GetPayload() *models.V2ChecksGetMatchingNotifyRulesBadRequestBody {
	return o.Payload
}

func (o *V2ChecksGetMatchingNotifyRulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2ChecksGetMatchingNotifyRulesBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ChecksGetMatchingNotifyRulesDefault creates a V2ChecksGetMatchingNotifyRulesDefault with default headers values
func NewV2ChecksGetMatchingNotifyRulesDefault(code int) *V2ChecksGetMatchingNotifyRulesDefault {
	return &V2ChecksGetMatchingNotifyRulesDefault{
		_statusCode: code,
	}
}

/* V2ChecksGetMatchingNotifyRulesDefault describes a response with status code -1, with default header values.

V2ChecksGetMatchingNotifyRulesDefault v2 checks get matching notify rules default
*/
type V2ChecksGetMatchingNotifyRulesDefault struct {
	_statusCode int

	Payload *models.V2ChecksGetMatchingNotifyRulesDefaultBody
}

// Code gets the status code for the v2 checks get matching notify rules default response
func (o *V2ChecksGetMatchingNotifyRulesDefault) Code() int {
	return o._statusCode
}

func (o *V2ChecksGetMatchingNotifyRulesDefault) Error() string {
	return fmt.Sprintf("[POST /v2/checks/get_matching_notify_rules][%d] /v2/checks/get_matching_notify_rules default  %+v", o._statusCode, o.Payload)
}
func (o *V2ChecksGetMatchingNotifyRulesDefault) GetPayload() *models.V2ChecksGetMatchingNotifyRulesDefaultBody {
	return o.Payload
}

func (o *V2ChecksGetMatchingNotifyRulesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2ChecksGetMatchingNotifyRulesDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
