// Code generated by go-swagger; DO NOT EDIT.

package internal_swagger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/juggler/http/generated/swagger/models"
)

// V2SuggestionsGetInvalidUserChecksReader is a Reader for the V2SuggestionsGetInvalidUserChecks structure.
type V2SuggestionsGetInvalidUserChecksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2SuggestionsGetInvalidUserChecksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV2SuggestionsGetInvalidUserChecksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV2SuggestionsGetInvalidUserChecksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewV2SuggestionsGetInvalidUserChecksDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2SuggestionsGetInvalidUserChecksOK creates a V2SuggestionsGetInvalidUserChecksOK with default headers values
func NewV2SuggestionsGetInvalidUserChecksOK() *V2SuggestionsGetInvalidUserChecksOK {
	return &V2SuggestionsGetInvalidUserChecksOK{}
}

/* V2SuggestionsGetInvalidUserChecksOK describes a response with status code 200, with default header values.

V2SuggestionsGetInvalidUserChecksOK v2 suggestions get invalid user checks o k
*/
type V2SuggestionsGetInvalidUserChecksOK struct {
	Payload *models.V2SuggestionsGetInvalidUserChecksOKBody
}

func (o *V2SuggestionsGetInvalidUserChecksOK) Error() string {
	return fmt.Sprintf("[POST /v2/suggestions/get_invalid_user_checks][%d] v2SuggestionsGetInvalidUserChecksOK  %+v", 200, o.Payload)
}
func (o *V2SuggestionsGetInvalidUserChecksOK) GetPayload() *models.V2SuggestionsGetInvalidUserChecksOKBody {
	return o.Payload
}

func (o *V2SuggestionsGetInvalidUserChecksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2SuggestionsGetInvalidUserChecksOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2SuggestionsGetInvalidUserChecksBadRequest creates a V2SuggestionsGetInvalidUserChecksBadRequest with default headers values
func NewV2SuggestionsGetInvalidUserChecksBadRequest() *V2SuggestionsGetInvalidUserChecksBadRequest {
	return &V2SuggestionsGetInvalidUserChecksBadRequest{}
}

/* V2SuggestionsGetInvalidUserChecksBadRequest describes a response with status code 400, with default header values.

V2SuggestionsGetInvalidUserChecksBadRequest v2 suggestions get invalid user checks bad request
*/
type V2SuggestionsGetInvalidUserChecksBadRequest struct {
	Payload *models.V2SuggestionsGetInvalidUserChecksBadRequestBody
}

func (o *V2SuggestionsGetInvalidUserChecksBadRequest) Error() string {
	return fmt.Sprintf("[POST /v2/suggestions/get_invalid_user_checks][%d] v2SuggestionsGetInvalidUserChecksBadRequest  %+v", 400, o.Payload)
}
func (o *V2SuggestionsGetInvalidUserChecksBadRequest) GetPayload() *models.V2SuggestionsGetInvalidUserChecksBadRequestBody {
	return o.Payload
}

func (o *V2SuggestionsGetInvalidUserChecksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2SuggestionsGetInvalidUserChecksBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2SuggestionsGetInvalidUserChecksDefault creates a V2SuggestionsGetInvalidUserChecksDefault with default headers values
func NewV2SuggestionsGetInvalidUserChecksDefault(code int) *V2SuggestionsGetInvalidUserChecksDefault {
	return &V2SuggestionsGetInvalidUserChecksDefault{
		_statusCode: code,
	}
}

/* V2SuggestionsGetInvalidUserChecksDefault describes a response with status code -1, with default header values.

V2SuggestionsGetInvalidUserChecksDefault v2 suggestions get invalid user checks default
*/
type V2SuggestionsGetInvalidUserChecksDefault struct {
	_statusCode int

	Payload *models.V2SuggestionsGetInvalidUserChecksDefaultBody
}

// Code gets the status code for the v2 suggestions get invalid user checks default response
func (o *V2SuggestionsGetInvalidUserChecksDefault) Code() int {
	return o._statusCode
}

func (o *V2SuggestionsGetInvalidUserChecksDefault) Error() string {
	return fmt.Sprintf("[POST /v2/suggestions/get_invalid_user_checks][%d] /v2/suggestions/get_invalid_user_checks default  %+v", o._statusCode, o.Payload)
}
func (o *V2SuggestionsGetInvalidUserChecksDefault) GetPayload() *models.V2SuggestionsGetInvalidUserChecksDefaultBody {
	return o.Payload
}

func (o *V2SuggestionsGetInvalidUserChecksDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2SuggestionsGetInvalidUserChecksDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
