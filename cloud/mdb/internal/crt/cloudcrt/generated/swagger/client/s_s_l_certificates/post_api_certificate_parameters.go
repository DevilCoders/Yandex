// Code generated by go-swagger; DO NOT EDIT.

package s_s_l_certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/crt/cloudcrt/generated/swagger/models"
)

// NewPostAPICertificateParams creates a new PostAPICertificateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostAPICertificateParams() *PostAPICertificateParams {
	return &PostAPICertificateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostAPICertificateParamsWithTimeout creates a new PostAPICertificateParams object
// with the ability to set a timeout on a request.
func NewPostAPICertificateParamsWithTimeout(timeout time.Duration) *PostAPICertificateParams {
	return &PostAPICertificateParams{
		timeout: timeout,
	}
}

// NewPostAPICertificateParamsWithContext creates a new PostAPICertificateParams object
// with the ability to set a context for a request.
func NewPostAPICertificateParamsWithContext(ctx context.Context) *PostAPICertificateParams {
	return &PostAPICertificateParams{
		Context: ctx,
	}
}

// NewPostAPICertificateParamsWithHTTPClient creates a new PostAPICertificateParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostAPICertificateParamsWithHTTPClient(client *http.Client) *PostAPICertificateParams {
	return &PostAPICertificateParams{
		HTTPClient: client,
	}
}

/* PostAPICertificateParams contains all the parameters to send to the API endpoint
   for the post API certificate operation.

   Typically these are written to a http.Request.
*/
type PostAPICertificateParams struct {

	/* Authorization.

	   OAuth token
	*/
	Authorization string

	/* Issuecertificaterequest.

	   Issue Certificate Request
	*/
	Issuecertificaterequest *models.RequestsIssueReq

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post API certificate params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAPICertificateParams) WithDefaults() *PostAPICertificateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post API certificate params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAPICertificateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post API certificate params
func (o *PostAPICertificateParams) WithTimeout(timeout time.Duration) *PostAPICertificateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post API certificate params
func (o *PostAPICertificateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post API certificate params
func (o *PostAPICertificateParams) WithContext(ctx context.Context) *PostAPICertificateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post API certificate params
func (o *PostAPICertificateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post API certificate params
func (o *PostAPICertificateParams) WithHTTPClient(client *http.Client) *PostAPICertificateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post API certificate params
func (o *PostAPICertificateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the post API certificate params
func (o *PostAPICertificateParams) WithAuthorization(authorization string) *PostAPICertificateParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the post API certificate params
func (o *PostAPICertificateParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithIssuecertificaterequest adds the issuecertificaterequest to the post API certificate params
func (o *PostAPICertificateParams) WithIssuecertificaterequest(issuecertificaterequest *models.RequestsIssueReq) *PostAPICertificateParams {
	o.SetIssuecertificaterequest(issuecertificaterequest)
	return o
}

// SetIssuecertificaterequest adds the issuecertificaterequest to the post API certificate params
func (o *PostAPICertificateParams) SetIssuecertificaterequest(issuecertificaterequest *models.RequestsIssueReq) {
	o.Issuecertificaterequest = issuecertificaterequest
}

// WriteToRequest writes these params to a swagger request
func (o *PostAPICertificateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}
	if o.Issuecertificaterequest != nil {
		if err := r.SetBodyParam(o.Issuecertificaterequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
