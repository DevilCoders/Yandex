// Code generated by go-swagger; DO NOT EDIT.

package soft_certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/crt/cloudcrt/generated/swagger/models"
)

// PostAPIListSessionCertificateReader is a Reader for the PostAPIListSessionCertificate structure.
type PostAPIListSessionCertificateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIListSessionCertificateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIListSessionCertificateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIListSessionCertificateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAPIListSessionCertificateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAPIListSessionCertificateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIListSessionCertificateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAPIListSessionCertificateOK creates a PostAPIListSessionCertificateOK with default headers values
func NewPostAPIListSessionCertificateOK() *PostAPIListSessionCertificateOK {
	return &PostAPIListSessionCertificateOK{}
}

/* PostAPIListSessionCertificateOK describes a response with status code 200, with default header values.

OK
*/
type PostAPIListSessionCertificateOK struct {
	Payload *models.ServerListSoftCertificatesResponse
}

func (o *PostAPIListSessionCertificateOK) Error() string {
	return fmt.Sprintf("[POST /api/list_session_certificate][%d] postApiListSessionCertificateOK  %+v", 200, o.Payload)
}
func (o *PostAPIListSessionCertificateOK) GetPayload() *models.ServerListSoftCertificatesResponse {
	return o.Payload
}

func (o *PostAPIListSessionCertificateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerListSoftCertificatesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIListSessionCertificateBadRequest creates a PostAPIListSessionCertificateBadRequest with default headers values
func NewPostAPIListSessionCertificateBadRequest() *PostAPIListSessionCertificateBadRequest {
	return &PostAPIListSessionCertificateBadRequest{}
}

/* PostAPIListSessionCertificateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostAPIListSessionCertificateBadRequest struct {
	Payload *models.RequestsErrorResponse
}

func (o *PostAPIListSessionCertificateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/list_session_certificate][%d] postApiListSessionCertificateBadRequest  %+v", 400, o.Payload)
}
func (o *PostAPIListSessionCertificateBadRequest) GetPayload() *models.RequestsErrorResponse {
	return o.Payload
}

func (o *PostAPIListSessionCertificateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIListSessionCertificateUnauthorized creates a PostAPIListSessionCertificateUnauthorized with default headers values
func NewPostAPIListSessionCertificateUnauthorized() *PostAPIListSessionCertificateUnauthorized {
	return &PostAPIListSessionCertificateUnauthorized{}
}

/* PostAPIListSessionCertificateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostAPIListSessionCertificateUnauthorized struct {
	Payload *models.RequestsErrorResponse
}

func (o *PostAPIListSessionCertificateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/list_session_certificate][%d] postApiListSessionCertificateUnauthorized  %+v", 401, o.Payload)
}
func (o *PostAPIListSessionCertificateUnauthorized) GetPayload() *models.RequestsErrorResponse {
	return o.Payload
}

func (o *PostAPIListSessionCertificateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIListSessionCertificateForbidden creates a PostAPIListSessionCertificateForbidden with default headers values
func NewPostAPIListSessionCertificateForbidden() *PostAPIListSessionCertificateForbidden {
	return &PostAPIListSessionCertificateForbidden{}
}

/* PostAPIListSessionCertificateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostAPIListSessionCertificateForbidden struct {
	Payload *models.RequestsErrorResponse
}

func (o *PostAPIListSessionCertificateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/list_session_certificate][%d] postApiListSessionCertificateForbidden  %+v", 403, o.Payload)
}
func (o *PostAPIListSessionCertificateForbidden) GetPayload() *models.RequestsErrorResponse {
	return o.Payload
}

func (o *PostAPIListSessionCertificateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIListSessionCertificateInternalServerError creates a PostAPIListSessionCertificateInternalServerError with default headers values
func NewPostAPIListSessionCertificateInternalServerError() *PostAPIListSessionCertificateInternalServerError {
	return &PostAPIListSessionCertificateInternalServerError{}
}

/* PostAPIListSessionCertificateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostAPIListSessionCertificateInternalServerError struct {
	Payload *models.RequestsErrorResponse
}

func (o *PostAPIListSessionCertificateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/list_session_certificate][%d] postApiListSessionCertificateInternalServerError  %+v", 500, o.Payload)
}
func (o *PostAPIListSessionCertificateInternalServerError) GetPayload() *models.RequestsErrorResponse {
	return o.Payload
}

func (o *PostAPIListSessionCertificateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
