// Code generated by go-swagger; DO NOT EDIT.

package acl

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/crt/cloudcrt/generated/swagger/models"
)

// DeleteAPIACLIDReader is a Reader for the DeleteAPIACLID structure.
type DeleteAPIACLIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAPIACLIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAPIACLIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteAPIACLIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAPIACLIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAPIACLIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAPIACLIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteAPIACLIDOK creates a DeleteAPIACLIDOK with default headers values
func NewDeleteAPIACLIDOK() *DeleteAPIACLIDOK {
	return &DeleteAPIACLIDOK{}
}

/* DeleteAPIACLIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteAPIACLIDOK struct {
	Payload string
}

func (o *DeleteAPIACLIDOK) Error() string {
	return fmt.Sprintf("[DELETE /api/acl/{id}/][%d] deleteApiAclIdOK  %+v", 200, o.Payload)
}
func (o *DeleteAPIACLIDOK) GetPayload() string {
	return o.Payload
}

func (o *DeleteAPIACLIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIACLIDUnauthorized creates a DeleteAPIACLIDUnauthorized with default headers values
func NewDeleteAPIACLIDUnauthorized() *DeleteAPIACLIDUnauthorized {
	return &DeleteAPIACLIDUnauthorized{}
}

/* DeleteAPIACLIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteAPIACLIDUnauthorized struct {
	Payload *models.RequestsErrorResponse
}

func (o *DeleteAPIACLIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/acl/{id}/][%d] deleteApiAclIdUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteAPIACLIDUnauthorized) GetPayload() *models.RequestsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIACLIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIACLIDForbidden creates a DeleteAPIACLIDForbidden with default headers values
func NewDeleteAPIACLIDForbidden() *DeleteAPIACLIDForbidden {
	return &DeleteAPIACLIDForbidden{}
}

/* DeleteAPIACLIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteAPIACLIDForbidden struct {
	Payload *models.RequestsErrorResponse
}

func (o *DeleteAPIACLIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/acl/{id}/][%d] deleteApiAclIdForbidden  %+v", 403, o.Payload)
}
func (o *DeleteAPIACLIDForbidden) GetPayload() *models.RequestsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIACLIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIACLIDNotFound creates a DeleteAPIACLIDNotFound with default headers values
func NewDeleteAPIACLIDNotFound() *DeleteAPIACLIDNotFound {
	return &DeleteAPIACLIDNotFound{}
}

/* DeleteAPIACLIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteAPIACLIDNotFound struct {
	Payload *models.RequestsErrorResponse
}

func (o *DeleteAPIACLIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/acl/{id}/][%d] deleteApiAclIdNotFound  %+v", 404, o.Payload)
}
func (o *DeleteAPIACLIDNotFound) GetPayload() *models.RequestsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIACLIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIACLIDInternalServerError creates a DeleteAPIACLIDInternalServerError with default headers values
func NewDeleteAPIACLIDInternalServerError() *DeleteAPIACLIDInternalServerError {
	return &DeleteAPIACLIDInternalServerError{}
}

/* DeleteAPIACLIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteAPIACLIDInternalServerError struct {
	Payload *models.RequestsErrorResponse
}

func (o *DeleteAPIACLIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/acl/{id}/][%d] deleteApiAclIdInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteAPIACLIDInternalServerError) GetPayload() *models.RequestsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIACLIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
