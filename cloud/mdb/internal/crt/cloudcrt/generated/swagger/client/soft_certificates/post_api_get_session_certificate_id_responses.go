// Code generated by go-swagger; DO NOT EDIT.

package soft_certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/internal/crt/cloudcrt/generated/swagger/models"
)

// PostAPIGetSessionCertificateIDReader is a Reader for the PostAPIGetSessionCertificateID structure.
type PostAPIGetSessionCertificateIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIGetSessionCertificateIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIGetSessionCertificateIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostAPIGetSessionCertificateIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAPIGetSessionCertificateIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAPIGetSessionCertificateIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIGetSessionCertificateIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAPIGetSessionCertificateIDOK creates a PostAPIGetSessionCertificateIDOK with default headers values
func NewPostAPIGetSessionCertificateIDOK() *PostAPIGetSessionCertificateIDOK {
	return &PostAPIGetSessionCertificateIDOK{}
}

/* PostAPIGetSessionCertificateIDOK describes a response with status code 200, with default header values.

OK
*/
type PostAPIGetSessionCertificateIDOK struct {
	Payload *models.DbSoftKey
}

func (o *PostAPIGetSessionCertificateIDOK) Error() string {
	return fmt.Sprintf("[POST /api/get_session_certificate/{id}/][%d] postApiGetSessionCertificateIdOK  %+v", 200, o.Payload)
}
func (o *PostAPIGetSessionCertificateIDOK) GetPayload() *models.DbSoftKey {
	return o.Payload
}

func (o *PostAPIGetSessionCertificateIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DbSoftKey)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIGetSessionCertificateIDUnauthorized creates a PostAPIGetSessionCertificateIDUnauthorized with default headers values
func NewPostAPIGetSessionCertificateIDUnauthorized() *PostAPIGetSessionCertificateIDUnauthorized {
	return &PostAPIGetSessionCertificateIDUnauthorized{}
}

/* PostAPIGetSessionCertificateIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostAPIGetSessionCertificateIDUnauthorized struct {
	Payload *models.RequestsErrorResponse
}

func (o *PostAPIGetSessionCertificateIDUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/get_session_certificate/{id}/][%d] postApiGetSessionCertificateIdUnauthorized  %+v", 401, o.Payload)
}
func (o *PostAPIGetSessionCertificateIDUnauthorized) GetPayload() *models.RequestsErrorResponse {
	return o.Payload
}

func (o *PostAPIGetSessionCertificateIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIGetSessionCertificateIDForbidden creates a PostAPIGetSessionCertificateIDForbidden with default headers values
func NewPostAPIGetSessionCertificateIDForbidden() *PostAPIGetSessionCertificateIDForbidden {
	return &PostAPIGetSessionCertificateIDForbidden{}
}

/* PostAPIGetSessionCertificateIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostAPIGetSessionCertificateIDForbidden struct {
	Payload *models.RequestsErrorResponse
}

func (o *PostAPIGetSessionCertificateIDForbidden) Error() string {
	return fmt.Sprintf("[POST /api/get_session_certificate/{id}/][%d] postApiGetSessionCertificateIdForbidden  %+v", 403, o.Payload)
}
func (o *PostAPIGetSessionCertificateIDForbidden) GetPayload() *models.RequestsErrorResponse {
	return o.Payload
}

func (o *PostAPIGetSessionCertificateIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIGetSessionCertificateIDNotFound creates a PostAPIGetSessionCertificateIDNotFound with default headers values
func NewPostAPIGetSessionCertificateIDNotFound() *PostAPIGetSessionCertificateIDNotFound {
	return &PostAPIGetSessionCertificateIDNotFound{}
}

/* PostAPIGetSessionCertificateIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostAPIGetSessionCertificateIDNotFound struct {
	Payload *models.RequestsErrorResponse
}

func (o *PostAPIGetSessionCertificateIDNotFound) Error() string {
	return fmt.Sprintf("[POST /api/get_session_certificate/{id}/][%d] postApiGetSessionCertificateIdNotFound  %+v", 404, o.Payload)
}
func (o *PostAPIGetSessionCertificateIDNotFound) GetPayload() *models.RequestsErrorResponse {
	return o.Payload
}

func (o *PostAPIGetSessionCertificateIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIGetSessionCertificateIDInternalServerError creates a PostAPIGetSessionCertificateIDInternalServerError with default headers values
func NewPostAPIGetSessionCertificateIDInternalServerError() *PostAPIGetSessionCertificateIDInternalServerError {
	return &PostAPIGetSessionCertificateIDInternalServerError{}
}

/* PostAPIGetSessionCertificateIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostAPIGetSessionCertificateIDInternalServerError struct {
	Payload *models.RequestsErrorResponse
}

func (o *PostAPIGetSessionCertificateIDInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/get_session_certificate/{id}/][%d] postApiGetSessionCertificateIdInternalServerError  %+v", 500, o.Payload)
}
func (o *PostAPIGetSessionCertificateIDInternalServerError) GetPayload() *models.RequestsErrorResponse {
	return o.Payload
}

func (o *PostAPIGetSessionCertificateIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
