syntax = "proto3";

package datacloud.network.v1;

import "datacloud/network/v1/network_connection.proto";
import "datacloud/v1/paging.proto";

option go_package = "a.yandex-team.ru/cloud/mdb/datacloud/private_api/datacloud/network/v1;network";
option java_package = "doublecloud.priv.network.v1";
option java_outer_classname = "DNCS";

// A set of methods for managing Networks Connection.
service NetworkConnectionService {
  // Returns the specified Network Connection.
  rpc Get (GetNetworkConnectionRequest) returns (NetworkConnection);

  // Retrieves a list of Network Connections of the specified Project.
  rpc List (ListNetworkConnectionsRequest) returns (ListNetworkConnectionsResponse);

  // Creates a Network Connection.
  rpc Create (CreateNetworkConnectionRequest) returns (CreateNetworkConnectionResponse);

  // Deletes the specified Network Connection.
  rpc Delete (DeleteNetworkConnectionRequest) returns (DeleteNetworkConnectionResponse);

  // Updates the specified Network Connection.
  rpc Update (UpdateNetworkConnectionRequest) returns (UpdateNetworkConnectionResponse);
}

message GetNetworkConnectionRequest {
  // ID of the Network Connection resource to return.
  string network_connection_id = 1;
}

message ListNetworkConnectionsRequest {
  // ID of the project to list Networks Connections in.
  string project_id = 1;

  // Paging information of the request
  datacloud.v1.Paging paging = 2;
}

message ListNetworkConnectionsResponse {
  // List of Network Connection resources.
  repeated NetworkConnection network_connections = 1;

  // Pagination information of the response
  datacloud.v1.NextPage next_page = 2;
}

message CreateNetworkConnectionRequest {
  // ID of the Network.
  string network_id = 1;

  // Provider specific parameters.
  oneof params {
    // Connect two DataCloud Networks.
    // CreateDataCloudNetworkConnectionRequest data_cloud = 2;
    // Connect DataCloud Network with AWS VPC.
    CreateAWSNetworkConnectionRequest aws = 3;
    // Connect DataCloud Network with Google Cloud VPC.
    // CreateGoogleNetworkConnectionRequest google = 4;
    // Connect DataCloud Network with Azure Virtual Network.
    // CreateAzureNetworkConnectionRequest azure = 5;
  }

  // Description of the Network Connection.
  string description = 6;
}

message CreateDataCloudNetworkConnectionRequest {
  // ID of the Network.
  string network_id = 1;
}

message CreateAWSNetworkConnectionRequest {
    oneof type {
        // Connect AWS VPC using VPC Peering.
        CreateAWSNetworkConnectionPeeringRequest peering = 1;
        // Connect AWS VPC using Transit Gateway.
        // CreateAWSNetworkConnectionTransitGatewayRequest transit_gateway = 2;
    }
}

message CreateAWSNetworkConnectionPeeringRequest {
  // ID of the VPC.
  string vpc_id = 1;
  // ID of the VPC owner account.
  string account_id = 2;
  // ID of the AWS region.
  string region_id = 3;
  // IPv4 CIDR block. Data Cloud will create route to this CIDR using Peering Connection.
  string ipv4_cidr_block = 4;
  // IPv6 CIDR block. Data Cloud will create route to this CIDR using Peering Connection.
  string ipv6_cidr_block = 5;
}

message CreateAWSNetworkConnectionTransitGatewayRequest {
    // TODO
}

message CreateGoogleNetworkConnectionRequest {
  // VPC Network name.
  string vpc_network_name = 1;
  // VPC owner project id.
  string project_id = 2;
}

message CreateAzureNetworkConnectionRequest {
  // Virtual Network ID.
  string network_id = 1;
}

message CreateNetworkConnectionResponse {
  // ID of the operation.
  string operation_id = 1;

  // ID of the creating Network Connection.
  string network_connection_id = 2;
}

message DeleteNetworkConnectionRequest {
  // ID of the Network Connection to delete.
  // To get the Network Connection ID, use a [NetworkConnectionService.List] request.
  string network_connection_id = 1;
}

message DeleteNetworkConnectionResponse {
  // ID of the operation.
  string operation_id = 1;
}

message UpdateNetworkConnectionRequest {
  // ID of the Network Connection to update.
  string network_connection_id = 1;

  // Description of the Network Connection.
  string description = 2;
}

message UpdateNetworkConnectionResponse {
  // ID of the operation.
  string operation_id = 1;
}
