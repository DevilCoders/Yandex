syntax = "proto3";

package datacloud.network.v1;

import "datacloud/network/v1/network.proto";
import "datacloud/v1/paging.proto";

option go_package = "a.yandex-team.ru/cloud/mdb/datacloud/private_api/datacloud/network/v1;network";
option java_package = "doublecloud.priv.network.v1";
option java_outer_classname = "DNS";

// A set of methods for managing Networks.
service NetworkService {
  // Returns the specified Network.
  rpc Get (GetNetworkRequest) returns (Network);

  // Retrieves a list of Networks that belong to the specified project.
  rpc List (ListNetworksRequest) returns (ListNetworksResponse);

  // Creates a Network.
  rpc Create (CreateNetworkRequest) returns (CreateNetworkResponse);

  // Deletes the specified Network.
  rpc Delete (DeleteNetworkRequest) returns (DeleteNetworkResponse);

  // Updates the specified Network.
  rpc Update (UpdateNetworkRequest) returns (UpdateNetworkResponse);

  // Imports a Network.
  rpc Import (ImportNetworkRequest) returns (ImportNetworkResponse);
}

message GetNetworkRequest {
  // ID of the Network resource to return.
  string network_id = 1;
}

message ListNetworksRequest {
  // ID of the project to list Networks in.
  string project_id = 1;

  // Paging information of the request
  datacloud.v1.Paging paging = 2;
}

message ListNetworksResponse {
  // List of Network resources.
  repeated Network networks = 1;

  // Pagination information of the response
  datacloud.v1.NextPage next_page = 2;
}

message CreateNetworkRequest {
  // ID of the project to create the Network in.
  string project_id = 1;

  // Type of the cloud where instances should be hosted.
  string cloud_type = 2;

  // ID of the region to place instances.
  string region_id = 3;

  // Name of the Network. The name must be unique within the project.
  string name = 4;

  // Description of the Network.
  string description = 5;

  // The IPv4 network range for the subnet, in CIDR notation.
  // For example, 10.0.0.0/16.
  string ipv4_cidr_block = 6;
}

message CreateNetworkResponse {
  // ID of the operation.
  string operation_id = 1;

  // ID of the creating Network.
  string network_id = 2;
}

message DeleteNetworkRequest {
  // ID of the Network to delete.
  // To get the Network ID, use a [NetworkService.List] request.
  string network_id = 1;
}

message DeleteNetworkResponse {
  // ID of the operation.
  string operation_id = 1;
}

message UpdateNetworkRequest {
  // ID of the Network to update.
  string network_id = 1;

  // Name of the Network. The name must be unique within the project.
  string name = 2;

  // Description of the Network.
  string description = 3;
}

message UpdateNetworkResponse {
  // ID of the operation.
  string operation_id = 1;
}

message ImportNetworkRequest {
  // ID of the project to create the Network in.
  string project_id = 1;

  // Name of the Network. The name must be unique within the project.
  string name = 2;

  // Description of the Network.
  string description = 3;

  // Provider specific parameters.
  oneof params {
    // Import AWS VPC.
    ImportAWSVPCRequest aws = 4;
    // Import Google Cloud VPC.
    // ImportGoogleVPCRequest google = 5;
    // Import Azure Virtual Network.
    // ImportAzureNetworkRequest azure = 6;
  }
}

message ImportAWSVPCRequest {
  // ID of the VPC.
  string vpc_id = 1;

  // ID of the region to place instances.
  string region_id = 2;

  // ID of the VPC owner account.
  string account_id = 3;

  // IAM role ARN to use for resource creations.
  string iam_role_arn = 4;
}

message ImportNetworkResponse {
  // ID of the operation.
  string operation_id = 1;

  // ID of the creating Network.
  string network_id = 2;
}

