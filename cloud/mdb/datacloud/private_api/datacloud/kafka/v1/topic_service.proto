syntax = "proto3";

package datacloud.kafka.v1;

import "datacloud/v1/paging.proto";
import "datacloud/kafka/v1/topic.proto";

option go_package = "a.yandex-team.ru/cloud/mdb/datacloud/private_api/datacloud/kafka/v1;kafkav1";
option java_package = "doublecloud.priv.kafka.v1";
option java_outer_classname = "DKTS";

// A set of methods for managing Apache Kafka Topic resources.
service TopicService {
  // Returns the specified Apache Kafka Topic resource.
  //
  // To get the list of available Apache Kafka Topic resources, make a [List] request.
  rpc Get (GetTopicRequest) returns (Topic) {
  }

  // Retrieves the list of Apache Kafka Topic resources in the specified cluster.
  rpc List (ListTopicsRequest) returns (ListTopicsResponse) {
  }

  // Creates a new Apache Kafka topic in the specified cluster.
  rpc Create (CreateTopicRequest) returns (CreateTopicResponse) {
  }

  // Updates the specified Apache Kafka topic.
  rpc Update (UpdateTopicRequest) returns (UpdateTopicResponse) {
  }

  // Deletes the specified Apache Kafka topic.
  rpc Delete (DeleteTopicRequest) returns (DeleteTopicResponse) {
  }
}

message GetTopicRequest {
  // ID of the Apache Kafka cluster that the topic belongs to.
  // To get the cluster ID use a [ClusterService.List] request.
  string cluster_id = 1;

  // Name of the Apache Kafka Topic resource to return.
  // To get the name of the topic use a [TopicService.List] request.
  string topic_name = 2;
}

message ListTopicsRequest {
  // ID of the Apache Kafka cluster to list topics in.
  // To get the cluster ID use a [ClusterService.List] request.
  string cluster_id = 1;

  // Paging information of the request
  datacloud.v1.Paging paging = 2;
}

message ListTopicsResponse {
  // List of Apache Kafka Topic resources.
  repeated Topic topics = 1;

  // Pagination information of the response
  datacloud.v1.NextPage next_page = 2;
}

message CreateTopicRequest {
  // Required. ID of the Apache Kafka cluster to create a topic in.
  // To get the cluster ID use a [ClusterService.List] request.
  string cluster_id = 1;

  // Required. Configuration of the topic to create.
  TopicSpec topic_spec = 2;
}

message CreateTopicResponse {
  // ID of the operation.
  string operation_id = 1;
}

message UpdateTopicRequest {
  // Required. ID of the Apache Kafka cluster to update a topic in.
  // To get the cluster ID use a [ClusterService.List] request.
  string cluster_id = 1;

  // Required. Name of the topic to update.
  // To get the name of the topic use a [TopicService.List] request.
  string topic_name = 2;

  // Required. Configuration of the topic to create.
  TopicSpec topic_spec = 3;
}

message UpdateTopicResponse {
  // ID of the operation.
  string operation_id = 1;
}

message DeleteTopicRequest {
  // Required. ID of the Apache Kafka cluster to delete a topic in.
  // To get the cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1;

  // Required. Name of the topic to delete.
  // To get the name of the topic, use a [TopicService.List] request.
  string topic_name = 2;
}

message DeleteTopicResponse {
  // ID of the operation.
  string operation_id = 1;
}
