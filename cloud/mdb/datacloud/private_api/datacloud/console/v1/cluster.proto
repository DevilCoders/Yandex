syntax = "proto3";

package datacloud.console.v1;

import "google/protobuf/timestamp.proto";
import "datacloud/v1/cluster.proto";

option go_package = "a.yandex-team.ru/cloud/mdb/datacloud/private_api/datacloud/console/v1;console";
option java_package = "doublecloud.priv.console.v1";
option java_outer_classname = "DCC";

// A cluster resource.
message Cluster {
    message Resources {
        HostType host_type = 1;
        int64 host_count = 2;
        string resource_preset_id = 3;
        int64 disk_size = 4;
    }

    // ID of the cluster.
    string id = 1;

    // ID of the project that the cluster belongs to.
    string project_id = 2;

    // Type of the cloud where instances should be hosted.
    string cloud_type = 3;

    // ID of the region to place instances.
    string region_id = 4;

    // Creation timestamp.
    google.protobuf.Timestamp create_time = 5;

    // Name of the cluster.
    // The name is unique within the project.
    string name = 6;

    // Description of the cluster.
    string description = 7;

    // Current state of the cluster.
    datacloud.v1.ClusterStatus status = 8;

    // Cluster type.
    ClusterType type = 9;

    // Version of DBMS.
    string version = 10;

    // Resources allocated to the cluster.
    repeated Resources resources = 11;
}

message ResourcePresetConfig {
    // Resource preset ID.
    string resource_preset_id = 1;

    // CPU limit for the resource preset.
    int64 cpu_limit = 2;

    // Memory limit for the resource preset.
    int64 memory_limit = 3;

    // Minimum disk size in bytes.
    int64 min_disk_size = 4;

    // Maximum disk size in bytes.
    int64 max_disk_size = 5;

    // All possible disk size values. If empty, available all between min_disk_size and max_disk_size.
    repeated int64 disk_sizes = 6;

    // Default volume of the storage available to a host, in bytes.
    int64 default_disk_size = 7;
}

enum ClusterType {
    // Invalid cluster type value.
    CLUSTER_TYPE_INVALID = 0;

    // ClickHouse cluster.
    CLUSTER_TYPE_CLICKHOUSE = 1;

    // Apache Kafka® cluster.
    CLUSTER_TYPE_KAFKA = 2;
}

enum HostType {
    // Invalid host type value.
    HOST_TYPE_INVALID = 0;

    // ClickHouse host.
    HOST_TYPE_CLICKHOUSE = 1;

    // Apache Kafka® host.
    HOST_TYPE_KAFKA = 2;
}
