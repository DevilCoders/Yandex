// Code generated by go-swagger; DO NOT EDIT.

package certs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"a.yandex-team.ru/cloud/mdb/mdb-secrets/generated/swagger/models"
)

// RevokeCertificateOKCode is the HTTP code returned for type RevokeCertificateOK
const RevokeCertificateOKCode int = 200

/*RevokeCertificateOK Base OK Response

swagger:response revokeCertificateOK
*/
type RevokeCertificateOK struct {

	/*
	  In: Body
	*/
	Payload *RevokeCertificateOKBody `json:"body,omitempty"`
}

// NewRevokeCertificateOK creates RevokeCertificateOK with default headers values
func NewRevokeCertificateOK() *RevokeCertificateOK {

	return &RevokeCertificateOK{}
}

// WithPayload adds the payload to the revoke certificate o k response
func (o *RevokeCertificateOK) WithPayload(payload *RevokeCertificateOKBody) *RevokeCertificateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the revoke certificate o k response
func (o *RevokeCertificateOK) SetPayload(payload *RevokeCertificateOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RevokeCertificateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*RevokeCertificateDefault Base Error Response

swagger:response revokeCertificateDefault
*/
type RevokeCertificateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRevokeCertificateDefault creates RevokeCertificateDefault with default headers values
func NewRevokeCertificateDefault(code int) *RevokeCertificateDefault {
	if code <= 0 {
		code = 500
	}

	return &RevokeCertificateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the revoke certificate default response
func (o *RevokeCertificateDefault) WithStatusCode(code int) *RevokeCertificateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the revoke certificate default response
func (o *RevokeCertificateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the revoke certificate default response
func (o *RevokeCertificateDefault) WithPayload(payload *models.Error) *RevokeCertificateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the revoke certificate default response
func (o *RevokeCertificateDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RevokeCertificateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
