// Code generated by go-swagger; DO NOT EDIT.

package certs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/mdb-secrets/generated/swagger/models"
)

// PutReader is a Reader for the Put structure.
type PutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutOK creates a PutOK with default headers values
func NewPutOK() *PutOK {
	return &PutOK{}
}

/* PutOK describes a response with status code 200, with default header values.

Certificate for host
*/
type PutOK struct {
	Payload *models.CertResponse
}

func (o *PutOK) Error() string {
	return fmt.Sprintf("[PUT /v1/cert][%d] putOK  %+v", 200, o.Payload)
}
func (o *PutOK) GetPayload() *models.CertResponse {
	return o.Payload
}

func (o *PutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CertResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUnauthorized creates a PutUnauthorized with default headers values
func NewPutUnauthorized() *PutUnauthorized {
	return &PutUnauthorized{}
}

/* PutUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutUnauthorized struct {
	Payload *models.Error
}

func (o *PutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/cert][%d] putUnauthorized  %+v", 401, o.Payload)
}
func (o *PutUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutForbidden creates a PutForbidden with default headers values
func NewPutForbidden() *PutForbidden {
	return &PutForbidden{}
}

/* PutForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutForbidden struct {
	Payload *models.Error
}

func (o *PutForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/cert][%d] putForbidden  %+v", 403, o.Payload)
}
func (o *PutForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutInternalServerError creates a PutInternalServerError with default headers values
func NewPutInternalServerError() *PutInternalServerError {
	return &PutInternalServerError{}
}

/* PutInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PutInternalServerError struct {
	Payload *models.Error
}

func (o *PutInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/cert][%d] putInternalServerError  %+v", 500, o.Payload)
}
func (o *PutInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutServiceUnavailable creates a PutServiceUnavailable with default headers values
func NewPutServiceUnavailable() *PutServiceUnavailable {
	return &PutServiceUnavailable{}
}

/* PutServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable (dependency down)
*/
type PutServiceUnavailable struct {
	Payload *models.Error
}

func (o *PutServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /v1/cert][%d] putServiceUnavailable  %+v", 503, o.Payload)
}
func (o *PutServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
