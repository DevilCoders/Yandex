// Code generated by go-swagger; DO NOT EDIT.

package commands

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/deploy/api/generated/swagger/models"
)

// GetCommandReader is a Reader for the GetCommand structure.
type GetCommandReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCommandReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCommandOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetCommandDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCommandOK creates a GetCommandOK with default headers values
func NewGetCommandOK() *GetCommandOK {
	return &GetCommandOK{}
}

/* GetCommandOK describes a response with status code 200, with default header values.

Command
*/
type GetCommandOK struct {
	Payload *models.CommandResp
}

func (o *GetCommandOK) Error() string {
	return fmt.Sprintf("[GET /v1/commands/{commandId}][%d] getCommandOK  %+v", 200, o.Payload)
}
func (o *GetCommandOK) GetPayload() *models.CommandResp {
	return o.Payload
}

func (o *GetCommandOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommandResp)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCommandDefault creates a GetCommandDefault with default headers values
func NewGetCommandDefault(code int) *GetCommandDefault {
	return &GetCommandDefault{
		_statusCode: code,
	}
}

/* GetCommandDefault describes a response with status code -1, with default header values.

Error
*/
type GetCommandDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get command default response
func (o *GetCommandDefault) Code() int {
	return o._statusCode
}

func (o *GetCommandDefault) Error() string {
	return fmt.Sprintf("[GET /v1/commands/{commandId}][%d] GetCommand default  %+v", o._statusCode, o.Payload)
}
func (o *GetCommandDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCommandDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
