// Code generated by go-swagger; DO NOT EDIT.

package commands

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"a.yandex-team.ru/cloud/mdb/deploy/api/generated/swagger/models"
)

// NewCreateJobResultParams creates a new CreateJobResultParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateJobResultParams() *CreateJobResultParams {
	return &CreateJobResultParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateJobResultParamsWithTimeout creates a new CreateJobResultParams object
// with the ability to set a timeout on a request.
func NewCreateJobResultParamsWithTimeout(timeout time.Duration) *CreateJobResultParams {
	return &CreateJobResultParams{
		timeout: timeout,
	}
}

// NewCreateJobResultParamsWithContext creates a new CreateJobResultParams object
// with the ability to set a context for a request.
func NewCreateJobResultParamsWithContext(ctx context.Context) *CreateJobResultParams {
	return &CreateJobResultParams{
		Context: ctx,
	}
}

// NewCreateJobResultParamsWithHTTPClient creates a new CreateJobResultParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateJobResultParamsWithHTTPClient(client *http.Client) *CreateJobResultParams {
	return &CreateJobResultParams{
		HTTPClient: client,
	}
}

/* CreateJobResultParams contains all the parameters to send to the API endpoint
   for the create job result operation.

   Typically these are written to a http.Request.
*/
type CreateJobResultParams struct {

	/* XRequestID.

	   Unique request ID (must be generated for each separate request, even retries)
	*/
	XRequestID *string

	// Body.
	Body *models.JobResult

	/* Fqdn.

	   fqdn of whatever
	*/
	Fqdn string

	/* JobID.

	   Job ID
	*/
	JobID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create job result params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateJobResultParams) WithDefaults() *CreateJobResultParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create job result params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateJobResultParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create job result params
func (o *CreateJobResultParams) WithTimeout(timeout time.Duration) *CreateJobResultParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create job result params
func (o *CreateJobResultParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create job result params
func (o *CreateJobResultParams) WithContext(ctx context.Context) *CreateJobResultParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create job result params
func (o *CreateJobResultParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create job result params
func (o *CreateJobResultParams) WithHTTPClient(client *http.Client) *CreateJobResultParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create job result params
func (o *CreateJobResultParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXRequestID adds the xRequestID to the create job result params
func (o *CreateJobResultParams) WithXRequestID(xRequestID *string) *CreateJobResultParams {
	o.SetXRequestID(xRequestID)
	return o
}

// SetXRequestID adds the xRequestId to the create job result params
func (o *CreateJobResultParams) SetXRequestID(xRequestID *string) {
	o.XRequestID = xRequestID
}

// WithBody adds the body to the create job result params
func (o *CreateJobResultParams) WithBody(body *models.JobResult) *CreateJobResultParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create job result params
func (o *CreateJobResultParams) SetBody(body *models.JobResult) {
	o.Body = body
}

// WithFqdn adds the fqdn to the create job result params
func (o *CreateJobResultParams) WithFqdn(fqdn string) *CreateJobResultParams {
	o.SetFqdn(fqdn)
	return o
}

// SetFqdn adds the fqdn to the create job result params
func (o *CreateJobResultParams) SetFqdn(fqdn string) {
	o.Fqdn = fqdn
}

// WithJobID adds the jobID to the create job result params
func (o *CreateJobResultParams) WithJobID(jobID string) *CreateJobResultParams {
	o.SetJobID(jobID)
	return o
}

// SetJobID adds the jobId to the create job result params
func (o *CreateJobResultParams) SetJobID(jobID string) {
	o.JobID = jobID
}

// WriteToRequest writes these params to a swagger request
func (o *CreateJobResultParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.XRequestID != nil {

		// header param X-Request-Id
		if err := r.SetHeaderParam("X-Request-Id", *o.XRequestID); err != nil {
			return err
		}
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param fqdn
	if err := r.SetPathParam("fqdn", o.Fqdn); err != nil {
		return err
	}

	// path param jobId
	if err := r.SetPathParam("jobId", o.JobID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
