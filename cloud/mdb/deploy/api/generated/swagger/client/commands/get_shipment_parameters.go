// Code generated by go-swagger; DO NOT EDIT.

package commands

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetShipmentParams creates a new GetShipmentParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetShipmentParams() *GetShipmentParams {
	return &GetShipmentParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetShipmentParamsWithTimeout creates a new GetShipmentParams object
// with the ability to set a timeout on a request.
func NewGetShipmentParamsWithTimeout(timeout time.Duration) *GetShipmentParams {
	return &GetShipmentParams{
		timeout: timeout,
	}
}

// NewGetShipmentParamsWithContext creates a new GetShipmentParams object
// with the ability to set a context for a request.
func NewGetShipmentParamsWithContext(ctx context.Context) *GetShipmentParams {
	return &GetShipmentParams{
		Context: ctx,
	}
}

// NewGetShipmentParamsWithHTTPClient creates a new GetShipmentParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetShipmentParamsWithHTTPClient(client *http.Client) *GetShipmentParams {
	return &GetShipmentParams{
		HTTPClient: client,
	}
}

/* GetShipmentParams contains all the parameters to send to the API endpoint
   for the get shipment operation.

   Typically these are written to a http.Request.
*/
type GetShipmentParams struct {

	/* Authorization.

	   OAuth token. It is not in security section because we also use cookies and you can't specify those in swagger 2.0.
	*/
	Authorization *string

	/* XRequestID.

	   Unique request ID (must be generated for each separate request, even retries)
	*/
	XRequestID *string

	/* ShipmentID.

	   Shipment ID
	*/
	ShipmentID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get shipment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetShipmentParams) WithDefaults() *GetShipmentParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get shipment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetShipmentParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get shipment params
func (o *GetShipmentParams) WithTimeout(timeout time.Duration) *GetShipmentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get shipment params
func (o *GetShipmentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get shipment params
func (o *GetShipmentParams) WithContext(ctx context.Context) *GetShipmentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get shipment params
func (o *GetShipmentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get shipment params
func (o *GetShipmentParams) WithHTTPClient(client *http.Client) *GetShipmentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get shipment params
func (o *GetShipmentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the get shipment params
func (o *GetShipmentParams) WithAuthorization(authorization *string) *GetShipmentParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the get shipment params
func (o *GetShipmentParams) SetAuthorization(authorization *string) {
	o.Authorization = authorization
}

// WithXRequestID adds the xRequestID to the get shipment params
func (o *GetShipmentParams) WithXRequestID(xRequestID *string) *GetShipmentParams {
	o.SetXRequestID(xRequestID)
	return o
}

// SetXRequestID adds the xRequestId to the get shipment params
func (o *GetShipmentParams) SetXRequestID(xRequestID *string) {
	o.XRequestID = xRequestID
}

// WithShipmentID adds the shipmentID to the get shipment params
func (o *GetShipmentParams) WithShipmentID(shipmentID string) *GetShipmentParams {
	o.SetShipmentID(shipmentID)
	return o
}

// SetShipmentID adds the shipmentId to the get shipment params
func (o *GetShipmentParams) SetShipmentID(shipmentID string) {
	o.ShipmentID = shipmentID
}

// WriteToRequest writes these params to a swagger request
func (o *GetShipmentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {

		// header param Authorization
		if err := r.SetHeaderParam("Authorization", *o.Authorization); err != nil {
			return err
		}
	}

	if o.XRequestID != nil {

		// header param X-Request-Id
		if err := r.SetHeaderParam("X-Request-Id", *o.XRequestID); err != nil {
			return err
		}
	}

	// path param shipmentId
	if err := r.SetPathParam("shipmentId", o.ShipmentID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
