// Code generated by go-swagger; DO NOT EDIT.

package masters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetMasterMinionsChangesParams creates a new GetMasterMinionsChangesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetMasterMinionsChangesParams() *GetMasterMinionsChangesParams {
	return &GetMasterMinionsChangesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetMasterMinionsChangesParamsWithTimeout creates a new GetMasterMinionsChangesParams object
// with the ability to set a timeout on a request.
func NewGetMasterMinionsChangesParamsWithTimeout(timeout time.Duration) *GetMasterMinionsChangesParams {
	return &GetMasterMinionsChangesParams{
		timeout: timeout,
	}
}

// NewGetMasterMinionsChangesParamsWithContext creates a new GetMasterMinionsChangesParams object
// with the ability to set a context for a request.
func NewGetMasterMinionsChangesParamsWithContext(ctx context.Context) *GetMasterMinionsChangesParams {
	return &GetMasterMinionsChangesParams{
		Context: ctx,
	}
}

// NewGetMasterMinionsChangesParamsWithHTTPClient creates a new GetMasterMinionsChangesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetMasterMinionsChangesParamsWithHTTPClient(client *http.Client) *GetMasterMinionsChangesParams {
	return &GetMasterMinionsChangesParams{
		HTTPClient: client,
	}
}

/* GetMasterMinionsChangesParams contains all the parameters to send to the API endpoint
   for the get master minions changes operation.

   Typically these are written to a http.Request.
*/
type GetMasterMinionsChangesParams struct {

	/* Authorization.

	   OAuth token. It is not in security section because we also use cookies and you can't specify those in swagger 2.0.
	*/
	Authorization *string

	/* XRequestID.

	   Unique request ID (must be generated for each separate request, even retries)
	*/
	XRequestID *string

	/* Fqdn.

	   fqdn of whatever
	*/
	Fqdn string

	/* FromTimestamp.

	   Timestamp in Unix Time starting from which to return changes

	   Format: int64
	*/
	FromTimestamp *int64

	/* PageSize.

	   Number of results per page

	   Format: int64
	   Default: 100
	*/
	PageSize *int64

	/* PageToken.

	   Token to request the next page in listing
	*/
	PageToken *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get master minions changes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetMasterMinionsChangesParams) WithDefaults() *GetMasterMinionsChangesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get master minions changes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetMasterMinionsChangesParams) SetDefaults() {
	var (
		pageSizeDefault = int64(100)
	)

	val := GetMasterMinionsChangesParams{
		PageSize: &pageSizeDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get master minions changes params
func (o *GetMasterMinionsChangesParams) WithTimeout(timeout time.Duration) *GetMasterMinionsChangesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get master minions changes params
func (o *GetMasterMinionsChangesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get master minions changes params
func (o *GetMasterMinionsChangesParams) WithContext(ctx context.Context) *GetMasterMinionsChangesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get master minions changes params
func (o *GetMasterMinionsChangesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get master minions changes params
func (o *GetMasterMinionsChangesParams) WithHTTPClient(client *http.Client) *GetMasterMinionsChangesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get master minions changes params
func (o *GetMasterMinionsChangesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the get master minions changes params
func (o *GetMasterMinionsChangesParams) WithAuthorization(authorization *string) *GetMasterMinionsChangesParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the get master minions changes params
func (o *GetMasterMinionsChangesParams) SetAuthorization(authorization *string) {
	o.Authorization = authorization
}

// WithXRequestID adds the xRequestID to the get master minions changes params
func (o *GetMasterMinionsChangesParams) WithXRequestID(xRequestID *string) *GetMasterMinionsChangesParams {
	o.SetXRequestID(xRequestID)
	return o
}

// SetXRequestID adds the xRequestId to the get master minions changes params
func (o *GetMasterMinionsChangesParams) SetXRequestID(xRequestID *string) {
	o.XRequestID = xRequestID
}

// WithFqdn adds the fqdn to the get master minions changes params
func (o *GetMasterMinionsChangesParams) WithFqdn(fqdn string) *GetMasterMinionsChangesParams {
	o.SetFqdn(fqdn)
	return o
}

// SetFqdn adds the fqdn to the get master minions changes params
func (o *GetMasterMinionsChangesParams) SetFqdn(fqdn string) {
	o.Fqdn = fqdn
}

// WithFromTimestamp adds the fromTimestamp to the get master minions changes params
func (o *GetMasterMinionsChangesParams) WithFromTimestamp(fromTimestamp *int64) *GetMasterMinionsChangesParams {
	o.SetFromTimestamp(fromTimestamp)
	return o
}

// SetFromTimestamp adds the fromTimestamp to the get master minions changes params
func (o *GetMasterMinionsChangesParams) SetFromTimestamp(fromTimestamp *int64) {
	o.FromTimestamp = fromTimestamp
}

// WithPageSize adds the pageSize to the get master minions changes params
func (o *GetMasterMinionsChangesParams) WithPageSize(pageSize *int64) *GetMasterMinionsChangesParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get master minions changes params
func (o *GetMasterMinionsChangesParams) SetPageSize(pageSize *int64) {
	o.PageSize = pageSize
}

// WithPageToken adds the pageToken to the get master minions changes params
func (o *GetMasterMinionsChangesParams) WithPageToken(pageToken *string) *GetMasterMinionsChangesParams {
	o.SetPageToken(pageToken)
	return o
}

// SetPageToken adds the pageToken to the get master minions changes params
func (o *GetMasterMinionsChangesParams) SetPageToken(pageToken *string) {
	o.PageToken = pageToken
}

// WriteToRequest writes these params to a swagger request
func (o *GetMasterMinionsChangesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {

		// header param Authorization
		if err := r.SetHeaderParam("Authorization", *o.Authorization); err != nil {
			return err
		}
	}

	if o.XRequestID != nil {

		// header param X-Request-Id
		if err := r.SetHeaderParam("X-Request-Id", *o.XRequestID); err != nil {
			return err
		}
	}

	// path param fqdn
	if err := r.SetPathParam("fqdn", o.Fqdn); err != nil {
		return err
	}

	if o.FromTimestamp != nil {

		// query param fromTimestamp
		var qrFromTimestamp int64

		if o.FromTimestamp != nil {
			qrFromTimestamp = *o.FromTimestamp
		}
		qFromTimestamp := swag.FormatInt64(qrFromTimestamp)
		if qFromTimestamp != "" {

			if err := r.SetQueryParam("fromTimestamp", qFromTimestamp); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int64

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.PageToken != nil {

		// query param pageToken
		var qrPageToken string

		if o.PageToken != nil {
			qrPageToken = *o.PageToken
		}
		qPageToken := qrPageToken
		if qPageToken != "" {

			if err := r.SetQueryParam("pageToken", qPageToken); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
