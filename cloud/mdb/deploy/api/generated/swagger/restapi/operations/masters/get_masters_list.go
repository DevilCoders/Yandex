// Code generated by go-swagger; DO NOT EDIT.

package masters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetMastersListHandlerFunc turns a function with the right signature into a get masters list handler
type GetMastersListHandlerFunc func(GetMastersListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetMastersListHandlerFunc) Handle(params GetMastersListParams) middleware.Responder {
	return fn(params)
}

// GetMastersListHandler interface for that can handle valid get masters list params
type GetMastersListHandler interface {
	Handle(GetMastersListParams) middleware.Responder
}

// NewGetMastersList creates a new http.Handler for the get masters list operation
func NewGetMastersList(ctx *middleware.Context, handler GetMastersListHandler) *GetMastersList {
	return &GetMastersList{Context: ctx, Handler: handler}
}

/* GetMastersList swagger:route GET /v1/masters masters getMastersList

Returns list of masters

*/
type GetMastersList struct {
	Context *middleware.Context
	Handler GetMastersListHandler
}

func (o *GetMastersList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetMastersListParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
