// Code generated by go-swagger; DO NOT EDIT.

package minions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetMinionsListHandlerFunc turns a function with the right signature into a get minions list handler
type GetMinionsListHandlerFunc func(GetMinionsListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetMinionsListHandlerFunc) Handle(params GetMinionsListParams) middleware.Responder {
	return fn(params)
}

// GetMinionsListHandler interface for that can handle valid get minions list params
type GetMinionsListHandler interface {
	Handle(GetMinionsListParams) middleware.Responder
}

// NewGetMinionsList creates a new http.Handler for the get minions list operation
func NewGetMinionsList(ctx *middleware.Context, handler GetMinionsListHandler) *GetMinionsList {
	return &GetMinionsList{Context: ctx, Handler: handler}
}

/* GetMinionsList swagger:route GET /v1/minions minions getMinionsList

Returns list of minions

*/
type GetMinionsList struct {
	Context *middleware.Context
	Handler GetMinionsListHandler
}

func (o *GetMinionsList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetMinionsListParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
