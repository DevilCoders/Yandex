// Code generated by go-swagger; DO NOT EDIT.

package masters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CreateMasterHandlerFunc turns a function with the right signature into a create master handler
type CreateMasterHandlerFunc func(CreateMasterParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateMasterHandlerFunc) Handle(params CreateMasterParams) middleware.Responder {
	return fn(params)
}

// CreateMasterHandler interface for that can handle valid create master params
type CreateMasterHandler interface {
	Handle(CreateMasterParams) middleware.Responder
}

// NewCreateMaster creates a new http.Handler for the create master operation
func NewCreateMaster(ctx *middleware.Context, handler CreateMasterHandler) *CreateMaster {
	return &CreateMaster{Context: ctx, Handler: handler}
}

/* CreateMaster swagger:route POST /v1/masters masters createMaster

Creates new master

*/
type CreateMaster struct {
	Context *middleware.Context
	Handler CreateMasterHandler
}

func (o *CreateMaster) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCreateMasterParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
