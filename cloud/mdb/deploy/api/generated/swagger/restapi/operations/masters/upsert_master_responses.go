// Code generated by go-swagger; DO NOT EDIT.

package masters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"a.yandex-team.ru/cloud/mdb/deploy/api/generated/swagger/models"
)

// UpsertMasterOKCode is the HTTP code returned for type UpsertMasterOK
const UpsertMasterOKCode int = 200

/*UpsertMasterOK Upserted master

swagger:response upsertMasterOK
*/
type UpsertMasterOK struct {

	/*
	  In: Body
	*/
	Payload *models.MasterResp `json:"body,omitempty"`
}

// NewUpsertMasterOK creates UpsertMasterOK with default headers values
func NewUpsertMasterOK() *UpsertMasterOK {

	return &UpsertMasterOK{}
}

// WithPayload adds the payload to the upsert master o k response
func (o *UpsertMasterOK) WithPayload(payload *models.MasterResp) *UpsertMasterOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upsert master o k response
func (o *UpsertMasterOK) SetPayload(payload *models.MasterResp) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpsertMasterOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpsertMasterDefault Error

swagger:response upsertMasterDefault
*/
type UpsertMasterDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpsertMasterDefault creates UpsertMasterDefault with default headers values
func NewUpsertMasterDefault(code int) *UpsertMasterDefault {
	if code <= 0 {
		code = 500
	}

	return &UpsertMasterDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the upsert master default response
func (o *UpsertMasterDefault) WithStatusCode(code int) *UpsertMasterDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the upsert master default response
func (o *UpsertMasterDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the upsert master default response
func (o *UpsertMasterDefault) WithPayload(payload *models.Error) *UpsertMasterDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upsert master default response
func (o *UpsertMasterDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpsertMasterDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
