// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIamTokenServiceClient is a mock of IamTokenServiceClient interface.
type MockIamTokenServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockIamTokenServiceClientMockRecorder
}

// MockIamTokenServiceClientMockRecorder is the mock recorder for MockIamTokenServiceClient.
type MockIamTokenServiceClientMockRecorder struct {
	mock *MockIamTokenServiceClient
}

// NewMockIamTokenServiceClient creates a new mock instance.
func NewMockIamTokenServiceClient(ctrl *gomock.Controller) *MockIamTokenServiceClient {
	mock := &MockIamTokenServiceClient{ctrl: ctrl}
	mock.recorder = &MockIamTokenServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIamTokenServiceClient) EXPECT() *MockIamTokenServiceClientMockRecorder {
	return m.recorder
}

// CreateForServiceAccount mocks base method.
func (m *MockIamTokenServiceClient) CreateForServiceAccount(ctx context.Context, serviceAccountID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateForServiceAccount", ctx, serviceAccountID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateForServiceAccount indicates an expected call of CreateForServiceAccount.
func (mr *MockIamTokenServiceClientMockRecorder) CreateForServiceAccount(ctx, serviceAccountID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateForServiceAccount", reflect.TypeOf((*MockIamTokenServiceClient)(nil).CreateForServiceAccount), ctx, serviceAccountID)
}
