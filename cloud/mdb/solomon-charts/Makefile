ENVIRONMENTS=porto_test porto_prod compute_preprod compute_prod gpn_prod

.PHONY: all
all: build

.PHONY: build
build: venv
	@for env in ${ENVIRONMENTS}; do \
	    echo "====================================================="; \
	    echo "Rendering templates for $$env environment"; \
	    echo "====================================================="; \
	    (set -x; venv/bin/python solomon.py render -s ./templates/ -t ./build -e $$env) || exit 1; \
	    echo; \
	done

.PHONY: test
test: build

.PHONY: clean
clean:
	rm -rf build venv

.PHONY: generate_requirements
generate_requirements:
	@rm -rf venv
	python3.6 -m venv venv
	venv/bin/pip install --no-cache-dir --disable-pip-version-check -r requirements.in.txt
	echo "# Generated by make generate_requirements" > requirements.txt
	venv/bin/pip freeze | tee -a requirements.txt

venv:
	python3.6 -m venv venv
	venv/bin/pip install --no-cache-dir --disable-pip-version-check -r requirements.txt

