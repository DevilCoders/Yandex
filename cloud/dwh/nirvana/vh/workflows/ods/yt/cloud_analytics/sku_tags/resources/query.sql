$sku_tags_table = {{ param["raw_sku_tags"]->quote() }};
$skus_table = {{ param["skus"]->quote() }};
$dst_table = {{ input1->table_quote() }};
$not_tagged_skus_table = {{ param["table_for_not_tagged_skus"]->quote() }};

$skus_for_default_tags_input = {{ param["sku_ids_to_create_default_tags"]->quote() }};  -- aka blacklist
$skus_for_default_tags = (Yson::ConvertToStringList(Yson::ParseJson(String::ReplaceAll($skus_for_default_tags_input, "'", '"'))));

$raw_tags = (
    SELECT
        `sku_id`,
        `core_fraction`,
        `core_fraction_number`,
        `cores`,
        `cores_number`,
        `database`,
        `is_committed`,
        `is_sustainable`,
        `mk8s_relevant`,
        `platform`,
        `preemptible`,
        `ram`,
        `ram_number`,
        `sku_lazy`,
    FROM $sku_tags_table
);

$skus = (
    SELECT
        `sku_id`,
        `name`,
        `publisher_account_id`
    FROM $skus_table
);

/* Проверим уникальность разметки */
$tags_count = (
    SELECT COUNT(*)
    FROM (
        SELECT `sku_id`
        FROM $raw_tags
        GROUP BY `sku_id`
        HAVING COUNT(*) > 1
    )
);

DISCARD SELECT ENSURE(NULL, $tags_count == 0, "We have duplicate SKU tags for some SKUs!");

/* Выкинем разметку для несуществующих SKU */
$actual_tags = (
    SELECT a.*
    FROM $raw_tags AS a
    LEFT SEMI JOIN $skus AS b USING (`sku_id`)
);

/* Найдем SKU, для которых нет разметки */
$skus_without_tags = (
    SELECT a.*
    FROM $skus AS a
    LEFT ONLY JOIN $raw_tags AS b  USING (`sku_id`)
);

/* Разделим на тех, у которых есть паблишер и у кого нету */
$skus_without_tags_but_with_publisher = (
    SELECT *
    FROM $skus_without_tags
    WHERE `publisher_account_id` IS NOT NULL
);

$skus_without_tags_and_without_publisher = (
    SELECT *
    FROM $skus_without_tags
    WHERE `publisher_account_id` IS NULL
);

/* Разметим паблишерские SKU */
$autogenerated_sku_tags = (
    SELECT
        `sku_id`       AS `sku_id`,
        "inapplicable" AS `core_fraction`,
        -1             AS `core_fraction_number`,
        "inapplicable" AS `cores`,
        -1             AS `cores_number`,
        "inapplicable" AS `database`,
        0              AS `is_committed`,
        1              AS `is_sustainable`,
        0              AS `mk8s_relevant`,
        "inapplicable" AS `platform`,
        "inapplicable" AS `preemptible`,
        "inapplicable" AS `ram`,
        -1             AS `ram_number`,
        0              AS `sku_lazy`,
    FROM $skus_without_tags_but_with_publisher
);

/* Разделим все SKU без разметки, без паблишеров */
$not_blacklisted_skus = (
    SELECT *
    FROM $skus_without_tags_and_without_publisher
    WHERE `sku_id` NOT IN $skus_for_default_tags
);

$blacklisted_skus = (
    SELECT *
    FROM $skus_without_tags_and_without_publisher
    WHERE `sku_id` IN $skus_for_default_tags
);

/* Сгенерируем дефолтные теги для SKU из блеклиста */
$blacklist_sku_tags = (
    SELECT
        `sku_id`       AS `sku_id`,
        "inapplicable" AS `core_fraction`,
        -1             AS `core_fraction_number`,
        "inapplicable" AS `cores`,
        -1             AS `cores_number`,
        "inapplicable" AS `database`,
        0              AS `is_committed`,
        1              AS `is_sustainable`,
        0              AS `mk8s_relevant`,
        "inapplicable" AS `platform`,
        "inapplicable" AS `preemptible`,
        "inapplicable" AS `ram`,
        -1             AS `ram_number`,
        0              AS `sku_lazy`,
    FROM $blacklisted_skus
);

$result = (
    SELECT * FROM $actual_tags
    UNION ALL
    SELECT * FROM $autogenerated_sku_tags
    UNION ALL
    SELECT * FROM $blacklist_sku_tags
);

INSERT INTO $dst_table WITH TRUNCATE
SELECT * FROM $result
ORDER BY `sku_id`;

INSERT INTO $not_tagged_skus_table WITH TRUNCATE
SELECT * FROM $not_blacklisted_skus;
