// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: yandex/cloud/priv/accessservice/v2/access_service.proto

package accessservice_v2

import (
	_ "a.yandex-team.ru/cloud/iam/accessservice/client/cloud-proto-extensions/v1/go"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BulkAuthorizeRequest_ResultFilter int32

const (
	BulkAuthorizeRequest_RESULT_FILTER_UNSPECIFIED BulkAuthorizeRequest_ResultFilter = 0
	BulkAuthorizeRequest_FIRST_FAILED              BulkAuthorizeRequest_ResultFilter = 1
	BulkAuthorizeRequest_ALL_FAILED                BulkAuthorizeRequest_ResultFilter = 2
)

// Enum value maps for BulkAuthorizeRequest_ResultFilter.
var (
	BulkAuthorizeRequest_ResultFilter_name = map[int32]string{
		0: "RESULT_FILTER_UNSPECIFIED",
		1: "FIRST_FAILED",
		2: "ALL_FAILED",
	}
	BulkAuthorizeRequest_ResultFilter_value = map[string]int32{
		"RESULT_FILTER_UNSPECIFIED": 0,
		"FIRST_FAILED":              1,
		"ALL_FAILED":                2,
	}
)

func (x BulkAuthorizeRequest_ResultFilter) Enum() *BulkAuthorizeRequest_ResultFilter {
	p := new(BulkAuthorizeRequest_ResultFilter)
	*p = x
	return p
}

func (x BulkAuthorizeRequest_ResultFilter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BulkAuthorizeRequest_ResultFilter) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_enumTypes[0].Descriptor()
}

func (BulkAuthorizeRequest_ResultFilter) Type() protoreflect.EnumType {
	return &file_yandex_cloud_priv_accessservice_v2_access_service_proto_enumTypes[0]
}

func (x BulkAuthorizeRequest_ResultFilter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BulkAuthorizeRequest_ResultFilter.Descriptor instead.
func (BulkAuthorizeRequest_ResultFilter) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{4, 0}
}

type AccessKeySignature_Version2Parameters_SignatureMethod int32

const (
	AccessKeySignature_Version2Parameters_SIGNATURE_METHOD_UNSPECIFIED AccessKeySignature_Version2Parameters_SignatureMethod = 0
	AccessKeySignature_Version2Parameters_HMAC_SHA1                    AccessKeySignature_Version2Parameters_SignatureMethod = 1
	AccessKeySignature_Version2Parameters_HMAC_SHA256                  AccessKeySignature_Version2Parameters_SignatureMethod = 2
)

// Enum value maps for AccessKeySignature_Version2Parameters_SignatureMethod.
var (
	AccessKeySignature_Version2Parameters_SignatureMethod_name = map[int32]string{
		0: "SIGNATURE_METHOD_UNSPECIFIED",
		1: "HMAC_SHA1",
		2: "HMAC_SHA256",
	}
	AccessKeySignature_Version2Parameters_SignatureMethod_value = map[string]int32{
		"SIGNATURE_METHOD_UNSPECIFIED": 0,
		"HMAC_SHA1":                    1,
		"HMAC_SHA256":                  2,
	}
)

func (x AccessKeySignature_Version2Parameters_SignatureMethod) Enum() *AccessKeySignature_Version2Parameters_SignatureMethod {
	p := new(AccessKeySignature_Version2Parameters_SignatureMethod)
	*p = x
	return p
}

func (x AccessKeySignature_Version2Parameters_SignatureMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessKeySignature_Version2Parameters_SignatureMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_enumTypes[1].Descriptor()
}

func (AccessKeySignature_Version2Parameters_SignatureMethod) Type() protoreflect.EnumType {
	return &file_yandex_cloud_priv_accessservice_v2_access_service_proto_enumTypes[1]
}

func (x AccessKeySignature_Version2Parameters_SignatureMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessKeySignature_Version2Parameters_SignatureMethod.Descriptor instead.
func (AccessKeySignature_Version2Parameters_SignatureMethod) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{6, 0, 0}
}

type AuthenticateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Credentials:
	//	*AuthenticateRequest_IamToken
	//	*AuthenticateRequest_Signature
	//	*AuthenticateRequest_ApiKey
	//	*AuthenticateRequest_IamCookie
	Credentials isAuthenticateRequest_Credentials `protobuf_oneof:"credentials"`
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{0}
}

func (m *AuthenticateRequest) GetCredentials() isAuthenticateRequest_Credentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (x *AuthenticateRequest) GetIamToken() string {
	if x, ok := x.GetCredentials().(*AuthenticateRequest_IamToken); ok {
		return x.IamToken
	}
	return ""
}

func (x *AuthenticateRequest) GetSignature() *AccessKeySignature {
	if x, ok := x.GetCredentials().(*AuthenticateRequest_Signature); ok {
		return x.Signature
	}
	return nil
}

func (x *AuthenticateRequest) GetApiKey() string {
	if x, ok := x.GetCredentials().(*AuthenticateRequest_ApiKey); ok {
		return x.ApiKey
	}
	return ""
}

func (x *AuthenticateRequest) GetIamCookie() string {
	if x, ok := x.GetCredentials().(*AuthenticateRequest_IamCookie); ok {
		return x.IamCookie
	}
	return ""
}

type isAuthenticateRequest_Credentials interface {
	isAuthenticateRequest_Credentials()
}

type AuthenticateRequest_IamToken struct {
	// IAM-token obtained from the IAM Token Service.
	// The server response for an empty IAM token is UNAUTHENTICATED
	IamToken string `protobuf:"bytes,1,opt,name=iam_token,json=iamToken,proto3,oneof"` // [(length) = "<=1024"];
}

type AuthenticateRequest_Signature struct {
	// AWS-compatible signature.
	Signature *AccessKeySignature `protobuf:"bytes,2,opt,name=signature,proto3,oneof"`
}

type AuthenticateRequest_ApiKey struct {
	// API key.
	// The server response for an empty API key is UNAUTHENTICATED
	ApiKey string `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3,oneof"`
}

type AuthenticateRequest_IamCookie struct {
	// IAM-cookie.
	// The server response for an empty IAM cookie is UNAUTHENTICATED
	IamCookie string `protobuf:"bytes,4,opt,name=iam_cookie,json=iamCookie,proto3,oneof"`
}

func (*AuthenticateRequest_IamToken) isAuthenticateRequest_Credentials() {}

func (*AuthenticateRequest_Signature) isAuthenticateRequest_Credentials() {}

func (*AuthenticateRequest_ApiKey) isAuthenticateRequest_Credentials() {}

func (*AuthenticateRequest_IamCookie) isAuthenticateRequest_Credentials() {}

type AuthenticateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject *Subject `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *AuthenticateResponse) Reset() {
	*x = AuthenticateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse) ProtoMessage() {}

func (x *AuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{1}
}

func (x *AuthenticateResponse) GetSubject() *Subject {
	if x != nil {
		return x.Subject
	}
	return nil
}

type AuthorizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Identity:
	//	*AuthorizeRequest_Subject
	//	*AuthorizeRequest_IamToken
	//	*AuthorizeRequest_Signature
	//	*AuthorizeRequest_ApiKey
	Identity   isAuthorizeRequest_Identity `protobuf_oneof:"identity"`
	Permission string                      `protobuf:"bytes,4,opt,name=permission,proto3" json:"permission,omitempty"` // [(required) = true, (length) = "<=128"];
	// A resource to authorize access to. This may also include a service-specific hierarchy of the resource, usually
	// ends with resource-manager.folder.
	//
	// Examples:
	//     (resource-manager.folder, b1gn3enigctah04o0fkb)
	//     (billing.account, b1gqql62454n46tboesn)
	//     (compute.instance, b1gqqhvc4fg65mkrefs8), (resource-manager.folder, b1gn3enigctah04o0fkb)
	//     (resource-manager.cloud, aje56o8prppkrpaiuoc6)
	//     (my-service.instance, b1gqqepv0upu57issrog), (resource-manager.cloud, aje56o8prppkrpaiuoc6)
	ResourcePath []*Resource `protobuf:"bytes,5,rep,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"` // [(size) = ">0"];
}

func (x *AuthorizeRequest) Reset() {
	*x = AuthorizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRequest) ProtoMessage() {}

func (x *AuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{2}
}

func (m *AuthorizeRequest) GetIdentity() isAuthorizeRequest_Identity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (x *AuthorizeRequest) GetSubject() *Subject {
	if x, ok := x.GetIdentity().(*AuthorizeRequest_Subject); ok {
		return x.Subject
	}
	return nil
}

func (x *AuthorizeRequest) GetIamToken() string {
	if x, ok := x.GetIdentity().(*AuthorizeRequest_IamToken); ok {
		return x.IamToken
	}
	return ""
}

func (x *AuthorizeRequest) GetSignature() *AccessKeySignature {
	if x, ok := x.GetIdentity().(*AuthorizeRequest_Signature); ok {
		return x.Signature
	}
	return nil
}

func (x *AuthorizeRequest) GetApiKey() string {
	if x, ok := x.GetIdentity().(*AuthorizeRequest_ApiKey); ok {
		return x.ApiKey
	}
	return ""
}

func (x *AuthorizeRequest) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *AuthorizeRequest) GetResourcePath() []*Resource {
	if x != nil {
		return x.ResourcePath
	}
	return nil
}

type isAuthorizeRequest_Identity interface {
	isAuthorizeRequest_Identity()
}

type AuthorizeRequest_Subject struct {
	Subject *Subject `protobuf:"bytes,1,opt,name=subject,proto3,oneof"`
}

type AuthorizeRequest_IamToken struct {
	// IAM-token obtained from the IAM Token Service.
	// The server response for an empty IAM token is UNAUTHENTICATED
	IamToken string `protobuf:"bytes,2,opt,name=iam_token,json=iamToken,proto3,oneof"` // [(length) = "<=1024"];
}

type AuthorizeRequest_Signature struct {
	// AWS-compatible signature.
	Signature *AccessKeySignature `protobuf:"bytes,3,opt,name=signature,proto3,oneof"`
}

type AuthorizeRequest_ApiKey struct {
	// API key.
	// The server response for an empty API key is UNAUTHENTICATED
	ApiKey string `protobuf:"bytes,6,opt,name=api_key,json=apiKey,proto3,oneof"`
}

func (*AuthorizeRequest_Subject) isAuthorizeRequest_Identity() {}

func (*AuthorizeRequest_IamToken) isAuthorizeRequest_Identity() {}

func (*AuthorizeRequest_Signature) isAuthorizeRequest_Identity() {}

func (*AuthorizeRequest_ApiKey) isAuthorizeRequest_Identity() {}

type AuthorizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject *Subject `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	// Full path to the resource.
	ResourcePath []*Resource `protobuf:"bytes,2,rep,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
}

func (x *AuthorizeResponse) Reset() {
	*x = AuthorizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeResponse) ProtoMessage() {}

func (x *AuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeResponse.ProtoReflect.Descriptor instead.
func (*AuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{3}
}

func (x *AuthorizeResponse) GetSubject() *Subject {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *AuthorizeResponse) GetResourcePath() []*Resource {
	if x != nil {
		return x.ResourcePath
	}
	return nil
}

type BulkAuthorizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Identity:
	//	*BulkAuthorizeRequest_Subject
	//	*BulkAuthorizeRequest_IamToken
	//	*BulkAuthorizeRequest_Signature
	//	*BulkAuthorizeRequest_ApiKey
	Identity isBulkAuthorizeRequest_Identity `protobuf_oneof:"identity"`
	// Types that are assignable to Authorizations:
	//	*BulkAuthorizeRequest_Actions_
	//	*BulkAuthorizeRequest_ActionMatrix_
	Authorizations isBulkAuthorizeRequest_Authorizations `protobuf_oneof:"authorizations"`
	ResultFilter   BulkAuthorizeRequest_ResultFilter     `protobuf:"varint,7,opt,name=result_filter,json=resultFilter,proto3,enum=yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest_ResultFilter" json:"result_filter,omitempty"`
	ResultMask     *fieldmaskpb.FieldMask                `protobuf:"bytes,8,opt,name=result_mask,json=resultMask,proto3" json:"result_mask,omitempty"`
}

func (x *BulkAuthorizeRequest) Reset() {
	*x = BulkAuthorizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAuthorizeRequest) ProtoMessage() {}

func (x *BulkAuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAuthorizeRequest.ProtoReflect.Descriptor instead.
func (*BulkAuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{4}
}

func (m *BulkAuthorizeRequest) GetIdentity() isBulkAuthorizeRequest_Identity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (x *BulkAuthorizeRequest) GetSubject() *Subject {
	if x, ok := x.GetIdentity().(*BulkAuthorizeRequest_Subject); ok {
		return x.Subject
	}
	return nil
}

func (x *BulkAuthorizeRequest) GetIamToken() string {
	if x, ok := x.GetIdentity().(*BulkAuthorizeRequest_IamToken); ok {
		return x.IamToken
	}
	return ""
}

func (x *BulkAuthorizeRequest) GetSignature() *AccessKeySignature {
	if x, ok := x.GetIdentity().(*BulkAuthorizeRequest_Signature); ok {
		return x.Signature
	}
	return nil
}

func (x *BulkAuthorizeRequest) GetApiKey() string {
	if x, ok := x.GetIdentity().(*BulkAuthorizeRequest_ApiKey); ok {
		return x.ApiKey
	}
	return ""
}

func (m *BulkAuthorizeRequest) GetAuthorizations() isBulkAuthorizeRequest_Authorizations {
	if m != nil {
		return m.Authorizations
	}
	return nil
}

func (x *BulkAuthorizeRequest) GetActions() *BulkAuthorizeRequest_Actions {
	if x, ok := x.GetAuthorizations().(*BulkAuthorizeRequest_Actions_); ok {
		return x.Actions
	}
	return nil
}

func (x *BulkAuthorizeRequest) GetActionMatrix() *BulkAuthorizeRequest_ActionMatrix {
	if x, ok := x.GetAuthorizations().(*BulkAuthorizeRequest_ActionMatrix_); ok {
		return x.ActionMatrix
	}
	return nil
}

func (x *BulkAuthorizeRequest) GetResultFilter() BulkAuthorizeRequest_ResultFilter {
	if x != nil {
		return x.ResultFilter
	}
	return BulkAuthorizeRequest_RESULT_FILTER_UNSPECIFIED
}

func (x *BulkAuthorizeRequest) GetResultMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ResultMask
	}
	return nil
}

type isBulkAuthorizeRequest_Identity interface {
	isBulkAuthorizeRequest_Identity()
}

type BulkAuthorizeRequest_Subject struct {
	Subject *Subject `protobuf:"bytes,1,opt,name=subject,proto3,oneof"`
}

type BulkAuthorizeRequest_IamToken struct {
	IamToken string `protobuf:"bytes,2,opt,name=iam_token,json=iamToken,proto3,oneof"` // [(length) = "<=1024"];
}

type BulkAuthorizeRequest_Signature struct {
	Signature *AccessKeySignature `protobuf:"bytes,3,opt,name=signature,proto3,oneof"`
}

type BulkAuthorizeRequest_ApiKey struct {
	ApiKey string `protobuf:"bytes,4,opt,name=api_key,json=apiKey,proto3,oneof"`
}

func (*BulkAuthorizeRequest_Subject) isBulkAuthorizeRequest_Identity() {}

func (*BulkAuthorizeRequest_IamToken) isBulkAuthorizeRequest_Identity() {}

func (*BulkAuthorizeRequest_Signature) isBulkAuthorizeRequest_Identity() {}

func (*BulkAuthorizeRequest_ApiKey) isBulkAuthorizeRequest_Identity() {}

type isBulkAuthorizeRequest_Authorizations interface {
	isBulkAuthorizeRequest_Authorizations()
}

type BulkAuthorizeRequest_Actions_ struct {
	Actions *BulkAuthorizeRequest_Actions `protobuf:"bytes,5,opt,name=actions,proto3,oneof"`
}

type BulkAuthorizeRequest_ActionMatrix_ struct {
	ActionMatrix *BulkAuthorizeRequest_ActionMatrix `protobuf:"bytes,6,opt,name=action_matrix,json=actionMatrix,proto3,oneof"`
}

func (*BulkAuthorizeRequest_Actions_) isBulkAuthorizeRequest_Authorizations() {}

func (*BulkAuthorizeRequest_ActionMatrix_) isBulkAuthorizeRequest_Authorizations() {}

type BulkAuthorizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject              *Subject                       `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	UnauthenticatedError *BulkAuthorizeResponse_Error   `protobuf:"bytes,2,opt,name=unauthenticated_error,json=unauthenticatedError,proto3" json:"unauthenticated_error,omitempty"`
	Results              *BulkAuthorizeResponse_Results `protobuf:"bytes,3,opt,name=results,proto3" json:"results,omitempty"`
}

func (x *BulkAuthorizeResponse) Reset() {
	*x = BulkAuthorizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAuthorizeResponse) ProtoMessage() {}

func (x *BulkAuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAuthorizeResponse.ProtoReflect.Descriptor instead.
func (*BulkAuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{5}
}

func (x *BulkAuthorizeResponse) GetSubject() *Subject {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *BulkAuthorizeResponse) GetUnauthenticatedError() *BulkAuthorizeResponse_Error {
	if x != nil {
		return x.UnauthenticatedError
	}
	return nil
}

func (x *BulkAuthorizeResponse) GetResults() *BulkAuthorizeResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type AccessKeySignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKeyId  string `protobuf:"bytes,1,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`    // [(required) = true, (length) = "<=50"];
	StringToSign string `protobuf:"bytes,2,opt,name=string_to_sign,json=stringToSign,proto3" json:"string_to_sign,omitempty"` // [(required) = true, (length) = "<=8192"];
	Signature    string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`                             // [(required) = true, (length) = "<=128"];
	// Types that are assignable to Parameters:
	//	*AccessKeySignature_V2Parameters
	//	*AccessKeySignature_V4Parameters
	Parameters isAccessKeySignature_Parameters `protobuf_oneof:"parameters"`
}

func (x *AccessKeySignature) Reset() {
	*x = AccessKeySignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessKeySignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessKeySignature) ProtoMessage() {}

func (x *AccessKeySignature) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessKeySignature.ProtoReflect.Descriptor instead.
func (*AccessKeySignature) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{6}
}

func (x *AccessKeySignature) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *AccessKeySignature) GetStringToSign() string {
	if x != nil {
		return x.StringToSign
	}
	return ""
}

func (x *AccessKeySignature) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (m *AccessKeySignature) GetParameters() isAccessKeySignature_Parameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (x *AccessKeySignature) GetV2Parameters() *AccessKeySignature_Version2Parameters {
	if x, ok := x.GetParameters().(*AccessKeySignature_V2Parameters); ok {
		return x.V2Parameters
	}
	return nil
}

func (x *AccessKeySignature) GetV4Parameters() *AccessKeySignature_Version4Parameters {
	if x, ok := x.GetParameters().(*AccessKeySignature_V4Parameters); ok {
		return x.V4Parameters
	}
	return nil
}

type isAccessKeySignature_Parameters interface {
	isAccessKeySignature_Parameters()
}

type AccessKeySignature_V2Parameters struct {
	V2Parameters *AccessKeySignature_Version2Parameters `protobuf:"bytes,4,opt,name=v2_parameters,json=v2Parameters,proto3,oneof"`
}

type AccessKeySignature_V4Parameters struct {
	V4Parameters *AccessKeySignature_Version4Parameters `protobuf:"bytes,5,opt,name=v4_parameters,json=v4Parameters,proto3,oneof"`
}

func (*AccessKeySignature_V2Parameters) isAccessKeySignature_Parameters() {}

func (*AccessKeySignature_V4Parameters) isAccessKeySignature_Parameters() {}

type Subject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Subject_UserAccount_
	//	*Subject_ServiceAccount_
	//	*Subject_AnonymousAccount_
	Type isSubject_Type `protobuf_oneof:"type"`
}

func (x *Subject) Reset() {
	*x = Subject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subject) ProtoMessage() {}

func (x *Subject) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subject.ProtoReflect.Descriptor instead.
func (*Subject) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{7}
}

func (m *Subject) GetType() isSubject_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Subject) GetUserAccount() *Subject_UserAccount {
	if x, ok := x.GetType().(*Subject_UserAccount_); ok {
		return x.UserAccount
	}
	return nil
}

func (x *Subject) GetServiceAccount() *Subject_ServiceAccount {
	if x, ok := x.GetType().(*Subject_ServiceAccount_); ok {
		return x.ServiceAccount
	}
	return nil
}

func (x *Subject) GetAnonymousAccount() *Subject_AnonymousAccount {
	if x, ok := x.GetType().(*Subject_AnonymousAccount_); ok {
		return x.AnonymousAccount
	}
	return nil
}

type isSubject_Type interface {
	isSubject_Type()
}

type Subject_UserAccount_ struct {
	UserAccount *Subject_UserAccount `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3,oneof"`
}

type Subject_ServiceAccount_ struct {
	ServiceAccount *Subject_ServiceAccount `protobuf:"bytes,2,opt,name=service_account,json=serviceAccount,proto3,oneof"`
}

type Subject_AnonymousAccount_ struct {
	AnonymousAccount *Subject_AnonymousAccount `protobuf:"bytes,3,opt,name=anonymous_account,json=anonymousAccount,proto3,oneof"`
}

func (*Subject_UserAccount_) isSubject_Type() {}

func (*Subject_ServiceAccount_) isSubject_Type() {}

func (*Subject_AnonymousAccount_) isSubject_Type() {}

type BulkAuthorizeRequest_Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourcePath []*Resource `protobuf:"bytes,1,rep,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"` // [(size) = "1-128"];
	Permission   string      `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`                         // [(required) = true, (length) = "<=128"];
}

func (x *BulkAuthorizeRequest_Action) Reset() {
	*x = BulkAuthorizeRequest_Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAuthorizeRequest_Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAuthorizeRequest_Action) ProtoMessage() {}

func (x *BulkAuthorizeRequest_Action) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAuthorizeRequest_Action.ProtoReflect.Descriptor instead.
func (*BulkAuthorizeRequest_Action) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{4, 0}
}

func (x *BulkAuthorizeRequest_Action) GetResourcePath() []*Resource {
	if x != nil {
		return x.ResourcePath
	}
	return nil
}

func (x *BulkAuthorizeRequest_Action) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type BulkAuthorizeRequest_Actions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*BulkAuthorizeRequest_Action `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // [(size) = "1-1000"];
}

func (x *BulkAuthorizeRequest_Actions) Reset() {
	*x = BulkAuthorizeRequest_Actions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAuthorizeRequest_Actions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAuthorizeRequest_Actions) ProtoMessage() {}

func (x *BulkAuthorizeRequest_Actions) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAuthorizeRequest_Actions.ProtoReflect.Descriptor instead.
func (*BulkAuthorizeRequest_Actions) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{4, 1}
}

func (x *BulkAuthorizeRequest_Actions) GetItems() []*BulkAuthorizeRequest_Action {
	if x != nil {
		return x.Items
	}
	return nil
}

// Cross product of paths and permissions (represents N*M actions, N*M <= 1000).
type BulkAuthorizeRequest_ActionMatrix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourcePaths []*ResourcePath `protobuf:"bytes,2,rep,name=resource_paths,json=resourcePaths,proto3" json:"resource_paths,omitempty"` // [(size) = "1-1000"];
	Permissions   []string        `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`                          // [(size) = "1-1000", (length) = "<=128"];
}

func (x *BulkAuthorizeRequest_ActionMatrix) Reset() {
	*x = BulkAuthorizeRequest_ActionMatrix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAuthorizeRequest_ActionMatrix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAuthorizeRequest_ActionMatrix) ProtoMessage() {}

func (x *BulkAuthorizeRequest_ActionMatrix) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAuthorizeRequest_ActionMatrix.ProtoReflect.Descriptor instead.
func (*BulkAuthorizeRequest_ActionMatrix) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{4, 2}
}

func (x *BulkAuthorizeRequest_ActionMatrix) GetResourcePaths() []*ResourcePath {
	if x != nil {
		return x.ResourcePaths
	}
	return nil
}

func (x *BulkAuthorizeRequest_ActionMatrix) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type BulkAuthorizeResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*BulkAuthorizeResponse_Result `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BulkAuthorizeResponse_Results) Reset() {
	*x = BulkAuthorizeResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAuthorizeResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAuthorizeResponse_Results) ProtoMessage() {}

func (x *BulkAuthorizeResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAuthorizeResponse_Results.ProtoReflect.Descriptor instead.
func (*BulkAuthorizeResponse_Results) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{5, 0}
}

func (x *BulkAuthorizeResponse_Results) GetItems() []*BulkAuthorizeResponse_Result {
	if x != nil {
		return x.Items
	}
	return nil
}

type BulkAuthorizeResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permission            string                       `protobuf:"bytes,1,opt,name=permission,proto3" json:"permission,omitempty"`
	ResourcePath          []*Resource                  `protobuf:"bytes,2,rep,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
	PermissionDeniedError *BulkAuthorizeResponse_Error `protobuf:"bytes,3,opt,name=permission_denied_error,json=permissionDeniedError,proto3" json:"permission_denied_error,omitempty"`
}

func (x *BulkAuthorizeResponse_Result) Reset() {
	*x = BulkAuthorizeResponse_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAuthorizeResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAuthorizeResponse_Result) ProtoMessage() {}

func (x *BulkAuthorizeResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAuthorizeResponse_Result.ProtoReflect.Descriptor instead.
func (*BulkAuthorizeResponse_Result) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{5, 1}
}

func (x *BulkAuthorizeResponse_Result) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *BulkAuthorizeResponse_Result) GetResourcePath() []*Resource {
	if x != nil {
		return x.ResourcePath
	}
	return nil
}

func (x *BulkAuthorizeResponse_Result) GetPermissionDeniedError() *BulkAuthorizeResponse_Error {
	if x != nil {
		return x.PermissionDeniedError
	}
	return nil
}

type BulkAuthorizeResponse_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string       `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Details []*anypb.Any `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *BulkAuthorizeResponse_Error) Reset() {
	*x = BulkAuthorizeResponse_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAuthorizeResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAuthorizeResponse_Error) ProtoMessage() {}

func (x *BulkAuthorizeResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAuthorizeResponse_Error.ProtoReflect.Descriptor instead.
func (*BulkAuthorizeResponse_Error) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{5, 2}
}

func (x *BulkAuthorizeResponse_Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BulkAuthorizeResponse_Error) GetDetails() []*anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

type AccessKeySignature_Version2Parameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignatureMethod AccessKeySignature_Version2Parameters_SignatureMethod `protobuf:"varint,1,opt,name=signature_method,json=signatureMethod,proto3,enum=yandex.cloud.priv.accessservice.v2.AccessKeySignature_Version2Parameters_SignatureMethod" json:"signature_method,omitempty"`
}

func (x *AccessKeySignature_Version2Parameters) Reset() {
	*x = AccessKeySignature_Version2Parameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessKeySignature_Version2Parameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessKeySignature_Version2Parameters) ProtoMessage() {}

func (x *AccessKeySignature_Version2Parameters) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessKeySignature_Version2Parameters.ProtoReflect.Descriptor instead.
func (*AccessKeySignature_Version2Parameters) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{6, 0}
}

func (x *AccessKeySignature_Version2Parameters) GetSignatureMethod() AccessKeySignature_Version2Parameters_SignatureMethod {
	if x != nil {
		return x.SignatureMethod
	}
	return AccessKeySignature_Version2Parameters_SIGNATURE_METHOD_UNSPECIFIED
}

type AccessKeySignature_Version4Parameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=signed_at,json=signedAt,proto3" json:"signed_at,omitempty"` // [(required) = true];
	Service  string                 `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`                   // [(required) = true, (length) = "<=64"];
	Region   string                 `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`                     // [(required) = true, (length) = "<=32"];
}

func (x *AccessKeySignature_Version4Parameters) Reset() {
	*x = AccessKeySignature_Version4Parameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessKeySignature_Version4Parameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessKeySignature_Version4Parameters) ProtoMessage() {}

func (x *AccessKeySignature_Version4Parameters) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessKeySignature_Version4Parameters.ProtoReflect.Descriptor instead.
func (*AccessKeySignature_Version4Parameters) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{6, 1}
}

func (x *AccessKeySignature_Version4Parameters) GetSignedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SignedAt
	}
	return nil
}

func (x *AccessKeySignature_Version4Parameters) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *AccessKeySignature_Version4Parameters) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type Subject_UserAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // [(required) = true, (length) = "<=50"];
	FederationId string `protobuf:"bytes,2,opt,name=federation_id,json=federationId,proto3" json:"federation_id,omitempty"` // [(length) = "<=50"];
}

func (x *Subject_UserAccount) Reset() {
	*x = Subject_UserAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subject_UserAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subject_UserAccount) ProtoMessage() {}

func (x *Subject_UserAccount) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subject_UserAccount.ProtoReflect.Descriptor instead.
func (*Subject_UserAccount) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Subject_UserAccount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Subject_UserAccount) GetFederationId() string {
	if x != nil {
		return x.FederationId
	}
	return ""
}

type Subject_ServiceAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                             // [(required) = true, (length) = "<=50"];
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"` // [(length) = "<=50"];
}

func (x *Subject_ServiceAccount) Reset() {
	*x = Subject_ServiceAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subject_ServiceAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subject_ServiceAccount) ProtoMessage() {}

func (x *Subject_ServiceAccount) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subject_ServiceAccount.ProtoReflect.Descriptor instead.
func (*Subject_ServiceAccount) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{7, 1}
}

func (x *Subject_ServiceAccount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Subject_ServiceAccount) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

// Use this if you want to check if an unauthenticated subject is allowed to access a resource.
type Subject_AnonymousAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Subject_AnonymousAccount) Reset() {
	*x = Subject_AnonymousAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subject_AnonymousAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subject_AnonymousAccount) ProtoMessage() {}

func (x *Subject_AnonymousAccount) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subject_AnonymousAccount.ProtoReflect.Descriptor instead.
func (*Subject_AnonymousAccount) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP(), []int{7, 2}
}

var File_yandex_cloud_priv_accessservice_v2_access_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDesc = []byte{
	0x0a, 0x37, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x32, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x01, 0x0a,
	0x13, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x69, 0x61, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xc8, 0x80, 0x36, 0x01, 0xd0, 0x80, 0x36,
	0x02, 0x48, 0x00, 0x52, 0x08, 0x69, 0x61, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x56, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xc8, 0x80, 0x36, 0x01, 0xd0, 0x80, 0x36, 0x01,
	0x48, 0x00, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x0a, 0x69, 0x61,
	0x6d, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xc8, 0x80, 0x36, 0x01, 0xd0, 0x80, 0x36, 0x05, 0x48, 0x00, 0x52, 0x09, 0x69, 0x61, 0x6d, 0x43,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x22, 0x5d, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x22, 0x80, 0x03, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x27, 0x0a, 0x09, 0x69, 0x61, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xc8, 0x80, 0x36, 0x01, 0xd0, 0x80, 0x36, 0x02, 0x48, 0x00,
	0x52, 0x08, 0x69, 0x61, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x56, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xc8, 0x80, 0x36, 0x01, 0xd0, 0x80, 0x36, 0x01, 0x48, 0x00, 0x52,
	0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x42, 0x0a, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xad, 0x01, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x51, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0xd4, 0x08, 0x0a, 0x14, 0x42, 0x75, 0x6c, 0x6b, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x47, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x69, 0x61, 0x6d, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xc8, 0x80, 0x36,
	0x01, 0xd0, 0x80, 0x36, 0x02, 0x48, 0x00, 0x52, 0x08, 0x69, 0x61, 0x6d, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x56, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x61, 0x70, 0x69,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xc8, 0x80, 0x36, 0x01,
	0xd0, 0x80, 0x36, 0x01, 0x48, 0x00, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x5c,
	0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x40, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x48, 0x01, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x6c, 0x0a, 0x0d,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x48, 0x01, 0x52, 0x0c, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0x6a, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x45, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d,
	0x61, 0x73, 0x6b, 0x1a, 0x7b, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x1a, 0x60, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x55, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e,
	0x42, 0x75, 0x6c, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x1a, 0x89, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74,
	0x72, 0x69, 0x78, 0x12, 0x57, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0d, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4f,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x19, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x41, 0x4c, 0x4c, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x42,
	0x0a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x10, 0x0a, 0x0e, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xde, 0x05,
	0x0a, 0x15, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x74,
	0x0a, 0x15, 0x75, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x14,
	0x75, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x5b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x1a, 0x61, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x56, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0xf4, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x51, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x77, 0x0a, 0x17, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x15, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x51, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xec,
	0x05, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x12,
	0x26, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xc8, 0x80, 0x36, 0x01, 0xd0, 0x80, 0x36, 0x01, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x70, 0x0a, 0x0d, 0x76, 0x32, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x76, 0x32, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x70, 0x0a, 0x0d, 0x76, 0x34, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x49, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x34, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x76,
	0x34, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xf0, 0x01, 0x0a, 0x12,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x53, 0x0a, 0x0f, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x1c,
	0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x53, 0x48, 0x41, 0x31, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x10, 0x02, 0x1a, 0x7f,
	0x0a, 0x12, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x34, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42,
	0x0c, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0xda, 0x03,
	0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x5c, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x65, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6b,
	0x0a, 0x11, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x61, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x42, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a,
	0x3d, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x12,
	0x0a, 0x10, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x32, 0x94, 0x03, 0x0a, 0x0d, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x81, 0x01, 0x0a,
	0x0c, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x37, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x78, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x34, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x0d, 0x42,
	0x75, 0x6c, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x38, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x32, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x75, 0x6c, 0x6b,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x17, 0x42, 0x03, 0x50, 0x41, 0x53, 0x5a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescData = file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDesc
)

func file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescData)
	})
	return file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDescData
}

var file_yandex_cloud_priv_accessservice_v2_access_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_yandex_cloud_priv_accessservice_v2_access_service_proto_goTypes = []interface{}{
	(BulkAuthorizeRequest_ResultFilter)(0),                     // 0: yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.ResultFilter
	(AccessKeySignature_Version2Parameters_SignatureMethod)(0), // 1: yandex.cloud.priv.accessservice.v2.AccessKeySignature.Version2Parameters.SignatureMethod
	(*AuthenticateRequest)(nil),                                // 2: yandex.cloud.priv.accessservice.v2.AuthenticateRequest
	(*AuthenticateResponse)(nil),                               // 3: yandex.cloud.priv.accessservice.v2.AuthenticateResponse
	(*AuthorizeRequest)(nil),                                   // 4: yandex.cloud.priv.accessservice.v2.AuthorizeRequest
	(*AuthorizeResponse)(nil),                                  // 5: yandex.cloud.priv.accessservice.v2.AuthorizeResponse
	(*BulkAuthorizeRequest)(nil),                               // 6: yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest
	(*BulkAuthorizeResponse)(nil),                              // 7: yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse
	(*AccessKeySignature)(nil),                                 // 8: yandex.cloud.priv.accessservice.v2.AccessKeySignature
	(*Subject)(nil),                                            // 9: yandex.cloud.priv.accessservice.v2.Subject
	(*BulkAuthorizeRequest_Action)(nil),                        // 10: yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.Action
	(*BulkAuthorizeRequest_Actions)(nil),                       // 11: yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.Actions
	(*BulkAuthorizeRequest_ActionMatrix)(nil),                  // 12: yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.ActionMatrix
	(*BulkAuthorizeResponse_Results)(nil),                      // 13: yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse.Results
	(*BulkAuthorizeResponse_Result)(nil),                       // 14: yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse.Result
	(*BulkAuthorizeResponse_Error)(nil),                        // 15: yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse.Error
	(*AccessKeySignature_Version2Parameters)(nil),              // 16: yandex.cloud.priv.accessservice.v2.AccessKeySignature.Version2Parameters
	(*AccessKeySignature_Version4Parameters)(nil),              // 17: yandex.cloud.priv.accessservice.v2.AccessKeySignature.Version4Parameters
	(*Subject_UserAccount)(nil),                                // 18: yandex.cloud.priv.accessservice.v2.Subject.UserAccount
	(*Subject_ServiceAccount)(nil),                             // 19: yandex.cloud.priv.accessservice.v2.Subject.ServiceAccount
	(*Subject_AnonymousAccount)(nil),                           // 20: yandex.cloud.priv.accessservice.v2.Subject.AnonymousAccount
	(*Resource)(nil),                                           // 21: yandex.cloud.priv.accessservice.v2.Resource
	(*fieldmaskpb.FieldMask)(nil),                              // 22: google.protobuf.FieldMask
	(*ResourcePath)(nil),                                       // 23: yandex.cloud.priv.accessservice.v2.ResourcePath
	(*anypb.Any)(nil),                                          // 24: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),                              // 25: google.protobuf.Timestamp
}
var file_yandex_cloud_priv_accessservice_v2_access_service_proto_depIdxs = []int32{
	8,  // 0: yandex.cloud.priv.accessservice.v2.AuthenticateRequest.signature:type_name -> yandex.cloud.priv.accessservice.v2.AccessKeySignature
	9,  // 1: yandex.cloud.priv.accessservice.v2.AuthenticateResponse.subject:type_name -> yandex.cloud.priv.accessservice.v2.Subject
	9,  // 2: yandex.cloud.priv.accessservice.v2.AuthorizeRequest.subject:type_name -> yandex.cloud.priv.accessservice.v2.Subject
	8,  // 3: yandex.cloud.priv.accessservice.v2.AuthorizeRequest.signature:type_name -> yandex.cloud.priv.accessservice.v2.AccessKeySignature
	21, // 4: yandex.cloud.priv.accessservice.v2.AuthorizeRequest.resource_path:type_name -> yandex.cloud.priv.accessservice.v2.Resource
	9,  // 5: yandex.cloud.priv.accessservice.v2.AuthorizeResponse.subject:type_name -> yandex.cloud.priv.accessservice.v2.Subject
	21, // 6: yandex.cloud.priv.accessservice.v2.AuthorizeResponse.resource_path:type_name -> yandex.cloud.priv.accessservice.v2.Resource
	9,  // 7: yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.subject:type_name -> yandex.cloud.priv.accessservice.v2.Subject
	8,  // 8: yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.signature:type_name -> yandex.cloud.priv.accessservice.v2.AccessKeySignature
	11, // 9: yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.actions:type_name -> yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.Actions
	12, // 10: yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.action_matrix:type_name -> yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.ActionMatrix
	0,  // 11: yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.result_filter:type_name -> yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.ResultFilter
	22, // 12: yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.result_mask:type_name -> google.protobuf.FieldMask
	9,  // 13: yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse.subject:type_name -> yandex.cloud.priv.accessservice.v2.Subject
	15, // 14: yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse.unauthenticated_error:type_name -> yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse.Error
	13, // 15: yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse.results:type_name -> yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse.Results
	16, // 16: yandex.cloud.priv.accessservice.v2.AccessKeySignature.v2_parameters:type_name -> yandex.cloud.priv.accessservice.v2.AccessKeySignature.Version2Parameters
	17, // 17: yandex.cloud.priv.accessservice.v2.AccessKeySignature.v4_parameters:type_name -> yandex.cloud.priv.accessservice.v2.AccessKeySignature.Version4Parameters
	18, // 18: yandex.cloud.priv.accessservice.v2.Subject.user_account:type_name -> yandex.cloud.priv.accessservice.v2.Subject.UserAccount
	19, // 19: yandex.cloud.priv.accessservice.v2.Subject.service_account:type_name -> yandex.cloud.priv.accessservice.v2.Subject.ServiceAccount
	20, // 20: yandex.cloud.priv.accessservice.v2.Subject.anonymous_account:type_name -> yandex.cloud.priv.accessservice.v2.Subject.AnonymousAccount
	21, // 21: yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.Action.resource_path:type_name -> yandex.cloud.priv.accessservice.v2.Resource
	10, // 22: yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.Actions.items:type_name -> yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.Action
	23, // 23: yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest.ActionMatrix.resource_paths:type_name -> yandex.cloud.priv.accessservice.v2.ResourcePath
	14, // 24: yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse.Results.items:type_name -> yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse.Result
	21, // 25: yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse.Result.resource_path:type_name -> yandex.cloud.priv.accessservice.v2.Resource
	15, // 26: yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse.Result.permission_denied_error:type_name -> yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse.Error
	24, // 27: yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse.Error.details:type_name -> google.protobuf.Any
	1,  // 28: yandex.cloud.priv.accessservice.v2.AccessKeySignature.Version2Parameters.signature_method:type_name -> yandex.cloud.priv.accessservice.v2.AccessKeySignature.Version2Parameters.SignatureMethod
	25, // 29: yandex.cloud.priv.accessservice.v2.AccessKeySignature.Version4Parameters.signed_at:type_name -> google.protobuf.Timestamp
	2,  // 30: yandex.cloud.priv.accessservice.v2.AccessService.Authenticate:input_type -> yandex.cloud.priv.accessservice.v2.AuthenticateRequest
	4,  // 31: yandex.cloud.priv.accessservice.v2.AccessService.Authorize:input_type -> yandex.cloud.priv.accessservice.v2.AuthorizeRequest
	6,  // 32: yandex.cloud.priv.accessservice.v2.AccessService.BulkAuthorize:input_type -> yandex.cloud.priv.accessservice.v2.BulkAuthorizeRequest
	3,  // 33: yandex.cloud.priv.accessservice.v2.AccessService.Authenticate:output_type -> yandex.cloud.priv.accessservice.v2.AuthenticateResponse
	5,  // 34: yandex.cloud.priv.accessservice.v2.AccessService.Authorize:output_type -> yandex.cloud.priv.accessservice.v2.AuthorizeResponse
	7,  // 35: yandex.cloud.priv.accessservice.v2.AccessService.BulkAuthorize:output_type -> yandex.cloud.priv.accessservice.v2.BulkAuthorizeResponse
	33, // [33:36] is the sub-list for method output_type
	30, // [30:33] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_yandex_cloud_priv_accessservice_v2_access_service_proto_init() }
func file_yandex_cloud_priv_accessservice_v2_access_service_proto_init() {
	if File_yandex_cloud_priv_accessservice_v2_access_service_proto != nil {
		return
	}
	file_yandex_cloud_priv_accessservice_v2_resource_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAuthorizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAuthorizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessKeySignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAuthorizeRequest_Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAuthorizeRequest_Actions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAuthorizeRequest_ActionMatrix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAuthorizeResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAuthorizeResponse_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAuthorizeResponse_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessKeySignature_Version2Parameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessKeySignature_Version4Parameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subject_UserAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subject_ServiceAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subject_AnonymousAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AuthenticateRequest_IamToken)(nil),
		(*AuthenticateRequest_Signature)(nil),
		(*AuthenticateRequest_ApiKey)(nil),
		(*AuthenticateRequest_IamCookie)(nil),
	}
	file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*AuthorizeRequest_Subject)(nil),
		(*AuthorizeRequest_IamToken)(nil),
		(*AuthorizeRequest_Signature)(nil),
		(*AuthorizeRequest_ApiKey)(nil),
	}
	file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*BulkAuthorizeRequest_Subject)(nil),
		(*BulkAuthorizeRequest_IamToken)(nil),
		(*BulkAuthorizeRequest_Signature)(nil),
		(*BulkAuthorizeRequest_ApiKey)(nil),
		(*BulkAuthorizeRequest_Actions_)(nil),
		(*BulkAuthorizeRequest_ActionMatrix_)(nil),
	}
	file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*AccessKeySignature_V2Parameters)(nil),
		(*AccessKeySignature_V4Parameters)(nil),
	}
	file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Subject_UserAccount_)(nil),
		(*Subject_ServiceAccount_)(nil),
		(*Subject_AnonymousAccount_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_priv_accessservice_v2_access_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_priv_accessservice_v2_access_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_priv_accessservice_v2_access_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_priv_accessservice_v2_access_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_priv_accessservice_v2_access_service_proto = out.File
	file_yandex_cloud_priv_accessservice_v2_access_service_proto_rawDesc = nil
	file_yandex_cloud_priv_accessservice_v2_access_service_proto_goTypes = nil
	file_yandex_cloud_priv_accessservice_v2_access_service_proto_depIdxs = nil
}
