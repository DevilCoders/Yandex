api_blacklist = [
"GET (?!/v1/ping)",
"POST ((?!/v1/unblockClouds)(?!/v1/console/login))",
"PATCH.*$",
"PUT.*$",
"DELETE.*$",
]

[endpoint.identity_public]
port = 4336

[endpoint.identity_private]
port = 2637

[welcome_email]
enabled = false

[compute]
enabled = false
zones_enabled = false





[gauthling]
storage_path = "/var/lib/yc/identity/gauthling-storage"

[endpoints.access_service]
enabled = true
url = "as.private-api.eu-central-1.aws.preprod.iam.internal.yadc.tech:4286"

[endpoints.token_service]
url = "ts.private-api.eu-central-1.aws.preprod.iam.internal.yadc.tech:4282"
tokens_proxy_enabled = true
service_account_proxy_enabled = true
passport_cookies_proxy_enabled = true
oauth_proxy_enabled = false
console_login_cookies_proxy_enabled = true
console_login_tokens_proxy_enabled = true
console_login_passport_cookies_proxy_enabled = true
passport_cookies_host = "yandex.ru"

[endpoints.iam_control_plane]
url = "iam.private-api.eu-central-1.aws.preprod.iam.internal.yadc.tech:4283"
joined_operations.enabled = true
token_keys_proxy.enabled = true
api_keys_proxy.enabled = true
access_keys_proxy.enabled = true
service_accounts_proxy.enabled = true
user_accounts_proxy.enabled = false
federations_proxy.enabled = true
federations_list_proxy.enabled = false
certificates_proxy.enabled = true
roles_proxy.enabled = true
console_roles_proxy.enabled = true

[endpoints.rm_control_plane]
url = "rm.private-api.eu-central-1.aws.preprod.iam.internal.yadc.tech:4284"
timeout = 15
retries = 5
joined_operations.enabled = true

[endpoints.rm_control_plane.clouds]
get.proxy.enabled = true
list.proxy.enabled = true
create.proxy.enabled = true
update.proxy.enabled = true
delete.proxy.enabled = true
list_access_bindings.proxy.enabled = true
set_access_bindings.proxy.enabled = true
update_access_bindings.proxy.enabled = true
block.proxy.enabled = true
unblock.proxy.enabled = true

[endpoints.rm_control_plane.folders]
get.proxy.enabled = true
list.proxy.enabled = true
create.proxy.enabled = true
update.proxy.enabled = true
delete.proxy.enabled = true
list_access_bindings.proxy.enabled = true
set_access_bindings.proxy.enabled = true
update_access_bindings.proxy.enabled = true

[endpoints.billing]
enable_referral_codes_activation = true
private_url = "https://localhost:443"

[endpoints.gauthling_daemon]
url = "gauthling.is.not.here.anymore:1234"

[endpoints.compute_private]
url = "http://None:None/private"

[endpoints.compute]
url = "http://None:None/external"

[endpoints.kikimr.identity]
host = "grpcs://iam.aws-frankfurt-preprod.ydb.yadc.tech:2135"
root_ssl_cert_file = "/etc/ssl/certs/ca-certificates.crt"
root = "/pre-prod_aws-frankfurt/iam/hardware/default/identity"
database = "/pre-prod_aws-frankfurt/iam"
ydb_auth_token_file = "/etc/yc/identity/secrets/ydb_token"
ydb_client_version = 2

[endpoints.kikimr.scms]
host = "grpcs://iam.aws-frankfurt-preprod.ydb.yadc.tech:2135"
root_ssl_cert_file = "/etc/ssl/certs/ca-certificates.crt"
root = "/pre-prod_aws-frankfurt/iam/hardware/default/scms"
database = "/pre-prod_aws-frankfurt/iam"
ydb_auth_token_file = "/etc/yc/identity/secrets/ydb_token"
ydb_client_version = 2

[endpoints.kikimr.root]
host = "grpcs://iam.aws-frankfurt-preprod.ydb.yadc.tech:2135"
root_ssl_cert_file = "/etc/ssl/certs/ca-certificates.crt"
root = "/pre-prod_aws-frankfurt/iam/"
database = "/pre-prod_aws-frankfurt/iam"
ydb_auth_token_file = "/etc/yc/identity/secrets/ydb_token"
ydb_client_version = 2

[endpoints.scms]
url = "localhost:666"

[endpoints.resource_manager]
enabled = false
url = "reaper.private-api.eu-central-1.aws.preprod.iam.internal.yadc.tech:7376"

[limits]

user = "10/second"
org = "100/second"






[cookie_key]
encrypt = "/etc/yc/identity/secrets/cookie-encrypt.key"
sign = "/etc/yc/identity/secrets/cookie-sign.key"

[service_provider]
use_source = true
issuer = "https://auth.yadc.io/federations/{}"
acs_url = "https://auth.yadc.io/federations/{}"
acs_pattern = "https:\\/\\/auth\\.yadc\\.io\\/federations\\/(?P<federation_id>\\S+)"
acs_binding = "POST"
x509_cert = "/etc/yc/identity/secrets/x509-saml-certificate.pem"
private_key = "/etc/yc/identity/secrets/x509-saml-certificate.key"



[audit]
file_name = "identity_audit.log"
file_path = "/var/lib/yc/identity/audit"
max_bytes = 31457280
max_backups = 3

[deleted_cloud_owner]
login = "yc.resource-manager.kharon"

[secrets]
service_account_path = "/etc/yc/identity/secrets/system_account.json"


[[oauth_clients]]
client_id = "yc.oauth.oauth_server"
client_secret = "1cac5c83af565936aa1333ef42b3a05c6f083e8f4438ba86722288a8a5d3eea0"
authorized_grant_types = [
  "authorization_code"
]
scope = [
  "openid"
]
autoapprove = [
  "openid"
]
redirect_uri = [
  "https://auth.yadc.io/auth/callback"
]
[[oauth_clients]]
client_id = "yc.oauth.datalens"
client_secret = "3d1f388b5a1c5c6e646c36a2a4a9933b500468a9a8a48b25a644b7328eee8760"
authorized_grant_types = [
  "authorization_code"
]
scope = [
  "openid"
]
autoapprove = [
  "openid"
]
redirect_uri = [
  "https://app.yadc.io/auth/callback",
  "https://console.yadc.io/auth/callback",
  "https://ui.yandex.ru/auth/callback"
]
[[oauth_clients]]
client_id = "yc.oauth.console"
client_secret = "c243b23df4fd0722e1a2c5bf7cf7cb443d13b55d838e086c58c8d5a1076e015a"
authorized_grant_types = [
  "authorization_code"
]
scope = [
  "openid"
]
autoapprove = [
  "openid"
]
redirect_uri = [
  "https://app.yadc.io/auth/callback",
  "https://console.yadc.io/auth/callback",
  "https://ui.yandex.ru/auth/callback"
]
[[oauth_clients]]
client_id = "yc.oauth.doubleconsole"
client_secret = "262c060a99be419e37f174ac1693d74b66f919b087e0702a4a685945bbd2ed6c"
authorized_grant_types = [
  "authorization_code"
]
scope = [
  "openid"
]
autoapprove = [
  "openid"
]
redirect_uri = [
  "https://app.yadc.io/auth/callback",
  "https://console.yadc.io/auth/callback",
  "https://ui.yandex.ru/auth/callback"
]
[[oauth_clients]]
client_id = "yc.oauth.sdk"
client_secret = "11f14ccce2eca19e840c3ba3aa635499a564c6b11fa8037f225434965320157c"
authorized_grant_types = [
  "authorization_code",
  "implicit"
]
scope = [
  "openid"
]
autoapprove = [
  "openid"
]
redirect_uri = [
  "http://127.0.0.1:80/",
  "http://127.0.0.1:80"
]

[fixtures]
environment = "datacloud-aws-preprod"

roles_whitelist = ['viewer', 'editor', 'admin',
  'ai.speechkit-stt.user', 'ai.speechkit-tts.user', 'ai.translate.user', 'ai.vision.user',
  'alb.admin', 'alb.editor', 'alb.viewer',
  'audit-trails.configViewer', 'audit-trails.viewer', 'audit-trails.editor', 'audit-trails.admin',
  'cdn.viewer', 'cdn.editor', 'cdn.admin',
  'certificate-manager.admin', 'certificate-manager.certificates.downloader',
  'compute.viewer', 'compute.operator',
  #'compute.editor', # Temporary hidden because of https://st.yandex-team.ru/CLOUD-82435
  'compute.admin',
  'compute.disks.user', 'compute.images.user', 'compute.osAdminLogin', 'compute.osLogin',
  'container-registry.admin', 'container-registry.images.puller', 'container-registry.images.pusher',
  'datalens.instances.admin', 'datalens.instances.user',
  'data-transfer.admin', 'data-transfer.publicAdmin', 'data-transfer.privateAdmin', 'data-transfer.viewer',
  'datasphere.admin', 'datasphere.user',
  'dataproc.viewer', 'dataproc.user', 'dataproc.editor', 'dataproc.admin', 'dataproc.agent',
  'dns.viewer', 'dns.editor', 'dns.admin',
  'gitlab.viewer', 'gitlab.admin',
  'iam.serviceAccounts.admin', 'iam.serviceAccounts.tokenCreator', 'iam.serviceAccounts.user',
  'iam.serviceAccounts.accessKeyAdmin', 'iam.serviceAccounts.apiKeyAdmin', 'iam.serviceAccounts.authorizedKeyAdmin', 'iam.serviceAccounts.keyAdmin',
  'iot.devices.writer', 'iot.registries.writer',
  'k8s.admin', 'k8s.editor', 'k8s.viewer', 'k8s.clusters.agent', 'k8s.tunnelClusters.agent',
  'k8s.cluster-api.cluster-admin', 'k8s.cluster-api.editor', 'k8s.cluster-api.viewer',
  'kms.admin', 'kms.editor', 'kms.viewer', 'kms.keys.encrypterDecrypter',
  'loadtesting.viewer', 'loadtesting.editor', 'loadtesting.admin', 'loadtesting.loadTester', 'loadtesting.generatorClient',
  'lockbox.admin', 'lockbox.editor', 'lockbox.viewer', 'lockbox.payloadViewer',
  'logging.viewer', 'logging.editor', 'logging.reader', 'logging.writer', 'logging.admin',
  'marketplace.editor', 'marketplace.viewer', 'marketplace.meteringAgent',
  'mdb.admin', 'mdb.dataproc.agent', 'mdb.viewer',
  'monitoring.admin', 'monitoring.editor', 'monitoring.viewer',
  'organization-manager.organizations.owner', 'organization-manager.admin', 'organization-manager.viewer',
  'quota-manager.requestOperator',
  'resource-manager.admin', 'resource-manager.editor', 'resource-manager.viewer',
  'resource-manager.clouds.owner', 'resource-manager.clouds.member',
  'serverless.containers.admin', 'serverless.containers.editor', 'serverless.containers.invoker', 'serverless.containers.viewer',
  'serverless.functions.admin', 'serverless.functions.invoker', 'serverless.mdbProxies.user',
  'smart-captcha.viewer', 'smart-captcha.editor', 'smart-captcha.admin',
  'storage.admin', 'storage.configurer', 'storage.editor', 'storage.uploader', 'storage.viewer', 'storage.configViewer',
  'vpc.admin', 'vpc.privateAdmin', 'vpc.publicAdmin', 'vpc.securityGroups.admin', 'vpc.securityGroups.user', 'vpc.user', 'vpc.viewer',
  'ydb.admin', 'ydb.editor', 'ydb.viewer',
  'yds.admin', 'yds.editor', 'yds.viewer', 'yds.writer',
  'yq.editor', 'yq.viewer', 'yq.invoker', 'yq.admin',
  'load-balancer.admin', 'load-balancer.privateAdmin', 'load-balancer.viewer',
  'ymq.admin', 'ymq.reader', 'ymq.writer']


[experimental]
alternative_console_users.enabled = true

[health_check]
shutdown_delay = 20

[logging]
devel_mode = true
