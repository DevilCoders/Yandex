uid: TjHZvFhWz
refresh: 3m
title: k8s-lights

tags: [ 'ycp', 'ycp-mk8s', 'ycp-mk8s-lights', 'ycp-duty' ]
links:
  - { title: 'Source spec', url: 'https://a.yandex-team.ru/arc/trunk/arcadia/cloud/java/dashboard/src/main/resources/dashboard/k8s/k8s.yaml' }
  - { title: 'Drilldown', tags: [ 'ycp-duty', 'ycp-drilldown' ] }

variables:
  ui:
    cluster: { values: [prod, preprod] }
  replacement:
    !include ../include/errors.yaml

graphDefaults:
  width: 8
  height: 6

rows:
  - title: API Gateway Managed Kubernetes lights ($cluster)
    graphDefaults: { datasource: 'Solomon Cloud', width: 6, height: 4 }
    queryDefaults: { labels: 'project=platform, cluster=cloud_${cluster}_api-gateway, service=api_gateway_ma, host=!cluster, grpc_service=yandex.cloud.k8s.v1.*' }
    panels:
      - type: singlestat
        title: 'API Gateway Managed Kubernetes rps ($cluster) (current)'
        #        templates: { name: trafficlights, lightsCount: 4, thresholds: [0, 10, 50] }
        coloring:
          thresholds: [0, 20, 50]
          colorValue: true
          colorsList: [ black, cyan, yellow, red ]
        gauge: { maxValue: 60, show: false, thresholdLabels: true }
        query:
          params: { labels: 'name=grpc_server_request_total, grpc_method!=all' }
          groupByTime: { max: 'default' }
          select: { non_negative_derivative: [], group_lines: 'sum' }
        value: { valueFunction: 'current', valueFontSize: "150%" }
        sparkline: { show: true, fullHeight: true, fillColor: {color: yellow, alpha: 0.2}, lineColor: yellow }

      - type: singlestat
        title: 'API Gateway Managed Kubernetes 5xx errors ($cluster) (total)'
        #        templates: { name: trafficlights, lightsCount: 4, thresholds: [0, 1, 1] }
        gauge: { maxValue: 10, show: false, thresholdLabels: true }
        coloring:
          thresholds: [0, 1, 1]
          colorValue: true
          colorsList: [ black, cyan, yellow, red ]
        query:
          params: { labels: 'name=grpc_server_response_total, grpc_method!=all, grpc_code=@c5xx503' }
          groupByTime: { 'max': 'default' }
          select: { diff: [], drop_below: '0',  group_lines: 'sum' }
        value: { valueFunction: 'total', valueFontSize: "150%" }
        sparkline: { show: true, fullHeight: true, fillColor: {color: yellow, alpha: 0.2}, lineColor: yellow }

      - type: singlestat
        title: 'API Gateway Managed Kubernetes duration seconds p95 ($cluster) (current)'
        #        templates: { name: trafficlights, lightsCount: 4, thresholds: [0, 50, 60] }
        coloring:
          thresholds: [0, 50, 60]
          colorValue: true
          colorsList: [ black, cyan, yellow, red ]
        gauge: { maxValue: 120, show: false, thresholdLabels: true }
        query:
          params: { labels: 'name=grpc_server_response_duration_seconds, bin=*' }
          groupByTime: { max: 'default' }
          select: { non_negative_derivative: [], group_by_labels: [sum, bin], histogram_percentile: [95, bin] }
        value: { valueFunction: 'current', valueFontSize: "150%" }
        sparkline: { show: true, fullHeight: true, fillColor: {color: yellow, alpha: 0.2}, lineColor: yellow }
      - type: placeholder

  - title: Managed Kubernetes API lights ($cluster)
    graphDefaults: { datasource: 'Solomon Cloud', width: 6, height: 4 }
    queryDefaults: { labels: 'project=platform, cluster=cloud_${cluster}_k8sapi, service=k8sapi_ma, host=!cluster, grpc_method=*, grpc_service=yandex.cloud.*' }
    panels:
      - type: singlestat
        title: 'Managed Kubernetes API rps $cluster (current)'
        #        templates: { name: trafficlights, lightsCount: 4, thresholds: [0, 10, 50] }
        coloring:
          thresholds: [0, 10, 50]
          colorValue: true
          colorsList: [ black, cyan, yellow, red ]
        gauge: { maxValue: 60, show: false, thresholdLabels: true }
        query:
          params: { labels: 'name=grpc_server_request_total' }
          groupByTime: { max: 'default' }
          select: { non_negative_derivative: [], group_lines: 'sum' }
        value: { valueFunction: 'current', valueFontSize: "150%" }
        sparkline: { show: true, fullHeight: true, fillColor: {color: yellow, alpha: 0.2}, lineColor: yellow }

      - type: singlestat
        title: 'Managed Kubernetes API errors 5xx $cluster (total)'
        #        templates: { name: trafficlights, lightsCount: 4, thresholds: [0, 1, 1] }
        coloring:
          thresholds: [0, 1, 1]
          colorValue: true
          colorsList: [ black, cyan, yellow, red ]
        gauge: { maxValue: 10, show: false, thresholdLabels: true }
        query:
          params: { labels: 'name=grpc_server_response_total, grpc_method!=all, grpc_code=@c5xx503' }
          groupByTime: { 'max': 'default' }
          select: { diff: [], drop_below: '0',  group_lines: 'sum' }
        value: { valueFunction: 'total', valueFontSize: "150%" }
        sparkline: { show: true, fullHeight: true, fillColor: {color: yellow, alpha: 0.2}, lineColor: yellow }

      - type: singlestat
        title: 'Managed Kubernetes API duration seconds p95 ($cluster) (current)'
        #        templates: { name: trafficlights, lightsCount: 4, thresholds: [0, 20, 50] }
        coloring:
          thresholds: [0, 20, 50]
          colorValue: true
          colorsList: [ black, cyan, yellow, red]
        gauge: { maxValue: 120, show: false, thresholdLabels: true }
        query:
          params: { labels: 'name=grpc_server_response_duration_seconds, grpc_code=*, bin=*' }
          groupByTime: { max: 'default' }
          select: { non_negative_derivative: [], group_by_labels: [sum, bin], histogram_percentile: ["95", "bin"] }
        value: { valueFunction: 'current', valueFontSize: "150%" }
        sparkline: { show: true, fullHeight: true, fillColor: {color: yellow, alpha: 0.2}, lineColor: yellow }
      - type: placeholder

  - title: Managed Kubernetes Controller lights ($cluster)
    graphDefaults: { datasource: 'Solomon Cloud', width: 6, height: 4 }
    queryDefaults: { labels: 'project=platform, cluster=cloud_${cluster}_mk8s-controller, service=mk8s-controller_ma, host=*' }
    panels:
      - type: singlestat
        title: 'Mk8s operation errors ($cluster) (total)'
        #        templates: { name: trafficlights, lightsCount: 4, thresholds: [0, 2, 4] }
        coloring:
          thresholds: [0, 2, 4]
          colorValue: true
          colorsList: [ black, cyan, yellow, red]
        gauge: { maxValue: 20, show: false, thresholdLabels: true }
        query:
          params: { labels: 'name=failed_operation_total, target_resource_type=*, target_method=*, grpc_code=@c5xx503|@c4xx' }
          groupByTime: { 'max': 'default' }
          select: { diff: [], drop_below: '0',  group_lines: 'sum' }
        value: { valueFunction: 'total', valueFontSize: "150%" }
        sparkline: { show: true, fullHeight: true, fillColor: {color: yellow, alpha: 0.2}, lineColor: yellow }

      - type: singlestat
        title: 'Mk8s hung NodeGroup Delete operations ($cluster) (total)'
        #        templates: { name: trafficlights, lightsCount: 4, thresholds: [0, 10, 20] }
        coloring:
          thresholds: [0, 10, 20]
          colorValue: true
          colorsList: [ black, cyan, yellow, red]
        gauge: { maxValue: 30, show: false, thresholdLabels: true }
        query:
          params: { labels: 'name=hung_operation_total, target_resource_type=NodeGroup, target_method=Delete' }
          groupByTime: { 'max': 'default' }
          select: { diff: [], drop_below: '0',  group_lines: 'sum' }
        value: { valueFunction: 'total', valueFontSize: "150%" }
        sparkline: { show: true, fullHeight: true, fillColor: {color: yellow, alpha: 0.2}, lineColor: yellow }

      - type: singlestat
        title: 'Mk8s hung Cluster operations ($cluster) (total)'
        #        templates: { name: trafficlights, lightsCount: 4, thresholds: [0, 30, 50] }
        coloring:
          thresholds: [0, 30, 50]
          colorValue: true
          colorsList: [ black, cyan, yellow, red]
        gauge: { maxValue: 100, show: false, thresholdLabels: true }
        query:
          params: { labels: 'name=hung_operation_total, target_resource_type=Cluster, target_method=*' }
          groupByTime: { 'max': 'default' }
          select: { diff: [], drop_below: '0',  group_lines: 'sum' }
        value: { valueFunction: 'total', valueFontSize: "150%" }
        sparkline: { show: true, fullHeight: true, fillColor: {color: yellow, alpha: 0.2}, lineColor: yellow }
      - type: placeholder

  - title: Managed Kubernetes Master Resources ($cluster)
    graphDefaults: { datasource: 'Solomon Cloud', width: 6, height: 4 }
    queryDefaults: { labels: 'project=platform, cluster=cloud_${cluster}_mk8s-master, service=node-exporter_ma, host=!cluster' }
    panels:
      - type: placeholder
      - type: placeholder
      - type: placeholder
      - type: placeholder
  - title: Managed Kubernetes Etcd Resources ($cluster)
    graphDefaults: { datasource: 'Solomon Cloud', width: 6, height: 4 }
    queryDefaults: { labels: 'project=platform, cluster=cloud_${cluster}_mk8s-etcd, service=node-exporter_ma, host=!cluster' }
    panels:
      - type: placeholder
      - type: placeholder
      - type: placeholder
      - type: placeholder

  - title: API Gateway Mk8s
    graphDefaults: { datasource: 'Solomon Cloud' }
    queryDefaults: { labels: 'project=platform, cluster=cloud_${cluster}_api-gateway, service=api_gateway_ma, host!=cluster, grpc_service=yandex.cloud.k8s.v1.*' }
    panels:
      - type: graph
        display: { fill: 1, lineWidth: 2 }
        title: 'Mk8s API Gateway ($cluster)'
        queries:
          - params: { labels: 'name=grpc_server_request_total, system=*, grpc_type=*, grpc_method!=all' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_lines: sum, alias: rps }

      - type: graph
        title: 'Mk8s API Gateway errors ($cluster)'
        display: { fill: 1, lineWidth: 2 }
        yAxes: [ { min: 0, decimals: 1 } ]
        queries:
          - params: { labels: 'name=grpc_server_response_total, grpc_code=@c5xx503, system=*, grpc_type=*, upstream_error=true' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: "0", group_by_labels: [sum, grpc_code], alias: '{{grpc_code}}' }

      - type: graph
        templates: { groupLines: true, name: percentile, format: solomon, levels: [50, 95, 99]  }
        display: { fill: 1, lineWidth: 2 }
        title: 'Gateway response duration ($cluster)'
        queries:
          - params: { labels: 'name=grpc_server_response_duration_seconds, system=*, grpc_type=*, bin=*' }

  - title: Managed Kubernetes API
    graphDefaults: { datasource: 'Solomon Cloud' }
    queryDefaults: { labels: 'project=platform, cluster=cloud_${cluster}_k8sapi, service=k8sapi_ma, host!=cluster' }
    panels:
      - type: graph
        title: 'Mk8s API rps ($cluster)'
        #        templates: { name: rps }
        display: { fill: 1, lineWidth: 2, stack: true }
        queries:
          - params: { labels: 'name=grpc_server_request_total, grpc_service=yandex.cloud.*' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, grpc_service], alias: '{{grpc_service}}'}

      - type: graph
        title: 'Mk8s API errors ($cluster)'
        #        templates: { name: errors }
        display: { fill: 1, lineWidth: 2, stack: false }
        yAxes: [{ decimals: 1, format: short, min: 0 }]
        queryDefaults: { labels: 'name=grpc_server_response_total, grpc_method!=all' }
        queries:
          - params: { labels: 'grpc_code=@c5xx503' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: "0", group_by_labels: [sum, grpc_code], alias: '{{grpc_code}}' }
          - params: { labels: 'grpc_code=@c4xx' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: "0", group_by_labels: [sum, grpc_code], alias: '{{grpc_code}}' }

      - type: graph
        templates: { groupLines: true, name: percentile, format: solomon, levels: [50, 95, 99] }
        display: { fill: 1, lineWidth: 2 }
        title: 'Mk8s API response duration ($cluster)'
        queries:
          - params: { labels: 'name=grpc_server_response_duration_seconds, grpc_code=*, bin=*' }

  - title: Managed Kubernetes Controller
    graphDefaults: { datasource: 'Solomon Cloud' }
    queryDefaults: { labels: 'project=platform, cluster=cloud_${cluster}_mk8s-controller, service=mk8s-controller_ma, host=*' }
    drilldowns:
      - subUid: dd_mk8s_ctrl_trt
        tags: [ 'ycp', 'ycp-mk8s', 'ycp-duty' ]
        ui:
          cluster: cluster
          targetResourceType: { multi: true, values: [ '!all', NodeGroup, Cluster ], titles: [ 'All types', 'Node Group', 'Cluster' ] }
          targetMethod: { values: [ '!all', Create, Update, Delete ], titles: [ 'All methods', Create, Update, Delete ] }
        uiRepeat: targetResourceType
        labels: 'target_resource_type=$targetResourceType, target_method=$targetMethod'
    panels:
      - type: graph
        title: 'Mk8s operation errors ($cluster)'
        templates: { name: errors }
        display: { fill: 1, lineWidth: 2 }
        queryDefaults: { labels: 'name=failed_operation_total, target_resource_type=*, target_method=*' }
        queries:
          - params: { labels: 'grpc_code=@c5xx503' }
          - params: { labels: 'grpc_code=@c4xx' }
        draw:
          - { alias: '5xx & 503', color: '#b20', at: left }
          - { alias: '4xx', color: '#147', at: right }

      - type: graph
        title: 'Mk8s hung operations ($cluster)'
        display: { decimals: 0, fill: 1, lineWidth: 2, stack: true }
        yAxes: [{ decimals: 1, format: short, min: 0 }]
        queries:
          - params: { labels: 'name=hung_operation_total, target_resource_type=NodeGroup, target_method=Delete' }
            groupByTime: { max: 'default' }
            select: { diff: [], group_lines: sum, alias: '>20m NodeGroup Delete' }
          - params: { labels: 'name=hung_operation_total, target_resource_type=Cluster, target_method=*' }
            groupByTime: { max: 'default' }
            select: { diff: [], group_lines: sum, alias: '>20m Cluster' }
        draw:
          - { alias: '>20m', color: '#b20', at: left }

      - type: placeholder
      # ... params { width, height }

