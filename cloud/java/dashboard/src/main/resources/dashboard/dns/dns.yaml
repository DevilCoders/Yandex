uid: ycDns
refresh: 1m
title: DNS Service

tags: [ 'ycp', 'ycp-dns', 'ycp-dns-service', 'ycp-duty', 'ycp-top', 'ycp-drilldown' ]
links:
  - { title: 'YDB (Solomon)', vars: false, url: 'https://solomon.yandex-team.ru/?project=kikimr&cluster=yandexcloud_${cluster}_global&database=*%2Fdns&dashboard=multitenant-client-database-diag' }
  - { title: 'Billing (PRE-PROD)', vars: false, url: 'https://grafana.yandex-team.ru/d/4MpryvvMz/billing-preprod-realtime-usage-enriched?orgId=1&from=now-7d&to=now&var-period2=toStartOfDay&var-accountType=All&var-accountPlan=All&var-accountCurrency=All&var-consumptionType=billing_record_pricing_quantity&var-productFilterEntities=All&var-serviceFilterEntities=dns&var-skuFilterCondition=NOT%20IN&var-skuFilterEntities=All&var-isVerified=All&var-isFraud=All&var-scope=sku_name&var-segment=All' }
  - { title: 'Billing (PROD)', vars: false, url: 'https://grafana.yandex-team.ru/d/5p6fn8WGz/billing-prod-realtime-usage-enriched?orgId=1&from=now-7d&to=now&var-period2=toStartOfDay&var-accountType=All&var-accountPlan=All&var-accountCurrency=All&var-consumptionType=billing_record_pricing_quantity&var-productFilterEntities=All&var-serviceFilterEntities=dns&var-skuFilterCondition=NOT%20IN&var-skuFilterEntities=All&var-isVerified=All&var-isFraud=All&var-scope=sku_name&var-segment=All'}
  - { tags: [ 'ycp', 'ydb' ] }
  - { tags: [ 'ycp-dns' ] }
  - { title: 'SLO', vars: false, url: 'https://grafana.private-api.ycp.cloud.yandex.net/d/7j62UsGGk/dns' }
  - { title: 'V-routers Summary', vars: false, url: 'https://solomon.yandex-team.ru/?project=yandexcloud&dashboard=compute_node_dns_${cluster}' }
  - { title: 'User vm health', vars: false, url: 'https://solomon.yandex-team.ru/?project=yandexcloud&cluster=cloud_${cluster}_compute&service=compute&dashboard=compute-instance-health&l.instance_id=ef3ba66b6vm1fnloilto&b=1h&e=' }
  - { title: 'Compute Node Net', vars: false, url: 'https://solomon.yandex-team.ru/?project=yandexcloud&cluster=cloud_${cluster}&service=sys&dashboard=compute_node_network_metrics_${cluster}&l.host=HOST_ID' }

variables:
  repeat:
    tx_duration_sensor:
      values: [ 'tx_attempt_duration_seconds', 'tx_total_duration_seconds' ]
      titles: [ 'Tx Attempt Duration', 'Tx Total Duration' ]
    jvm_memory_area:
      values: [ 'heap', 'nonheap' ]
      titles: [ 'Heap', 'Non-Heap' ]
    jvm_pool:
      values: [ jvm_memory_pool_bytes_used, jvm_memory_pool_bytes_committed, '--', jvm_buffer_pool_used_bytes, jvm_buffer_pool_capacity_bytes ]
      titles: [ 'JVM Memory Pools - Max Usage', 'JVM Memory Pools - Max Committed', '--', 'JVM Buffer Pools - Max Usage', 'JVM Buffer Pools - Max Capacity' ]
    task_state:
      values: [ failed, stuck ]
      titles: [ Failed, Stuck ]
  ui:
    cluster:
      values: [ prod, preprod, testing, gpn ]
    zone:
      values: [ '*', 'myt', 'sas', 'vla', 'ru-gpn-spb99' ]
    database: { values: ['*/dns'], hidden: true } # to go to ydb.yaml
    client_app:
      multi: true
      hidden: true
      values: ['auth', 'resource-manager']
      titles: ['Auth', 'Resource Manager']
    taskprocessor_pool:
      multi: true
      hidden: true
      values: ['default', 'yandex-dns-sync']
  uiQuery:
    number:
      includeAllValue: "*"
      labels: 'host!=cluster'
      label: 'host'
      regex: '^dns-service-.*(\d+)$'
  replacement:
    host: 'dns-service-*-${zone}${number}'
    !include ../include/errors.yaml

graphDefaults:
  datasource: 'Solomon Cloud'
  width: 8
  height: 6
queryDefaults: { dropNan: true, labels: 'project=dns, cluster=${cluster}, service=dns-service, host=@host' }

rows:
  - title: 'DNS Service: Golden Signals'
    panels:
      !include _dns_cp_golden.yaml ''            '!=dns.v1.inner.*'
      !include _dns_cp_golden.yaml ' (VPC sync)' '=dns.v1.inner.Vpc*'
      !include _dns_cp_golden.yaml ' (DPL sync)' '=dns.v1.inner.Replication*'
      !include _dns_cp_golden.yaml ' (Billing Metrics)' '=dns.v1.inner.Billing*'

      - type: graph
        title: 'DNS Service Log Levels (WARN+)'
        queryDefaults: { defaultTimeWindow: '15s' }
        queries:
          - params: { labels: 'name=log4j2_appender_total, level=warn|error|fatal' }
            groupByTime: { max: 'default' }
            select: { diff: [ ], drop_below: '0', group_by_labels: [ 'sum', 'level' ] }
        display: { decimals: 0 }
        yAxes: [ { decimals: 0, format: short, min: 0 } ]

      - type: graph
        title: 'GRPC Thread Pool: Task Count'
        queries:
          - params: { labels: 'name=dns_service_running, type=running' }
            groupByTime: { max: default }
            select: { group_lines: 'sum', alias: 'running now count' }
          - params: { labels: 'name=dns_service_task, meter_type=count, type=*' }
            groupByTime: { max: default }
            select: { non_negative_derivative: [ ], group_by_labels: [ 'sum', 'type' ], alias: '{{type}} RPS' }
        yAxes: [{ decimals: 0, format: short, min: 0 }, { decimals: 1, format: short, min: 0 }]
        draw: [{ alias: '/.* RPS/', at: right }]

      - type: graph
        title: 'GRPC Thread Pool: Task Duration'
        templates: { name: percentile, groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=dns_service_timings, type=duration' }

      - type: singlestat
        repeat: task_state
        title: '@{task_state:title} Tasks (from DB)'
        value: { valueFontSize: 200%, valueFunction: current }
        params: { width: 3 }
        coloring:
          colorValue: true
          thresholds: [ 1, 10 ]
          colorsList: [ green, red, maroon ]
        query:
          params: { labels: 'name=tasks_task_@{task_state}, host!=cluster' }
          select: { group_lines: [ 'max' ], alias: '@{task_state} task count' }

  - title: 'DNS Service: Cache'
    panels:
      - type: graph
        title: 'Cache Touch Delay'
        description: 'Delay since last cache touch (change with or without actual update)'
        params: { width: 8 }
        queries:
          - params: { labels: 'name=cache_touch_delay_max' }
            groupByTime: { max: 'default' }
            select: { alias: '{{host}}' }
        yAxes: [{ format: s, min: 0 }]
        display: { empty: false, decimals: 2 }

      - type: graph
        title: 'Cache Update Delay'
        description: 'Delay since last cache actual update'
        params: { width: 8 }
        queries:
          - params: { labels: 'name=cache_update_delay_max' }
            groupByTime: { max: 'default' }
            select: { alias: '{{host}}' }
        yAxes: [{ format: s, min: 0 }]
        display: { empty: false, decimals: 2 }

      - type: graph
        title: 'Cache Propagation Time'
        description: 'Time for changes to reach control plane'
        params: { width: 8 }
        queries:
          - params: { labels: 'name=cache_propagation_time_max' }
            groupByTime: { max: 'default' }
            select: { alias: '{{host}} max' }
          - params: { labels: 'name=cache_propagation_time_min' }
            groupByTime: { min: 'default' }
            select: { alias: '{{host}} min' }
        yAxes: [{ format: s, min: 0 }]
        display: { empty: false, decimals: 2 }

      - type: graph
        title: 'Cache Size (Change)'
        params: { width: 4 }
        queries:
          - params: { labels: 'name=cache_Change_size_max' }
            groupByTime: { max: 'default' }
            select: { alias: '{{host}}' }
        yAxes: [{ format: none }]
        display: { empty: false, stack: false }

      - type: graph
        title: 'Cache Size (VersionedEntities)'
        params: { width: 4 }
        queries:
          - params: { labels: 'name=cache_DnsZone_size_max' }
            groupByTime: { max: 'default' }
            select: { alias: '{{host}}-DnsZone' }
          - params: { labels: 'name=cache_DnsViewZone_size_max' }
            groupByTime: { max: 'default' }
            select: { alias: '{{host}}-DnsViewZone' }
          - params: { labels: 'name=cache_DnsView_size_max' }
            groupByTime: { max: 'default' }
            select: { alias: '{{host}}-DnsView' }
          - params: { labels: 'name=cache_RecordSet_size_max' }
            groupByTime: { max: 'default' }
            select: { alias: '{{host}}-RecordSet' }
        yAxes: [{ format: none }]
        display: { empty: false, stack: false }

      - type: graph
        title: 'Cache Tx and Lock Time'
        params: { width: 8 }
        queries:
          - params: { labels: 'name=cache_read_lock_duration_max' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [ 'max', '_' ], alias: 'read_lock' }
          - params: { labels: 'name=cache_write_lock_duration_max' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [ 'max', '_' ], alias: 'write_lock' }
          - params: { labels: 'name=cache_read_tx_duration_max' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [ 'max', '_' ], alias: 'read_tx' }
          - params: { labels: 'name=cache_write_tx_duration_max' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [ 'max', '_' ], alias: 'write_tx' }
        yAxes: [{ format: s, min: 0 }]
        display: { empty: false, decimals: 2 }

  - title: 'DNS Service: Sync'
    panels:
      - type: graph
        title: 'Sync Attempt Durations'
        params: { width: 6 }
        templates: { name: percentile, levels: [50, 75, 90, 99, 100], groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=sync_attempt_duration_seconds' }
      - type: graph
        title: 'Total Sync Durations'
        params: { width: 6 }
        templates: { name: percentile, levels: [50, 75, 90, 99, 100], groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=sync_total_duration_seconds' }
      - type: graph
        title: 'Sync Attempt Results'
        params: { width: 6 }
        queries:
          - params: { labels: 'name=sync_attempt_result, meter_type=count, result=*' }
            groupByTime: { max: default }
            select: { non_negative_derivative: [ ], group_by_labels: [ 'sum', 'result' ], alias: '{{result}} RPS' }
      - type: graph
        title: 'Sync Request Size'
        params: { width: 6 }
        templates: { name: percentile, levels: [50, 75, 90, 99, 100], groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=sync_request_size_bytes' }
        yAxes: [{ format: bytes }]
      - type: graph
        title: 'Shard Lock: Acquire RPS'
        params: { width: 6 }
        queries:
          - params: { labels: 'name=sync_shardlock_requests, meter_type=count' }
            groupByTime: { max: default }
            select: { non_negative_derivative: [ ], group_by_labels: [ 'sum', 'shard' ], alias: '#{{shard}}' }
      - type: graph
        title: 'Shard Lock: Acquire Durations'
        params: { width: 6 }
        templates: { name: percentile, levels: [ 50, 75, 90, 99, 100 ], groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=sync_shardlock_acquire_duration_seconds' }
      - type: graph
        title: 'Shard Lock: Locked Action RPS'
        params: { width: 6 }
        queries:
          - params: { labels: 'name=sync_shardlock_body_executions, meter_type=count' }
            groupByTime: { max: default }
            select: { non_negative_derivative: [ ], group_by_labels: [ 'sum', 'shard' ], alias: '#{{shard}}' }
      - type: graph
        title: 'Shard Lock: Locked Action Durations'
        params: { width: 6 }
        templates: { name: percentile, levels: [ 50, 75, 90, 99, 100 ], groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=sync_shardlock_body_duration_seconds' }

  - title: 'DNS Service: Billing SKUs'
    graphDefaults:
      datasource: 'Solomon'
      width: 8
    panels:
      - type: graph
        title: DNS Requests
        queries:
          - expr: 'alias(
                     group_by_labels(
                       drop_empty_lines(
                         drop_below(
                           {project="yc_billing", cluster="${cluster}", service="resharder_pull", sku_name="dns.requests.*",
                            name="sku_stats", host!="all"},
                           1E-10
                         )
                       ),
                       as_vector("sku_name", "unit"),
                       v -> group_lines("sum", drop_below(diff(replace_nan(v, 0)), 0))
                     ),
                     "{{sku_name}} ({{unit}})"
                   )'
      - type: graph
        title: DNS Zones
        queries:
          - expr: 'alias(
                     group_by_labels(
                       drop_empty_lines(
                         drop_below(
                           {project="yc_billing", cluster="${cluster}", service="resharder_pull", sku_name="dns.zones.*",
                            name="sku_stats", host!="all"},
                           1E-10
                         )
                       ),
                       as_vector("sku_name", "unit"),
                       v -> group_lines("sum", drop_below(diff(replace_nan(v, 0)), 0))
                     ),
                     "{{sku_name}} ({{unit}})"
                   )'
  - title: 'DNS Service: Billing Logbroker'
    panels:
      - type: graph
        title: 'DnsBillingService Thread Pool: Task Count'
        queries:
          - params: { labels: 'name=billing_service_running, type=running' }
            groupByTime: { max: default }
            select: { group_lines: 'sum', alias: 'running now count' }
          - params: { labels: 'name=billing_service_task, meter_type=count, type=*' }
            groupByTime: { max: default }
            select: { non_negative_derivative: [ ], group_by_labels: [ 'sum', 'type' ], alias: '{{type}} RPS' }
        yAxes: [{ decimals: 0, format: short, min: 0 }, { decimals: 1, format: short, min: 0 }]
        draw: [{ alias: '/.* RPS/', at: right }]
      - type: graph
        title: 'DnsBillingService Thread Pool: Task Duration'
        templates: { name: percentile, groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=billing_service_timings, type=duration' }
      - type: placeholder
        params: { width: 8 }

      - type: graph
        title: 'LB ExternalSender - BillingMetrics per sendMetrics() call'
        params: { width: 8 }
        yAxes: [{ format: none, decimals: 0 }]
        templates: { name: percentile, levels: [ 50, 75, 90, 99, 100 ], groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=logbroker_send_billing_metric_count' }
      - type: graph
        title: 'LB ExternalSender - BillingMetrics per batch'
        params: { width: 8 }
        yAxes: [{ format: none, decimals: 0 }]
        templates: { name: percentile, levels: [ 50, 75, 90, 99, 100 ], groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=logbroker_send_billing_metric_batch_size' }
      - type: placeholder
        params: { width: 8 }
      - type: graph
        title: 'LB Publisher - Sent Messages (1 BillingMetric=1+ Messages)'
        templates: { name: rps }
        queries:
          - params: { labels: 'name=logbroker_send_messages_count' }
      - type: graph
        title: 'LB Publisher - Send Results'
        queryDefaults: { defaultTimeWindow: '15s' }
        queries:
          - params: { labels: 'name=logbroker_send_results' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: '0', group_by_labels: ['sum', 'result'], alias: '{{result}}' }
        display: { decimals: 0, empty: false }
      - type: graph
        title: 'LB Publisher - Send Durations'
        templates: { name: percentile, groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=logbroker_send_duration_seconds' }

  - title: 'DNS Service: Task Processor - ${taskprocessor_pool} Pool'
    uiRepeat: 'taskprocessor_pool'
    graphDefaults: { width: 6 }
    panels:
      - type: graph
        title: 'Task RPS'
        templates: { name: rps, sumLines: false }
        queries:
          - params: { labels: 'name=taskprocessor_task_duration_count, pool=${taskprocessor_pool}' }
        display: { empty: false }

      - type: graph
        title: 'Special Task States'
        queryDefaults: { defaultTimeWindow: '15s' }
        queries:
          - params: { labels: 'name=taskprocessor_task_failed|taskprocessor_task_resurrected|taskprocessor_task_interrupted, meter_type=count, pool=${taskprocessor_pool}' }
            groupByTime: { max: 'default' }
            select: { nn_deriv: [], group_by_labels: ['sum', 'name'] }

      - type: graph
        title: 'Task Start Delay'
        templates: { name: percentile, levels: [50, 75, 90, 99, 100], groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=taskprocessor_task_delay, pool=${taskprocessor_pool}' }

      - type: graph
        title: 'Task Duration'
        templates: { name: percentile, levels: [50, 75, 90, 99, 100], groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=taskprocessor_task_duration, pool=${taskprocessor_pool}' }

  - title: 'DNS Service: JVM and System'
    panels:
      - type: graph
        title: '@{jvm_memory_area:title} Memory'
        repeat: jvm_memory_area
        queries:
          - params: { labels: 'name=jvm_memory_bytes_used|jvm_memory_bytes_committed, area=@{jvm_memory_area}' }
            groupByTime: { max: default }
            select: { drop_below: '0', group_by_labels: ['avg', 'name'] }
        yAxes: [{ format: bytes }]
      - type: graph
        title: 'Sys VM & RSS'
        queries:
          - params: { labels: 'name=process_virtual_memory_bytes|process_resident_memory_bytes' }
            groupByTime: { max: default }
            select: { drop_below: '0', group_by_labels: ['avg', 'name'] }
        yAxes: [{ format: bytes }]
      - type: graph
        title: 'Threads'
        queries:
          - params: { labels: 'name=jvm_threads_state, state=*' }
            groupByTime: { max: default }
            select: { drop_below: '0', group_by_labels: ['avg', 'state'] }
        display: { empty: false, stack: true }
      - type: graph
        title: '% Cores'
        queries:
          - params: { labels: 'name=process_cpu_seconds_total' }
            groupByTime: { max: default }
            select: { non_negative_derivative: [] }
        display: { empty: false }
        yAxes: [{ format: percentunit, decimals: 0 }]
      - type: graph
        title: 'File Descriptors'
        queries:
          - params: { labels: 'name=process_open_fds' }
            groupByTime: { max: default }
            select: { drop_below: '0', group_by_labels: ['max', 'name'], alias: 'max FDs' }

      - type: graph
        title: 'la1'
        description: 'Load Average – скользящее среднее System Load за 1m: https://en.wikipedia.org/wiki/Load_(computing)'
        queries:
          - params: { labels: 'service=node-exporter_ma, name=node_load1|system_n_cpus' }
            select: { alias: '{{host}}' }
        display: { empty: false }
        yAxes: [{ format: short, min: 0 }]

      - type: graph
        title: 'la15'
        description: 'Load Average – скользящее среднее System Load за 15m: https://en.wikipedia.org/wiki/Load_(computing)'
        queries:
          - params: { labels: 'service=node-exporter_ma, name=node_load15|system_n_cpus' }
            select: { alias: '{{host}}' }
        display: { empty: false }
        yAxes: [{ format: short, min: 0 }]

      - type: graph
        title: 'cpu'
        queries:
          - params: { labels: 'service=node-exporter_ma, name=node_cpu_seconds_total, mode=*' }
            select: { non_negative_derivative: [], moving_avg: [30s], alias: '{{host}} {{mode}}' }
        display: { legend: false, fill: 0 }
        yAxes: [ { format: percentunit, decimals: 1 } ]
      - type: graph
        title: 'CPU'
        templates:
          - { name: patchSelect, before: last, add: { moving_avg: [30s] } }
        display: { legend: false, fill: 0 }
        yAxes: [ { format: percentunit, decimals: 1 } ]
        queryDefaults:
          labels: 'service=node-exporter_ma, name=node_cpu_seconds_total, cpu=*'
        queries:
          - params: { labels: 'mode=user' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host], percentile_group_lines: "50", alias: user p50 }
          - params: { labels: 'mode=user' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host],  percentile_group_lines: "99", alias: user p99 }
          - params: { labels: 'mode=system' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host], percentile_group_lines: "50", alias: system p50 }
          - params: { labels: 'mode=system' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host], percentile_group_lines: "99", alias: system p99 }
          - params: { labels: 'mode=iowait' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host],  percentile_group_lines: "50", alias: iowait p50 }
          - params: { labels: 'mode=iowait' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host],  percentile_group_lines: "99", alias: iowait p99 }
          - params: { labels: 'mode=steal' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host],  percentile_group_lines: "50", alias: steal p50 }
          - params: { labels: 'mode=steal' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host],  percentile_group_lines: "99", alias: steal p99 }
      - type: graph
        title: 'Memory'
        display: { legend: false, fill: 0 }
        yAxes: [ { format: decbytes, decimals: 1 } ]
        queryDefaults:
          labels: 'service=node-exporter_ma'
        queries:
          - params: { labels: 'name=node_memory_AnonPages_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "50", alias: AnonPages_bytes p50 }
          - params: { labels: 'name=node_memory_AnonPages_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "99", alias: AnonPages_bytes p99 }
          - params: { labels: 'name=node_memory_Cached_bytes|node_memory_Buffers_bytes|node_memory_Writeback_bytes|node_memory_Dirty_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "50", alias: Cached+Buffers+Writeback+Dirty_bytes p50 }
          - params: { labels: 'name=node_memory_Cached_bytes|node_memory_Buffers_bytes|node_memory_Writeback_bytes|node_memory_Dirty_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "99", alias: Cached+Buffers+Writeback+Dirty_bytes p99 }
          - params: { labels: 'name=node_memory_Slab_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "50", alias: Slab_bytes p50 }
          - params: { labels: 'name=node_memory_Slab_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "99", alias: Slab_bytes p99 }
          - params: { labels: 'name=node_memory_SUnreclaim_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "50", alias: SUnreclaim_bytes p50 }
          - params: { labels: 'name=node_memory_SUnreclaim_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "99", alias: SUnreclaim_bytes p99 }
      - type: graph
        title: 'IO'
        templates:
          - { name: patchSelect, before: last, add: { moving_avg: [1m] } }
        display: { legend: false, fill: 0 }
        yAxes: [ { format: s, decimals: 1 } ]
        queryDefaults:
          labels: 'service=node-exporter_ma,device=*'
        queries:
          - params: { labels: 'name=node_disk_read_time_seconds_total' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: "0", group_by_labels: [sum, host], percentile_group_lines: "50", alias: disk_read_time_seconds p50 }
          - params: { labels: 'name=node_disk_read_time_seconds_total' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: "0", group_by_labels: [sum, host], percentile_group_lines: "99", alias: disk_read_time_seconds p99 }
          - params: { labels: 'name=node_disk_write_time_seconds_total' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: "0", group_by_labels: [sum, host], percentile_group_lines: "50", alias: disk_write_time_seconds p50 }
          - params: { labels: 'name=node_disk_write_time_seconds_total' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: "0", group_by_labels: [sum, host], percentile_group_lines: "99", alias: disk_write_time_seconds p99 }

  - title: 'DNS Service: JVM Memory'
    panels:
      - type: graph
        repeat: jvm_pool
        title: '@{jvm_pool:title}'
        queries:
          - params: { labels: 'name=@{jvm_pool}' }
            groupByTime: { max: default }
            select: { drop_below: '0', group_by_labels: [ 'max', 'pool' ] }
        display: { stack: true }
        yAxes: [ { format: bytes } ]

  - title: 'DNS Service: GC'
    queryDefaults: { labels: 'gc=G1 Young Generation' } # 'gc=*' can be more generic
    collapsed: true
    panels:
      - type: graph
        title: 'Total Counts'
        queries:
          - params: { labels: 'name=jvm_gc_collection_seconds_count' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [] }
        display: { empty: false }
      - type: graph
        title: 'Total Durations'
        queries:
          - params: { labels: 'name=jvm_gc_collection_seconds_sum' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [] }
        display: { empty: false }
      - type: graph
        title: 'Average Durations'
        queries:
          - expr: "replace_nan(
                   non_negative_derivative(group_by_time(1m, 'max', {@labels, name='jvm_gc_collection_seconds_sum'}))
                   / non_negative_derivative(group_by_time(1m, 'max', {@labels, name='jvm_gc_collection_seconds_count'}))
                   , 0)"
        display: { empty: false }

  - title: 'DNS Service: YDB GRPC Client'
    queryDefaults: { labels: 'app=kikimr_client, method=*' }
    panels:
      - type: graph
        title: 'KiKiMR Client Call RPS'
        templates: { name: rps }
        queries:
          - params: { labels: 'name=grpc_requests, meter_type=count' }

      - type: graph
        title: 'KiKiMR Client Errors (by type)'
        queryDefaults: { defaultTimeWindow: '15s' }
        queries:
          - params: { labels: 'name=grpc_statuses, status!=OK' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: '0', group_by_labels: ['sum', 'status'], alias: '{{status}}' }
        display: { decimals: 0, empty: false }

      - type: graph
        title: 'KiKiMR Client Call Durations'
        templates: { name: percentile, groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=grpc_durations' }

  - title: "DNS Service: YDB Sessions"
    queryDefaults: { labels: 'name=ydb_session_manager_pool_stats' }
    graphDefaults: { width: 8 }
    panels:
      - type: graph
        title: 'Acquired'
        queries:
          - params: { labels: 'type=acquired_count' }
            groupByTime: { max: default }
            select: { }

      - type: graph
        title: 'Idle'
        queries:
          - params: { labels: 'type=idle_count' }
            groupByTime: { max: default }
            select: { }

      - type: graph
        title: 'All hosts'
        display: { stack: true }
        queries:
          - params: { labels: 'type=acquired_count|idle_count|disconnected_count|pending_acquire_count' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: ['sum', 'type'] }

  - title: 'DNS Service: YDB Tx'
    panels:
      - type: graph
        title: 'Tx Attempt Count'
        templates: { name: percentile, groupLines: true, levels: ["90", "99", "99.9", "100"], format: solomon }
        yAxes: [{ decimals: 1, format: short, min: 0 }]
        queries:
          - params: { labels: 'tx_name=*, name=tx_attempts' }

      - type: graph
        repeat: tx_duration_sensor
        title: '@{tx_duration_sensor:title}'
        templates: { name: percentile, groupLines: true, format: solomon }
        queries:
          - params: { labels: 'tx_name=*, name=@{tx_duration_sensor}' }

      - type: graph
        title: 'Tx Result RPS'
        queries:
          - params: { labels: 'tx_name=*, name=tx_result, result=*' }
            groupByTime: { max: default }
            select: { nn_deriv: [], group_by_labels: ['sum', 'result'], alias: '{{result}}' }

      - type: graph
        title: 'Tx Retry RPS (by reason)'
        queries:
          - params: { labels: 'tx_name=*, name=tx_retries, reason=*' }
            groupByTime: { max: default }
            select: { nn_deriv: [], group_by_labels: ['sum', 'reason'], alias: '{{reason}}' }
        display: { empty: false }

      - type: graph
        title: 'Tx Retry RPS (by tx)'
        queries:
          - params: { labels: 'name=tx_retries, reason=*, tx_name=*' }
            groupByTime: { max: default }
            select: { nn_deriv: [], group_by_labels: ['sum', 'tx_name'], alias: '{{tx_name}}' }
        display: { empty: false }

  - title: '${client_app} Client'
    uiRepeat: client_app
    queryDefaults: { labels: 'service=dns-service, app=${client_app}_client, method=*' }
    graphDefaults: { width: 8 }
    panels:

      - type: graph
        title: '${client_app} Client Call RPS'
        templates: { name: rps }
        queries:
          - params: { labels: 'name=grpc_requests, meter_type=count' }

      - type: graph
        title: '${client_app} Client Errors (by type)'
        queryDefaults: { defaultTimeWindow: '15s' }
        queries:
          - params: { labels: 'name=grpc_statuses, status!=OK' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: '0', group_by_labels: ['sum', 'status'], alias: '{{status}}' }
        display: { decimals: 0, empty: false }

      - type: graph
        title: '${client_app} Client Call Durations'
        templates: { name: percentile, groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=grpc_durations' }
  - title: 'Logbroker Client'
    graphDefaults: { width: 8 }
    panels:
      - type: graph
        title: 'Messages'
        templates: { name: rps }
        queries:
          - params: { labels: 'name=search_event_send_messages_count' }
      - type: graph
        title: 'Results'
        queryDefaults: { defaultTimeWindow: '15s' }
        queries:
          - params: { labels: 'name=search_event_send_results' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: '0', group_by_labels: ['sum', 'result'], alias: '{{result}}' }
        display: { decimals: 0, empty: false }
      - type: graph
        title: 'Durations'
        templates: { name: percentile, groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=search_event_send_duration_seconds' }

  - title: 'Yandex Dns Sync'
    graphDefaults: { width: 8 }
    panels:
      - type: graph
        title: 'Dns client rps'
        templates: { name: rps }
        queries:
          - params: { labels: 'name=yandex_dns_client_requests' }
      - type: graph
        title: 'Dns client statuses (by type)'
        queryDefaults: { defaultTimeWindow: '15s' }
        queries:
          - params: { labels: 'name=yandex_dns_client_statuses, status!=OK' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: '0', group_by_labels: ['sum', 'status'], alias: '{{status}}' }
        display: { decimals: 0, empty: false }
      - type: graph
        title: 'Dns client durations'
        templates: { name: percentile, groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=yandex_dns_client_durations' }

      - type: graph
        title: 'Dns resolver rps'
        templates: { name: rps }
        queries:
          - params: { labels: 'name=yandex_dns_resolver_requests' }
      - type: graph
        title: 'Dns resolver statuses (by type)'
        queryDefaults: { defaultTimeWindow: '15s' }
        queries:
          - params: { labels: 'name=yandex_dns_resolver_statuses, status!=OK' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: '0', group_by_labels: ['sum', 'status'], alias: '{{status}}' }
        display: { decimals: 0, empty: false }
      - type: graph
        title: 'Dns resolver durations'
        templates: { name: percentile, groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=yandex_dns_resolver_durations' }
      - type: graph
        title: 'Not synced records count'
        queries:
          - params: { labels: 'name=yandex_dns_not_synced_count, host!=cluster'}
            select: { group_lines: sum, alias: 'count' }
        draw:
          - { alias: 'count', color: 'red', at: left }
      - type: graph
        title: 'Sync delay for records'
        templates: { name: percentile, groupLines: true, format: solomon }
        queries:
          - params: { labels: 'name=yandex_dns_sync_delay_ms' }
