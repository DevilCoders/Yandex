id: 208585
uid: Gl2VvZSZz

title:  API Services System Usage
tags: [ 'ycp', 'ycp-gateway', 'ycp-router', 'ycp-system-usage', 'ycp-drilldown' ]

variables:
  ui:
    cluster: { values: [prod, preprod] }
    service:
      multi: true
      values: [api-router, cpl, dpl01, api-gateway, ai-gateway, mdb-gateway, xds]
      titles: [API-ROUTER, CPL-ROUTER, DPL01-ROUTER, API-GATEWAY, AI-GATEWAY, MDB-GATEWAY, XDS]
  repeat:
    cpu_modes: { values: [ user, system, iowait, steal ] }


graphDefaults: { width: 8, height: 5, datasource: 'Solomon Cloud' }
queryDefaults: { labels: 'project=platform, service=node-exporter_ma, host!=cluster' }

rows:
  - title: $service
    uiRepeat: service
    drilldowns:
      - subUid: dd_host
        ui:
          cluster: cluster
          service:
            values: [api-router, cpl, dpl01, api-gateway, ai-gateway, mdb-gateway, xds]
            titles: [API-ROUTER, CPL-ROUTER, DPL01-ROUTER, API-GATEWAY, AI-GATEWAY, MDB-GATEWAY, XDS]
          host:
            multi: true
            values: [ '*-myt01', '*-sas01',  '*-vla01', '*-myt02', '*-sas02', '*-vla02' ]
            titles: [ 'Host myt01', 'Host sas01',  'Host vla01', 'Host myt02', 'Host sas02', 'Host vla02' ]
        uiRepeat: host
        labels: 'host=$host'
    panels:
      - type: graph
        title: '$service ($cluster) CPU'
        templates:
          - { name: patchSelect, before: last, add: { asap: [] } }
        display: { legend: false, fill: 0 }
        yAxes: [ { format: percentunit, max: 1, decimals: 1 } ]
        queryDefaults:
          labels: 'cluster=cloud_${cluster}_${service}, name=node_cpu_seconds_total, cpu=*'
        queries:
          - params: { labels: 'mode=user' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host], percentile_group_lines: "50", alias: user p50 }
          - params: { labels: 'mode=user' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host],  percentile_group_lines: "99", alias: user p99 }
          - params: { labels: 'mode=system' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host], percentile_group_lines: "50", alias: system p50 }
          - params: { labels: 'mode=system' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host], percentile_group_lines: "99", alias: system p99 }
          - params: { labels: 'mode=iowait' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host],  percentile_group_lines: "50", alias: iowait p50 }
          - params: { labels: 'mode=iowait' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host],  percentile_group_lines: "99", alias: iowait p99 }
          - params: { labels: 'mode=steal' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host],  percentile_group_lines: "50", alias: steal p50 }
          - params: { labels: 'mode=steal' }
            groupByTime: { max: 'default' }
            select: { non_negative_derivative: [], group_by_labels: [sum, host],  percentile_group_lines: "99", alias: steal p99 }
      - type: graph
        title: '$service ($cluster) Memory'
        display: { legend: false, fill: 0 }
        yAxes: [ { format: decbytes, decimals: 1 } ]
        queryDefaults:
          labels: 'cluster=cloud_${cluster}_${service}'
        queries:
          - params: { labels: 'name=node_memory_AnonPages_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "50", alias: AnonPages_bytes p50 }
          - params: { labels: 'name=node_memory_AnonPages_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "99", alias: AnonPages_bytes p99 }
          - params: { labels: 'name=node_memory_Cached_bytes|node_memory_Buffers_bytes|node_memory_Writeback_bytes|node_memory_Dirty_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "50", alias: Cached+Buffers+Writeback+Dirty_bytes p50 }
          - params: { labels: 'name=node_memory_Cached_bytes|node_memory_Buffers_bytes|node_memory_Writeback_bytes|node_memory_Dirty_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "99", alias: Cached+Buffers+Writeback+Dirty_bytes p99 }
          - params: { labels: 'name=node_memory_Slab_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "50", alias: Slab_bytes p50 }
          - params: { labels: 'name=node_memory_Slab_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "99", alias: Slab_bytes p99 }
          - params: { labels: 'name=node_memory_SUnreclaim_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "50", alias: SUnreclaim_bytes p50 }
          - params: { labels: 'name=node_memory_SUnreclaim_bytes' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "99", alias: SUnreclaim_bytes p99 }
      - type: graph
        title: '$service ($cluster) IO'
        templates:
          - { name: patchSelect, before: last, add: { asap: [] } }
        display: { legend: false, fill: 0 }
        yAxes: [ { format: s, decimals: 1 } ]
        queryDefaults:
          labels: 'cluster=cloud_${cluster}_${service}, device=*'
        queries:
          - params: { labels: 'name=node_disk_read_time_seconds_total' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: "0", group_by_labels: [sum, host], percentile_group_lines: "50", alias: disk_read_time_seconds p50 }
          - params: { labels: 'name=node_disk_read_time_seconds_total' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: "0", group_by_labels: [sum, host], percentile_group_lines: "99", alias: disk_read_time_seconds p99 }
          - params: { labels: 'name=node_disk_write_time_seconds_total' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: "0", group_by_labels: [sum, host], percentile_group_lines: "50", alias: disk_write_time_seconds p50 }
          - params: { labels: 'name=node_disk_write_time_seconds_total' }
            groupByTime: { max: 'default' }
            select: { diff: [], drop_below: "0", group_by_labels: [sum, host], percentile_group_lines: "99", alias: disk_write_time_seconds p99 }
      - type: graph
        title: '$service ($cluster) Fs'
        display: { legend: false, fill: 0 }
        yAxes: [ { format: decbytes, decimals: 1 } ]
        queryDefaults:
          labels: 'cluster=cloud_${cluster}_${service}, device=*, fstype=*, mountpoint=/, name=node_filesystem_free_bytes'
        queries:
          - groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "50", alias: filesystem_free_bytes p50 }
          - groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "99", alias: filesystem_free_bytes p99 }
      - type: graph
        title: '$service ($cluster) FileDescriptors'
        display: { legend: false, fill: 0 }
        yAxes: [ { decimals: 1 } ]
        queryDefaults:
          labels: 'cluster=cloud_${cluster}_${service}'
        queries:
          - params: { labels: 'name=node_filefd_allocated' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "50", alias: filefd_allocated p50 }
          - params: { labels: 'name=node_filefd_allocated' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "99", alias: node_filefd_allocated p99 }
          - params: { labels: 'name=node_filefd_maximum' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host], percentile_group_lines: "99.99", alias: node_filefd_maximum }
      - type: graph
        title: '$service ($cluster) RunningContainersPerHost'
        display: { legend: false, fill: 0 }
        yAxes: [ { decimals: 1 } ]
        queries:
          - params: { labels: 'cluster=cloud_${cluster}_${service}, service=kubelet_ma, name=kubelet_running_container_count' }
            groupByTime: { max: 'default' }
            select: { group_by_labels: [sum, host] }