uid: 'yc-lockbox-@{environment}-cpl'
title: '@{title}'
refresh: 1m

tags: [ 'yc-lockbox-@{environment}' ]

variables:
  replacement:
    !include ../../include/errors.yaml
    title: '@1'
    datasource: '@2'
    environment: '@3'
    project: '@4'
  repeat:
    tx_duration_sensor:
      values: ['tx_attempt_duration_seconds', 'tx_total_duration_seconds']
      titles: ['Tx Attempt Duration', 'Tx Total Duration']
    jvm_memory_area:
      values: ['heap', 'nonheap']
      titles: ['Heap', 'Non-Heap']

links:
  - { title: 'Dashboards', tags: ['yc-lockbox-@{environment}'] }

graphDefaults: { datasource: '@{datasource}', width: 8, height: 6 }
queryDefaults: { labels: 'project=@{project}, service=service, cluster=lockbox, host=lockbox-control*' }

rows:
  - title: Private L7
    drilldowns:
      - subUid: private-l7
        #tags: [ 'yc-lockbox-@{environment}-cpl' ]
        uiQuery:
          host:
            multi: true
        uiRepeat: host
        labels: 'host=$host'

    graphDefaults: { width: 8 }
    queryDefaults: { labels: 'service=private_envoy' }
    panels:
      - type: graph
        title: 'Private L7 RPS'
        templates: { name: rps, sensor: rate }
        queries:
          - params: { labels: 'sensor=envoy_http_downstream_rq_total, envoy_http_conn_manager_prefix=ingress_http' }

      - type: graph
        title: 'Private L7 Errors'
        templates: { name: errors, sumLines: true }
        queryDefaults: { defaultTimeWindow: '15s' }
        queries:
          - params: { labels: 'sensor=envoy_http_downstream_rq_xx, envoy_http_conn_manager_prefix=ingress_http, envoy_response_code_class=4' }
          - params: { labels: 'sensor=envoy_http_downstream_rq_xx, envoy_http_conn_manager_prefix=ingress_http, envoy_response_code_class=5' }
        draw:
          - { color: '#147', alias: '4xx' }
          - { color: '#da7', alias: '5xx' }
        display: { stack: true }
        yAxes: [{ min: 0 }]

      - type: graph
        title: 'Private L7 Upstream Errors'
        templates: { name: errors, sumLines: true }
        queryDefaults: { defaultTimeWindow: '15s' }
        queries:
          - params: { labels: 'sensor=envoy_cluster_upstream_rq_xx, envoy_response_code_class=4' }
          - params: { labels: 'sensor=envoy_cluster_upstream_rq_xx, envoy_response_code_class=5' }
          - params: { labels: 'sensor=envoy_cluster_upstream_rq, envoy_response_code=503' }
        draw:
          - { color: '#147', alias: '4xx' }
          - { color: '#da7', alias: '5xx' }
          - { color: '#b20', alias: '503' }
        display: { stack: true }
        yAxes: [{ min: 0 }]

      - type: graph
        title: 'Private L7 Response Duration'
        templates: { name: percentile, groupLines: true, format: solomon, sensor: rate }
        queries:
          - params: { labels: 'sensor=envoy_cluster_upstream_rq_time' }
        yAxes: [{ format: 'ms' }]

      - type: graph
        title: 'Private L7 Failed Healthcheck'
        queries:
          - params: { labels: 'sensor=envoy_cluster_health_check_failure' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'failures' }
        yAxes: [{ min: 0 }]

      - type: graph
        title: 'Private L7 Outlier Detection'
        queries:
          - params: { labels: 'sensor=envoy_cluster_outlier_detection_ejections_active' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'ejections' }
        yAxes: [{ min: 0 }]

  - title: Public L7
    drilldowns:
      - subUid: public-l7
        #tags: [ 'yc-lockbox-@{environment}-cpl' ]
        uiQuery:
          host:
            multi: true
        uiRepeat: host
        labels: 'host=$host'

    graphDefaults: { width: 8 }
    queryDefaults: { labels: 'service=public_envoy, cluster=lockbox' }
    panels:
      - type: graph
        title: 'Public L7 RPS'
        templates: { name: rps, sensor: rate }
        queries:
          - params: { labels: 'sensor=envoy_http_downstream_rq_total, envoy_http_conn_manager_prefix=frontend_*' }

      - type: graph
        title: 'Public L7 Errors'
        templates: { name: errors, sumLines: true }
        queryDefaults: { defaultTimeWindow: '15s' }
        queries:
          - params: { labels: 'sensor=envoy_http_downstream_rq_xx, envoy_http_conn_manager_prefix=frontend_*, envoy_response_code_class=4' }
          - params: { labels: 'sensor=envoy_http_downstream_rq_xx, envoy_http_conn_manager_prefix=frontend_*, envoy_response_code_class=5' }
        draw:
          - { color: '#147', alias: '4xx' }
          - { color: '#da7', alias: '5xx' }
        display: { stack: true }
        yAxes: [{ min: 0 }]

      - type: graph
        title: 'Public L7 Response Duration'
        templates: { name: percentile, groupLines: true, format: solomon, sensor: rate }
        queries:
          - params: { labels: 'sensor=envoy_cluster_upstream_rq_time' }
        yAxes: [{ format: 'ms' }]

  - title: JVM and System
    drilldowns:
      - subUid: system
        #tags: [ 'yc-lockbox-@{environment}-cpl' ]
        uiQuery:
          host:
            multi: true
        uiRepeat: host
        labels: 'host=$host'

    graphDefaults: { width: 8 }
    panels:
      - type: graph
        title: 'Instances'
        queries:
          - params: { labels: 'sensor=instanceHealthy' }
        display: { empty: false, stack: true }
        yAxes: [{ min: 0 }]

      - type: graph
        title: 'JVM @{jvm_memory_area:title} Memory'
        repeat: jvm_memory_area
        queries:
          - params: { labels: 'sensor=jvm_memory_bytes_used, area=@{jvm_memory_area}' }
            groupByTime: { max: default }
            select: { group_by_labels: ['max', 'name'] }
        yAxes: [{ format: bytes }]
      - type: graph
        title: 'Sum JVM @{jvm_memory_area:title} Memory'
        repeat: jvm_memory_area
        queries:
          - params: { labels: 'sensor=jvm_memory_bytes_used, area=@{jvm_memory_area}' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'] }
        yAxes: [{ format: bytes }]
      - type: graph
        title: 'JVM Threads'
        queries:
          - params: { labels: 'sensor=jvm_threads_state, state=*' }
            groupByTime: { max: default }
            select: { group_by_labels: ['max', 'state'] }
        display: { empty: false, stack: true }
      - type: graph
        title: 'Load Average (1 min)'
        queries:
          - params: { labels: 'service=sys, path=/Proc/LoadAverage1min' }
            groupByTime: { max: default }
            select: { group_by_labels: ['max', 'name'], alias: 'la' }
        yAxes: [{ min: 0 }]
      - type: graph
        title: 'Sum Load Average (1 min)'
        queries:
          - params: { labels: 'service=sys, path=/Proc/LoadAverage1min' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'la' }
        yAxes: [{ min: 0 }]
      - type: graph
        title: 'Sum CPU time'
        queries:
          - params: { labels: 'service=sys, path=/System/IdleTime' }
            groupByTime: { avg: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'idle' }
          - params: { labels: 'service=sys, path=/System/IoWaitTime' }
            groupByTime: { avg: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'iowait' }
          - params: { labels: 'service=sys, path=/System/IrqTime' }
            groupByTime: { avg: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'irq' }
          - params: { labels: 'service=sys, path=/System/NiceTime' }
            groupByTime: { avg: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'nice' }
          - params: { labels: 'service=sys, path=/System/SystemTime' }
            groupByTime: { avg: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'system' }
          - params: { labels: 'service=sys, path=/System/UserTime' }
            groupByTime: { avg: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'user' }
        display: { stack: true }
        yAxes: [{ min: 0 }]
      - type: graph
        title: 'Memory'
        queries:
          - params: { labels: 'service=sys, path=/Memory/ActiveAnon' }
            groupByTime: { max: default }
            select: { group_by_labels: ['max', 'name'], alias: 'anon' }
          - params: { labels: 'service=sys, path=/Memory/ActiveFile' }
            groupByTime: { max: default }
            select: { group_by_labels: ['max', 'name'], alias: 'file' }
          - params: { labels: 'service=sys, path=/Memory/MemTotal' }
            groupByTime: { max: default }
            select: { group_by_labels: ['max', 'name'], alias: 'total' }
        yAxes: [{ format: bytes, min: 0 }]
      - type: graph
        title: 'Sum Memory'
        queries:
          - params: { labels: 'service=sys, path=/Memory/ActiveAnon' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'anon' }
          - params: { labels: 'service=sys, path=/Memory/ActiveFile' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'file' }
          - params: { labels: 'service=sys, path=/Memory/MemTotal' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'total' }
        yAxes: [{ format: bytes, min: 0 }]
      - type: graph
        title: 'Network Bytes'
        queries:
          - params: { labels: 'service=sys, path=/Net/Ifs/RxBytes, intf=eth0' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'rx' }
          - params: { labels: 'service=sys, path=/Net/Ifs/TxBytes, intf=eth0' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'tx' }
        display: { stack: true }
        yAxes: [{ format: bytes, min: 0 }]
      - type: graph
        title: 'Network Packets'
        queries:
          - params: { labels: 'service=sys, path=/Net/Ifs/RxPackets, intf=eth0' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'rx' }
          - params: { labels: 'service=sys, path=/Net/Ifs/TxPackets, intf=eth0' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'tx' }
        display: { stack: true }
        yAxes: [{ min: 0 }]
      - type: graph
        title: 'Network Drop & Err'
        queries:
          - params: { labels: 'service=sys, path=/Net/Ifs/RxDrop, intf=eth0' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'rx drop' }
          - params: { labels: 'service=sys, path=/Net/Ifs/TxDrop, intf=eth0' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'tx drop' }
          - params: { labels: 'service=sys, path=/Net/Ifs/RxErrs, intf=eth0' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'rx errs' }
          - params: { labels: 'service=sys, path=/Net/Ifs/TxErrs, intf=eth0' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'tx errs' }
        display: { stack: true }
        yAxes: [{ min: 0 }]
      - type: graph
        title: 'File Descriptors'
        queries:
          - params: { labels: 'sensor=process_open_fds' }
            groupByTime: { max: default }
            select: { drop_below: '0', group_by_labels: ['max', 'name'], alias: 'max FDs' }
      - type: graph
        title: 'Free Space'
        queries:
          - params: { labels: 'service=sys, path=/Filesystem/FreeB' }
            groupByTime: { max: default }
            select: { group_by_labels: ['min', 'name'], alias: 'space' }
        yAxes: [{ format: bytes, min: 0 }]
      - type: graph
        title: 'IO Ops'
        queries:
          - params: { labels: 'service=sys, path=/Io/Disks/Reads' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'reads' }
          - params: { labels: 'service=sys, path=/Io/Disks/Writes' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'writes' }
        display: { stack: true }
      - type: graph
        title: 'IO Bytes'
        queries:
          - params: { labels: 'service=sys, path=/Io/Disks/ReadBytes' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'reads' }
          - params: { labels: 'service=sys, path=/Io/Disks/WriteBytes' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'writes' }
        display: { stack: true }
        yAxes: [{ format: bytes }]
      - type: graph
        title: 'IO Waits'
        queries:
          - params: { labels: 'service=sys, path=/Io/Disks/ReadWaitMillisec' }
            groupByTime: { max: default }
            select: { group_by_labels: ['max', 'name'], alias: 'reads msec' }
          - params: { labels: 'service=sys, path=/Io/Disks/WriteWaitMillisec' }
            groupByTime: { max: default }
            select: { group_by_labels: ['max', 'name'], alias: 'writes msec' }
        display: { stack: true }
      - type: graph
        title: 'Major Page Faults'
        queries:
          - params: { labels: 'service=sys, path=/Memory/MajorPageFaults' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'name'], alias: 'faults' }

  - title: Clients
    drilldowns:
      - subUid: clients
        #tags: [ 'yc-lockbox-@{environment}-cpl' ]
        uiQuery:
          host:
            multi: true
        uiRepeat: host
        labels: 'host=$host'

    panels:

      - type: graph
        templates: { name: rps, rate: rps }
        title: 'Auth client rps'
        queries:
          - params: { labels: 'sensor=grpc_requests, app=auth_client, meter_type=count' }

      - type: graph
        templates: { name: errors, sensor: rate }
        title: 'Auth client errors'
        queryDefaults: { defaultTimeWindow: '15s' }
        queries:
          - params: { labels: 'sensor=grpc_statuses, app=auth_client, status=@{4xx}' }
          - params: { labels: 'sensor=grpc_statuses, app=auth_client, status=@{503}' }
          - params: { labels: 'sensor=grpc_statuses, app=auth_client, status=@{5xx}' }
        draw: [{ alias: '4xx', color: '#147', at: right }, { alias: '503', color: '#da7', at: left }, { alias: '5xx', color: '#b20', at: left }]

      - type: graph
        templates: { name: percentile, format: solomon, groupLines: true, sensor: rate }
        title: 'Auth client response duration'
        queries:
          - params: { labels: 'sensor=grpc_durations, app=auth_client' }
        yAxes: [{ min: 0 }]

      - type: graph
        templates: { name: rps, rate: rps }
        title: 'Kikimr client rps'
        queries:
          - params: { labels: 'sensor=grpc_requests, app=kikimr_client, meter_type=count' }

      - type: graph
        templates: { name: errors, sensor: rate }
        title: 'Kikimr client errors'
        queryDefaults: { defaultTimeWindow: '15s' }
        queries:
          - params: { labels: 'sensor=grpc_statuses, app=kikimr_client, status=@{4xx}' }
          - params: { labels: 'sensor=grpc_statuses, app=kikimr_client, status=@{503}' }
          - params: { labels: 'sensor=grpc_statuses, app=kikimr_client, status=@{5xx}' }
        draw: [{ alias: '4xx', color: '#147', at: right }, { alias: '503', color: '#da7', at: left }, { alias: '5xx', color: '#b20', at: left }]

      - type: graph
        templates: { name: percentile, format: solomon, groupLines: true, sensor: rate }
        title: 'Kikimr client response duration'
        queries:
          - params: { labels: 'sensor=grpc_durations, app=kikimr_client' }
        yAxes: [{ min: 0 }]

      - type: graph
        templates: { name: rps, rate: rps }
        title: 'KMS client rps'
        queries:
          - params: { labels: 'sensor=grpc_requests, app=kms-crypto_client, meter_type=count' }

      - type: graph
        templates: { name: errors, sensor: rate }
        title: 'KMS client errors'
        queryDefaults: { defaultTimeWindow: '15s' }
        queries:
          - params: { labels: 'sensor=grpc_statuses, app=kms-crypto_client, status=@{4xx}' }
          - params: { labels: 'sensor=grpc_statuses, app=kms-crypto_client, status=@{503}' }
          - params: { labels: 'sensor=grpc_statuses, app=kms-crypto_client, status=@{5xx}' }
        draw: [{ alias: '4xx', color: '#147', at: right }, { alias: '503', color: '#da7', at: left }, { alias: '5xx', color: '#b20', at: left }]

      - type: graph
        templates: { name: percentile, format: solomon, groupLines: true, sensor: rate }
        title: 'KMS client response duration'
        queries:
          - params: { labels: 'sensor=grpc_durations, app=kms-crypto_client' }
        yAxes: [{ min: 0 }]

  - title: Kikimr
    drilldowns:
      - subUid: kikimr
        #tags: [ 'yc-lockbox-@{environment}-cpl' ]
        uiQuery:
          host:
            multi: true
        uiRepeat: host
        labels: 'host=$host'

    panels:

      - type: graph
        title: 'Tx Attempt Count'
        templates: { name: percentile, format: solomon, groupLines: true, sensor: rate }
        yAxes: [{ decimals: 1, format: short, min: 0 }]
        queries:
          - params: { labels: 'tx_name=*, sensor=tx_attempts' }

      - type: graph
        repeat: tx_duration_sensor
        title: '@{tx_duration_sensor:title}'
        templates: { name: percentile, format: solomon, groupLines: true, sensor: rate }
        queries:
          - params: { labels: 'tx_name=*, sensor=@{tx_duration_sensor}' }

      - type: graph
        title: 'Tx Result RPS'
        queries:
          - params: { labels: 'tx_name=*, sensor=tx_result, result=*' }
            groupByTime: { max: default }
            select: { nn_deriv: [], group_by_labels: ['sum', 'result'], alias: '{{result}} RPS' }

      - type: graph
        title: 'Session Count'
        queries:
          - params: { labels: 'sensor=sessions_count, type=active|idle' }
            groupByTime: { max: default }
            select: { group_by_labels: ['sum', 'type'] }
        display: { stack: true }

      - type: graph
        title: 'Session Timings (Used)'
        templates: { name: percentile, format: solomon, groupLines: true, sensor: rate }
        queries:
          - params: { labels: 'sensor=sessions_timings, type=used' }
