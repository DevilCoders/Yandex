# id (optional) is generated by Grafana, uid can be either specified manually or generated by Grafana
id: 79682
uid: XlF7fo_iz
refresh: 10m
title: Generator demo dashboard for API adapter and API gateway

variables:
  ui: # dynamic value is selected at the UI, refer to it as $cluster, ${cluster} or [[cluster]] in labels and graph titles
    cluster: { values: [prod, preprod] }
  replacement: # scalar value of a static replacement variable is substituted in strings with the @5xx or @{5xx} directive (nested replacement available)
    4xx: CANCELLED|INVALID_ARGUMENT|NOT_FOUND|ALREADY_EXISTS|PERMISSION_DENIED|RESOURCE_EXHAUSTED|FAILED_PRECONDITION|ABORTED|OUT_OF_RANGE|UNAUTHENTICATED
    5xx: UNKNOWN|DEADLINE_EXCEEDED|UNIMPLEMENTED|INTERNAL|UNAVAILABLE|DATA_LOSS
    bin_high: '10*|25*|50*|75*'
  repeat: # when 'repeat: preprod_host' is used, generator clones a graph for each value of an array variable, adding temporary variable to 'replacement';
    # use e.g. 'for host in $(curl 'https://c.yandex-team.ru/api/groups2hosts/cloud_preprod_api-adapter_ig'); do echo $host; done' to check hosts;
    # then also check whether FQDN checkbox in Solomon project settings is set, as it also affects hostname.
    preprod_host: { values: [ 'api-adapter-preprod-myt1', 'api-adapter-preprod-sas1', 'api-adapter-preprod-vla1' ] }
  # another variable references available: label values (except project, cluster and service) can be referenced with {{label}}

links: [{ title: 'Source spec', url: 'https://a.yandex-team.ru/arc/trunk/arcadia/cloud/java/dashboard/src/test/resources/dashboard/demo.yaml' }]

graphDefaults:
  datasource: 'Solomon Cloud'
  width: 12 # of 24
  height: 7 # *30 px
queryDefaults: # both 'Grafana' ('url') and 'Solomon' (via copy button) label formats are supported â€“ see 'labels:' below
  #labels: 'project=yandexcloud&cluster=cloud_preprod_api-adapter&service=api_adapter'
  labels: 'project="api-adapter", cluster="preprod", service="core"'

rows:
  - title: Row 1a (adapter)
    panels:

      - type: graph
        title: RPS graph 1 (adapter, out of row, fixed cluster = preprod)
        queries:
          - params: { labels: 'host="cluster", name="grpc_requests", meter_type="count", app="cloud-api-adapter_server", method="all"' }
            groupByTime: { avg: '$__interval' }
            select: { non_negative_derivative: [], alias: 'rps' }

      - type: graph
        templates: { name: rps } # template class name matches '<Name>Template', e.g. 'rps ' -> 'RpsTemplate'
        title: RPS graph 2 (adapter, out of row, with template usage, preprod)
        queries:
          - params: { labels: 'host="cluster", name="grpc_requests", meter_type="count", app="cloud-api-adapter_server", method="all"' }


  - title: Row 1b (adapter, with overridden graph defaults)
    graphDefaults: { width: 8, height: 5 }
    panels:

      - type: graph
        templates: { name: rps, sumLines: false }
        title: 'RPS on all $cluster''s hosts'
        queries:
          - params: { labels: 'cluster="${cluster}", host!="cluster", name="grpc_requests", meter_type="count", app="cloud-api-adapter_server", method="all"' }

      - type: graph
        templates: { name: errors }
        title: '[cluster = [[cluster]]] Errors'
        queries:
          - params: { labels: 'cluster="${cluster}", host="cluster", name="grpc_statuses", app="cloud-api-adapter_server", method="all", status="@4xx"' }
          - params: { labels: 'cluster="${cluster}", host="cluster", name="grpc_statuses", app="cloud-api-adapter_server", method="all", status="@5xx"' }
        draw: [{ alias: '4xx', color: '#147', at: right }, { alias: '5xx', color: '#b20', at: left }]
        links:
          - { title: 'Grafana @ Yandex', url: 'https://grafana.yandex-team.ru' }
          - { title: 'Real platform team duty dashboard', uid: 'ycpDuty' }


      - type: graph
        templates: { name: percentile, levels: [50, 75, 90, 99, 99.9], format: solomon }
        title: Percentile graph (in row, with template usage, preprod)
        queries:
          - params: { labels: 'host="cluster", name="grpc_durations", app="cloud-api-adapter_server", method="all"' }

      - type: graph
        templates: { name: rps }
        repeat: preprod_host
        title: RPS graph 3 (static gen. by hosts, host = @preprod_host)
        display: { legend: false }
        queries:
          - params: { labels: 'host="@preprod_host", name="grpc_requests", meter_type="count", app="cloud-api-adapter_server", method="all"' }

      - type: graph
        templates: { name: rps }
        uiRepeat: cluster
        title: 'RPS graph 4 (dynamic gen. by cluster value/values (multi-value is supported), for now: $cluster)'
        display: { legend: false, lineWidth: 2 }
        queries:
          - params: { labels: 'cluster="$cluster", host!="cluster", name="grpc_requests", meter_type="count", app="cloud-api-adapter_server", method="all"' }


  - title: Row 1c (adapter - traffic lights)
    queryDefaults: { labels: 'app=cloud-api-adapter_server, host!=cluster, method=all' }
    panels:
      - type: singlestat
        title: 'Adapter errors $cluster (total)'
        templates: { name: trafficlights, lightsCount: 4, thresholds: [20, 250, 500] }
        gauge: { maxValue: 500, show: true, thresholdLabels: true }
        query:
          params: { labels: 'name=grpc_statuses, status=@5xx' }
          groupByTime: { 'max': 'default' }
          select: { diff: [], drop_below: '0',  group_lines: 'sum' }
        value: { valueFunction: 'total' }

      - type: singlestat
        title: 'Adapter response duration p99 avg. ($cluster)'
        templates: { name: trafficlights, lightsCount: 4, thresholds: [1, 3, 5] }
        gauge: { maxValue: 5, show: true, thresholdLabels: true }
        query:
          params: { labels: 'name=grpc_durations' }
          groupByTime: {'max': 'default' }
          select: { nn_deriv: [], group_by_labels: [sum, bin], hist: ['99', bin], alias: 'p99' }
        format: 's'


  - title: Row 2 (gateway)
    graphDefaults: { width: 6, height: 4 }
    queryDefaults: { labels: 'project=platform, cluster=cloud_${cluster}_api-gateway, service=api_gateway_ma, host=api-gateway-${cluster}-sas01, name=grpc_server_response_duration_seconds, system=grpc, grpc_type=unary, bin=@bin_high' }
    panels:

      - type: graph
        title: 'Slow gateway response duration ($cluster, sas01) - aggregates source'
        display: { legend: false, empty: false, stack: true }
        queries:
          - params: { labels: 'grpc_service=yandex.cloud' }
            select: { non_negative_derivative: [] }

      - type: graph
        title: 'Slow gateway response duration ($cluster, sas01) - group_by_labels source'
        display: { legend: false, empty: false, stack: true }
        queries:
          - params: { labels: 'grpc_service!=yandex.cloud' }
            select: { non_negative_derivative: [] }

      - type: graph
        title: 'Slow gateway response duration ($cluster, sas01) - using aggregates'
        templates: { name: percentile, levels: [50, 75, 90, 99], format: solomon }
        queries:
          - params: { labels: 'grpc_service=yandex.cloud' }

      - type: graph
        title: 'Slow gateway response duration ($cluster, sas01) - using group_by_labels'
        templates: { name: percentile, levels: [50, 75, 90, 99], format: solomon, groupLines: true }
        queries:
          - params: { labels: 'grpc_service!=yandex.cloud' }
