syntax = "proto3";

import "library/cpp/lwtrace/protos/lwtrace.proto";

package NCloud.NBlockStore.NProto;

option java_package = "ru.yandex.cloud.blockstore.proto";
option go_package = "a.yandex-team.ru/cloud/blockstore/public/api/protos";

////////////////////////////////////////////////////////////////////////////////
// Request source.

enum ERequestSource
{
    SOURCE_INSECURE_CONTROL_CHANNEL = 0;
    SOURCE_SECURE_CONTROL_CHANNEL = 1;
    SOURCE_TCP_DATA_CHANNEL = 2;
    SOURCE_FD_DATA_CHANNEL = 3;
}

////////////////////////////////////////////////////////////////////////////////
// Control plane request source.

enum EControlRequestSource
{
    SOURCE_CLIENT = 0;
    SOURCE_SERVICE_MONITORING = 1;
}

////////////////////////////////////////////////////////////////////////////////
// Common message headers.

message THeaders
{
    // Trace identifier for logging.
    string TraceId = 1;

    // Idempotence identifier for retries.
    string IdempotenceId = 2;

    // Client identifier for client detection.
    string ClientId = 3;

    // Request timestamp.
    uint64 Timestamp = 4;

    // Request identifier.
    uint64 RequestId = 5;

    // Request timeout (in milliseconds).
    uint32 RequestTimeout = 6;

    // Request generation number.
    uint32 RequestGeneration = 7;

    message TInternal
    {
        // IAM auth token.
        string AuthToken = 1;

        // From which channel this request comes from.
        ERequestSource RequestSource = 2;

        NLWTrace.TTraceRequest Trace = 3;

        // Ts when request tracing actually started.
        uint64 TraceTs = 4;

        // Source of control plane request.
        EControlRequestSource ControlSource = 5;
    }

    // These headers must not be set by end clients. They will be overwritten
    // internally.
    TInternal Internal = 8;

    // True for requests that originate from blockstore-server itself
    // e.g. NRD migration-related reads and writes.
    bool IsBackgroundRequest = 9;
}
