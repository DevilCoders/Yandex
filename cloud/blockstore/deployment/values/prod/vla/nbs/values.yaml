config:
  nbs:

    nbs-auth.txt: |+
      AccessServiceEndpoint: "as.private-api.cloud.yandex.net:4286"
      UserAccountServiceEndpoint: "api-adapter.private-api.cloud.yandex.net:8443"
      UseBlackBox: false
      UseAccessService: true
      UseStaff: false
      

    nbs-client.txt: |+
      ClientConfig {
        Host: "localhost"
        Port: 9767
        RetryTimeout: 86400000
        SecurePort: 9768
        ThrottlingConfig {
          NonreplThrottlingConfig {
            ReadBandwidthPerCpuUnit: 1
            ReadIopsPerCpuUnit: 100
            WriteBandwidthPerCpuUnit: 1
            WriteIopsPerCpuUnit: 100
            MaxReadBandwidth: 1000
            MaxReadIops: 100000
            MaxWriteBandwidth: 1000
            MaxWriteIops: 100000
          }
        }
        IpcType: IPC_NBD
        NbdSocketSuffix: "_nbd"
        NbdUseNbsErrors: true
      }
      LogConfig {
        SysLogService: "NBS_CLIENT"
        LogLevel: 6
      }
      

    nbs-diag.txt: |+
      HostNameScheme: HOSTNAME_YDBVIEWER
      ViewerHostName: "ydb.bastion.cloud.yandex-team.ru"
      SolomonClusterName: "yandexcloud_prod_vla"
      HDDSlowRequestThreshold: 1000
      SSDSlowRequestThreshold: 100
      UseAsyncLogger: true
      SsdPerfThreshold {
        ReadThreshold {
          Threshold: 100
          Percentile: 95
        }
        WriteThreshold {
          Threshold: 100
          Percentile: 95
        }
      }
      HddPerfThreshold {
        ReadThreshold {
          Threshold: 1000
          Percentile: 95
        }
        WriteThreshold {
          Threshold: 1000
          Percentile: 95
        }
      }
      SamplingRate: 100000000
      SlowRequestSamplingRate: 100
      SsdPerfSettings {
        Write {
          Iops: 2079
          Bandwidth: 214882461
        }
        Read {
          Iops: 2079
          Bandwidth: 214882461
        }
      }
      HddPerfSettings {
        Write {
          Iops: 1030
          Bandwidth: 138519272
        }
        Read {
          Iops: 1030
          Bandwidth: 138519272
        }
      }
      NonreplPerfSettings {
        Write {
          Iops: 35114
          Bandwidth: 843000000
        }
        Read {
          Iops: 35114
          Bandwidth: 843000000
        }
      }
      

    nbs-disk-registry-proxy.txt: |+
      Owner: 156142163
      OwnerIdx: 1
      

    nbs-features.txt: |+
      Features {
        Name: "AllocateFreshChannel"
        Whitelist {
          CloudIds: "b1grjf2o6a6f1fmqeu6j"
        }
      }
      Features {
        Name: "FreshChannelWriteRequests"
        Whitelist {
          CloudIds: "b1grjf2o6a6f1fmqeu6j"
        }
      }
      

    nbs-http-proxy.txt: |+
      Port: 9770
      SecurePort: 9769
      Certs {
        CertFile: "/etc/yc/nbs/ssl/certs/cert.pem"
        CertPrivateKeyFile: "/etc/yc/nbs/ssl/private/key.pem"
      }
      NbsServerHost: "localhost"
      NbsServerPort: 9766
      NbsServerInsecure: true
      RootCertsFile: "/etc/yc/nbs/ssl/certs/ca.pem"
      

    nbs-ic.txt: |+
      StartTcp: true
      MaxInflightAmountOfDataInKB: 10240
      MergePerPeerCounters: true
      HandshakeTimeoutDuration {
        Seconds: 1
      }
      

    nbs-log.txt: |+
      Entry {
        Component: "BLOCKSTORE_SERVICE"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_AUTH"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_DISK_REGISTRY"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_SCHEMESHARD"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_PARTITION"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_PARTITION_WORKER"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_DISK_AGENT"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_CLIENT"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_VOLUME"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_NBD"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_VOLUME_PROXY"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_SERVICE_PROXY"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_HIVE_PROXY"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_TRACE"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_SCHEDULER"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_SS_PROXY"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_DISK_REGISTRY_PROXY"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_METERING"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_DISK_AGENT_WORKER"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_SERVER"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_BOOTSTRAPPER"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_DISK_REGISTRY_WORKER"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_VHOST"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_RDMA"
        Level: 6
      }
      Entry {
        Component: "BLOCKSTORE_VOLUME_BALANCER"
        Level: 6
      }
      Entry {
        Component: "BS_QUEUE"
        Level: 3
      }
      SysLog: true
      DefaultLevel: 4
      SysLogService: "NBS_SERVER"
      

    nbs-server.txt: |+
      ServerConfig {
        Host: "localhost"
        Port: 9766
        DataHost: "localhost"
        DataPort: 9767
        ThreadsCount: 4
        SecureHost: "*"
        SecurePort: 9768
        RootCertsFile: "/etc/yc/nbs/ssl/certs/ca.pem"
        CertFile: "/etc/yc/nbs/ssl/certs/cert.pem"
        CertPrivateKeyFile: "/etc/yc/nbs/ssl/private/key.pem"
        StrictContractValidation: false
        VhostEnabled: true
        VhostThreadsCount: 4
        NodeType: "nbs"
        EndpointsKeyringName: "nbs-endpoints-v2"
        NbdEnabled: true
        NbdThreadsCount: 4
        NbdSocketSuffix: "_nbd"
        RdmaClientEnabled: true
        RdmaClientConfig {
          QueueSize: 256
          MaxBufferSize: 4198400
          PollerThreads: 1
          WaitMode: WAIT_MODE_ADAPTIVE_WAIT
        }
      }
      

    nbs-stats-upload.txt: |+
      StatsTableName: "cloud-prod-vla-perfstats"
      HistoryTablePrefix: "cloud-prod-vla-perfstats"
      DatabaseName: "/ru-prestable/nbs/test/volumestats/"
      TokenFile: "/etc/yc/nbs/server/ydb-stats-token"
      ServerAddress: "ydb-ru-prestable.yandex.net:2135"
      HistoryTableLifetimeDays: 7
      StatsTableRotationAfterDays: 1
      ArchiveStatsTableName: "cloud-prod-vla-archive-perfstats"
      BlobLoadMetricsTableName: "cloud-prod-vla-metrics-perfstats"
      

    nbs-storage.txt: |+
      SchemeShardDir: "/vla/NBS"
      DisableLocalService: true
      CompactionGarbageThreshold: 20
      AllowVersionInModifyScheme: true
      ThrottlingEnabled: true
      ThrottlingEnabledSSD: true
      StatsUploadInterval: 300000
      AuthorizationMode: AUTHORIZATION_REQUIRE
      FolderId: "yc.nbs.nbs-permissions"
      WriteRequestBatchingEnabled: true
      SSDCompactionType: CT_LOAD
      HDDCompactionType: CT_LOAD
      V1GarbageCompactionEnabled: true
      AcquireNonReplicatedDevices: true
      MaxDisksInPlacementGroup: 8
      IncrementalCompactionEnabled: true
      UseSparseMergedBlobs: true
      FreshChannelCount: 1
      FreshChannelWriteRequestsEnabled: true
      NonReplicatedMinRequestTimeout: 1000
      CleanupPartitionChannelsAtStartup: true
      RunV2SoftGcAtStartup: true
      MultipartitionVolumesEnabled: true
      NonReplicatedMigrationStartAllowed: true
      NonReplicatedIOFadingDuration: 1
      LogicalUsedBlocksCalculationEnabled: true
      UseNonreplicatedRdmaActor: true
      

    nbs-sys.txt: |+
      Executor {
        Type: BASIC
        Threads: 3
        SpinThreshold: 10
        Name: "System"
      }
      Executor {
        Type: BASIC
        Threads: 3
        SpinThreshold: 10
        Name: "User"
      }
      Executor {
        Type: BASIC
        Threads: 1
        SpinThreshold: 1
        Name: "Batch"
      }
      Executor {
        Type: IO
        Threads: 1
        Name: "IO"
      }
      Executor {
        Type: BASIC
        Threads: 3
        SpinThreshold: 10
        Name: "IC"
        TimePerMailboxMicroSecs: 100
      }
      Scheduler {
        Resolution: 64
        SpinThreshold: 0
        ProgressThreshold: 10000
      }
      SysExecutor: 0
      UserExecutor: 1
      IoExecutor: 3
      BatchExecutor: 2
      ServiceExecutor {
        ServiceName: "Interconnect"
        ExecutorId: 4
      }
      

    nbs_server.cfg: |+
      
      nbs_domain="vla"
      nbs_ic_port="${nbs_ic_port:-"29014"}"
      nbs_mon_port="${nbs_mon_port:-"8766"}"
      nbs_node_broker_port="${nbs_node_broker_port:-"2135"}"
      nbs_mon_address="${nbs_mon_address:-"localhost"}"
      nbs_home="${nbs_home:-"/Berkanavt/nbs-server"}"
      nbs_config="${nbs_home}/cfg"
      nbs_system_file="${nbs_config}/nbs-sys.txt"
      nbs_log_file="${nbs_config}/nbs-log.txt"
      nbs_server_file="${nbs_config}/nbs-server.txt"
      nbs_client_file="${nbs_config}/nbs-client.txt"
      nbs_features_file="${nbs_config}/nbs-features.txt"
      nbs_storage_file="${nbs_config}/nbs-storage.txt"
      nbs_domain_file="${nbs_config}/nbs-domains.txt"
      nbs_naming_file="${nbs_config}/nbs-names.txt"
      nbs_dynamic_naming_file="${nbs_config}/dyn_ns.txt"
      nbs_ic_file="${nbs_config}/nbs-ic.txt"
      nbs_auth_file="${nbs_config}/nbs-auth.txt"
      nbs_diag_file="${nbs_config}/nbs-diag.txt"
      nbs_discovery_file="${nbs_config}/nbs-discovery.txt"
      nbs_stats_file="${nbs_config}/nbs-stats-upload.txt"
      nbs_breakpad_file=${nbs_config}/nbs-breakpad.json
      nbs_dr_proxy_file="${nbs_config}/nbs-disk-registry-proxy.txt"
      nbs_disk_agent_file="${nbs_config}/nbs-disk-agent.txt"
      nbs_location_file="${nbs_config}/nbs-location.txt"
      nbs_logbroker_file="${nbs_config}/nbs-logbroker.txt"
      nbs_notify_file="${nbs_config}/nbs-notify.txt"
      
      [ -s /etc/default/nbs_server.custom ] && . /etc/default/nbs_server.custom
      
      nbs_arg="${nbs_arg} --domain ${nbs_domain}"
      nbs_arg="${nbs_arg} --ic-port ${nbs_ic_port}"
      nbs_arg="${nbs_arg} --mon-port ${nbs_mon_port}"
      nbs_arg="${nbs_arg} --node-broker-port ${nbs_node_broker_port}"
      nbs_arg="${nbs_arg} --load-configs-from-cms"
      if [ ! -z "${nbs_mon_address}" ]; then
          nbs_arg="${nbs_arg}${nbs_mon_address:+ --mon-address ${nbs_mon_address}}"
      else
          echo "Monitoring address is not defined."
      fi
      nbs_arg="${nbs_arg}${nbs_system_file:+ --sys-file ${nbs_system_file}}"
      nbs_arg="${nbs_arg}${nbs_log_file:+ --log-file ${nbs_log_file}}"
      nbs_arg="${nbs_arg}${nbs_server_file:+ --server-file ${nbs_server_file}}"
      if [ -f "${nbs_features_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_features_file:+ --features-file ${nbs_features_file}}"
      fi
      
      nbs_arg="${nbs_arg}${nbs_storage_file:+ --storage-file ${nbs_storage_file}}"
      nbs_arg="${nbs_arg}${nbs_domain_file:+ --domains-file ${nbs_domain_file}}"
      nbs_arg="${nbs_arg}${nbs_naming_file:+ --naming-file ${nbs_naming_file}}"
      nbs_arg="${nbs_arg}${nbs_ic_file:+ --ic-file ${nbs_ic_file}}"
      
      if [ -f "${nbs_auth_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_auth_file:+ --auth-file ${nbs_auth_file}}"
      fi
      
      if [ -f "${nbs_diag_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_diag_file:+ --diag-file ${nbs_diag_file}}"
      fi
      
      if [ -f "${nbs_dynamic_naming_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_dynamic_naming_file:+ --dynamic-naming-file ${nbs_dynamic_naming_file}}"
      fi
      
      if [ -f "${nbs_discovery_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_discovery_file:+ --discovery-file ${nbs_discovery_file}}"
      fi
      
      if [ -f "${nbs_stats_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_stats_file:+ --ydbstats-file ${nbs_stats_file}}"
      fi
      
      if [ -f "${nbs_restarts_count_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_restarts_count_file:+ --restarts-count-file ${nbs_restarts_count_file}}"
      fi
      
      if [ -f "${nbs_metering_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_metering_file:+ --metering-file ${nbs_metering_file}}"
      fi
      
      if [ -f "${nbs_profile_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_profile_file:+ --profile-file ${nbs_profile_file}}"
      fi
      
      if [ -f "${nbs_dr_proxy_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_dr_proxy_file:+ --dr-proxy-file ${nbs_dr_proxy_file}}"
      fi
      
      if [ -f "${nbs_disk_agent_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_disk_agent_file:+ --disk-agent-file ${nbs_disk_agent_file}}"
      fi
      
      if [ -f "${nbs_location_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_location_file:+ --location-file ${nbs_location_file}}"
      fi
      
      if [ -f "${nbs_logbroker_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_logbroker_file:+ --logbroker-file ${nbs_logbroker_file}}"
      fi
      
      if [ -f "${nbs_notify_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_notify_file:+ --notify-file ${nbs_notify_file}}"
      fi
      
      if [ -f "${nbs_client_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_client_file:+ --client-file ${nbs_client_file}}"
      fi
      
      nbs_arg="${nbs_arg} --lock-memory"
      
      if [ -f "${nbs_breakpad_file}" ] && [ $(jq .enable ${nbs_breakpad_file}) = true ]; then
          nbs_breakpad_arg="${nbs_breakpad_arg} --breakpad-enable"
          nbs_log="${nbs_home}/log/nbs.log"
          nbs_breakpad_arg="${nbs_breakpad_arg}${nbs_log:+ --log ${nbs_log}}"
      fi
      

    nbs_disk_agent.cfg: |+
      
      nbs_domain="vla"
      nbs_ic_port="${nbs_ic_port:-"29012"}"
      nbs_mon_port="${nbs_mon_port:-"8772"}"
      nbs_node_broker_port="${nbs_node_broker_port:-"2135"}"
      nbs_mon_address="${nbs_mon_address:-"localhost"}"
      nbs_home="${nbs_home:-"/Berkanavt/nbs-server"}"
      nbs_config="${nbs_home}/cfg"
      nbs_system_file="${nbs_config}/nbs-sys.txt"
      nbs_log_file="${nbs_config}/nbs-log.txt"
      nbs_server_file="${nbs_config}/nbs-server.txt"
      nbs_features_file="${nbs_config}/nbs-features.txt"
      nbs_storage_file="${nbs_config}/nbs-storage.txt"
      nbs_domain_file="${nbs_config}/nbs-domains.txt"
      nbs_naming_file="${nbs_config}/nbs-names.txt"
      nbs_dynamic_naming_file="${nbs_config}/dyn_ns.txt"
      nbs_ic_file="${nbs_config}/nbs-ic.txt"
      nbs_auth_file="${nbs_config}/nbs-auth.txt"
      nbs_diag_file="${nbs_config}/nbs-diag.txt"
      nbs_breakpad_file=${nbs_config}/nbs-breakpad.json
      nbs_dr_proxy_file="${nbs_config}/nbs-disk-registry-proxy.txt"
      nbs_disk_agent_file="${nbs_config}/nbs-disk-agent.txt"
      nbs_location_file="${nbs_config}/nbs-location.txt"
      
      [ -s /etc/default/nbs_server.custom ] && . /etc/default/nbs_server.custom
      
      nbs_arg="${nbs_arg} --domain ${nbs_domain}"
      nbs_arg="${nbs_arg} --ic-port ${nbs_ic_port}"
      nbs_arg="${nbs_arg} --mon-port ${nbs_mon_port}"
      nbs_arg="${nbs_arg} --node-broker-port ${nbs_node_broker_port}"
      nbs_arg="${nbs_arg} --load-configs-from-cms"
      if [ ! -z "${nbs_mon_address}" ]; then
          nbs_arg="${nbs_arg}${nbs_mon_address:+ --mon-address ${nbs_mon_address}}"
      else
          echo "Monitoring address is not defined."
      fi
      nbs_arg="${nbs_arg}${nbs_system_file:+ --sys-file ${nbs_system_file}}"
      nbs_arg="${nbs_arg}${nbs_log_file:+ --log-file ${nbs_log_file}}"
      nbs_arg="${nbs_arg}${nbs_server_file:+ --server-file ${nbs_server_file}}"
      if [ -f "${nbs_features_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_features_file:+ --features-file ${nbs_features_file}}"
      fi
      
      nbs_arg="${nbs_arg}${nbs_storage_file:+ --storage-file ${nbs_storage_file}}"
      nbs_arg="${nbs_arg}${nbs_domain_file:+ --domains-file ${nbs_domain_file}}"
      nbs_arg="${nbs_arg}${nbs_naming_file:+ --naming-file ${nbs_naming_file}}"
      nbs_arg="${nbs_arg}${nbs_ic_file:+ --ic-file ${nbs_ic_file}}"
      
      if [ -f "${nbs_auth_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_auth_file:+ --auth-file ${nbs_auth_file}}"
      fi
      
      if [ -f "${nbs_diag_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_diag_file:+ --diag-file ${nbs_diag_file}}"
      fi
      
      if [ -f "${nbs_dynamic_naming_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_dynamic_naming_file:+ --dynamic-naming-file ${nbs_dynamic_naming_file}}"
      fi
      
      if [ -f "${nbs_restarts_count_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_restarts_count_file:+ --restarts-count-file ${nbs_restarts_count_file}}"
      fi
      
      if [ -f "${nbs_metering_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_metering_file:+ --metering-file ${nbs_metering_file}}"
      fi
      
      if [ -f "${nbs_profile_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_profile_file:+ --profile-file ${nbs_profile_file}}"
      fi
      
      if [ -f "${nbs_dr_proxy_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_dr_proxy_file:+ --dr-proxy-file ${nbs_dr_proxy_file}}"
      fi
      
      if [ -f "${nbs_disk_agent_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_disk_agent_file:+ --disk-agent-file ${nbs_disk_agent_file}}"
      fi
      
      if [ -f "${nbs_location_file}" ]; then
          nbs_arg="${nbs_arg}${nbs_location_file:+ --location-file ${nbs_location_file}}"
      fi
      
      nbs_arg="${nbs_arg} --syslog-service NBS_DISK_AGENT"
      nbs_arg="${nbs_arg} --lock-memory"
      
      if [ -f "${nbs_breakpad_file}" ] && [ $(jq .enable ${nbs_breakpad_file}) = true ]; then
          nbs_breakpad_arg="${nbs_breakpad_arg} --breakpad-enable"
          nbs_log="${nbs_home}/log/nbs.log"
          nbs_breakpad_arg="${nbs_breakpad_arg}${nbs_log:+ --log ${nbs_log}}"
      fi
      

