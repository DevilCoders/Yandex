
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: saltformulas.bootstrap.cloud.yandex.net
spec:
  group: bootstrap.cloud.yandex.net
  names:
    kind: SaltFormula
    listKind: SaltFormulaList
    plural: saltformulas
    singular: saltformula
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.baseRole
      name: BaseRole
      type: string
    - jsonPath: .spec.role
      name: Role
      type: string
    - jsonPath: .spec.version
      name: Version
      type: string
    - jsonPath: .status.desired
      name: Desired
      type: string
    - jsonPath: .status.current
      name: Current
      type: string
    - jsonPath: .status.ready
      name: Ready
      type: string
    - jsonPath: .status.epoch
      name: Epoch
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SaltFormula is the Schema for the saltformulas API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SaltFormulaSpec defines the desired state of SaltFormula
            properties:
              apply:
                default: false
                description: Apply run salt-call without test=True
                type: boolean
              baseRole:
                description: BaseRole defines base role for which this salt-formula
                  version should be applied
                type: string
              batchSize:
                default: 1
                description: BatchSize is how many jobs, salt-call per node, will
                  be running at the same time
                type: integer
              maxFail:
                description: MaxFail is how many jobs can fail before we stop scheduling
                  new jobs
                type: integer
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector defines nodes where salt-formula would be
                  applied
                type: object
              retry:
                default: 1
                description: Retry using as BackoffLimit in JobSpec Specifies the
                  number of retries before marking this job failed.
                format: int32
                type: integer
              role:
                description: Role is salt formula role for update
                type: string
              skipLockUpdatedHosts:
                default: false
                description: SkipLockUpdatedHosts disables locking mechanism for hosts
                  where salt-formula is applied, so multiple salt-call's can be run
                  in parallel
                type: boolean
              suspend:
                default: false
                description: Suspend control provision jobs If something goes wrong
                  with release we could just update this field And new jobs wouldn't
                  provision
                type: boolean
              version:
                description: Version is deb package version of yc-salt-formula
                type: string
            required:
            - baseRole
            - role
            - version
            type: object
          status:
            description: SaltFormulaStatus defines the observed state of SaltFormula
            properties:
              active:
                description: A list of pointers to currently running jobs.
                items:
                  description: 'ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs.  1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage.  2.
                    Invalid usage help.  It is impossible to add specific help for
                    individual usage.  In most embedded usages, there are particular     restrictions
                    like, "must refer only to types A and B" or "UID not honored"
                    or "name must be restricted".     Those cannot be well described
                    when embedded.  3. Inconsistent validation.  Because the usages
                    are different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen.  4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity     during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple     and the version of the actual
                    struct is irrelevant.  5. We cannot easily change it.  Because
                    this type is embedded in many locations, updates to this type     will
                    affect numerous schemas.  Don''t make new APIs embed an underspecified
                    API type they do not control. Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    .'
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
              current:
                default: 0
                format: int32
                type: integer
              desired:
                default: 0
                format: int32
                type: integer
              epoch:
                description: Epoch control epoch id for cluster-map
                type: string
              lastScheduleTime:
                description: Information when was the last time the job was successfully
                  scheduled.
                format: date-time
                type: string
              ready:
                default: 0
                format: int32
                type: integer
            required:
            - current
            - desired
            - epoch
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
