metric:
  schema: kms.adjustment.kop
  usage:
    quantity: 100
skus:
  kms.adjustment.kop:
    usage:
      quantity: 100
      unit: kop
    pricing:
      quantity: 1
      unit: rub

---
metric:
  schema: kms.api.v1
  usage:
    quantity: 10000
  tags:
    method: encrypt
skus:
  kms.api.v1.encryptdecrypt:
    usage:
      quantity: 10000
      unit: request
    pricing:
      quantity: 1
      unit: 10k*request

---
metric:
  schema: kms.api.v1
  usage:
    quantity: 10000
  tags:
    method: decrypt
skus:
  kms.api.v1.encryptdecrypt:
    usage:
      quantity: 10000
      unit: request
    pricing:
      quantity: 1
      unit: 10k*request

---
metric:
  schema: kms.api.v1
  usage:
    quantity: 10000
  tags:
    method: reencrypt
skus:
  kms.api.v1.encryptdecrypt:
    usage:
      quantity: 10000
      unit: request
    pricing:
      quantity: 1
      unit: 10k*request

---
metric:
  schema: kms.api.v1
  usage:
    quantity: 10000
  tags:
    method: generatedatakey
skus:
  kms.api.v1.generatedatakey:
    usage:
      quantity: 10000
      unit: request
    pricing:
      quantity: 1
      unit: 10k*request

---
metric:
  schema: kms.storage.v1
  usage:
    quantity: 3600
  tags:
    storage: this is required by accident
skus:
  kms.storage.v1.software:
    usage:
      quantity: 3600
      unit: key_version*second
    pricing:
      quantity: 1
      unit: key_version*hour
