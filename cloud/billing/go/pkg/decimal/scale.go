package decimal

import "math/bits"

// scaleFrom15 change decimal scale from 15 (for Decimal128) to p.scale
func scaleFrom15(v [2]uint64, scale uint32) (result [2]uint64) {
	scaleFactor := tenthPowers[scaleDecimals-scale][0] // all allowed factors can be stored in uint64

	var r uint64
	result[1], r = bits.Div64(0, v[1], scaleFactor)
	result[0], r = bits.Div64(r, v[0], scaleFactor)

	if (r << 1) >= scaleFactor {
		carry := uint64(0)
		result[0], carry = bits.Add64(result[0], 1, carry)
		result[1], _ = bits.Add64(result[1], 0, carry)
	}
	return
}

var (
	// precalculated powers of 10 to speedup operations
	tenthPowers = [...][2]uint64{
		{0x0000000000000001, 0x0000000000000000}, //  0										   1
		{0x000000000000000a, 0x0000000000000000}, //  1                                       10
		{0x0000000000000064, 0x0000000000000000}, //  2	                                     100
		{0x00000000000003e8, 0x0000000000000000}, //  3	                                    1000
		{0x0000000000002710, 0x0000000000000000}, //  4	                                   10000
		{0x00000000000186a0, 0x0000000000000000}, //  5	                                  100000
		{0x00000000000f4240, 0x0000000000000000}, //  6	                                 1000000
		{0x0000000000989680, 0x0000000000000000}, //  7	                                10000000
		{0x0000000005f5e100, 0x0000000000000000}, //  8	                               100000000
		{0x000000003b9aca00, 0x0000000000000000}, //  9	                              1000000000
		{0x00000002540be400, 0x0000000000000000}, // 10	                             10000000000
		{0x000000174876e800, 0x0000000000000000}, // 11	                            100000000000
		{0x000000e8d4a51000, 0x0000000000000000}, // 12	                           1000000000000
		{0x000009184e72a000, 0x0000000000000000}, // 13	                          10000000000000
		{0x00005af3107a4000, 0x0000000000000000}, // 14	                         100000000000000
		{0x00038d7ea4c68000, 0x0000000000000000}, // 15	                        1000000000000000
		{0x002386f26fc10000, 0x0000000000000000}, // 16	                       10000000000000000
		{0x016345785d8a0000, 0x0000000000000000}, // 17	                      100000000000000000
		{0x0de0b6b3a7640000, 0x0000000000000000}, // 18	                     1000000000000000000
		{0x8ac7230489e80000, 0x0000000000000000}, // 19	                    10000000000000000000
		{0x6bc75e2d63100000, 0x0000000000000005}, // 20	                   100000000000000000000
		{0x35c9adc5dea00000, 0x0000000000000036}, // 21	                  1000000000000000000000
		{0x19e0c9bab2400000, 0x000000000000021e}, // 22	                 10000000000000000000000
		{0x02c7e14af6800000, 0x000000000000152d}, // 23	                100000000000000000000000
		{0x1bcecceda1000000, 0x000000000000d3c2}, // 24	               1000000000000000000000000
		{0x161401484a000000, 0x0000000000084595}, // 25	              10000000000000000000000000
		{0xdcc80cd2e4000000, 0x000000000052b7d2}, // 26	             100000000000000000000000000
		{0x9fd0803ce8000000, 0x00000000033b2e3c}, // 27	            1000000000000000000000000000
		{0x3e25026110000000, 0x00000000204fce5e}, // 28	           10000000000000000000000000000
		{0x6d7217caa0000000, 0x00000001431e0fae}, // 29	          100000000000000000000000000000
		{0x4674edea40000000, 0x0000000c9f2c9cd0}, // 30	         1000000000000000000000000000000
		{0xc0914b2680000000, 0x0000007e37be2022}, // 31	        10000000000000000000000000000000
		{0x85acef8100000000, 0x000004ee2d6d415b}, // 32	       100000000000000000000000000000000
		{0x38c15b0a00000000, 0x0000314dc6448d93}, // 33	      1000000000000000000000000000000000
		{0x378d8e6400000000, 0x0001ed09bead87c0}, // 34	     10000000000000000000000000000000000
		{0x2b878fe800000000, 0x0013426172c74d82}, // 35	    100000000000000000000000000000000000
		{0xb34b9f1000000000, 0x00c097ce7bc90715}, // 36	   1000000000000000000000000000000000000
		{0x00f436a000000000, 0x0785ee10d5da46d9}, // 37	  10000000000000000000000000000000000000
		{0x098a224000000000, 0x4b3b4ca85a86c47a}, // 38	 100000000000000000000000000000000000000
	}
)
