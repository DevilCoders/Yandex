// Code generated by mockery. DO NOT EDIT.

package lockbox

import (
	context "context"

	"a.yandex-team.ru/cloud/billing/go/piper/internal/interconnect/lockbox"
	mock "github.com/stretchr/testify/mock"
)

// MockLockboxClient is an autogenerated mock type for the LockboxClient type
type MockLockboxClient struct {
	mock.Mock
}

// GetSecret provides a mock function with given fields: ctx, key
func (_m *MockLockboxClient) GetSecret(ctx context.Context, key string) (map[string]lockbox.SecretValue, error) {
	ret := _m.Called(ctx, key)

	var r0 map[string]lockbox.SecretValue
	if rf, ok := ret.Get(0).(func(context.Context, string) map[string]lockbox.SecretValue); ok {
		r0 = rf(ctx, key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]lockbox.SecretValue)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
