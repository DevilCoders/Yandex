syntax = "proto3";

package yandex.cloud.monitoring.v3;

import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";
import "yandex/cloud/monitoring/v3/alert.proto";
import "yandex/cloud/monitoring/v3/alert_timeseries.proto";
import "yandex/cloud/monitoring/v3/channel_state.proto";
import "yandex/cloud/monitoring/v3/evaluation_status.proto";
import "yandex/cloud/monitoring/v3/notification_stats.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/public-api/yandex/cloud/monitoring/v3;monitoring";
option java_package = "yandex.cloud.api.monitoring.v3";

// A set of methods for managing Alert resources.
service AlertService {
    // Returns the specified Alert resource.
    //
    // To get the list of available Alert resources, make a [List] request.
    rpc Get (GetAlertRequest) returns (Alert) {
        option (google.api.http) = { get: "/monitoring/v3/alerts/{alert_id}" };
    }

    // Retrieves the list of Alert resources.
    rpc List (ListAlertsRequest) returns (ListAlertsResponse) {
        option (google.api.http) = { get: "/monitoring/v3/alerts" };
    }

    // Creates a alert.
    rpc Create (CreateAlertRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/monitoring/v3/alerts" body: "*" };
        option (yandex.cloud.api.operation) = {
            metadata: "CreateAlertMetadata"
            response: "Alert"
        };
    }

    // Updates the specified alert.
    rpc Update (UpdateAlertRequest) returns (operation.Operation) {
        option (google.api.http) = { patch: "/monitoring/v3/alerts/{alert_id}" body: "*" };
        option (yandex.cloud.api.operation) = {
            metadata: "UpdateAlertMetadata"
            response: "Alert"
        };
    }

    // Deletes the specified alert.
    rpc Delete (DeleteAlertRequest) returns (operation.Operation) {
        option (google.api.http) = { delete: "/monitoring/v3/alerts/{alert_id}" };
        option (yandex.cloud.api.operation) = {
            metadata: "DeleteAlertMetadata"
            response: "google.protobuf.Empty"
        };
    }

    rpc GetEvaluationStats (GetAlertEvaluationStatsRequest) returns (GetAlertEvaluationStatsResponse) {
        option (google.api.http) = { get: "/monitoring/v3/alerts/{alert_id}:getEvaluationStats" };
    }

    rpc GetNotificationStats (GetAlertNotificationStatsRequest) returns (GetAlertNotificationStatsResponse) {
        option (google.api.http) = { get: "/monitoring/v3/alerts/{alert_id}:getNotificationStats" };
    }

    rpc GetEvaluationState (GetAlertEvaluationStateRequest) returns (GetAlertEvaluationStateResponse) {
        option (google.api.http) = { get: "/monitoring/v3/alerts/{alert_id}:getEvaluationState" };
    }

    rpc GetNotificationState (GetAlertNotificationStateRequest) returns (GetAlertNotificationStateResponse) {
        option (google.api.http) = { get: "/monitoring/v3/alerts/{alert_id}:getNotificationState" };
    }

    rpc ExplainEvaluation (ExplainAlertEvaluationRequest) returns (ExplainAlertEvaluationResponse) {
        option (google.api.http) = { post: "/monitoring/v3/alerts/{alert_id}:explainEvaluation" body: "*" };
    }

    rpc ExplainNewEvaluation (ExplainNewAlertEvaluationRequest) returns (ExplainNewAlertEvaluationResponse) {
        option (google.api.http) = { post: "/monitoring/v3/alerts:explainEvaluation" body: "*" };
    }

    // Folder stats.
    rpc GetStats (GetAlertStatsRequest) returns (GetAlertStatsResponse) {
        option (google.api.http) = { get: "/monitoring/v3/alerts:getStats" };
    }

    // Mute the specified alert.
    rpc Mute (MuteAlertRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/monitoring/v3/alerts/{alert_id}:mute" body: "*" };
        option (yandex.cloud.api.operation) = {
            metadata: "MuteAlertMetadata"
            response: "Alert"
        };
    };

    // Unmute the specified alert.
    rpc Unmute (UnmuteAlertRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/monitoring/v3/alerts/{alert_id}:unmute" body: "*" };
        option (yandex.cloud.api.operation) = {
            metadata: "UnmuteAlertMetadata"
            response: "Alert"
        };
    };

    // Lists operations for the specified alert.
    rpc ListOperations (ListAlertOperationsRequest) returns (ListAlertOperationsResponse) {
        option (google.api.http) = { get: "/monitoring/v3/alerts/{alert_id}/operations" };
    }
}

message GetAlertRequest {
    // ID of the Alert resource to return.
    string alert_id = 1 [(required) = true, (length) = "<=50"];
}

message ListAlertsRequest {
    // ID of the folder to list alerts in.
    string folder_id = 1 [(required) = true, (length) = "<=50"];

    // The maximum number of results per page to return. If the number of available
    // results is larger than [page_size],
    // the service returns a [ListAlertsResponse.next_page_token]
    // that can be used to get the next page of results in subsequent list requests.
    int64 page_size = 2 [(value) = "<=1000"];

    // Page token. To get the next page of results, set [page_token] to the
    // [ListAlertsResponse.next_page_token] returned by a previous list request.
    string page_token = 3 [(length) = "<=100"];

    // A filter expression that filters resources listed in the response.
    // Currently you can use filtering only on the [Alert.id] or [Alert.name] field.
    string filter = 4 [(length) = "<=1000"];
}

message ListAlertsResponse {
    // List of Alert resources.
    repeated Alert alerts = 1;

    // This token allows you to get the next page of results for list requests. If the number of results
    // is larger than [ListAlertsRequest.page_size], use
    // the [next_page_token] as the value
    // for the [ListAlertsRequest.page_token] query parameter
    // in the next list request. Each subsequent list request will have its own
    // [next_page_token] to continue paging through the results.
    string next_page_token = 2;
}

message CreateAlertRequest {
    // ID of the folder to create alert in.
    string folder_id = 1  [(required) = true, (length) = "<=50"];

    // Name of the alert.
    string name = 2 [(pattern) = "|[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];

    // Description of the alert.
    string description = 3 [(length) = "<=256"];

    // Resource labels as `key:value` pairs.
    map<string, string> labels = 4 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_./\\@0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_./\\@0-9a-z]*"];

    // Alert evaluation window in seconds.
    google.protobuf.Duration window = 5;

    // Alert evaluation delay in seconds.
    google.protobuf.Duration delay = 6;

    oneof type {
        // Threshold alert.
        ThresholdAlert threshold = 7;
    }

    // Annotations.
    map<string, string> annotations = 8;

    repeated NotificationConfig channels = 9;
}

message CreateAlertMetadata {
    // ID of the alert.
    string alert_id = 1;
}

message UpdateAlertRequest {
    // ID of the alert.
    string alert_id = 1 [(required) = true, (length) = "<=50"];

    // Field mask that specifies which fields of the Alert resource are going to be updated.
    google.protobuf.FieldMask update_mask = 2;

    // Name of the alert.
    string name = 3 [(pattern) = "|[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];

    // Description of the alert.
    string description = 4 [(length) = "<=256"];

    // Resource labels as `key:value` pairs.
    //
    // Existing set of `labels` is completely replaced by the provided set.
    map<string, string> labels = 5 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_./\\@0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_./\\@0-9a-z]*"];

    // Alert evaluation window in seconds.
    google.protobuf.Duration window = 6;

    // Alert evaluation delay in seconds.
    google.protobuf.Duration delay = 7;

    oneof type {
        // Threshold alert.
        ThresholdAlert threshold = 8;
    }

    // Annotations.
    map<string, string> annotations = 9;

    repeated NotificationConfig channels = 10;
}

message UpdateAlertMetadata {
    // ID of the alert that is being updated.
    string alert_id = 1;
}

message DeleteAlertRequest {
    // ID of the alert to delete.
    string alert_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteAlertMetadata {
    // ID of the alert that is being deleted.
    string alert_id = 1;
}

message EvaluationStats {
    int64 ok_count = 1;

    int64 warn_count = 2;

    int64 alarm_count = 3;

    int64 error_count = 4;

    int64 no_data_count = 5;
}

message GetAlertEvaluationStateRequest {
    // ID of the Alert.
    string alert_id = 1 [(required) = true, (length) = "<=50"];
}

message GetAlertEvaluationStateResponse {
    // Reference to folder that contains alert.
    string folder_id = 1;

    // Unique identity for alert.
    string alert_id = 2;

    // Version of alert that will be use to evaluate latest time. Each change of alert reset state.
    int64 alert_version = 3;

    // Evaluation status and details. It's status of latest change between statuses, for example from OK to ALARM.
    EvaluationStatus status = 4;

    // Time when evaluation state will changed latest time, for example from OK to ALARM.
    google.protobuf.Timestamp since = 5;

    // UNIX time when latest alert evaluation occurs.
    // Since - LatestEval = how much time alert in particular state.
    google.protobuf.Timestamp latest_eval = 6;

    // Evaluation status and details.
    // It's status of previous change between statuses, for example from OK to ALARM.
    EvaluationStatus previous_status = 7;
}

message GetAlertEvaluationStatsRequest {
    // ID of the alert.
    string alert_id = 1 [(required) = true, (length) = "<=50"];
}

message GetAlertEvaluationStatsResponse {
    EvaluationStats evaluation_stats = 1;
}

message GetAlertNotificationStateRequest {
    // ID of the alert.
    string alert_id = 1 [(required) = true, (length) = "<=50"];
}

message GetAlertNotificationStateResponse {
    repeated ChannelState channel_states = 1;
}

message GetAlertNotificationStatsRequest {
    // ID of the alert.
    string alert_id = 1 [(required) = true, (length) = "<=50"];
}

message GetAlertNotificationStatsResponse {
    NotificationStats notification_stats = 1;
}

message ExplainAlertEvaluationRequest {
    string alert_id = 1 [(required) = true, (length) = "<=50"];

    google.protobuf.Timestamp time = 3;
}

message ExplainAlertEvaluationResponse {
    EvaluationStatus evaluation_status = 1;

    repeated AlertTimeseries series = 2;
}

message ExplainNewAlertEvaluationRequest {
    string folder_id = 1 [(required) = true, (length) = "<=50"];

    google.protobuf.Timestamp time = 2;

    // Name of the alert.
    string name = 7 [(pattern) = "|[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];

    // Description of the alert.
    string description = 8 [(length) = "<=256"];

    // Status of current alert.
    Alert.Status status = 9;

    // Alert evaluation window in seconds.
    google.protobuf.Duration window = 10;

    // Alert evaluation delay in seconds.
    google.protobuf.Duration delay = 11;

    oneof type {
        // Threshold alert.
        ThresholdAlert threshold = 12;
    }

    // Annotations.
    map<string, string> annotations = 13;

    repeated NotificationConfig channels = 14;
}

message ExplainNewAlertEvaluationResponse {
    EvaluationStatus evaluation_status = 1;

    repeated AlertTimeseries series = 2;
}

message GetAlertStatsRequest {
    // Folder ID.
    string folder_id = 1 [(required) = true, (length) = "<=50"];
}

message GetAlertStatsResponse {
    int64 alert_count = 1;

    EvaluationStats evaluation_stats = 2;

    NotificationStats notification_stats = 3;
}

message MuteAlertRequest {
    string alert_id = 1;
}

message MuteAlertMetadata {
    string alert_id = 1;
}

message UnmuteAlertRequest {
    string alert_id = 1;
}

message UnmuteAlertMetadata {
    string alert_id = 1;
}

message ListAlertOperationsRequest {
    // ID of the alert to list operations for.
    string alert_id = 1 [(required) = true, (length) = "<=50"];

    // The maximum number of results per page to return. If the number of available
    // results is larger than [page_size], the service returns a [ListAlertOperationsResponse.next_page_token]
    // that can be used to get the next page of results in subsequent list requests.
    int64 page_size = 2 [(value) = "<=1000"];

    // Page token. To get the next page of results, set [page_token] to the
    // [ListAlertOperationsResponse.next_page_token] returned by a previous list request.
    string page_token = 3 [(length) = "<=100"];
}

message ListAlertOperationsResponse {
    // List of operations for the specified alert.
    repeated operation.Operation operations = 1;

    // This token allows you to get the next page of results for list requests. If the number of results
    // is larger than [ListAlertOperationsRequest.page_size], use the [next_page_token] as the value
    // for the [ListAlertOperationsRequest.page_token] query parameter in the next list request.
    // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    string next_page_token = 2;
}
