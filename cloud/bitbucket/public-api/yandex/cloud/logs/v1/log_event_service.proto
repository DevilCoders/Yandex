syntax = "proto3";

package yandex.cloud.logs.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "yandex/cloud/api/tools/options.proto";
import "yandex/cloud/validation.proto";
import "yandex/cloud/logs/v1/log_event.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/public-api/yandex/cloud/logs/v1;logs";
option java_package = "yandex.cloud.api.logs.v1";

service LogEventService {
  rpc Read (ReadLogEventsRequest) returns (ReadLogEventsResponse) {
    option (google.api.http) = { get: "/logs/v1/events/{log_group_id}/{stream_name}" };
    option (yandex.cloud.api.tools.method).lint_skip.http_verb = true;
  }
  rpc Write (WriteLogEventsRequest) returns (WriteLogEventsResponse) {
    option (google.api.http) = { post: "/logs/v1/events/{log_group_id}/{stream_name}" body: "*" };
  }
}

message ReadLogEventsRequest {
  string log_group_id = 1 [(required) = true];
  string stream_name = 2 [(required) = true];

  int64 page_size = 5;
  oneof selector {
    string page_token = 6;
    Criteria criteria = 7;
  }
}

message ReadLogEventsResponse {
  repeated LogEvent log_events = 1;
  string next_page_token = 2;
  string previous_page_token = 3;
}

message Criteria {
  google.protobuf.Timestamp since = 1;
  google.protobuf.Timestamp until = 2;
}

message WriteLogEventsRequest {
  string log_group_id = 1 [(required) = true];
  string stream_name = 2 [(required) = true];
  repeated IncomingLogEvent events = 3 [(size) = "<=100"];
}

message IncomingLogEvent {
  google.protobuf.Timestamp created_at = 1 [(required) = true];
  string message = 2 [(length) = "<=262144"];
}

message WriteLogEventsResponse {
}
