syntax = "proto3";

package yandex.cloud.audit;

import "yandex/cloud/validation.proto";
import "yandex/cloud/access/access.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/public-api/yandex/cloud/audit;audit";
option java_package = "yandex.cloud.api.audit";
option java_outer_classname = "AuditEvents";

message ResourceMetadata {
  repeated Resource path = 1;
}

message Authentication {
  enum SubjectType {
    SUBJECT_TYPE_UNSPECIFIED = 0;
    YANDEX_PASSPORT_USER_ACCOUNT = 1;
    SERVICE_ACCOUNT = 2;
    FEDERATED_USER_ACCOUNT = 3;
  }

  bool authenticated = 1;
  SubjectType subject_type = 2;
  string subject_id = 3;
  string subject_name = 4;
}

message Authorization {
  bool authorized = 1;
}

message RequestMetadata {
  string remote_address = 1 [(required) = true];
  string user_agent = 2 [(required) = true];
  string request_id = 3 [(required) = true];
}

message Resource {
  string resource_type = 1;
  string resource_id = 2;
  string resource_name = 3;
}

enum EventStatus {
  EVENT_STATUS_UNSPECIFIED = 0;
  STARTED = 1;
  ERROR = 2;
  DONE = 3;
  CANCELLED = 4;
}

message AccessBindingDelta {
  // The action that is being performed on an access binding.
  access.AccessBindingAction action = 1 [(required) = true];

  // Access binding. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
  AccessBinding access_binding = 2[(required) = true];
}

message AccessBinding {
  enum SubjectType {
    SUBJECT_TYPE_UNSPECIFIED = 0;
    YANDEX_PASSPORT_USER_ACCOUNT = 1;
    SERVICE_ACCOUNT = 2;
    FEDERATED_USER_ACCOUNT = 3;
    SYSTEM = 4;
  }

  // ID of the [yandex.cloud.iam.v1.Role] that is assigned to the [subject].
  string role_id = 1 [(required) = true, (length) = "<=50"];

  // ID of the subject.
  //
  // It can contain one of the following values:
  // * `ALL_AUTHENTICATED_USERS`: A special system identifier that represents anyone
  //    who is authenticated. It can be used only if the [type] is `system`.
  // * `ALL_USERS`: A special system identifier that represents anyone. No authentication is required.
  //    For example, you don't need to specify the IAM token in an API query.
  // * `<cloud generated id>`: An identifier that represents a user account.
  //    It can be used only if the [type] is `YANDEX_PASSPORT_USER_ACCOUNT`, `FEDERATED_USER_ACCOUNT` or `SERVICE_ACCOUNT`.
  string subject_id = 2 [(required) = true, (length) = "<=50"];

  // Type of the subject.
  //
  // It can contain one of the following values:
  // * `YANDEX_PASSPORT_USER_ACCOUNT`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
  // * `SERVICE_ACCOUNT`: A service account. This type represents the [yandex.cloud.iam.v1.ServiceAccount] resource.
  // * `FEDERATED_USER_ACCOUNT`: A federated account. This type represents a user from an identity federation, like Active Directory.
  // * `SYSTEM`: System group. This type represents several accounts with a common system identifier.
  //
  // For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).
  SubjectType subject_type = 3 [(required) = true];

  // Name of the subject.
  string subject_name = 4;
}

message Subject {
  enum SubjectType {
    SUBJECT_TYPE_UNSPECIFIED = 0;
    YANDEX_PASSPORT_USER_ACCOUNT = 1;
    SERVICE_ACCOUNT = 2;
    FEDERATED_USER_ACCOUNT = 3;
  }

  SubjectType subject_type = 1;
  string subject_id = 2 [(required) = true, (length) = "<=50"];
  string subject_name = 3;
}
