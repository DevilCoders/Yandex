syntax = "proto3";

package yandex.cloud.audit.compute;

import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "google/rpc/status.proto";
import "yandex/cloud/audit/common.proto";
import "yandex/cloud/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/public-api/yandex/cloud/audit/compute;compute";
option java_package = "yandex.cloud.api.audit.compute";
option java_outer_classname = "DiskEvents";

message CreateDisk {
  string event_id = 1 [(required) = true];
  string event_source = 2 [(required) = true];
  string event_type = 3 [(required) = true];
  google.protobuf.Timestamp event_time = 4 [(required) = true];
  Authentication authentication = 5 [(required) = true];
  Authorization authorization = 6 [(required) = true];
  ResourceMetadata resource_metadata = 7 [(required) = true];
  RequestMetadata request_metadata = 8 [(required) = true];
  EventStatus event_status = 9 [(required) = true];
  google.rpc.Status error = 10;
  EventDetails details = 11 [(required) = true];

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    ERROR = 2;
    DONE = 3;
    CANCELLED = 4;
  }

  message EventDetails {
    string disk_id = 1 [(required) = true];
    string disk_name = 2;

    string type_id = 3;
    string zone_id = 4;

    int64 size = 5;
    int64 block_size = 6;

    oneof source {
      string source_image_id = 7;
      string source_snapshot_id = 8;
    }
  }
}

message UpdateDisk {
  string event_id = 1 [(required) = true];
  string event_source = 2 [(required) = true];
  string event_type = 3 [(required) = true];
  google.protobuf.Timestamp event_time = 4 [(required) = true];
  Authentication authentication = 5 [(required) = true];
  Authorization authorization = 6 [(required) = true];
  ResourceMetadata resource_metadata = 7 [(required) = true];
  RequestMetadata request_metadata = 8 [(required) = true];
  EventStatus event_status = 9 [(required) = true];
  google.rpc.Status error = 10;
  EventDetails details = 11 [(required) = true];

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    ERROR = 2;
    DONE = 3;
  }

  message EventDetails {
    string disk_id = 1 [(required) = true];
    string disk_name = 2;
    int64 size = 4;
    google.protobuf.FieldMask update_mask = 3;
  }
}

message DeleteDisk {
  string event_id = 1 [(required) = true];
  string event_source = 2 [(required) = true];
  string event_type = 3 [(required) = true];
  google.protobuf.Timestamp event_time = 4 [(required) = true];
  Authentication authentication = 5 [(required) = true];
  Authorization authorization = 6 [(required) = true];
  ResourceMetadata resource_metadata = 7 [(required) = true];
  RequestMetadata request_metadata = 8 [(required) = true];
  EventStatus event_status = 9 [(required) = true];
  google.rpc.Status error = 10;
  EventDetails details = 11 [(required) = true];

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    ERROR = 2;
    DONE = 3;
  }

  message EventDetails {
    string disk_id = 1 [(required) = true];
    string disk_name = 2;
  }
}

message ChangeDiskStatus {
  string event_id = 1 [(required) = true];
  string event_source = 2 [(required) = true];
  string event_type = 3 [(required) = true];
  google.protobuf.Timestamp event_time = 4 [(required) = true];
  Authentication authentication = 5 [(required) = true];
  Authorization authorization = 6 [(required) = true];
  ResourceMetadata resource_metadata = 7 [(required) = true];
  RequestMetadata request_metadata = 8 [(required) = true];
  EventStatus event_status = 9 [(required) = true];
  google.rpc.Status error = 10;
  EventDetails details = 11 [(required) = true];

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    ERROR = 2;
    DONE = 3;
  }

  message EventDetails {
    enum DiskStatus {
      DISK_STATUS_UNSPECIFIED = 0;

      // Disk is ready to use.
      READY = 1;

      // Disk encountered a problem and cannot operate.
      ERROR = 2;
    }

    string disk_id = 1 [(required) = true];
    DiskStatus disk_status = 2; // new status
  }
}
