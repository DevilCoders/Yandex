syntax = "proto3";

package yandex.cloud.events.compute;

import "google/rpc/status.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/events/common.proto";
import "yandex/cloud/events/options.proto";
import "yandex/cloud/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/public-api/yandex/cloud/events/compute;compute";
option java_package = "yandex.cloud.api.events.compute";

message CreateDisk {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];
  EventStatus event_status = 5 [(required) = true];

  google.rpc.Status error = 6;

  EventDetails details = 7 [(required) = true];

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    ERROR = 2;
    DONE = 3;
    CANCELLED = 4;
  }

  message EventDetails {
    // Request + Response
    string disk_id = 1 [(required) = true];
    string disk_name = 2;

    string type_id = 3;
    string zone_id = 4;

    int64 size = 5;
    int64 block_size = 6;

    oneof source {
      string source_image_id = 7;
      string source_snapshot_id = 8;
    }
  }
}

message UpdateDisk {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];
  EventStatus event_status = 5 [(required) = true];

  google.rpc.Status error = 6;

  EventDetails details = 7 [(required) = true];

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    ERROR = 2;
    DONE = 3;
  }

  message EventDetails {
    // Request + Response
    string disk_id = 1 [(required) = true];
    string disk_name = 2;
    int64 size = 4;

    // Request
    google.protobuf.FieldMask update_mask = 3;
  }
}

message DeleteDisk {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];
  EventStatus event_status = 5 [(required) = true];

  google.rpc.Status error = 6;

  EventDetails details = 7 [(required) = true];

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    ERROR = 2;
    DONE = 3;
  }

  message EventDetails {
    // Request + Response
    string disk_id = 1 [(required) = true];
    string disk_name = 2;
  }
}

message MoveDisk {
  // MoveDisk call is implemented in private API only.
  option (include) = false;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];
  EventStatus event_status = 5 [(required) = true];

  google.rpc.Status error = 6;

  EventDetails details = 7 [(required) = true];

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    ERROR = 2;
    DONE = 3;
  }

  message EventDetails {
    // Request + Response
    string disk_id = 1 [(required) = true];
    string disk_name = 2;
    string source_folder_id = 3;
    string destination_folder_id = 4;
  }
}

// Event to notify about changes of NRD state
// Disk can migrate from ready to error and vice versa
message ChangeDiskStatus {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];
  EventStatus event_status = 5 [(required) = true];

  google.rpc.Status error = 6;

  EventDetails details = 7 [(required) = true];

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    ERROR = 2;
    DONE = 3;
  }

  message EventDetails {
    enum DiskStatus {
      DISK_STATUS_UNSPECIFIED = 0;
  
      // Disk is ready to use.
      READY = 1;
  
      // Disk encountered a problem and cannot operate.
      ERROR = 2;
    }

    string disk_id = 1 [(required) = true];
    DiskStatus disk_status = 2; // new status
  }
}

message RelocateDisk {
  // NOT a public event (yet)
  option (include) = false;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];
  EventStatus event_status = 5 [(required) = true];

  google.rpc.Status error = 6;

  EventDetails details = 7 [(required) = true];

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    ERROR = 2;
    DONE = 3;
  }

  message EventDetails {
    string disk_id = 1 [(required) = true];
    string disk_name = 2;
    string source_zone_id = 3;
    string destination_zone_id = 4;
  }
}
