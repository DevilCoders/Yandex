syntax = "proto3";

package yandex.cloud.events.iam;

import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";
import "yandex/cloud/events/common.proto";
import "yandex/cloud/validation.proto";
import "yandex/cloud/events/options.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/public-api/yandex/cloud/events/iam;iam";
option java_package = "yandex.cloud.api.events.iam";
option java_outer_classname = "SecretScanningEvents";

message DetectLeakedCredential {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];
  SecretScanningEventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];
  EventStatus event_status = 5 [(required) = true];
  google.rpc.Status error = 6;
  EventDetails details = 7 [(required) = true];
  RequestParameters request_parameters = 8 [(required) = true];
  Response response = 9 [(required) = true];

  message SecretScanningEventMetadata {
    // Global unique identifier of current event.
    // Should be treated as opaque string.
    // Could be used for deduplication.
    string event_id = 1 [(required) = true];

    // Well-known event type in form of fully qualified protobuf
    // message name (eg: yandex.cloud.events.compute.CreateInstance).
    string event_type = 2 [(required) = true];

    // Wall time of event as seen on producing system.
    google.protobuf.Timestamp created_at = 3 [(required) = true];

    // Additional information about trace tree.
    TracingContext tracing_context = 4 [(hide) = true];

    oneof resources {
      ServiceAccountResources service_account_resources = 5;
      OrganizationUserResources organization_user_resources = 6;
    }

    message ServiceAccountResources {
      string cloud_id = 1 [(required) = true];
      string folder_id = 2 [(required) = true];
    }

    message OrganizationUserResources {
      string organization_id = 1 [(required) = true];
    }
  }

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    DONE = 3;
  }

  message RequestParameters {}

  message Response {}

  message EventDetails {
    string url = 1 [(required) = true];

    oneof credential {
      IamToken yandex_cloud_iam_token = 2;
      IamCookie yandex_cloud_iam_cookie = 3;
      IamApiKey yandex_cloud_iam_api_key = 4;
      PassportOauthToken yandex_cloud_passport_oauth_token = 5;
      IamAccessKey yandex_cloud_iam_access_key = 6;
      IamKey yandex_cloud_iam_key = 7;
    }
  }

  message IamToken {
    string iam_token_part = 1 [(required) = true];
    string iam_token_hash = 2 [(required) = true];

    oneof subject {
      UserAccount user_account = 3;
      ServiceAccount service_account = 4;
    }
  }

  message IamCookie {
    string iam_cookie_part = 1 [(required) = true];
    string iam_cookie_hash = 2 [(required) = true];

    oneof subject {
      UserAccount user_account = 3;
    }
  }

  message IamApiKey {
    string iam_api_key_part = 1 [(required) = true];
    string key_id = 2 [(required) = true];

    oneof subject {
      ServiceAccount service_account = 3;
    }
  }

  message PassportOauthToken {
    string passport_oauth_token_part = 1 [(required) = true];

    oneof subject {
      UserAccount user_account = 2;
    }
  }

  message IamAccessKey {
    string key_id = 1 [(required) = true];

    oneof subject {
      ServiceAccount service_account = 2;
    }
  }

  message IamKey {
    string key_id = 1 [(required) = true];

    oneof subject {
      ServiceAccount service_account = 2;
    }
  }

  message UserAccount {
    string user_account_id = 1 [(required) = true];
    string federation_id = 2;
  }

  message ServiceAccount {
    string service_account_id = 1 [(required) = true];
  }

}
