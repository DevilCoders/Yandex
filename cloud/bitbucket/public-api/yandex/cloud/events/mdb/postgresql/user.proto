syntax = "proto3";

package yandex.cloud.events.mdb.postgresql;

import "google/protobuf/field_mask.proto";
import "google/protobuf/wrappers.proto";
import "google/rpc/status.proto";

import "yandex/cloud/events/common.proto";
import "yandex/cloud/events/options.proto";
import "yandex/cloud/validation.proto";
import "yandex/cloud/mdb/postgresql/v1/user.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/public-api/yandex/cloud/events/mdb/postgresql;postgresql";
option java_package = "yandex.cloud.api.events.mdb.postgresql";

message SafeUserSpec {
  option (include) = true;
  
  string name = 1;

  // Don't expose sensitive information:
  //  string password = 2;

  repeated yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;

  google.protobuf.Int64Value conn_limit = 4;

  yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;

  google.protobuf.BoolValue login = 6;

  repeated string grants = 7;
}

message CreateUser {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
    string user_name = 2 [(required) = true];
  }
  
  message RequestParameters {
    // ID of the PostgreSQL cluster to create a user in.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];
    // Properties of the user to be created.
    SafeUserSpec user_spec = 2 [(required) = true];
  }
}

message UpdateUser {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
    string user_name = 2 [(required) = true];
  }
  
  message RequestParameters {
    // ID of the PostgreSQL cluster the user belongs to.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // Name of the user to be updated.
    string user_name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];

    // Field mask that specifies which fields of the PostgreSQL User resource should be updated.
    google.protobuf.FieldMask update_mask = 3;

    // Don't expose sensitive information
    // string password = 4 [(length) = "8-128"];

    // Set of permissions granted to the user to access specific databases.
    repeated yandex.cloud.mdb.postgresql.v1.Permission permissions = 5;

    // Maximum number of database connections available to the user.
    int64 conn_limit = 6 [(value) = ">=10"];

    yandex.cloud.mdb.postgresql.v1.UserSettings settings = 7;

    // This flag defines whether the user can login to a PostgreSQL database.
    google.protobuf.BoolValue login = 8;

    // Roles and privileges that are granted to the user (`GRANT <role> TO <user>`).
    repeated string grants = 9 [(length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];
  }
}

message DeleteUser {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
    string user_name = 2 [(required) = true];
  }

  message RequestParameters {
    // ID of the PostgreSQL cluster the user belongs to.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // Name of the user to delete.
    string user_name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];
  }
}

message GrantUserPermission {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
    string user_name = 2 [(required) = true];
  }
  
  message RequestParameters {
    // ID of the PostgreSQL cluster the user belongs to.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // Name of the user to grant the permission to.
    string user_name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];

    // Permission that should be granted to the specified user.
    yandex.cloud.mdb.postgresql.v1.Permission permission = 3 [(required) = true];
  }
}

message RevokeUserPermission {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
    string user_name = 2 [(required) = true];
  }
  
  message RequestParameters {
    // ID of the PostgreSQL cluster the user belongs to.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // Name of the user to revoke a permission from.
    string user_name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];

    // Name of the database that the user should lose access to.
    string database_name = 3 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];
  }
}
