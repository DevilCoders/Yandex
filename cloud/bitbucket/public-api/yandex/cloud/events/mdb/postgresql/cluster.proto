syntax = "proto3";

package yandex.cloud.events.mdb.postgresql;

import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";

import "yandex/cloud/events/common.proto";
import "yandex/cloud/events/options.proto";
import "yandex/cloud/events/mdb/postgresql/user.proto";
import "yandex/cloud/mdb/postgresql/v1/cluster.proto";
import "yandex/cloud/mdb/postgresql/v1/database.proto";
import "yandex/cloud/mdb/postgresql/v1/cluster_service.proto";
import "yandex/cloud/mdb/postgresql/v1/maintenance.proto";
import "yandex/cloud/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/public-api/yandex/cloud/events/mdb/postgresql;postgresql";
option java_package = "yandex.cloud.api.events.mdb.postgresql";

message CreateCluster {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
  }
  
  message RequestParameters {
    // ID of the folder to create the PostgreSQL cluster in.
    string folder_id = 1 [(required) = true, (length) = "<=50"];

    // Name of the PostgreSQL cluster. The name must be unique within the folder.
    string name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];

    // Description of the PostgreSQL cluster. [can contain sensitive data]
    reserved 3;

    // Custom labels for the PostgreSQL cluster [can contain sensitive data]
    reserved 4;

    // Deployment environment of the PostgreSQL cluster.
    yandex.cloud.mdb.postgresql.v1.Cluster.Environment environment = 5 [(required) = true];

    // Configuration and resources for hosts that should be created for the PostgreSQL cluster.
    yandex.cloud.mdb.postgresql.v1.ConfigSpec config_spec = 6 [(required) = true];

    // Descriptions of databases to be created in the PostgreSQL cluster.
    repeated yandex.cloud.mdb.postgresql.v1.DatabaseSpec database_specs = 7 [(required) = true];

    // Descriptions of database users to be created in the PostgreSQL cluster.
    repeated SafeUserSpec user_specs = 8 [(required) = true];

    // Individual configurations for hosts that should be created for the PostgreSQL cluster.
    repeated yandex.cloud.mdb.postgresql.v1.HostSpec host_specs = 9 [(required) = true];

    // ID of the network to create the cluster in.
    string network_id = 10 [(required) = true, (length) = "<=50"];

    // User security groups
    repeated string security_group_ids = 11;

    // Deletion Protection inhibits deletion of the cluster
    bool deletion_protection = 12;

    // Host groups hosting VMs of the cluster.
    repeated string host_group_ids = 13;
  }
}

message UpdateCluster {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
  }

  message RequestParameters {
    // ID of the PostgreSQL Cluster resource to update.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // Field mask that specifies which fields of the PostgreSQL Cluster resource should be updated.
    google.protobuf.FieldMask update_mask = 2;

    // New description of the PostgreSQL cluster. [can contain sensitive data]
    reserved 3;

    // Custom labels for the PostgreSQL cluster [can contain sensitive data]
    reserved  4;

    // New configuration and resources for hosts in the cluster.
    yandex.cloud.mdb.postgresql.v1.ConfigSpec config_spec = 5;

    // New name for the cluster.
    string name = 6 [(length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];

    // New maintenance window settings for the cluster.
    yandex.cloud.mdb.postgresql.v1.MaintenanceWindow maintenance_window = 7;

    // User security groups
    repeated string security_group_ids = 8;

    // Deletion Protection inhibits deletion of the cluster
    bool deletion_protection = 9;

    // Host groups hosting VMs of the cluster.
    //repeated string host_group_ids = 10;
  }
}

message DeleteCluster {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
  }

  message RequestParameters {
    // ID of the PostgreSQL cluster to delete.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];
  }
}

message StartCluster {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
  }
  
  message RequestParameters {
    // ID of the PostgreSQL cluster to start.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];
  }
}

message StopCluster {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
  }

  message RequestParameters {
    // ID of the PostgreSQL cluster to stop.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];
  }
}

message MoveCluster {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
  }

  message RequestParameters {
    // ID of the PostgreSQL cluster to move.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];
    // ID of the destination folder.
    string destination_folder_id = 2 [(required) = true, (length) = "<=50"];
  }
}

message BackupCluster {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
  }

  message RequestParameters {
    // ID of the PostgreSQL cluster to back up.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];
  }
}

message RestoreCluster {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
    string backup_id = 2 [(required) = true];
  }

  message RequestParameters {
    // ID of the backup to create a cluster from.
    string backup_id = 1 [(required) = true];

    // Timestamp of the moment to which the PostgreSQL cluster should be restored.
    google.protobuf.Timestamp time = 2 [(required) = true];

    // Flag that indicates whether a database should be restored to the first backup point
    // available just after the timestamp specified in the [time] field instead of just before.
    bool time_inclusive = 3;

    // Name of the new PostgreSQL cluster. The name must be unique within the folder.
    string name = 4 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];

    // Description of the new PostgreSQL cluster. [can contain sensitive data]
    reserved 5;

    // Custom labels for the PostgreSQL cluster [can contain sensitive data]
    reserved  6;

    // Deployment environment of the new PostgreSQL cluster.
    yandex.cloud.mdb.postgresql.v1.Cluster.Environment environment = 7;

    // Configuration for the PostgreSQL cluster to be created.
    yandex.cloud.mdb.postgresql.v1.ConfigSpec config_spec = 8;

    // Configurations for PostgreSQL hosts that should be created for
    // the cluster that is being created from the backup.
    repeated yandex.cloud.mdb.postgresql.v1.HostSpec host_specs = 9 [(size) = ">0"];

    // ID of the network to create the PostgreSQL cluster in.
    string network_id = 10 [(required) = true, (length) = "<=50"];

    // ID of the folder to create the PostgreSQL cluster in.
    string folder_id = 11 [(length) = "<=50"];

    // User security groups
    repeated string security_group_ids = 12;

    // Deletion Protection inhibits deletion of the cluster
    bool deletion_protection = 13;

    // Host groups hosting VMs of the cluster.
    repeated string host_group_ids = 14;
  }
}


message StartClusterFailoverRequest {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
  }

  message RequestParameters {
    // ID of PostgreSQL cluster.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // New master host. Switch to the most up-to-date replica if not provided.
    string host_name = 2 [(length) = "<=253"];
  }
}


message RescheduleMaintenance {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
  }

  message RequestParameters {
    // ID of the PostgreSQL cluster to reschedule the maintenance operation for.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // The type of reschedule request.
    yandex.cloud.mdb.postgresql.v1.RescheduleMaintenanceRequest.RescheduleType reschedule_type = 2[(required) = true];

    // The time until which this maintenance operation should be delayed.
    google.protobuf.Timestamp delayed_until = 3;
  }
}

message AddClusterHosts {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
    repeated string host_names = 2 [(required) = true];
  }

  message RequestParameters {
    // ID of the PostgreSQL cluster to add hosts to.
    // To get the PostgreSQL cluster ID, use a [ClusterService.List] request.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // Configurations for PostgreSQL hosts that should be added to the cluster.
    repeated yandex.cloud.mdb.postgresql.v1.HostSpec host_specs = 2 [(size) = ">0"];
  }
}

message DeleteClusterHosts {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
    repeated string host_names = 2 [(required) = true];
  }

  message RequestParameters {
    // ID of the PostgreSQL cluster to remove hosts from.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // Names of hosts to delete.
    repeated string host_names = 2 [(size) = ">0", (length) = "<=253"];
  }
}

message UpdateClusterHosts {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  EventStatus event_status = 5 [(required) = true];
  EventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    STARTED = 1;
    DONE = 2;
    ERROR = 3;
  }

  message EventDetails {
    string cluster_id = 1 [(required) = true];
    repeated string host_names = 2 [(required) = true];
  }
  
  message RequestParameters {
    // ID of the PostgreSQL cluster to update hosts in.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // New configurations to apply to hosts.
    repeated yandex.cloud.mdb.postgresql.v1.UpdateHostSpec update_host_specs = 2 [(size) = ">0"];
  }
}
