syntax = "proto3";

package yandex.cloud.events.mdb.mysql;

import "google/protobuf/field_mask.proto";
import "google/rpc/status.proto";
import "yandex/cloud/mdb/mysql/v1/user.proto";
import "yandex/cloud/events/common.proto";
import "yandex/cloud/events/options.proto";
import "yandex/cloud/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/public-api/yandex/cloud/events/mdb/mysql;mysql";
option java_package = "yandex.cloud.api.events.mdb.mysql";

message UserSpec {
  string name = 1;

  // Don't expose sensitive information:
  //  string password = 2;

  repeated yandex.cloud.mdb.mysql.v1.Permission permissions = 3;

  repeated yandex.cloud.mdb.mysql.v1.GlobalPermission global_permissions = 4;

  yandex.cloud.mdb.mysql.v1.ConnectionLimits connection_limits = 5;

  yandex.cloud.mdb.mysql.v1.AuthPlugin authentication_plugin = 6;
}

message UserEventDetails {
  // ID of the MySQL cluster to delete.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
  string cluster_name = 2;
  string user_name = 3 [(required) = true];
  // Set of permissions to grant to the user.
  repeated yandex.cloud.mdb.mysql.v1.Permission permissions = 4;

  // Set of global permissions to grant to the user.
  repeated yandex.cloud.mdb.mysql.v1.GlobalPermission global_permissions = 5;

  // Set of user connection limits.
  yandex.cloud.mdb.mysql.v1.ConnectionLimits connection_limits = 6;

  // User authentication plugin.
  yandex.cloud.mdb.mysql.v1.AuthPlugin authentication_plugin = 7;
}

message CreateUser {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  events.EventStatus event_status = 5 [(required) = true];
  UserEventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  message RequestParameters {
    // ID of the MySQL cluster to create a database in.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // Properties of the user to be created.
    UserSpec user_spec = 2 [(required) = true];
  }
}

message UpdateUser {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  events.EventStatus event_status = 5 [(required) = true];
  UserEventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  message RequestParameters {
    // ID of the MySQL cluster to create a database in.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];   // FIXME cluster_id vs cluster_name

    // Name of the user to be updated.
    string user_name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];

    // Field mask that specifies which fields of the MySQL user should be updated.
    google.protobuf.FieldMask update_mask = 3;

    // Don't expose sensitive information:
    // string password = 4 [(length) = "8-128"];

    // Set of permissions to grant to the user.
    repeated yandex.cloud.mdb.mysql.v1.Permission permissions = 5;

    // Set of global permissions to grant to the user.
    repeated yandex.cloud.mdb.mysql.v1.GlobalPermission global_permissions = 6;

    // Set of user connection limits.
    yandex.cloud.mdb.mysql.v1.ConnectionLimits connection_limits = 7;

    // User authentication plugin.
    yandex.cloud.mdb.mysql.v1.AuthPlugin authentication_plugin = 8;
  }
}

message DeleteUser {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  events.EventStatus event_status = 5 [(required) = true];
  UserEventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  message RequestParameters {
    // ID of the MySQL cluster to create a database in.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // Name of the user to be updated.
    string user_name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];
  }
}

message GrantUserPermission {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  events.EventStatus event_status = 5 [(required) = true];
  UserEventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  message RequestParameters {
    // ID of the MySQL cluster to create a database in.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // Name of the user to grant the permission to.
    string user_name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];

    // Permission that should be granted to the specified user.
    yandex.cloud.mdb.mysql.v1.Permission permission = 3 [(required) = true];
  }
}

message RevokeUserPermission {
  option (include) = true;

  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];

  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];

  events.EventStatus event_status = 5 [(required) = true];
  UserEventDetails details = 6 [(required) = true];

  google.rpc.Status error = 7;
  RequestParameters request_parameters = 8;
  events.Response response = 9;

  message RequestParameters {
    // ID of the MySQL cluster to create a database in.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // Name of the user to revoke a permission from.
    string user_name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];

    // Permission that should be revoked from the specified user.
    yandex.cloud.mdb.mysql.v1.Permission permission = 3 [(required) = true];
  }
}
