syntax = "proto3";

package yandex.cloud.events.smartcaptcha;

import "google/rpc/status.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/events/common.proto";
import "yandex/cloud/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/public-api/yandex/cloud/events/smartcaptcha;smartcaptcha";
option java_package = "yandex.cloud.api.events.smartcaptcha";
option java_outer_classname = "SmartcaptchaEvents";

enum CaptchaComplexity {
  CAPTCHA_COMPLEXITY_UNSPECIFIED = 0;
  EASY = 1;
  MEDIUM = 2;
  HARD = 3;
}

message CaptchaDetails {
  string captcha_id = 1;
  string client_key = 2;
  string server_key = 3;
  string name = 4;
  repeated string allowed_sites = 5;
  CaptchaComplexity complexity = 6;
  string style_json = 7;
}

message CreateCaptcha {
  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];
  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];
  EventStatus event_status = 5 [(required) = true];
  google.rpc.Status error = 6;
  CaptchaDetails details = 7 [(required) = true];
  RequestParameters request_parameters = 8 [(required) = true];
  events.Response response = 9 [(required) = true];

  message RequestParameters {
    string folder_id = 1;
    string name = 2;
    repeated string allowed_sites = 3;
    CaptchaComplexity complexity = 4;
    string style_json = 5;
  }
}

message UpdateCaptcha {
  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];
  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];
  EventStatus event_status = 5 [(required) = true];
  google.rpc.Status error = 6;
  CaptchaDetails details = 7 [(required) = true];
  RequestParameters request_parameters = 8 [(required) = true];
  events.Response response = 9 [(required) = true];

  message RequestParameters {
    string captcha_id = 1;
    google.protobuf.FieldMask update_mask = 2;
    string name = 3;
    repeated string allowed_sites = 4;
    CaptchaComplexity complexity = 5;
    string style_json = 6;
    string client_key = 7;
    string server_key = 8;
  }
}

message DeleteCaptcha {
  Authentication authentication = 1 [(required) = true];
  Authorization authorization = 2 [(required) = true];
  EventMetadata event_metadata = 3 [(required) = true];
  RequestMetadata request_metadata = 4 [(required) = true];
  EventStatus event_status = 5 [(required) = true];
  google.rpc.Status error = 6;
  CaptchaDetails details = 7 [(required) = true];
  RequestParameters request_parameters = 8 [(required) = true];
  events.Response response = 9 [(required) = true];

  message RequestParameters {
    string captcha_id = 1;
  }
}
