syntax = "proto3";

package yandex.cloud.events.certificatemanager;

import "google/rpc/status.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";

import "yandex/cloud/events/common.proto";
import "yandex/cloud/events/options.proto";
import "yandex/cloud/validation.proto";
import "yandex/cloud/access/access.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/public-api/yandex/cloud/events/certificatemanager;certificatemanager";
option java_package = "yandex.cloud.api.events.certificatemanager";
option java_outer_classname = "CertificateEvents";

message CreateCertificate {
    option (include) = true;

    Authentication authentication = 1 [(required) = true];
    Authorization authorization = 2 [(required) = true];
    EventMetadata event_metadata = 3 [(required) = true];
    RequestMetadata request_metadata = 4 [(required) = true];
    EventStatus event_status = 5 [(required) = true];
    google.rpc.Status error = 6;
    EventDetails details = 7 [(required) = true];
    RequestParameters request_parameters = 8 [(required) = true];
    Response response = 9 [(required) = true];

    message EventDetails {
        string certificate_id = 1 [(required) = true];
        string certificate_name = 2;
        string certificate_type = 3;
        string certificate_status = 4;
        repeated string domains = 5;
        string serial = 6;
        google.protobuf.Timestamp issued_at = 7;
        google.protobuf.Timestamp not_after = 8;
        google.protobuf.Timestamp not_before = 9;
    }

    message RequestParameters {
        oneof request {
            RequestImported request_imported = 1;
            RequestManaged request_managed = 2;
        }
    }

    message RequestImported {
        string folder_id = 1;
        string name = 2;
        map<string, string> labels = 3;
    }

    message RequestManaged {
        string folder_id = 1;
        string name = 2;
        map<string, string> labels = 3;
        repeated string domains = 4;
        string challenge_type = 5;
    }

    enum EventStatus {
        EVENT_STATUS_UNSPECIFIED = 0;
        STARTED = 1;
        ERROR = 2;
        DONE = 3;
        CANCELLED = 4;
    }
}

message UpdateCertificate {
    option (include) = true;

    Authentication authentication = 1 [(required) = true];
    Authorization authorization = 2 [(required) = true];
    EventMetadata event_metadata = 3 [(required) = true];
    RequestMetadata request_metadata = 4 [(required) = true];
    EventStatus event_status = 5 [(required) = true];
    google.rpc.Status error = 6;
    EventDetails details = 7 [(required) = true];
    RequestParameters request_parameters = 8 [(required) = true];
    Response response = 9 [(required) = true];

    message EventDetails {
        string certificate_id = 1 [(required) = true];
        string certificate_name = 2;
        string certificate_type = 3;
        string certificate_status = 4;
        repeated string domains = 5;
        string serial = 6;
        google.protobuf.Timestamp issued_at = 7;
        google.protobuf.Timestamp not_after = 8;
        google.protobuf.Timestamp not_before = 9;
    }

    message RequestParameters {
        string certificate_id = 1;
        google.protobuf.FieldMask update_mask = 2;
        string name = 3;
        map<string, string> labels = 4;
    }

    enum EventStatus {
        EVENT_STATUS_UNSPECIFIED = 0;
        STARTED = 1;
        ERROR = 2;
        DONE = 3;
        CANCELLED = 4;
    }
}

message DeleteCertificate {
    option (include) = true;

    Authentication authentication = 1 [(required) = true];
    Authorization authorization = 2 [(required) = true];
    EventMetadata event_metadata = 3 [(required) = true];
    RequestMetadata request_metadata = 4 [(required) = true];
    EventStatus event_status = 5 [(required) = true];
    google.rpc.Status error = 6;
    EventDetails details = 7 [(required) = true];
    RequestParameters request_parameters = 8 [(required) = true];
    Response response = 9 [(required) = true];

    message EventDetails {
        string certificate_id = 1 [(required) = true];
        string certificate_name = 2;
        string certificate_type = 3;
        string certificate_status = 4;
        repeated string domains = 5;
        string serial = 6;
        google.protobuf.Timestamp issued_at = 7;
        google.protobuf.Timestamp not_after = 8;
        google.protobuf.Timestamp not_before = 9;
    }

    message RequestParameters {
        string certificate_id = 1;
    }

    enum EventStatus {
        EVENT_STATUS_UNSPECIFIED = 0;
        STARTED = 1;
        ERROR = 2;
        DONE = 3;
        CANCELLED = 4;
    }
}

message UpdateCertificateAccessBindings {
    option (include) = true;

    Authentication authentication = 1 [(required) = true];
    Authorization authorization = 2 [(required) = true];
    EventMetadata event_metadata = 3 [(required) = true];
    RequestMetadata request_metadata = 4 [(required) = true];
    EventStatus event_status = 5 [(required) = true];
    google.rpc.Status error = 6;
    EventDetails details = 7 [(required) = true];
    RequestParameters request_parameters = 8 [(required) = true];
    Response response = 9 [(required) = true];

    message EventDetails {
        string certificate_id = 1 [(required) = true];
        string certificate_name = 2;
        repeated access.AccessBinding access_bindings = 3;
        repeated access.AccessBindingDelta access_binding_deltas = 4;
    }

    message RequestParameters {
        string certificate_id = 1;
        repeated access.AccessBindingDelta access_binding_deltas = 2;
    }

    enum EventStatus {
        EVENT_STATUS_UNSPECIFIED = 0;
        STARTED = 1;
        ERROR = 2;
        DONE = 3;
    }
}

message SetCertificateAccessBindings {
    option (include) = true;

    Authentication authentication = 1 [(required) = true];
    Authorization authorization = 2 [(required) = true];
    EventMetadata event_metadata = 3 [(required) = true];
    RequestMetadata request_metadata = 4 [(required) = true];
    EventStatus event_status = 5 [(required) = true];
    google.rpc.Status error = 6;
    EventDetails details = 7 [(required) = true];
    RequestParameters request_parameters = 8 [(required) = true];
    Response response = 9 [(required) = true];

    message EventDetails {
        string certificate_id = 1 [(required) = true];
        string certificate_name = 2;
        repeated access.AccessBinding access_bindings = 3;
        repeated access.AccessBindingDelta access_binding_deltas = 4;
    }

    message RequestParameters {
        string certificate_id = 1;
        repeated access.AccessBinding access_bindings = 2;
    }

    enum EventStatus {
        EVENT_STATUS_UNSPECIFIED = 0;
        STARTED = 1;
        ERROR = 2;
        DONE = 3;
    }
}
