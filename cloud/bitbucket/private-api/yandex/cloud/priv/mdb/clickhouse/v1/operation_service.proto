syntax = "proto3";

package yandex.cloud.priv.mdb.clickhouse.v1;

import "google/api/annotations.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/mdb/clickhouse/v1;clickhouse";
option java_outer_classname = "PCOS";

// A set of methods for managing operations that are asynchronous API requests.
service OperationService {
  // Returns the specified operation.
  rpc Get (GetOperationRequest) returns (operation.Operation) {
    option (google.api.http) = { get: "/mdb/clickhouse/v1/operations/{operation_id}" };
  }

  // Retrieves a list of ClickHouse operations.
  rpc List (ListOperationsRequest) returns (ListOperationsResponse) {
    option (google.api.http) = { get: "/mdb/clickhouse/v1/operations" };
  }
}

message GetOperationRequest {
  // Required. ID of the operation to return.
  string operation_id = 1 [(required) = true, (length) = "<=50"];
}

message ListOperationsRequest {
  // Required. ID of the folder to list ClickHouse operations in.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than `page_size`, the service returns a `next_page_token` that can be used
  // to get the next page of results in subsequent ListOperations requests.
  // Acceptable values are 0 to 1000, inclusive. Default value: 100.
  int64 page_size = 2 [(value) = "0-1000"];

  // Page token. Set `page_token` to the `next_page_token` returned by a previous ListOperations
  // request to get the next page of results.
  string page_token = 3 [(length) = "<=100"];
}

message ListOperationsResponse {
  // Requested list of ClickHouse operations.
  repeated operation.Operation operations = 1;

  // This token allows you to get the next page of results for ListOperations requests,
  // if the number of results is larger than `page_size` specified in the request.
  // To get the next page, specify the value of `next_page_token` as a value for
  // the `page_token` parameter in the next ListOperations request. Subsequent ListOperations
  // requests will have their own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}
