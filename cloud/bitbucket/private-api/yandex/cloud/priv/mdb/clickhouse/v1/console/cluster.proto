syntax = "proto3";

package yandex.cloud.priv.mdb.clickhouse.v1.console;

import "yandex/cloud/priv/mdb/clickhouse/v1/cluster.proto";
import "yandex/cloud/priv/mdb/clickhouse/v1/version.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/mdb/clickhouse/v1/console;clickhouse_console";
option java_outer_classname = "PCCO";

message ClustersConfig {
  // Required
  NameValidator cluster_name = 1;

  // Required
  NameValidator db_name = 2;

  // Required
  NameValidator user_name = 3;

  // Required
  NameValidator password = 4;

  // Required
  NameValidator ml_model_name = 5;

  // Required
  NameValidator ml_model_uri = 6;

  // Required
  NameValidator format_schema_name = 7;

  // Required
  NameValidator format_schema_uri = 8;

  message HostCountLimits {
    // Required. Minimum number of hosts per cluster.
    int64 min_host_count = 1;
    // Required. Maximum number of hosts per cluster.
    int64 max_host_count = 2;

    message HostCountPerDiskType {
      // Required. Disk type ID
      string disk_type_id = 1;
      // Required. Minimum number of hosts per cluster. Overrides default value if
      // specified disk type is used.
      int64 min_host_count = 2;
    }

    repeated HostCountPerDiskType host_count_per_disk_type = 3;
  }

  // Required
  HostCountLimits host_count_limits = 9;

  message HostType {
    // Required. Host type this message describes resources for
    Host.Type type = 1;

    message ResourcePreset {
      // Required. Preset ID
      string preset_id = 1;
      // Required. CPU limit for this preset
      int64 cpu_limit = 2;
      // Required. Memory limit for this preset
      int64 memory_limit = 3;
      // Required. Generation of this preset
      int64 generation = 5;
      // Required. Generation name of this preset
      string generation_name = 6;
      // Required. Flavor type of this preset
      string type = 7;
      // Required. CPU fraction of this preset
      int64 cpu_fraction = 8;
      // Required. Is flavor decommissioned
      bool decomissioning = 9;

      message Zone {
        // Required. Zone location ID
        string zone_id = 1;

        message DiskType {
          // Required. Disk type ID
          string disk_type_id = 1;

          // Required. Min number of hosts for this disk type
          int64 min_hosts = 4;
          // Required. Max number of hosts for this disk type
          int64 max_hosts = 5;

          message DiskSizeRange {
            // Required. Minimum disk size in bytes
            int64 min = 1;
            // Required. Maximum disk size in bytes
            int64 max = 2;
          }

          message DiskSizes {
            // Required. List of disk sizes in bytes
            repeated int64 sizes = 1;
          }

          // Allowed disk sizes. Either in form of disk size range or list of disk sizes
          oneof DiskSize {
            DiskSizeRange disk_size_range = 2;
            DiskSizes disk_sizes = 3;
          }
        }

        // Required. Disk types for this preset
        repeated DiskType disk_types = 2;
      }

      // Required. Available zones
      repeated Zone zones = 4;
    }

    // Required. Available resource presets
    repeated ResourcePreset resource_presets = 2;

    message DefaultResources {
      // Required. Preset ID
      string resource_preset_id = 1;
      // Required. Disk type ID
      string disk_type_id = 2;
      // Required. Disk size
      int64 disk_size = 3;
      // Required. Generation of this preset
      int64 generation = 4;
      // Required. Generation name of this preset
      string generation_name = 5;
    }

    // Required. Default resources
    DefaultResources default_resources = 3;
  }

  // Required. Valid resource combos per host type
  repeated HostType host_types = 10;

  // Required. All versions
  repeated string versions = 11;

  // Required. Available versions
  repeated Version available_versions = 12;

  // Required. Default version
  string default_version = 13;
}

message NameValidator {
  // Required. Regex for valid name
  string regexp = 1;
  // Required. Minimum length in symbols
  int64 min = 2;
  // Required. Maximum length in symbols
  int64 max = 3;
  // List of banned values
  repeated string blacklist = 4;
}

message BillingMetric {
    message BillingTags {
        int64 public_ip = 1;
        string disk_type_id = 2;
        string cluster_type = 3;
        int64 disk_size = 4;
        string resource_preset_id = 5;
        string platform_id = 6;
        int64 cores = 7;
        int64 core_fraction = 8;
        int64 memory = 9;
        int64 software_accelerated_network_cores = 10;
        repeated string roles = 11;
        int64 online = 12;
        int64 on_dedicated_host = 13;
    }

    // ID of the folder for metric
    string folder_id = 1;
    // Billing metric schema spec
    string schema = 2;
    // Billing tags
    BillingTags tags = 3;
}

message BillingEstimate {
  // List of billing metrics of estimation
  repeated BillingMetric metrics = 1;
}

message ClustersStats {
  // clusters count in folder
  int64 clusters_count = 1;
}
