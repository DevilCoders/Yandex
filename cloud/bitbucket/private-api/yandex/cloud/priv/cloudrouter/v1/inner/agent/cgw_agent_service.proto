syntax = "proto3";

package yandex.cloud.priv.cloudrouter.v1.inner.agent;

import "google/protobuf/empty.proto";
import "yandex/cloud/priv/cloudrouter/v1/inner/agent/cgw_config.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/cloudrouter/v1/inner/agent;cloudrouter";
option java_outer_classname = "CRCGWCFGAS";

service CgwAgentService {

  /**
  return NOT_FOUND Error if there is no config at all.
  return GetClusterConfigVersionsResponse otherwise.
   */
  rpc GetCgwConfigVersions(GetCgwConfigVersionsRequest)
      returns (GetCgwConfigVersionsResponse);

  rpc GetCgwConfig(GetCgwConfigRequest)
      returns (GetCgwConfigResponse);

  rpc UpdateCgwConfigState(UpdateCgwConfigStateRequest)
      returns (google.protobuf.Empty);
}

message GetCgwConfigVersionsRequest {
  string az_id = 1;
}

message GetCgwConfigVersionsResponse {
  // The last deployed version. Will be used in the configuration drift checks
  // is unset initially when config had been built but was deployed never.
  oneof last_deployed_version_optional {
    int64 last_deployed_version = 1;
  }
  // Either a partially deployed "dirty" version or a fresh pending version to be deployed
  int64 next_version = 2;
  // The last prepared config version available for fetching. Convenient for testing.
  int64 last_new_version = 3;
}

message GetCgwConfigRequest {
  string az_id = 1;
  int64 version = 2;
}

message GetCgwConfigResponse {
  CgwConfig config = 1;
}

message UpdateCgwConfigStateRequest {
  string az_id = 1;
  int64 version = 2;
  State state = 3;

  enum State {
    STATE_UNSPECIFIED = 0;
    DIRTY = 1;
    DEPLOYED = 2;
  }
}
