syntax = "proto3";

package yandex.cloud.priv.datatransfer.console.v1;

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/datatransfer/v1/console;tm_console_server";

import "google/api/annotations.proto";
import "yandex/cloud/priv/datatransfer/v1/console/common.proto";
import "yandex/cloud/priv/datatransfer/v1/console/dynamicform/dynamicform.proto";
import "yandex/cloud/priv/datatransfer/v1/endpoint.proto";
import "yandex/cloud/priv/datatransfer/v1/transfer.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/operation/operation.proto";

service TransferConsoleService {
    rpc Get(GetTransferViewRequest) returns (TransferView) {
        option (google.api.http) = { get: "/v1/console/transfer/{transfer_id}" };
    }
    rpc List(ListTransferViewsRequest) returns (ListTransferViewsResponse) {
        option (google.api.http) = { get: "/v1/console/transfers/list/{folder_id}" };
    }
    rpc Create(TransferView) returns (TransferView) {
        option (google.api.http) = { post: "/v1/console/transfer" body: "*" };
    }
    rpc Update(TransferView) returns (TransferView) {
        option (google.api.http) = { patch: "/v1/console/transfer" body: "*" };
    }
// TODO: Remove after new forms release
    rpc GetFormDefaults(TransferFormRequest) returns (TransferView) {
        option (google.api.http) = { get: "/v1/console/transfer/form/defaults/{source_id}/{target_id}" };
    }
// TODO: Remove after new forms release
    rpc GetCreateForm(TransferFormRequest) returns (FormResponse) {
        option (google.api.http) = { get: "/v1/console/transfer/form/create/{source_id}/{target_id}" };
    }
// TODO: Remove after new forms release
    rpc GetEditForm(TransferFormRequest) returns (FormResponse) {
        option (google.api.http) = { get: "/v1/console/transfer/form/edit/{source_id}/{target_id}" };
    }
// TODO: Remove after new forms release
    rpc GetInfoForm(GetTransferViewRequest) returns (FormResponse) {
        option (google.api.http) = { get: "/v1/console/transfer/form/info/{transfer_id}" };
    }
    rpc GetFolderStats(GetTransfersFolderStatsRequest) returns (GetFolderStatsResponse) {
        option (google.api.http) = { get: "/v1/stat/{folder_id}" };
    }
    rpc GetTransfersFolderStats(GetTransfersFolderStatsRequest) returns (GetTransfersFolderStatsResponse) {
        option (google.api.http) = { get: "/v1/transfers/stat/{folder_id}" };
    }
    rpc ListAllOperations(ListAllOperationsRequest) returns (ListAllOperationsResponse) {
        option (google.api.http) = { get: "/v1/transfers/available_operations" };
    }
    rpc Execute(ExecuteOperationRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/v1/transfers/execute" body: "*" };
        option (api.operation) = {
            metadata: "ExecuteOperationMetadata"
            response: "ExecuteOperationResponse"
        };
    }
    rpc UpsertOperation(UpsertOperationRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/v1/transfers/operation" body: "*" };
        option (api.operation) = {
            metadata: "UpsertOperationMetadata"
            response: "google.protobuf.Empty"
        };
    }
    rpc GetTransferTypes(TransferTypesRequest) returns (TransferTypesResponse) {
        option (google.api.http) = { get: "/v1/transfers/types" };
    }
    rpc GetCreateForm2(GetTransferFormRequest) returns (dynamicform.Item) {
        option (google.api.http) = { get: "/v2/console/transfers/forms/create" };
    }
    rpc GetCreateFormDefaults2(GetTransferFormRequest) returns (TransferView) {
        option (google.api.http) = { get: "/v2/console/transfers/forms/defaults" };
    }
    rpc GetEditForm2(GetTransferViewRequest) returns (dynamicform.Item) {
        option (google.api.http) = { get: "/v2/console/transfers/forms/edit" };
    }
    rpc GetInfoForm2(GetTransferViewRequest) returns (dynamicform.Item) {
        option (google.api.http) = { get: "/v2/console/transfers/forms/info" };
    }
    rpc CreateSampleTransfer(CreateSampleTransferRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/v2/console/transfers/sample" body: "*" };
        option (api.operation) = {
            metadata: "ExecuteOperationMetadata"
            response: "google.protobuf.Empty"
        };
    }
}
message GetTransferViewRequest {
    string transfer_id = 1;
}
// TODO: Remove after new forms release
message TransferFormRequest {
    string source_id = 1;
    string target_id = 2;
}
message GetTransferFormRequest {
    string source_id = 1;
    string target_id = 2;
}
message TransferView {
    string id = 1;
    string folder_id = 2;
    string created_at = 3;
    string owner_id = 4;
    string name = 5;
    string description = 6;
    datatransfer.v1.Endpoint source = 7;
    datatransfer.v1.Endpoint target = 8;
    datatransfer.v1.Dashboard dashboard = 9;
    datatransfer.v1.TransferStatus status = 10;
    datatransfer.v1.TransferType type = 14;
    datatransfer.v1.DataObjects data_objects = 15;
    string warning = 11;
    JsonProxy payload = 12;
    TransferTypeGrant grant = 13;
}
message TransferViewPayload {
    datatransfer.v1.TransferType type = 1;
    datatransfer.v1.Runtime runtime = 2;
    repeated TransferViewLabel labels = 3;
    datatransfer.v1.RegularSnapshot regular_snapshot = 4;
    datatransfer.v1.Transformation transformation = 5;
    datatransfer.v1.TmpPolicyConfig tmp_policy = 6;
    datatransfer.v1.DataObjects data_objects = 7;
}
message TransferViewLabel {
    string key = 1;
    string value = 2;
}
message UpsertOperationRequest {
    string operation_id = 1;
    string transfer_id = 2;
    string type = 3;
    string status = 4;
    string error = 5;
}
message UpsertOperationMetadata {
    string operation_id = 1;
    string transfer_id = 2;
}
message ExecuteOperationResponse {
    string transfer_id = 1;
}
message ExecuteOperationMetadata {
    string transfer_id = 1;
}
message ExecuteOperationRequest {
    string transfer_id = 1;
    datatransfer.v1.OperationType operation = 2;
    oneof parameters {
        ChecksumParameters checksum_parameters = 3;
    }
}
message ChecksumParameters {
    int64 table_size_threshold = 1;
}
message GetTransfersFolderStatsRequest {
    // Folder id
    string folder_id = 1;
}
message GetTransfersFolderStatsResponse {
    int64 count = 1;
}
message ListAllOperationsRequest {
}
message ListAllOperationsResponse {
    repeated datatransfer.v1.OperationType operations = 1;
}
message GetFolderStatsResponse {
    int64 transfer_count = 1;
    int64 endpoint_count = 2;
}
message TransferTypesRequest {
}
message Grant {
    bool is_hidden = 1;
    bool is_preview = 2;
    string alpha_flag = 3;
}
message TransferTypeGrant {
    datatransfer.v1.TransferType transfer_type = 1;
    Grant grant = 2;
}
message TransferTargetGrant {
    datatransfer.v1.EndpointType target_type = 1;
    TransferTypeGrant grant = 2;
}
message TransferGrant {
    datatransfer.v1.EndpointType source_type = 1;
    repeated TransferTargetGrant targets = 2;
}
message TransferTypesResponse {
    repeated TransferGrant transfer_types = 2;
}
message ListTransferViewsRequest {
    datatransfer.v1.TransferStatus status = 1;
    string folder_id = 2;
    int64 page_size = 3;
    string page_token = 4;
    repeated string mdb_cluster_id = 5;
    repeated string endpoint_id = 6;
}
message ListTransferViewsResponse {
    repeated TransferView transfers = 1;
    string next_page_token = 2;
}
message CreateSampleTransferRequest {
    string sample_id = 1;
    oneof target {
        string clickhouse_id = 2;
    }
    bool auto_activate = 3;
}
