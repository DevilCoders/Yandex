syntax = "proto3";

package yandex.cloud.priv.datatransfer.v1.legacyendpoint;

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/datatransfer/v1/legacyendpoint;tm_server_legacyendpoint";

import "yandex/cloud/priv/datatransfer/v1/endpoint/common.proto";
import "yandex/cloud/priv/datatransfer/v1/endpoint/postgres.proto";
import "yandex/cloud/priv/sensitive.proto";

message OnPremisePostgresSource {
    string host = 1;
    int64 port = 2;
    string database = 4;
    string user = 3;
    string raw_password = 10 [(sensitive) = true];
    string pem_file_content = 14;
    // Network interface for endpoint. If none will assume public ipv4
    string subnet_id = 30;
    // List of tables for replication. If none or empty list is presented - will
    // replicate all tables. Can contain * patterns.
    repeated string tables = 6;
    // List of tables excluded from replication. If none or empty list is presented -
    // will replicate all tables. Can contain * patterns.
    repeated string exclude_tables = 13;
    // Maximum lag of replication slot (in bytes); after exceeding this limit
    // replication will be aborted.
    int64 slot_byte_lag_limit = 11;
    // schema for service tables (__consumer_keeper, __data_transfer_mole_finder).
    // Default is public
    string service_schema = 8;
    // Will collapse pg_inherit table into one big table in replication process
    bool collapse_inherit_table = 9;
    // Pre steps will be executed on activate for pg 2 pg scenario
    endpoint.PostgresDumpSteps pre_steps = 15;
    // Post steps will be executed on deactivate for pg 2 pg scenario
    endpoint.PostgresDumpSteps post_steps = 16;
}
message ManagedPostgresSource {
    string cluster_id = 1;
    string database = 3;
    string user = 2;
    string raw_password = 12 [(sensitive) = true];
    // Network interface for endpoint. If none will assume public ipv4
    string subnet_id = 30;
    // List of tables for replication. If none or empty list is presented - will
    // replicate all tables. Can contain * patterns.
    repeated string tables = 6;
    // List of tables excluded from replication. If none or empty list is presented -
    // will replicate all tables. Can contain * patterns.
    repeated string exclude_tables = 13;
    // Maximum lag of replication slot (in bytes); after exceeding this limit
    // replication will be aborted.
    int64 slot_byte_lag_limit = 10;
    // schema for service tables (__consumer_keeper, __data_transfer_mole_finder).
    // Default is public
    string service_schema = 8;
    // Will collapse pg_inherit table into one big table in replication process
    bool collapse_inherit_table = 11;
    // Pre steps will be executed on activate for pg 2 pg scenario
    endpoint.PostgresDumpSteps pre_steps = 15;
    // Post steps will be executed on deactivate for pg 2 pg scenario
    endpoint.PostgresDumpSteps post_steps = 16;
    // Option for auto recovery after system based termination
    bool auto_activate = 17;
    // Option which allow to replicate tables without primary keys
    bool use_fake_primary_key = 18;
}
message ManagedPostgresTarget {
    string cluster_id = 1;
    string database = 3;
    string user = 2;
    string raw_password = 7 [(sensitive) = true];
    // Network interface for endpoint. If none will assume public ipv4
    string subnet_id = 30;
    // cleanup policy for activate / reupload processes. Default is truncate.
    endpoint.CleanupPolicy cleanup_policy = 21;
}
message OnPremisePostgresTarget {
    string host = 1;
    int64 port = 2;
    string database = 4;
    string user = 3;
    string raw_password = 7 [(sensitive) = true];
    string pem_file_content = 6;
    // Network interface for endpoint. If none will assume public ipv4
    string subnet_id = 30;
    endpoint.CleanupPolicy cleanup_policy = 21;
}
