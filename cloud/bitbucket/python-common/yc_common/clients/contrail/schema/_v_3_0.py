"""
Contrail schema version generated by `contrail-api-cli pydump-schema` command.
See: https://bb.yandex-team.ru/projects/CLOUD/repos/contrail-yandex/browse/contrail-api-cli-pydump-schema
"""
from yc_common.clients.contrail.schema.schema import Schema, ResourceProperty

schema = Schema("3.0")


_r = schema._get_or_add_resource('access-control-list')
_r.children = []
_r.parent = 'virtual-network'
_r.refs = []
_r.back_refs = []
_r.properties = [
    ResourceProperty('access-control-list-entries', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('analytics-node')
_r.children = []
_r.parent = 'global-system-config'
_r.refs = []
_r.back_refs = []
_r.properties = [
    ResourceProperty('analytics-node-ip-address', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('api-access-list')
_r.children = []
_r.parent = 'global-system-config'
_r.refs = []
_r.back_refs = []
_r.properties = [
    ResourceProperty('api-access-list-entries', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('bfd-session')
_r.children = []
_r.parent = None
_r.refs = ['bgp-router']
_r.back_refs = []
_r.properties = [
    ResourceProperty('bfd-session-config', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('bgp-as-a-service')
_r.children = []
_r.parent = 'project'
_r.refs = ['bgp-router', 'virtual-machine-interface']
_r.back_refs = []
_r.properties = [
    ResourceProperty('bgpaas-ip-address', is_list=False, is_map=False),
    ResourceProperty('bgpaas-session-attributes', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('bgp-router')
_r.children = []
_r.parent = 'routing-instance'
_r.refs = ['bgp-router']
_r.back_refs = ['bgp-as-a-service', 'bgp-router', 'bfd-session', 'global-system-config', 'physical-router']
_r.properties = [
    ResourceProperty('bgp-router-parameters', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('config-node')
_r.children = []
_r.parent = 'global-system-config'
_r.refs = []
_r.back_refs = []
_r.properties = [
    ResourceProperty('config-node-ip-address', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('config-root')
_r.children = ['global-system-config', 'domain']
_r.parent = None
_r.refs = []
_r.back_refs = []
_r.properties = [
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('customer-attachment')
_r.children = []
_r.parent = None
_r.refs = ['virtual-machine-interface', 'floating-ip']
_r.back_refs = []
_r.properties = [
    ResourceProperty('attachment-address', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('database-node')
_r.children = []
_r.parent = 'global-system-config'
_r.refs = []
_r.back_refs = []
_r.properties = [
    ResourceProperty('database-node-ip-address', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('discovery-service-assignment')
_r.children = ['dsa-rule']
_r.parent = None
_r.refs = []
_r.back_refs = []
_r.properties = [
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('domain')
_r.children = ['project', 'namespace', 'service-template', 'virtual-DNS', 'api-access-list']
_r.parent = 'config-root'
_r.refs = []
_r.back_refs = []
_r.properties = [
    ResourceProperty('domain-limits', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('dsa-rule')
_r.children = []
_r.parent = 'discovery-service-assignment'
_r.refs = []
_r.back_refs = []
_r.properties = [
    ResourceProperty('dsa-rule-entry', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('floating-ip')
_r.children = []
_r.parent = 'floating-ip-pool'
_r.refs = ['project', 'virtual-machine-interface']
_r.back_refs = ['customer-attachment']
_r.properties = [
    ResourceProperty('floating-ip-address', is_list=False, is_map=False),
    ResourceProperty('floating-ip-is-virtual-ip', is_list=False, is_map=False),
    ResourceProperty('floating-ip-fixed-ip-address', is_list=False, is_map=False),
    ResourceProperty('floating-ip-address-family', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('floating-ip-pool')
_r.children = ['floating-ip']
_r.parent = 'virtual-network'
_r.refs = []
_r.back_refs = ['project']
_r.properties = [
    ResourceProperty('floating-ip-pool-prefixes', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('global-system-config')
_r.children = ['global-vrouter-config', 'physical-router', 'virtual-router', 'config-node', 'analytics-node', 'database-node', 'service-appliance-set', 'api-access-list']
_r.parent = 'config-root'
_r.refs = ['bgp-router']
_r.back_refs = []
_r.properties = [
    ResourceProperty('autonomous-system', is_list=False, is_map=False),
    ResourceProperty('config-version', is_list=False, is_map=False),
    ResourceProperty('plugin-tuning', is_list=False, is_map=False),
    ResourceProperty('ibgp-auto-mesh', is_list=False, is_map=False),
    ResourceProperty('ip-fabric-subnets', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('global-vrouter-config')
_r.children = []
_r.parent = 'global-system-config'
_r.refs = []
_r.back_refs = []
_r.properties = [
    ResourceProperty('ecmp-hashing-include-fields', is_list=False, is_map=False),
    ResourceProperty('linklocal-services', is_list=False, is_map=False),
    ResourceProperty('encapsulation-priorities', is_list=False, is_map=False),
    ResourceProperty('vxlan-network-identifier-mode', is_list=False, is_map=False),
    ResourceProperty('flow-export-rate', is_list=False, is_map=False),
    ResourceProperty('flow-aging-timeout-list', is_list=False, is_map=False),
    ResourceProperty('forwarding-mode', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('instance-ip')
_r.children = []
_r.parent = None
_r.refs = ['virtual-network', 'virtual-machine-interface', 'physical-router']
_r.back_refs = ['service-instance']
_r.properties = [
    ResourceProperty('instance-ip-address', is_list=False, is_map=False),
    ResourceProperty('instance-ip-family', is_list=False, is_map=False),
    ResourceProperty('instance-ip-mode', is_list=False, is_map=False),
    ResourceProperty('secondary-ip-tracking-ip', is_list=False, is_map=False),
    ResourceProperty('subnet-uuid', is_list=False, is_map=False),
    ResourceProperty('instance-ip-secondary', is_list=False, is_map=False),
    ResourceProperty('service-instance-ip', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('interface-route-table')
_r.children = []
_r.parent = 'project'
_r.refs = ['service-instance']
_r.back_refs = ['virtual-machine-interface']
_r.properties = [
    ResourceProperty('interface-route-table-routes', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('loadbalancer')
_r.children = []
_r.parent = 'project'
_r.refs = ['service-instance', 'virtual-machine-interface']
_r.back_refs = ['loadbalancer-listener']
_r.properties = [
    ResourceProperty('loadbalancer-properties', is_list=False, is_map=False),
    ResourceProperty('loadbalancer-provider', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('loadbalancer-healthmonitor')
_r.children = []
_r.parent = 'project'
_r.refs = []
_r.back_refs = ['loadbalancer-pool']
_r.properties = [
    ResourceProperty('loadbalancer-healthmonitor-properties', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('loadbalancer-listener')
_r.children = []
_r.parent = 'project'
_r.refs = ['loadbalancer']
_r.back_refs = ['loadbalancer-pool']
_r.properties = [
    ResourceProperty('loadbalancer-listener-properties', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('loadbalancer-member')
_r.children = []
_r.parent = 'loadbalancer-pool'
_r.refs = []
_r.back_refs = []
_r.properties = [
    ResourceProperty('loadbalancer-member-properties', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('loadbalancer-pool')
_r.children = ['loadbalancer-member']
_r.parent = 'project'
_r.refs = ['service-instance', 'virtual-machine-interface', 'loadbalancer-listener', 'service-appliance-set', 'loadbalancer-healthmonitor']
_r.back_refs = ['virtual-ip']
_r.properties = [
    ResourceProperty('loadbalancer-pool-properties', is_list=False, is_map=False),
    ResourceProperty('loadbalancer-pool-provider', is_list=False, is_map=False),
    ResourceProperty('loadbalancer-pool-custom-attributes', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('logical-interface')
_r.children = []
_r.parent = 'physical-interface'
_r.refs = ['virtual-machine-interface']
_r.back_refs = []
_r.properties = [
    ResourceProperty('logical-interface-vlan-tag', is_list=False, is_map=False),
    ResourceProperty('logical-interface-type', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('logical-router')
_r.children = []
_r.parent = 'project'
_r.refs = ['virtual-machine-interface', 'route-target', 'virtual-network', 'service-instance']
_r.back_refs = []
_r.properties = [
    ResourceProperty('configured-route-target-list', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('namespace')
_r.children = []
_r.parent = 'domain'
_r.refs = []
_r.back_refs = ['project']
_r.properties = [
    ResourceProperty('namespace-cidr', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('network-ipam')
_r.children = []
_r.parent = 'project'
_r.refs = ['virtual-DNS']
_r.back_refs = ['virtual-network']
_r.properties = [
    ResourceProperty('network-ipam-mgmt', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('network-policy')
_r.children = []
_r.parent = 'project'
_r.refs = []
_r.back_refs = ['virtual-network']
_r.properties = [
    ResourceProperty('network-policy-entries', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('physical-interface')
_r.children = ['logical-interface']
_r.parent = 'physical-router'
_r.refs = ['physical-interface']
_r.back_refs = ['service-appliance', 'virtual-machine-interface', 'physical-interface']
_r.properties = [
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('physical-router')
_r.children = ['physical-interface', 'logical-interface']
_r.parent = 'global-system-config'
_r.refs = ['virtual-router', 'bgp-router', 'virtual-network']
_r.back_refs = ['instance-ip']
_r.properties = [
    ResourceProperty('physical-router-management-ip', is_list=False, is_map=False),
    ResourceProperty('physical-router-dataplane-ip', is_list=False, is_map=False),
    ResourceProperty('physical-router-vendor-name', is_list=False, is_map=False),
    ResourceProperty('physical-router-product-name', is_list=False, is_map=False),
    ResourceProperty('physical-router-vnc-managed', is_list=False, is_map=False),
    ResourceProperty('physical-router-user-credentials', is_list=False, is_map=False),
    ResourceProperty('physical-router-snmp-credentials', is_list=False, is_map=False),
    ResourceProperty('physical-router-junos-service-ports', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('port-tuple')
_r.children = []
_r.parent = 'service-instance'
_r.refs = []
_r.back_refs = ['virtual-machine-interface']
_r.properties = [
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('project')
_r.children = ['loadbalancer-pool', 'loadbalancer-healthmonitor', 'virtual-ip', 'loadbalancer-listener', 'loadbalancer', 'security-group', 'virtual-network', 'qos-queue', 'qos-forwarding-class', 'network-ipam', 'network-policy', 'virtual-machine-interface', 'bgp-as-a-service', 'routing-policy', 'route-aggregate', 'service-instance', 'service-health-check', 'route-table', 'interface-route-table', 'logical-router', 'api-access-list']
_r.parent = 'domain'
_r.refs = ['namespace', 'floating-ip-pool']
_r.back_refs = ['floating-ip']
_r.properties = [
    ResourceProperty('quota', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('provider-attachment')
_r.children = []
_r.parent = None
_r.refs = ['virtual-router']
_r.back_refs = []
_r.properties = [
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('qos-forwarding-class')
_r.children = []
_r.parent = 'project'
_r.refs = ['qos-queue']
_r.back_refs = ['virtual-network', 'virtual-machine-interface']
_r.properties = [
    ResourceProperty('dscp', is_list=False, is_map=False),
    ResourceProperty('trusted', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('qos-queue')
_r.children = []
_r.parent = 'project'
_r.refs = []
_r.back_refs = ['qos-forwarding-class']
_r.properties = [
    ResourceProperty('min-bandwidth', is_list=False, is_map=False),
    ResourceProperty('max-bandwidth', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('route-aggregate')
_r.children = []
_r.parent = 'project'
_r.refs = ['routing-instance', 'service-instance']
_r.back_refs = []
_r.properties = [
    ResourceProperty('aggregate-route-entries', is_list=False, is_map=False),
    ResourceProperty('aggregate-route-nexthop', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('route-table')
_r.children = []
_r.parent = 'project'
_r.refs = []
_r.back_refs = ['virtual-network']
_r.properties = [
    ResourceProperty('routes', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('route-target')
_r.children = []
_r.parent = None
_r.refs = []
_r.back_refs = ['routing-instance', 'logical-router']
_r.properties = [
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('routing-instance')
_r.children = ['bgp-router']
_r.parent = 'virtual-network'
_r.refs = ['routing-instance', 'route-target']
_r.back_refs = ['routing-instance', 'route-aggregate', 'routing-policy', 'virtual-machine-interface']
_r.properties = [
    ResourceProperty('default-ce-protocol', is_list=False, is_map=False),
    ResourceProperty('service-chain-information', is_list=False, is_map=False),
    ResourceProperty('ipv6-service-chain-information', is_list=False, is_map=False),
    ResourceProperty('routing-instance-is-default', is_list=False, is_map=False),
    ResourceProperty('routing-instance-has-pnf', is_list=False, is_map=False),
    ResourceProperty('static-route-entries', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('routing-policy')
_r.children = []
_r.parent = 'project'
_r.refs = ['routing-instance', 'service-instance']
_r.back_refs = []
_r.properties = [
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
    ResourceProperty('routing-policy-entries', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('security-group')
_r.children = ['access-control-list']
_r.parent = 'project'
_r.refs = []
_r.back_refs = ['virtual-machine-interface']
_r.properties = [
    ResourceProperty('security-group-id', is_list=False, is_map=False),
    ResourceProperty('configured-security-group-id', is_list=False, is_map=False),
    ResourceProperty('security-group-entries', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('service-appliance')
_r.children = []
_r.parent = 'service-appliance-set'
_r.refs = ['physical-interface']
_r.back_refs = []
_r.properties = [
    ResourceProperty('service-appliance-user-credentials', is_list=False, is_map=False),
    ResourceProperty('service-appliance-ip-address', is_list=False, is_map=False),
    ResourceProperty('service-appliance-properties', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('service-appliance-set')
_r.children = ['service-appliance']
_r.parent = 'global-system-config'
_r.refs = []
_r.back_refs = ['loadbalancer-pool', 'service-template']
_r.properties = [
    ResourceProperty('service-appliance-set-properties', is_list=False, is_map=False),
    ResourceProperty('service-appliance-driver', is_list=False, is_map=False),
    ResourceProperty('service-appliance-ha-mode', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('service-health-check')
_r.children = []
_r.parent = 'project'
_r.refs = ['service-instance']
_r.back_refs = ['virtual-machine-interface']
_r.properties = [
    ResourceProperty('service-health-check-properties', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('service-instance')
_r.children = ['port-tuple']
_r.parent = 'project'
_r.refs = ['service-template', 'instance-ip']
_r.back_refs = ['loadbalancer-pool', 'loadbalancer', 'virtual-machine', 'service-health-check', 'interface-route-table', 'routing-policy', 'route-aggregate', 'logical-router']
_r.properties = [
    ResourceProperty('service-instance-properties', is_list=False, is_map=False),
    ResourceProperty('service-instance-bindings', is_list=False, is_map=True),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('service-template')
_r.children = []
_r.parent = 'domain'
_r.refs = ['service-appliance-set']
_r.back_refs = ['service-instance']
_r.properties = [
    ResourceProperty('service-template-properties', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('subnet')
_r.children = []
_r.parent = None
_r.refs = ['virtual-machine-interface']
_r.back_refs = []
_r.properties = [
    ResourceProperty('subnet-ip-prefix', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('virtual-DNS')
_r.children = ['virtual-DNS-record']
_r.parent = 'domain'
_r.refs = []
_r.back_refs = ['network-ipam']
_r.properties = [
    ResourceProperty('virtual-DNS-data', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('virtual-DNS-record')
_r.children = []
_r.parent = 'virtual-DNS'
_r.refs = []
_r.back_refs = []
_r.properties = [
    ResourceProperty('virtual-DNS-record-data', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('virtual-ip')
_r.children = []
_r.parent = 'project'
_r.refs = ['loadbalancer-pool', 'virtual-machine-interface']
_r.back_refs = []
_r.properties = [
    ResourceProperty('virtual-ip-properties', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('virtual-machine')
_r.children = ['virtual-machine-interface']
_r.parent = None
_r.refs = ['service-instance']
_r.back_refs = ['virtual-machine-interface', 'virtual-router']
_r.properties = [
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('virtual-machine-interface')
_r.children = []
_r.parent = 'project'
_r.refs = ['qos-forwarding-class', 'security-group', 'virtual-machine-interface', 'virtual-machine', 'virtual-network', 'routing-instance', 'port-tuple', 'service-health-check', 'interface-route-table', 'physical-interface']
_r.back_refs = ['loadbalancer-pool', 'virtual-ip', 'loadbalancer', 'virtual-machine-interface', 'instance-ip', 'subnet', 'floating-ip', 'logical-interface', 'bgp-as-a-service', 'customer-attachment', 'logical-router']
_r.properties = [
    ResourceProperty('virtual-machine-interface-mac-addresses', is_list=False, is_map=False),
    ResourceProperty('virtual-machine-interface-dhcp-option-list', is_list=False, is_map=False),
    ResourceProperty('virtual-machine-interface-host-routes', is_list=False, is_map=False),
    ResourceProperty('virtual-machine-interface-allowed-address-pairs', is_list=False, is_map=False),
    ResourceProperty('vrf-assign-table', is_list=False, is_map=False),
    ResourceProperty('virtual-machine-interface-device-owner', is_list=False, is_map=False),
    ResourceProperty('virtual-machine-interface-disable-policy', is_list=False, is_map=False),
    ResourceProperty('virtual-machine-interface-properties', is_list=False, is_map=False),
    ResourceProperty('virtual-machine-interface-bindings', is_list=False, is_map=True),
    ResourceProperty('virtual-machine-interface-fat-flow-protocols', is_list=True, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('virtual-network')
_r.children = ['access-control-list', 'floating-ip-pool', 'routing-instance']
_r.parent = 'project'
_r.refs = ['qos-forwarding-class', 'network-ipam', 'network-policy', 'route-table']
_r.back_refs = ['virtual-machine-interface', 'instance-ip', 'physical-router', 'logical-router']
_r.properties = [
    ResourceProperty('virtual-network-properties', is_list=False, is_map=False),
    ResourceProperty('provider-properties', is_list=False, is_map=False),
    ResourceProperty('virtual-network-network-id', is_list=False, is_map=False),
    ResourceProperty('route-target-list', is_list=False, is_map=False),
    ResourceProperty('import-route-target-list', is_list=False, is_map=False),
    ResourceProperty('export-route-target-list', is_list=False, is_map=False),
    ResourceProperty('router-external', is_list=False, is_map=False),
    ResourceProperty('is-shared', is_list=False, is_map=False),
    ResourceProperty('external-ipam', is_list=False, is_map=False),
    ResourceProperty('flood-unknown-unicast', is_list=False, is_map=False),
    ResourceProperty('multi-policy-service-chains-enabled', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
_r = schema._get_or_add_resource('virtual-router')
_r.children = []
_r.parent = 'global-system-config'
_r.refs = ['virtual-machine']
_r.back_refs = ['physical-router', 'provider-attachment']
_r.properties = [
    ResourceProperty('virtual-router-type', is_list=False, is_map=False),
    ResourceProperty('virtual-router-dpdk-enabled', is_list=False, is_map=False),
    ResourceProperty('virtual-router-ip-address', is_list=False, is_map=False),
    ResourceProperty('id-perms', is_list=False, is_map=False),
    ResourceProperty('perms2', is_list=False, is_map=False),
    ResourceProperty('display-name', is_list=False, is_map=False),
]
