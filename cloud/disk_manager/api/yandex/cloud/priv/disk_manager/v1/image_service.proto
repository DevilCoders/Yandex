syntax = "proto3";

package yandex.cloud.priv.disk_manager.v1;

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/disk_manager/v1/disk.proto";
import "yandex/cloud/priv/disk_manager/v1/image.proto";
import "yandex/cloud/priv/operation/operation.proto";

option go_package = "a.yandex-team.ru/cloud/disk_manager/api/yandex/cloud/priv/disk_manager/v1;disk_manager";

// Images are stored in global AZ and there's also a pool of base disks in each regional AZ.
// Size of pools are managed automatically, these disks are assigned to a special cloud+folder.
service ImageService {
    rpc Create(CreateImageRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            metadata: "CreateImageMetadata"
            response: "CreateImageResponse"
        };
    }

    rpc Update(UpdateImageRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            metadata: "UpdateImageMetadata"
            response: "google.protobuf.Empty"
        };
    }

    rpc Delete(DeleteImageRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            metadata: "DeleteImageMetadata"
            response: "google.protobuf.Empty"
        };
    }
}

message CreateImageRequest {
    oneof src {
        string src_snapshot_id = 1;
        string src_image_id = 2;
        ImageUrl src_url = 3;
        DiskId src_disk_id = 5;
    }
    string dst_image_id = 6;
    string folder_id = 7;
    string operation_cloud_id = 8;
    string operation_folder_id = 9;
    bool pooled = 10;
}

message CreateImageMetadata {
    double progress = 1;
}

message CreateImageResponse {
    int64 size = 1;
    int64 storage_size = 2;
}

message UpdateImageRequest {
    string image_id = 1;
    bool pooled = 2;
}

message UpdateImageMetadata {
    string image_id = 1;
}

message DeleteImageRequest {
    string image_id = 1;
    string operation_cloud_id = 2;
    string operation_folder_id = 3;
}

message DeleteImageMetadata {
    string image_id = 1;
}
