syntax = "proto3";

package yandex.cloud.priv.disk_manager.v1;

import "google/protobuf/empty.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/disk_manager/v1/placement_group.proto";
import "yandex/cloud/priv/operation/operation.proto";

option go_package = "a.yandex-team.ru/cloud/disk_manager/api/yandex/cloud/priv/disk_manager/v1;disk_manager";

service PlacementGroupService {
    rpc Create(CreatePlacementGroupRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            response: "google.protobuf.Empty"
        };
    }

    rpc Delete(DeletePlacementGroupRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            metadata: "DeletePlacementGroupMetadata"
            response: "google.protobuf.Empty"
        };
    }

    rpc Alter(AlterPlacementGroupMembershipRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            response: "google.protobuf.Empty"
        };
    }

    rpc List(ListPlacementGroupsRequest) returns (ListPlacementGroupsResponse) {}

    rpc Describe(DescribePlacementGroupRequest) returns (PlacementGroup) {}
}

message CreatePlacementGroupRequest {
    GroupId group_id = 1;
    PlacementStrategy placement_strategy = 2;
}

message DeletePlacementGroupRequest {
    GroupId group_id = 1;
}

message DeletePlacementGroupMetadata {
    GroupId group_id = 1;
}

message AlterPlacementGroupMembershipRequest {
    GroupId group_id = 1;
    repeated string disks_to_add = 2;
    repeated string disks_to_remove = 3;
}

message ListPlacementGroupsRequest {
    string zone_id = 1;
}

message ListPlacementGroupsResponse {
    repeated string group_ids = 1;
}

message DescribePlacementGroupRequest {
    GroupId group_id = 1;
}
