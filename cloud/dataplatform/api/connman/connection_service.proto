syntax = "proto3";

option go_package = "a.yandex-team.ru/cloud/dataplatform/api/connman";

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "cloud/dataplatform/api/connman/connection.proto";

package yandex.cloud.priv.connman.v1;

service ConnectionService {
    rpc Get(GetConnectionRequest) returns (Connection) {
        option (google.api.http) = {
            get: "/v1/connection/{id}"
        };
    }
    rpc List(ListConnectionRequest) returns (ListConnectionResponse) {
        option (google.api.http) = {
            get: "/v1/connections"
        };
    }
    rpc Create(CreateConnectionRequest) returns (operation.Operation) {
        option (google.api.http) = {
            post: "/v1/connection"
            body: "*"
        };
        option (yandex.cloud.api.operation) = {
            metadata: "CreateConnectionMetadata"
            response: "Connection"
        };
    }
    rpc Update(UpdateConnectionRequest) returns (operation.Operation) {
        option (google.api.http) = {
            patch: "/v1/connection/{id}"
            body: "*"
        };
        option (yandex.cloud.api.operation) = {
            metadata: "UpdateConnectionMetadata"
            response: "Connection"
        };
    }
    rpc Delete(DeleteConnectionRequest)  returns (operation.Operation) {
        option (google.api.http) = {
            delete: "/v1/connection/{id}"
        };
        option (yandex.cloud.api.operation) = {
            metadata: "DeleteConnectionMetadata"
            response: "google.protobuf.Empty"
        };
    }
}

message CreateConnectionRequest {
    string folder_id = 1;
    string name = 2;
    string description = 3;
    map<string, string> labels = 4;
    ConnectionParams params = 5;
}
message CreateConnectionMetadata {
}

message UpdateConnectionRequest {
    string id = 1;
    google.protobuf.FieldMask update_mask = 2;
    string name = 3;
    string description = 4;
    map<string, string> labels = 5;
    ConnectionParams params = 6;
}
message UpdateConnectionMetadata {
    Connection prev = 1;
}

message DeleteConnectionRequest {
    string id = 1;
}
message DeleteConnectionMetadata {
}

enum ConnectionView {
    CONNECTION_VIEW_UNSPECIFIED = 0;
    CONNECTION_VIEW_BASIC = 1;
    CONNECTION_VIEW_SENSITIVE = 2;
}

message ListConnectionRequest {
    string folder_id = 1;
    ConnectionView view = 2;
}
message ListConnectionResponse {
    repeated Connection connection = 1;
}

message GetConnectionRequest {
    string id = 1;
    ConnectionView view = 2;
}
