upstream sqs {
    server [::1]:8772;
}

log_format with_req_id '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" reqid $request_id ';

server {
    listen 80;
    listen [::]:80;
    server_name "~^(?<fqdn>.*)$";
    return 308 https://$host$request_uri;
}

server {
    # https://wiki.yandex-team.ru/security/ssl/bestpractices/#httpstricttransportsecurityipinning
    listen                      443 ssl;
    listen                      [::]:443 ssl;
    listen                      8771;
    listen                      [::]:8771;
    server_name                 "~^(?<fqdn>.*)$";
    keepalive_timeout           30;

    ssl_certificate             /etc/nginx/ssl/{{ pillar['secrets']['api']['cert'] }};
    ssl_certificate_key         /etc/nginx/ssl/{{ pillar['secrets']['api']['key'] }};

    ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers   on;
    ssl_session_cache           shared:SSL:64m;
    ssl_session_timeout         28h;

    ssl_ciphers kEECDH+AESGCM+AES128:kEECDH+AES128:kRSA+AESGCM+AES128:kRSA+AES128:DES-CBC3-SHA:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2;
    # enable HSTS later. !!! remember about local scripts: some of them uses localhost:80 !!!
    # add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

    access_log /var/log/nginx/access.log with_req_id;
    error_log /var/log/nginx/error.log;

    location "/" {
        proxy_pass http://sqs;
        proxy_read_timeout 60s;
        proxy_buffer_size 512k;
        proxy_buffers 8 512k;
        proxy_busy_buffers_size 512k;
        proxy_send_timeout 60s;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Request-ID $request_id;
    }

}
