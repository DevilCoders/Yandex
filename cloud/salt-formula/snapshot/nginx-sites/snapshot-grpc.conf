{%- set hostname = grains['nodename'] %}
{%- set default_zone_id = pillar['placement']['dc'] %}
{%- set zone_id = salt['grains.get']('cluster_map:hosts:%s:location:zone_id' % hostname, default_zone_id) %}
{%- set snapshot_servers = salt['grains.get']('cluster_map:roles:snapshot', []) %}

{%- set primary_snapshot_servers = [] %}
{%- set backup_snapshot_servers = [] %}
{%- for server in snapshot_servers %}
    {%- if 'seed' in salt['grains.get']('cluster_map:hosts:%s:roles' % server, []) %}
        {%- do backup_snapshot_servers.append(server) %}
    {%- elif salt['grains.get']('cluster_map:hosts:%s:location:zone_id' % server, default_zone_id) == zone_id %}
        {%- do primary_snapshot_servers.append(server) %}
    {%- else %}
        {#- Some stands (e.g. HW-CI) have snapshot in 1 az only, but seed is down #}
        {%- do backup_snapshot_servers.append(server) %}
    {%- endif %}
{%- endfor %}

{%- if not primary_snapshot_servers %}
    {#- Nginx does not allow all backup entries, so make them primary #}
    {%- set primary_snapshot_servers = backup_snapshot_servers %}
    {%- set backup_snapshot_servers = [] %}
{%- endif -%}

upstream snapshot_grpc {
        # For small stands and recovery we still want
        # to put load on seed and snapshots in other AZs,
        # but only if no other hosts are operative
    {%- for server in primary_snapshot_servers %}
        server {{ server }}:7627;
    {%- endfor %}
    {%- for server in backup_snapshot_servers %}
        server {{ server }}:7627 backup;
    {%- endfor %}
}

server {
    listen [::1]:7627;
    proxy_pass snapshot_grpc;
    proxy_connect_timeout 1s;
    access_log /var/log/nginx/snapshot_grpc_access.log stream;
    error_log /var/log/nginx/snapshot_grpc_error.log;
}
