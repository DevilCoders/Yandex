{%- set hostname = grains['nodename'] %}
{%- set host_tags = salt['grains.get']('cluster_map:hosts:%s:tags' % hostname) %}
{%- set oct_announces = salt['yavpp.cgw_conf'](salt['grains.get']('cluster_map:cloudgate_conf:%s' %  hostname), host_tags, grains)['announces']['downstream'] %}
{%- if 'bgp2vpp' in host_tags%}
is_bgp2vpp: True
{%- endif %}
{#TODO: CLOUD-21717 add correct table and filters for nat #}
filter_by_prefixes:
{%- for announce in oct_announces %}
  - {{ announce['route'] }}
{%- endfor %}
{%- if 'cgw-dc' in host_tags %}
{%- set fip_table = 1 %}
{%- elif 'bgp2vpp' in host_tags %}
{%- set fip_table = 774 %}
{%- else %}
{%- set fip_table = 2 %}
{% endif %}
ip4_table: {{ fip_table }}
ip6_table: 0
vpp_bugs:
  - name: label16-v6-vpp
    match_pattern: "ipv6 via :: gre"
    vpp_ip_version: 6

  - name: label16-v4-vpp
    match_pattern: ipv4 via 0.0.0.0 gre
    vpp_ip_version: 4

  - name: arp-ipv4-v4-vpp
    match_pattern: arp\-ipv4
    vpp_ip_version: 4

  - name: arp-ipv4-v6-vpp
    match_pattern: arp\-ipv4
    vpp_ip_version: 6

  - name: faulty-default-v6-vpp
    match_pattern: mpls via 10.255.254.1
    vpp_ip_version: 6

  - name: faulty-default-v4-vpp
    match_pattern: mpls via 10.255.254.1
    vpp_ip_version: 4

  - name: unset-v4-vpp
    match_pattern: unset
    vpp_ip_version: 4

  - name: unset-v6-vpp
    match_pattern: unset
    vpp_ip_version: 6

bgp_vpp_bugs:
  - name: cgw-fibsync-v4
    bgp_family: ipv4-vpn
    vpp_ip_version: 4
  - name: cgw-fibsync-v6
    bgp_family: ipv6-vpn
    vpp_ip_version: 6
