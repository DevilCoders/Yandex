{%- set lb_endpoints = grains['cluster_map']['load_balancer']['endpoints'] -%}

{%- set hostname = grains['nodename'] %}
{%- macro host_location(hostname) %}
  {{ salt['grains.get']('cluster_map:hosts:%s:location:zone_id' % hostname, "cloudvm") }}
{%- endmacro %}
{%- set current_location = host_location(hostname) %}

upstream backend-serialws {
{%- for host in grains['cluster_map']['roles']['serialssh'] %}
  {%- if host_location(host) == current_location %}
    server {{ host }}:9680;
  {%- endif -%}
{% endfor -%}
}

# redirect to https
server {
    listen {{lb_endpoints.serialssh_websocket_http.port}};
    listen [::]:{{lb_endpoints.serialssh_websocket_http.port}};
    server_name "~^(?<fqdn>.*)$";
    return 308 https://$host$request_uri;
}

# healthcheck for l3
server {
  listen {{lb_endpoints.serialssh_websocket_status.port}};
  listen [::]:{{lb_endpoints.serialssh_websocket_status.port}};
  server_name "~^(?<fqdn>.*)$";
  return 200 'ok';
}

server {
    # https://wiki.yandex-team.ru/security/ssl/bestpractices/#httpstricttransportsecurityipinning
    listen                      {{lb_endpoints.serialssh_websocket_https.port}} ssl;
    listen                      [::]:{{lb_endpoints.serialssh_websocket_https.port}} ssl;
    server_name                 "~^(?<fqdn>.*)$";
    keepalive_timeout           120;

    ssl_certificate             /etc/nginx/ssl/{{ pillar['secrets']['serialws']['cert'] }};
    ssl_certificate_key         /etc/nginx/ssl/{{ pillar['secrets']['serialws']['key'] }};

    ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers   on;
    ssl_session_cache           shared:SSL:64m;
    ssl_session_timeout         28h;

    ssl_ciphers kEECDH+AESGCM+AES128:kEECDH+AES128:kRSA+AESGCM+AES128:kRSA+AES128:DES-CBC3-SHA:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2;
    # enable HSTS later. !!! remember about local scripts: some of them uses localhost:80 !!!
    # add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

    access_log /var/log/nginx/yc-serialws_short.log log_for_robot;
    access_log /var/log/nginx/yc-serialws_access.log log_debug;
    error_log /var/log/nginx/yc-serialws_error.log;

    location /ws/console/ {
            proxy_pass http://backend-serialws/;
            expires off;
            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
