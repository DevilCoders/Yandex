{%- set lb_endpoints = grains['cluster_map']['load_balancer']['endpoints'] -%}
{%- import "common/kikimr/init.sls" as vars with context %}

{%- set environment = grains['cluster_map']['environment'] %}
{%- set common_slspath = slspath | path_join("../common/endpoint-ids") %}
{%- set filename = "{}/files/ids-{}.yaml".format(common_slspath, environment) %}

{%- import_yaml filename as ids %}
{%- set storage_id = {'value': ""} %}
{%- for id in ids %}
  {%- if id.service == "storage" %}
    {%- if storage_id.update({'value': id.id}) %} {% endif %}
  {%- endif %}
{%- endfor %}
{
    "application": {
        "endpoints": ["tcp://[::]:6666"],
        "system_endpoints": ["tcp://[::]:6700"],
        "workers_num": 16,
        "base_hosts": ["storage.yandexcloud.net", "storage.{{ grains['cluster_map']['public_zone'] }}"],
        "response_buffering_limit_mb": 5,
        "chunk_size": 1048576,
        "hash_calculate_workers_num": 2
    },
    "enable_billing_response_headers": true,
    "enable_lifecycle_handlers": true,
    "enable_bucket_acl_handlers": true,
    "enable_object_acl_handlers": true,
    "enable_post_form_handlers": true,
    "extra_cors_configuration": {
        "rules": [{
            "allowed_methods": ["POST", "PUT"],
            "allowed_origins": ["*.yandex.ru", "*.yandex.com"],
            "allowed_headers": ["DNT", "User-Agent", "X-Requested-With", "If-Modified-Since", "Cache-Control", "Content-Type", "Range", "X-Amz-Storage-Class"],
            "max_age_seconds": 86400,
            "expose_headers": ["Content-Length"]
        }]
    },
    "website_specification": {
        "endpoints": ["tcp://[::]:6667"],
        "base_hosts": ["website.yandexcloud.net", "website.{{ grains['cluster_map']['public_zone'] }}"],
        "documentation_url": "https://cloud.yandex.ru/docs/storage/hosting/"
    },
    "logging": {
        "version": 1,
        "disable_existing_loggers": false,
        "filters": {
            "request_context": {
                "()": "s3mds.logger.RequestContextFilter"
            }
        },
        "formatters": {
            "default": {
                "()": "s3mds.logger.BaseFormatter",
                "format": "[%(name)s]%(asctime)s.%(msecs)03d %(request_id)s %(levelname)s: %(message)s",
                "datefmt": "%Y-%m-%dT%H:%M:%S"
            },
            "access_log": {
                "()": "s3mds.logger.BaseFormatter",
                "format": "timestamp=%(asctime)s\trequest_id=%(request_id)s\tremote_addr=%(remote_addr)s\tbucket=%(bucket)s\tkey=\"%(key)s\"\towner=%(owner_service_id)s\trequester=%(requester_service_id)s\tmethod=%(request_method)s\tquery=\"%(request_query)s\"\tstatus=%(status)s\tbytes_received=%(bytes_received)s\tbytes_sent=%(bytes_sent)s\trequest_time=%(request_time).3f\tstatus_desc=\"%(status_desc)s\"",
                "datefmt": "%Y-%m-%dT%H:%M:%S"
            },
            "access_service_request_log": {
                "()": "s3mds.logger.BaseFormatter",
                "format": "timestamp=%(asctime)s\trequest_id=%(request_id)s\trequest=%(request)s\tstatus=%(status)s\terror_desc=%(error_desc)s\tattempt=%(attempt)s\trequest_time=%(request_time).3f",
                "datefmt": "%Y-%m-%dT%H:%M:%S"
            },
            "db_request_log": {
                "()": "s3mds.logger.BaseFormatter",
                "format": "timestamp=%(asctime)s\trequest_id=%(request_id)s\tbucket=%(bucket)s\tquery=%(query)s\trowcount=%(rowcount)s\terror_code=%(error_code)s\tattempt=%(attempt)s\trequest_time=%(request_time).3f",
                "datefmt": "%Y-%m-%dT%H:%M:%S"
            },
            "mds_request_log": {
                "()": "s3mds.logger.BaseFormatter",
                "format": "timestamp=%(asctime)s\trequest_id=%(request_id)s\tbucket=%(bucket)s\trequest_method=%(request_method)s\trequest_uri=\"%(request_uri)s\"\tnamespace=%(namespace)s\tcouple_id=%(couple_id)s\tkey=\"%(key)s\"\tstatus=%(status)s\tstatus_desc=\"%(status_desc)s\"\tbytes_sent=%(bytes_sent)s\tbytes_received=%(bytes_received)s\trequest_time=%(request_time).3f\tconnect_time=%(connect_time).3f\tresponse_header_time=%(response_header_time).3f",
                "datefmt": "%Y-%m-%dT%H:%M:%S"
             }
        },
        "handlers": {
            "default": {
                "filters": ["request_context"],
                "formatter": "default",
                "level": "INFO",
                "class": "s3mds.logger.MultiprocessFileHandler",
                "filename": "/var/log/s3-mds-proxy-arc/s3-mds-proxy-arc.%(worker_id)s.log"
            },
            "access_log": {
                "filters": ["request_context"],
                "formatter": "access_log",
                "level": "INFO",
                "class": "s3mds.logger.MultiprocessFileHandler",
                "filename": "/var/log/s3-mds-proxy-arc/access-arc.%(worker_id)s.log"
            },
            "access_service_request_log": {
                 "filters": ["request_context"],
                 "formatter": "access_service_request_log",
                 "level": "INFO",
                 "class": "s3mds.logger.MultiprocessFileHandler",
                 "filename": "/var/log/s3-mds-proxy-arc/as-request.%(worker_id)s.log"
            },
            "db_request_log": {
                "filters": ["request_context"],
                "formatter": "db_request_log",
                "level": "INFO",
                "class": "s3mds.logger.MultiprocessFileHandler",
                "filename": "/var/log/s3-mds-proxy-arc/db-request-arc.%(worker_id)s.log"
            },
            "mds_request_log": {
                "filters": ["request_context"],
                "formatter": "mds_request_log",
                "level": "INFO",
                "class": "s3mds.logger.MultiprocessFileHandler",
                "filename": "/var/log/s3-mds-proxy-arc/mds-request.%(worker_id)s.log"
            }
        },
        "loggers": {
            "": {
                "handlers": ["default"],
                "level": "INFO",
                "propagate": true
            },
            "kikimr.public": {
                "level": "INFO",
                "propagate": false
            },
            "s3mds.access_log": {
                "handlers": ["access_log"],
                "level": "INFO",
                "propagate": false
            },
            "s3mds.access_service.request_log": {
                "handlers": ["access_service_request_log"],
                "level": "INFO",
                "propagate": false
            },
            "s3mds.mds.request_log": {
                "handlers": ["mds_request_log"],
                "level": "INFO",
                "propagate": false
            },
            "s3mds.db.request_log": {
                "handlers": ["db_request_log"],
                "level": "INFO",
                "propagate": false
            }
        }
    },
    "access_service_client": {
        "host": "{{ lb_endpoints.access_service_grpc.host }}",
        "port": {{ lb_endpoints.access_service_grpc.port }}
    },
    "authentication_backends": [
        {
            "type": "YCI-S3-V4"
        },
        {
            "type": "YCI-S3-V2"
        },
        {
            "type": "YCI-Token",
            "service_name": "s3"
        }
    ],
    "permission": {
        "backend": {
            "type": "YCI"
        }
    },
    {%- if 'identity_private_tls' in lb_endpoints %}
    "identity": {
        "host": "https://{{ lb_endpoints.identity_private_tls.host }}:{{ lb_endpoints.identity_private_tls.port }}",
        "token_path": "/etc/s3/identity-secret.conf"
    },
    {%- endif %}
    "db": {
        "client": {
            "type": "kikimr",
            "endpoints": [{
                "host": "localhost",
                "port": 2135
            }],
            "data_center": 4047,
            "schema_prefix": "/{{ vars.ydb_domain }}/{{ vars.s3proxy_database }}/",
            "default_buckets_cloud_quota": {{ pillar.get("default_buckets_cloud_quota", 10) }},
            "default_cloud_total_alive_size_quota": {{ pillar.get("default_cloud_total_alive_size_quota", 107374182400) }},
            "connect_timeout": 5,
            "pool": {
                "size": 64,
                "max_size": 128
            }
        },
        "buckets_cache": {
            "max_size": 1000,
            "max_age_seconds": 10
        },
        "buckets_stats_cache": {
            "max_size": 1000,
            "max_age_seconds": 60
        },
        "clouds_cache": {
            "max_size": 10000,
            "max_age_seconds": 60
        }
    },
    "organizations_cache": {
        "update_period_sec": 60
    },
    "identity_cache": {
        "update_period_sec": 60,
        "expire_period_sec": 300
    },
    "storage": "kikimr",
    "storage_client_resolver": {
        "defaults": {
            "STANDARD": "kikimr",
            "COLD": "mds"
        },
        "clouds": {
            "aoej23l26nvrbnkbm7qq": {
                "STANDARD": "kikimr",
                "COLD": "mds"
            },
            "b1go9nvof0qihvelns79": {
                "STANDARD": "kikimr",
                "COLD": "mds"
            },
            "b1gfet3o36gjb8g5u9b0": {
                "STANDARD": "kikimr",
                "COLD": "mds"
            },
            "b1g3o4minpkuh10pd2rj": {
                "STANDARD": "kikimr",
                "COLD": "mds"
            }
        }
    },
    "mds": {
        "key_version": 3,
        "read_endpoint": "{{ salt['pillar.get']('s3:mds_endpoint:read', '') }}",
        "write_endpoint": "{{ salt['pillar.get']('s3:mds_endpoint:write', '') }}",
        "connect_timeout": 7,
        "read_range_size_mb": 40,
        "upload_session_version": "json_v2",
        "namespace_resolver": {
            "secret_file": "/etc/s3-mds-proxy-arc/mds_secret.token"
        }
  {%- if storage_id.value != "" %}
    },
    "yc_id_prefix": "{{ storage_id.value }}"
  {%- else %}
    }
  {%- endif %}
}
