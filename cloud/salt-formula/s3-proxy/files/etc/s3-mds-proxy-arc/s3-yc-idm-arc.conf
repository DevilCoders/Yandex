{%- set lb_endpoints = grains['cluster_map']['load_balancer']['endpoints'] -%}
{%- import "common/kikimr/init.sls" as vars with context -%}
{%- set domain = grains['cluster_map']['public_zone'] -%}
{%- if domain == 'prod.cloud.yandex.net' -%}
  {%- set domain = "yandexcloud.net" -%}
{%- endif -%}


{%- set environment = grains['cluster_map']['environment'] %}
{%- set common_slspath = slspath | path_join("../common/endpoint-ids") %}
{%- set filename = "{}/files/ids-{}.yaml".format(common_slspath, environment) %}

{%- import_yaml filename as ids %}
{%- set storage_id = {'value': ""} %}
{%- for id in ids %}
  {%- if id.service == "storage" %}
    {%- if storage_id.update({'value': id.id}) %} {% endif %}
  {%- endif %}
{%- endfor %}
{
    "application": {
        "endpoints": [
            "tcp://[::]:4444"
        ],
        "system_endpoints": [
            "tcp://[::]:4600"
        ]
    },
    "enable_bucket_acl_handlers": true,
    "logging": {
        "version": 1,
        "disable_existing_loggers": false,
        "filters": {
            "request_context": {
                "()": "s3mds.logger.RequestContextFilter"
            }
        },
        "formatters": {
            "default": {
                "()": "s3mds.logger.BaseFormatter",
                "format": "%(asctime)s.%(msecs)03d %(request_id)s %(levelname)s: %(message)s",
                "datefmt": "%Y-%m-%dT%H:%M:%S"
            },
            "access_service_request_log": {
                "()": "s3mds.logger.BaseFormatter",
                "format": "timestamp=%(asctime)s\trequest_id=%(request_id)s\trequest=%(request)s\tstatus=%(status)s\terror_desc=%(error_desc)s\tattempt=%(attempt)s\trequest_time=%(request_time).3f",
                "datefmt": "%Y-%m-%dT%H:%M:%S"
            },
            "db_request_log": {
                "()": "s3mds.logger.BaseFormatter",
                "format": "timestamp=%(asctime)s\trequest_id=%(request_id)s\trowcount=%(rowcount)s\terror_code=%(error_code)s\tattempt=%(attempt)s\trequest_time=%(request_time).3f",
                "datefmt": "%Y-%m-%dT%H:%M:%S"
            }
        },
        "handlers": {
            "default": {
                "filters": [ "request_context" ],
                "formatter": "default",
                "level": "INFO",
                "class": "logging.handlers.WatchedFileHandler",
                "filename": "/var/log/s3-mds-yc-idm-arc/s3-mds-yc-idm-arc.log"
            },
            "access_log": {
                "filters": [ "request_context" ],
                "level": "DEBUG",
                "class": "logging.handlers.WatchedFileHandler",
                "filename": "/var/log/s3-mds-yc-idm-arc/access.log"
            },
            "access_service_request_log": {
                 "filters": ["request_context"],
                 "formatter": "access_service_request_log",
                 "level": "INFO",
                 "class": "s3mds.logger.MultiprocessFileHandler",
                 "filename": "/var/log/s3-mds-yc-idm-arc/as-request.%(worker_id)s.log"
            },
            "db_request_log": {
                "filters": [ "request_context" ],
                "formatter": "db_request_log",
                "level": "INFO",
                "class": "logging.handlers.WatchedFileHandler",
                "filename": "/var/log/s3-mds-yc-idm-arc/db-request.log"
            }
        },
        "loggers": {
            "": {
                "handlers": [
                    "default"
                ],
                "level": "INFO",
                "propagate": true
            },
            "kikimr.public": {
                "propagate": false,
                "level": "CRITICAL"
            },
            "tornado.access": {
                "handlers": [
                    "access_log"
                ],
                "level": "DEBUG",
                "propagate": false
            },
            "s3mds.access_service.request_log": {
                "handlers": ["access_service_request_log"],
                "level": "INFO",
                "propagate": false
            },
            "s3mds.db.request_log": {
                "handlers": [ "db_request_log" ],
                "level": "INFO",
                "propagate": false
            }
        }
    },
    "access_service_client": {
        "host": "{{ lb_endpoints.access_service_grpc.host }}",
        "port": {{ lb_endpoints.access_service_grpc.port }}
    },
    {%- if 'identity_private_tls' in lb_endpoints %}
    "identity": {
        "host": "https://{{ lb_endpoints.identity_private_tls.host }}:{{ lb_endpoints.identity_private_tls.port }}",
        "token_path": "/etc/s3/identity-secret.conf",
        "max_simultaneous_requests": 2000
    },
    {%- endif %}
    "authentication_backends": [
        {
            "type": "YCI-Token"
        }
    ],
    "permission": {
        "backend": {
            "type": "YCI"
        }
    },
    "presign_urls": {
        "host": "https://storage.{{ domain }}"
    },
    "buckets_cloud_security_limit": 201,
    "total_size_cloud_security_limit": 3377699720527872,
    "db": {
        "endpoints": [
            {
                "host": "localhost",
                "port": 2135
            }
        ],
        "data_center": 4047,
        "schema_prefix": "/{{ vars.ydb_domain }}/{{ vars.s3proxy_database }}/",
        "default_buckets_cloud_quota": {{ pillar.get("default_buckets_cloud_quota", 10) }},
        "default_cloud_total_alive_size_quota": {{ pillar.get("default_cloud_total_alive_size_quota", 107374182400) }},
        "pool": {
            "size": 8
        }
    },
    "organizations_cache": {
        "update_period_sec": 60
  {%- if storage_id.value != "" %}
    },
    "yc_id_prefix": "{{ storage_id.value }}"
  {%- else %}
    }
  {%- endif %}
}
