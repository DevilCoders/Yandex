{%- import "common/kikimr/init.sls" as vars with context %}
{
    "application": {
        "endpoints": [
            "tcp://[::]:5100"
        ],
        "system_endpoints": [
            "tcp://[::]:5101"
        ]
    },
    "batch_size": 100,
    "db": {
        "data_center": 4047,
        "endpoints": [
            {
                "host": "localhost",
                "port": 2135
            }
        ],
        "schema_prefix": "/{{ vars.ydb_domain }}/{{ vars.s3proxy_database }}/"
    },
    "job_timeout_min": 5,
    "lock_refresh_period": 60,
    "logging": {
        "disable_existing_loggers": false,
        "filters": {
            "request_context": {
                "()": "s3mds.logger.RequestContextFilter"
            }
        },
        "formatters": {
            "db_request_log": {
                "()": "s3mds.logger.BaseFormatter",
                "datefmt": "%Y-%m-%dT%H:%M:%S",
                "format": "timestamp=%(asctime)s\trequest_id=%(request_id)s\tbucket=%(bucket)s\tquery=%(query)s\trowcount=%(rowcount)s\terror_code=%(error_code)s\tattempt=%(attempt)s\trequest_time=%(request_time).3f"
            },
            "default": {
                "()": "s3mds.logger.BaseFormatter",
                "datefmt": "%Y-%m-%dT%H:%M:%S",
                "format": "%(asctime)s.%(msecs)03d %(request_id)s %(levelname)s: %(message)s"
            },
            "sqs_request_log": {
                "()": "s3mds.logger.BaseFormatter",
                "datefmt": "%Y-%m-%dT%H:%M:%S",
                "format": "timestamp=%(asctime)s\trequest_id=%(request_id)s\trequest=%(request)s\tstatus=%(status)s\terror_code=%(error_code)s\tattempt=%(attempt)s\tsqs_request_id=%(sqs_request_id)s\trequest_time=%(request_time).3f"
            }
        },
        "handlers": {
            "db_request_log": {
                "class": "logging.handlers.WatchedFileHandler",
                "filename": "/var/log/s3/lf/scheduler/db-request.log",
                "filters": [
                    "request_context"
                ],
                "formatter": "db_request_log",
                "level": "DEBUG"
            },
            "default": {
                "class": "logging.handlers.WatchedFileHandler",
                "filename": "/var/log/s3/lf/scheduler/s3-bucket-lifecycle-scheduler.log",
                "filters": [
                    "request_context"
                ],
                "formatter": "default",
                "level": "DEBUG"
            },
            "sqs_request_log": {
                "class": "logging.handlers.WatchedFileHandler",
                "filename": "/var/log/s3/lf/scheduler/sqs-request.log",
                "filters": [
                    "request_context"
                ],
                "formatter": "sqs_request_log",
                "level": "DEBUG"
            }
        },
        "loggers": {
            "": {
                "handlers": [
                    "default"
                ],
                "level": "DEBUG",
                "propagate": true
            },
            "botocore": {
                "level": "INFO"
            },
            "tornado.access": {
                "propagate": false
            },
            "kikimr.public": {
                "level": "CRITICAL",
                "propagate": false
            },
            "s3mds.db.kikimr": {
                "level": "INFO"
            },
            "s3mds.db.request_log": {
                "handlers": [
                    "db_request_log"
                ],
                "level": "DEBUG",
                "propagate": false
            },
            "s3mds.sqs.request_log": {
                "handlers": [
                    "sqs_request_log"
                ],
                "level": "DEBUG",
                "propagate": false
            }
        },
        "version": 1
    },
    "sleep_time": 60,
    "sqs": {
    "region":"ru-central1",
        "credentials_path": "/etc/s3/sqs-credentials.conf",
        "endpoint": "https://{{ pillar.get('message-queue', {}).get('endpoint', 'empty_endpoint') }}",
        "queue": "s3-api-lf"
    }
}
