{%- set roles = grains['cluster_map']['roles'] -%}
{%- set hostname = grains['nodename'] %}
{%- set host_roles = grains['cluster_map']['hosts'][hostname]['roles'] %}
{%- macro host_location(hostname) %}
  {{ salt['grains.get']('cluster_map:hosts:%s:location:zone_id' % hostname, "cloudvm") }}
{%- endmacro %}
{%- set curruent_location = host_location(hostname) %}

{%- set compute = [] %}
{%- if 'head' in host_roles or 'seed' in host_roles %}
  {%- set all_compute = roles.get('head', [] ) %}
    {%- for host in all_compute %}
      {%- set compute_location = host_location(host) %}
      {%- if compute_location == curruent_location and host != hostname %}
        {%- do compute.append(host)%}
      {% endif %}
  {%- endfor %}
{%- endif %}

upstream backend-compute {
    server ip6-localhost:9000;
  {%- for host in compute %}
    server {{ host }}:9000;
  {%- endfor %}
}

upstream backend-loadbalancer-api {
    server [::1]:10801;
}

geo $is_cloudnets {
    default 0;
    # Cloud L3 blancers (enpoints)
    2a02:6b8:0:3400:0:587::/96 1;
    # Cloud nets
    2a02:6b8:bf00::/56 1;
    2a02:6b8:bf00:2000::/56 1;
    2a02:6b8:bf00:1000::/56 1;
    # lo
    127.0.0.0/8 1;
    ::1 1;
}

map $is_cloudnets $not_cloudnets_key {
    0 $binary_remote_addr;
    1 "";
}

limit_req_zone $connection zone=identity_conn_req:10m rate=30r/s;
limit_conn_zone $not_cloudnets_key zone=identity_conn:10m;

server {
    listen 80;
    listen [::]:80;
    server_name "~^(?<fqdn>.*)$";
    return 308 https://$host$request_uri;
}

server {
    # https://wiki.yandex-team.ru/security/ssl/bestpractices/#httpstricttransportsecurityipinning
    listen                      443 ssl;
    listen                      [::]:443 ssl;
    server_name                 "~^(?<fqdn>.*)$";
    keepalive_timeout           120;

    ssl_certificate             /etc/nginx/ssl/{{ pillar['secrets']['api']['cert'] }};
    ssl_certificate_key         /etc/nginx/ssl/{{ pillar['secrets']['api']['key'] }};

    ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers   on;
    ssl_session_cache           shared:SSL:64m;
    ssl_session_timeout         28h;

    ssl_ciphers kEECDH+AESGCM+AES128:kEECDH+AES128:kRSA+AESGCM+AES128:kRSA+AES128:DES-CBC3-SHA:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2;
    # enable HSTS later. !!! remember about local scripts: some of them uses localhost:80 !!!
    # add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

    access_log /var/log/nginx/yc-head_short.log log_for_robot;
    access_log /var/log/nginx/yc-head_access.log log_debug;
    error_log /var/log/nginx/yc-head_error.log;

    resolver [::1]:53 [2a02:6b8::1:1]:53 valid=30s;

   location "~^/compute/(?<name>(external|public|v1alpha1|v1beta1)/.*)$" {
        # https://wiki.yandex-team.ru/product-security/yodax/ssrf/
        proxy_pass http://backend-compute/$name$is_args$args;
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        include proxy_params;
        proxy_read_timeout 86400;
        # Original request URI must be provided for signature verifying
        proxy_set_header X-Original-Uri $request_uri;
    }

   location "^/compute/private/v1/health" {
        allow 2a02:6b8::/32;
        allow ::1;
        allow 127.0.0.1;
        deny  all;
        proxy_pass http://localhost:9000/private/v1/health;
        proxy_read_timeout 86400;
    }

   location "~^/compute/(?<name>(private)/.*)$" {
        allow 2a02:6b8::/32;
        allow ::1;
        allow 127.0.0.1;
        deny  all;
        proxy_pass http://backend-compute/$name$is_args$args;
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        include proxy_params;
        proxy_read_timeout 86400;
        # Original request URI must be provided for signature verifying
        proxy_set_header X-Original-Uri $request_uri;
    }

    location "~^/loadbalancer/(?<tail>.*)$" {
        proxy_pass http://backend-loadbalancer-api/$tail$is_args$args;
        include proxy_params;
        proxy_read_timeout 86400;
        # Original request URI must be provided for signature verifying
        proxy_set_header X-Original-Uri $request_uri;
    }
}
