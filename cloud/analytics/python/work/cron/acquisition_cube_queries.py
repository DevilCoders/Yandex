queries_prod = {
    'fix_reserve': '''
CREATE TABLE  "//home/cloud_analytics/cubes/acquisition_cube/cube_to_add" ENGINE = YtTable() AS
SELECT
    billing_account_id,
    event_time,
    name,
    ba_name,
    ba_state,
    ba_person_type,
    ba_payment_cycle_type,
    ba_usage_status,
    ba_currency,
    ba_type,
    puid,
    block_reason,
    sales_name,
    is_var,
    is_isv,
    architect,
    is_iot,
    segment,
    potential,
    account_name,
    balance,
    toInt64(is_fraud) as is_fraud,
    board_segment,
    is_verified,
    unblock_reason,
    grant_sources,
    grant_amounts,
    grant_amount,
    grant_source_ids,
    grant_start_times,
    grant_end_times,
    active_grant_ids,
    toInt64(active_grants) as active_grants,
    toInt64(ad_block) as ad_block,
    age,
    amount,
    area,
    balance_long_name,
    balance_name,
    channel,
    channel_detailed,
    city,
    client_ip,
    cloud_id,
    cloud_name,
    cloud_status,
    core_fraction,
    counter_id,
    country,
    database,
    device_model,
    device_type,
    toInt64(duration) as duration,
    email,
    event,
    first_ba_became_paid_datetime,
    first_ba_created_datetime,
    first_cloud_created_datetime,
    first_day_use_datetime,
    first_first_paid_consumption_datetime,
    first_first_payment_datetime,
    first_first_trial_consumption_datetime,
    first_name,
    first_visit_datetime,
    first_visit_dt,
    general_interests,
    toInt64(hits) as hits,
    toInt64(income) as income,
    interests,
    toInt64(is_bounce) as is_bounce,
    is_robot,
    last_name,
    login,
    toInt64(mail_billing) as mail_billing,
    toInt64(mail_event) as mail_event,
    toInt64(mail_feature) as mail_feature,
    toInt64(mail_info) as mail_info,
    toInt64(mail_promo) as mail_promo,
    toInt64(mail_tech) as mail_tech,
    toInt64(mail_testing) as mail_testing,
    is_corporate_card,
    master_account_id,
    toInt64(mobile_phone_vendor) as mobile_phone_vendor,
    os,
    toInt64(page_views) as page_views,
    payment_type,
    phone,
    platform,
    preemptible,
    promocode_client_name,
    promocode_client_type,
    promocode_source,
    promocode_type,
    real_consumption,
    real_consumption_cum,
    real_consumption_vat,
    real_consumption_vat_cum,
    real_payment,
    real_payment_cum,
    real_payment_vat,
    real_payment_vat_cum,
    referer,
    remote_ip,
    toInt64(resolution_depth) as resolution_depth,
    toInt64(resolution_height) as resolution_height,
    toInt64(resolution_width) as resolution_width,
    search_phrase,
    service_id,
    service_long_name,
    service_name,
    service_group,
    session_start_time,
    sex,
    sku_id,
    toInt64(sku_lazy) as sku_lazy,
    sku_name,
    start_time,
    start_url,
    subservice_name,
    total,
    toInt64(total_visits) as total_visits,
    trial_consumption,
    trial_consumption_cum,
    trial_consumption_vat,
    trial_consumption_vat_cum,
    usd_rur_quote,
    user_id,
    user_settings_email,
    utm_campaign,
    utm_content,
    utm_medium,
    utm_source,
    utm_term,
    visit_id,
    visit_version,
    toInt64(window_client_height) as window_client_height,
    toInt64(window_client_width) as window_client_width
FROM(
    SELECT
        t2.*,
        ad_block,
        age,
        amount,
        area,
        balance_long_name,
        balance_name,
        channel,
        channel_detailed,
        city,
        client_ip,
        cloud_id,
        cloud_name,
        cloud_status,
        core_fraction,
        counter_id,
        country,
        database,
        device_model,
        device_type,
        duration,
        email,
        event,
        first_ba_became_paid_datetime,
        first_ba_created_datetime,
        first_cloud_created_datetime,
        first_day_use_datetime,
        first_first_paid_consumption_datetime,
        first_first_payment_datetime,
        first_first_trial_consumption_datetime,
        first_name,
        first_visit_datetime,
        first_visit_dt,
        general_interests,
        hits,
        income,
        interests,
        is_bounce,
        is_robot,
        last_name,
        login,
        mail_billing,
        is_corporate_card,
        mail_event,
        mail_feature,
        mail_info,
        mail_promo,
        mail_tech,
        mail_testing,
        master_account_id,
        mobile_phone_vendor,
        os,
        page_views,
        payment_type,
        phone,
        platform,
        preemptible,
        promocode_client_name,
        promocode_client_type,
        promocode_source,
        promocode_type,
        real_consumption_cum,
        real_consumption_vat_cum,
        real_payment,
        real_payment_cum,
        real_payment_vat,
        real_payment_vat_cum,
        referer,
        remote_ip,
        resolution_depth,
        resolution_height,
        resolution_width,
        search_phrase,
        service_id,
        service_long_name,
        service_name,
        service_group,
        session_start_time,
        sex,
        sku_id,
        sku_lazy,
        sku_name,
        start_time,
        start_url,
        subservice_name,
        total,
        total_visits,
        trial_consumption_cum,
        trial_consumption_vat_cum,
        usd_rur_quote,
        user_id,
        user_settings_email,
        utm_campaign,
        utm_content,
        utm_medium,
        utm_source,
        utm_term,
        visit_id,
        visit_version,
        window_client_height,
        window_client_width
    FROM(
        SELECT
            t0.billing_account_id as billing_account_id,
            t0.event_time as event_time,
            t0.name as name,
            t0.real_consumption,
            t0.real_consumption_vat,
            t0.trial_consumption,
            t0.trial_consumption_vat,
            t1.name as ba_name,
            state as ba_state,
            person_type as ba_person_type,
            payment_cycle_type as ba_payment_cycle_type,
            usage_status as ba_usage_status,
            currency as ba_currency,
            type as ba_type,
            owner_id as puid,
            block_reason as block_reason,
            sales_name as sales_name,
            is_var as is_var,
            is_isv as is_isv,
            architect as architect,
            is_iot as is_iot,
            segment as segment,
            potential as potential,
            account_name as account_name,
            toFloat64(multiIf(balance IS NULL OR balance = '', '0', balance)) as balance,
            is_fraud as is_fraud,
            board_segment as board_segment,
            is_verified as is_verified,
            unblock_reason as unblock_reason,
            grant_sources as grant_sources,
            grant_amounts as grant_amounts,
            grant_amount as grant_amount,
            grant_source_ids as grant_source_ids,
            grant_start_times as grant_start_times,
            grant_end_times as grant_end_times,
            active_grant_ids as active_grant_ids,
            active_grants as active_grants
        FROM(
        SELECT
            billing_account_id,
            name,
            event_time,
            SUM(real_consumption) as real_consumption,
            SUM(real_consumption_vat) as real_consumption_vat,
            SUM(trial_consumption) as trial_consumption,
            SUM(trial_consumption_vat) as trial_consumption_vat
        FROM(
            SELECT
                billing_account_id,
                name,
                CONCAT(toString(dates), ' 23:59:59')  as  event_time,
                real_consumption_ as real_consumption,
                real_consumption_vat_ as real_consumption_vat,
                trial_consumption_ as trial_consumption,
                trial_consumption_vat_ as trial_consumption_vat
            FROM(
                SELECT
                    billing_account_id,
                    name,
                    multiIf(
                        event_times = first_event_time, month,
                        toDate(event_times)
                    ) as event_time,
                    real_consumptions as real_consumption,
                    real_consumption_vats as real_consumption_vat,
                    trial_consumptions as trial_consumption,
                    trial_consumption_vats as trial_consumption_vat,
                    arrayMap(x -> addDays(event_time, x) ,range(assumeNotNull(toUInt32(  addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time    ))) ) as dates,
                    arrayMap(x -> real_consumption/toFloat64(addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time) ,range(assumeNotNull(toUInt32(  addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time    ))) ) as real_consumption_,
                    arrayMap(x -> assumeNotNull(trial_consumptions/toFloat64(addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time)) ,range(assumeNotNull(toUInt32(  addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time    ))) ) as trial_consumption_,
                    arrayMap(x -> real_consumption_vat/toFloat64(addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time) ,range(assumeNotNull(toUInt32(  addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time    ))) ) as real_consumption_vat_,
                    arrayMap(x -> assumeNotNull(trial_consumption_vat/toFloat64(addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time)) ,range(assumeNotNull(toUInt32(  addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time    ))) ) as trial_consumption_vat_
                FROM(
                    SELECT
                        billing_account_id,
                        name,
                        month,
                        groupArray(event_time_) as event_times,
                        groupArray(real_consumption_) as real_consumptions,
                        groupArray(real_consumption_vat_) as real_consumption_vats,
                        groupArray(trial_consumption_) as trial_consumptions,
                        groupArray(trial_consumption_vat_) as trial_consumption_vats,
                        event_times[1] as first_event_time
                    FROM(
                        SELECT
                            billing_account_id,
                            name,
                            toStartOfMonth(toDate(event_time)) as month,
                            event_time as event_time_,
                            real_consumption as real_consumption_,
                            real_consumption_vat as real_consumption_vat_,
                            trial_consumption as trial_consumption_,
                            trial_consumption_vat as trial_consumption_vat_
                        FROM "//home/cloud_analytics/cubes/acquisition_cube/cube__"
                        WHERE
                            name IN ('ai.mt.translate_nmtlight')
                            AND (real_consumption > 0  OR trial_consumption > 0)
                        ORDER BY
                            event_time
                    )
                    GROUP BY
                        billing_account_id,
                        name,
                        month
                )
                ARRAY JOIN event_times,real_consumptions,real_consumption_vats,trial_consumptions,trial_consumption_vats
            )
            ARRAY JOIN dates, real_consumption_, real_consumption_vat_, trial_consumption_, trial_consumption_vat_
        )
        WHERE
            toDate(event_time) <= toDate(NOW())
        GROUP BY
            billing_account_id,
            name,
            event_time
        ) AS t0
        ANY LEFT JOIN(
            SELECT
                billing_account_id,
                date,
                block_reason,
                unblock_reason,
                is_verified,
                updated_at,
                currency,
                payment_cycle_type,
                payment_method_id,
                balance_client_id,
                state,
                type,
                metadata,
                usage_status,
                feature_flags,
                client_id,
                master_account_id,
                name,
                person_type,
                balance_contract_id,
                payment_type,
                balance,
                billing_threshold,
                sales_name,
                is_var,
                is_isv,
                architects,
                architect,
                is_iot,
                segment,
                account_name,
                potential,
                owner_id,
                is_fraud,
                board_segment,
                grant_sources,
                grant_amounts,
                grant_amount,
                grant_source_ids,
                grant_start_times,
                grant_end_times,
                active_grant_ids,
                active_grants
            FROM
                "//home/cloud_analytics/cooking_cubes/acquisition_cube/sources/ba_hist"
            WHERE
                billing_account_id IN (SELECT DISTINCT billing_account_id FROM "//home/cloud_analytics/cubes/acquisition_cube/cube__" WHERE name IN ('ai.mt.translate_nmtlight') AND (real_consumption > 0  OR trial_consumption > 0))
        ) as t1
        ON t0.billing_account_id = t1.billing_account_id AND toDate(t0.event_time) = toDate(t1.date)
    ) as t2
    ANY LEFT JOIN (
        SELECT
            *
        FROM "//home/cloud_analytics/cubes/acquisition_cube/cube__"
        WHERE
            event = 'day_use'
            AND name IN ('ai.mt.translate_nmtlight')

    ) as t3
    ON t2.billing_account_id = t3.billing_account_id AND t2.name = t3.name
)
    ''',
}
queries_test = {
    'fix_reserve': '''
CREATE TABLE  "//home/cloud_analytics_test/cubes/acquisition_cube/cube_to_add" ENGINE = YtTable() AS
SELECT
    billing_account_id,
    event_time,
    name,
    ba_name,
    ba_state,
    ba_person_type,
    ba_payment_cycle_type,
    ba_usage_status,
    ba_currency,
    ba_type,
    puid,
    block_reason,
    sales_name,
    is_var,
    is_isv,
    architect,
    is_iot,
    segment,
    potential,
    account_name,
    balance,
    toInt64(is_fraud) as is_fraud,
    board_segment,
    is_verified,
    unblock_reason,
    grant_sources,
    grant_amounts,
    grant_amount,
    grant_source_ids,
    grant_start_times,
    grant_end_times,
    active_grant_ids,
    toInt64(active_grants) as active_grants,
    toInt64(ad_block) as ad_block,
    age,
    amount,
    area,
    balance_long_name,
    balance_name,
    channel,
    channel_detailed,
    city,
    client_ip,
    cloud_id,
    cloud_name,
    cloud_status,
    core_fraction,
    counter_id,
    country,
    database,
    device_model,
    device_type,
    toInt64(duration) as duration,
    email,
    event,
    first_ba_became_paid_datetime,
    first_ba_created_datetime,
    first_cloud_created_datetime,
    first_day_use_datetime,
    first_first_paid_consumption_datetime,
    first_first_payment_datetime,
    first_first_trial_consumption_datetime,
    first_name,
    first_visit_datetime,
    first_visit_dt,
    general_interests,
    toInt64(hits) as hits,
    toInt64(income) as income,
    interests,
    toInt64(is_bounce) as is_bounce,
    is_robot,
    last_name,
    login,
    toInt64(mail_billing) as mail_billing,
    toInt64(mail_event) as mail_event,
    toInt64(mail_feature) as mail_feature,
    toInt64(mail_info) as mail_info,
    toInt64(mail_promo) as mail_promo,
    toInt64(mail_tech) as mail_tech,
    toInt64(mail_testing) as mail_testing,
    is_corporate_card,
    master_account_id,
    toInt64(mobile_phone_vendor) as mobile_phone_vendor,
    os,
    toInt64(page_views) as page_views,
    payment_type,
    phone,
    platform,
    preemptible,
    promocode_client_name,
    promocode_client_type,
    promocode_source,
    promocode_type,
    real_consumption,
    real_consumption_cum,
    real_consumption_vat,
    real_consumption_vat_cum,
    real_payment,
    real_payment_cum,
    real_payment_vat,
    real_payment_vat_cum,
    referer,
    remote_ip,
    toInt64(resolution_depth) as resolution_depth,
    toInt64(resolution_height) as resolution_height,
    toInt64(resolution_width) as resolution_width,
    search_phrase,
    service_id,
    service_long_name,
    service_name,
    service_group,
    session_start_time,
    sex,
    sku_id,
    toInt64(sku_lazy) as sku_lazy,
    sku_name,
    start_time,
    start_url,
    subservice_name,
    total,
    toInt64(total_visits) as total_visits,
    trial_consumption,
    trial_consumption_cum,
    trial_consumption_vat,
    trial_consumption_vat_cum,
    usd_rur_quote,
    user_id,
    user_settings_email,
    utm_campaign,
    utm_content,
    utm_medium,
    utm_source,
    utm_term,
    visit_id,
    visit_version,
    toInt64(window_client_height) as window_client_height,
    toInt64(window_client_width) as window_client_width
FROM(
    SELECT
        t2.*,
        ad_block,
        age,
        amount,
        area,
        balance_long_name,
        balance_name,
        channel,
        channel_detailed,
        city,
        client_ip,
        cloud_id,
        cloud_name,
        cloud_status,
        core_fraction,
        counter_id,
        country,
        database,
        device_model,
        device_type,
        duration,
        email,
        event,
        first_ba_became_paid_datetime,
        first_ba_created_datetime,
        first_cloud_created_datetime,
        first_day_use_datetime,
        first_first_paid_consumption_datetime,
        first_first_payment_datetime,
        first_first_trial_consumption_datetime,
        first_name,
        first_visit_datetime,
        first_visit_dt,
        general_interests,
        hits,
        income,
        interests,
        is_bounce,
        is_robot,
        last_name,
        login,
        mail_billing,
        mail_event,
        mail_feature,
        mail_info,
        mail_promo,
        mail_tech,
        mail_testing,
        is_corporate_card,
        master_account_id,
        mobile_phone_vendor,
        os,
        page_views,
        payment_type,
        phone,
        platform,
        preemptible,
        promocode_client_name,
        promocode_client_type,
        promocode_source,
        promocode_type,
        real_consumption_cum,
        real_consumption_vat_cum,
        real_payment,
        real_payment_cum,
        real_payment_vat,
        real_payment_vat_cum,
        referer,
        remote_ip,
        resolution_depth,
        resolution_height,
        resolution_width,
        search_phrase,
        service_id,
        service_long_name,
        service_name,
        service_group,
        session_start_time,
        sex,
        sku_id,
        sku_lazy,
        sku_name,
        start_time,
        start_url,
        subservice_name,
        total,
        total_visits,
        trial_consumption_cum,
        trial_consumption_vat_cum,
        usd_rur_quote,
        user_id,
        user_settings_email,
        utm_campaign,
        utm_content,
        utm_medium,
        utm_source,
        utm_term,
        visit_id,
        visit_version,
        window_client_height,
        window_client_width
    FROM(
        SELECT
            t0.billing_account_id as billing_account_id,
            t0.event_time as event_time,
            t0.name as name,
            t0.real_consumption,
            t0.real_consumption_vat,
            t0.trial_consumption,
            t0.trial_consumption_vat,
            t1.name as ba_name,
            state as ba_state,
            person_type as ba_person_type,
            payment_cycle_type as ba_payment_cycle_type,
            usage_status as ba_usage_status,
            currency as ba_currency,
            type as ba_type,
            owner_id as puid,
            block_reason as block_reason,
            sales_name as sales_name,
            is_var as is_var,
            is_isv as is_isv,
            architect as architect,
            is_iot as is_iot,
            segment as segment,
            potential as potential,
            account_name as account_name,
            toFloat64(multiIf(balance IS NULL OR balance = '', '0', balance)) as balance,
            is_fraud as is_fraud,
            board_segment as board_segment,
            is_verified as is_verified,
            unblock_reason as unblock_reason,
            grant_sources as grant_sources,
            grant_amounts as grant_amounts,
            grant_amount as grant_amount,
            grant_source_ids as grant_source_ids,
            grant_start_times as grant_start_times,
            grant_end_times as grant_end_times,
            active_grant_ids as active_grant_ids,
            active_grants as active_grants
        FROM(
        SELECT
            billing_account_id,
            name,
            event_time,
            SUM(real_consumption) as real_consumption,
            SUM(real_consumption_vat) as real_consumption_vat,
            SUM(trial_consumption) as trial_consumption,
            SUM(trial_consumption_vat) as trial_consumption_vat
        FROM(
            SELECT
                billing_account_id,
                name,
                CONCAT(toString(dates), ' 23:59:59')  as  event_time,
                real_consumption_ as real_consumption,
                real_consumption_vat_ as real_consumption_vat,
                trial_consumption_ as trial_consumption,
                trial_consumption_vat_ as trial_consumption_vat
            FROM(
                SELECT
                    billing_account_id,
                    name,
                    multiIf(
                        event_times = first_event_time, month,
                        toDate(event_times)
                    ) as event_time,
                    real_consumptions as real_consumption,
                    real_consumption_vats as real_consumption_vat,
                    trial_consumptions as trial_consumption,
                    trial_consumption_vats as trial_consumption_vat,
                    arrayMap(x -> addDays(event_time, x) ,range(assumeNotNull(toUInt32(  addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time    ))) ) as dates,
                    arrayMap(x -> real_consumption/toFloat64(addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time) ,range(assumeNotNull(toUInt32(  addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time    ))) ) as real_consumption_,
                    arrayMap(x -> assumeNotNull(trial_consumptions/toFloat64(addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time)) ,range(assumeNotNull(toUInt32(  addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time    ))) ) as trial_consumption_,
                    arrayMap(x -> real_consumption_vat/toFloat64(addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time) ,range(assumeNotNull(toUInt32(  addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time    ))) ) as real_consumption_vat_,
                    arrayMap(x -> assumeNotNull(trial_consumption_vat/toFloat64(addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time)) ,range(assumeNotNull(toUInt32(  addMonths(toStartOfMonth(toDate(event_time)),1) -  event_time    ))) ) as trial_consumption_vat_
                FROM(
                    SELECT
                        billing_account_id,
                        name,
                        month,
                        groupArray(event_time_) as event_times,
                        groupArray(real_consumption_) as real_consumptions,
                        groupArray(real_consumption_vat_) as real_consumption_vats,
                        groupArray(trial_consumption_) as trial_consumptions,
                        groupArray(trial_consumption_vat_) as trial_consumption_vats,
                        event_times[1] as first_event_time
                    FROM(
                        SELECT
                            billing_account_id,
                            name,
                            toStartOfMonth(toDate(event_time)) as month,
                            event_time as event_time_,
                            real_consumption as real_consumption_,
                            real_consumption_vat as real_consumption_vat_,
                            trial_consumption as trial_consumption_,
                            trial_consumption_vat as trial_consumption_vat_
                        FROM "//home/cloud_analytics_test/cubes/acquisition_cube/cube__"
                        WHERE
                            name IN ('ai.mt.translate_nmtlight')
                            AND (real_consumption > 0  OR trial_consumption > 0)
                        ORDER BY
                            event_time
                    )
                    GROUP BY
                        billing_account_id,
                        name,
                        month
                )
                ARRAY JOIN event_times,real_consumptions,real_consumption_vats,trial_consumptions,trial_consumption_vats
            )
            ARRAY JOIN dates, real_consumption_, real_consumption_vat_, trial_consumption_, trial_consumption_vat_
        )
        WHERE
            toDate(event_time) <= toDate(NOW())
        GROUP BY
            billing_account_id,
            name,
            event_time
        ) AS t0
        ANY LEFT JOIN(
            SELECT
                billing_account_id,
                date,
                block_reason,
                unblock_reason,
                is_verified,
                updated_at,
                currency,
                payment_cycle_type,
                payment_method_id,
                balance_client_id,
                state,
                type,
                metadata,
                usage_status,
                feature_flags,
                client_id,
                master_account_id,
                name,
                person_type,
                balance_contract_id,
                payment_type,
                balance,
                billing_threshold,
                sales_name,
                is_var,
                is_isv,
                architects,
                architect,
                is_iot,
                segment,
                account_name,
                potential,
                owner_id,
                is_fraud,
                board_segment,
                grant_sources,
                grant_amounts,
                grant_amount,
                grant_source_ids,
                grant_start_times,
                grant_end_times,
                active_grant_ids,
                active_grants
            FROM
                "//home/cloud_analytics_test/cooking_cubes/acquisition_cube/sources/ba_hist"
            WHERE
                billing_account_id IN (SELECT DISTINCT billing_account_id FROM "//home/cloud_analytics_test/cubes/acquisition_cube/cube__" WHERE name IN ('ai.mt.translate_nmtlight') AND (real_consumption > 0  OR trial_consumption > 0))
        ) as t1
        ON t0.billing_account_id = t1.billing_account_id AND toDate(t0.event_time) = toDate(t1.date)
    ) as t2
    ANY LEFT JOIN (
        SELECT
            *
        FROM "//home/cloud_analytics_test/cubes/acquisition_cube/cube__"
        WHERE
            event = 'day_use'
            AND name IN ('ai.mt.translate_nmtlight')

    ) as t3
    ON t2.billing_account_id = t3.billing_account_id AND t2.name = t3.name
)
    ''',
}
