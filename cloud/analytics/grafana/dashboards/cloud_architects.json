{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "limit": 100,
        "name": "Annotations & Alerts",
        "showIn": 0,
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 219837,
  "iteration": 1564132620533,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 43,
      "panels": [],
      "title": "Информация о дашборде",
      "type": "row"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "ch_cloud_analytics",
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 0,
        "y": 1
      },
      "id": 39,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "metadata_modification_time",
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "table",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT metadata_modification_time FROM system.tables \nWHERE name = '$data_source'\nAND database = 'cloud_analytics'",
          "rawQuery": "SELECT metadata_modification_time FROM system.tables  WHERE name = 'consumption_daily_cube' AND database = 'cloud_analytics'",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": "",
      "title": "Дата и время последнего обновления",
      "transparent": true,
      "type": "singlestat",
      "valueFontSize": "50%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "content": "\n## Если у Вас что-то не работает или Вам не хватает функциональности, пожалуйста, [дайте нам знать](https://forms.yandex-team.ru/surveys/21421/).\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 19,
        "x": 5,
        "y": 1
      },
      "id": 41,
      "links": [],
      "mode": "markdown",
      "timeFrom": null,
      "timeShift": null,
      "title": "Обратная связь",
      "transparent": true,
      "type": "text"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 45,
      "panels": [],
      "title": "Потребление",
      "type": "row"
    },
    {
      "columns": [],
      "datasource": "ch_cloud_analytics",
      "fontSize": "100%",
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 15,
      "links": [],
      "pageSize": null,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 2,
        "desc": true
      },
      "styles": [
        {
          "alias": "Time",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "date"
        },
        {
          "alias": "",
          "colorMode": "value",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "growth",
          "thresholds": [
            "0",
            "0"
          ],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": "value",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "growth_pct",
          "thresholds": [
            "0",
            "0"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "pattern": "/.*/",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "table",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT  reverse(replaceAll(toFixedString(reverse(toString(rowNumberInAllBlocks() + 1)), 3), '\\0', '0')) N,\n        last_architect Architect,\n        billing_account_id BA,\n        last_client_name \"Компания\", \n        sumIf(sum_cost, date>='$prev_period' AND date<'$period1') as \"$prev_period_date to $prev_period_end_date\",\n        sumIf(sum_cost, date>='$period1' AND date<'$period1_end') as \"$period1_date to $period1_end_date\",\n        \"$period1_date to $period1_end_date\" - \"$prev_period_date to $prev_period_end_date\" as growth,\n        \"$period1_date to $period1_end_date\"/\"$prev_period_date to $prev_period_end_date\" -1 as growth_pct\nFROM( \n  SELECT\n    billing_account_id,\n    last_architect,\n    date,\n    last_client_name,\n    sum(cons_sum) as sum_cost\n  FROM cloud_analytics.consumption_daily_cube\n  WHERE (has ([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  AND has([$consumption_type], cons_type) = 1\n  AND has([$service], service_name) = 1\n  AND has([$architect], last_architect) = 1\n  GROUP BY last_architect, last_client_name,  billing_account_id, date\n)\nGROUP BY last_architect, last_client_name,  billing_account_id\n\nUNION All\n\nSELECT  'z.Total' N,\n        'z.Total' Architect,\n        'z.Total' BA,\n        'z.Total' \"Компания\", \n        sumIf(sum_cost, date>='$prev_period' AND date<'$period1') as prev_period,\n        sumIf(sum_cost, date>='$period1' AND date<'$period1_end') as period,\n        period - prev_period as prev_week_growth,\n        period/prev_period -1 as growth_pct\nFROM( \n  SELECT\n    date,\n    cons_sum as sum_cost\n  FROM cloud_analytics.consumption_daily_cube\n  WHERE (has ([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  AND has([$consumption_type], cons_type) = 1\n  AND has([$service], service_name) = 1\n  AND has([$architect], last_architect) = 1\n  \n)",
          "rawQuery": "SELECT  reverse(replaceAll(toFixedString(reverse(toString(rowNumberInAllBlocks() + 1)), 3), '\\0', '0')) N,         last_architect Architect,         billing_account_id BA,         last_client_name \"Компания\",          sumIf(sum_cost, date>='2019-05-01 00:00:00' AND date<'2019-06-01 00:00:00') as \"2019-05-01 to 2019-05-31\",         sumIf(sum_cost, date>='2019-06-01 00:00:00' AND date<'2019-07-01 00:00:00') as \"2019-06-01 to 2019-06-30\",         \"2019-06-01 to 2019-06-30\" - \"2019-05-01 to 2019-05-31\" as growth,         \"2019-06-01 to 2019-06-30\"/\"2019-05-01 to 2019-05-31\" -1 as growth_pct FROM(    SELECT     billing_account_id,     last_architect,     date,     last_client_name,     sum(cons_sum) as sum_cost   FROM cloud_analytics.consumption_daily_cube   WHERE (has (['All'], billing_account_id) = 1 OR 'All' = 'All')   AND has(['paid'], cons_type) = 1   AND has(['ai','compute','cr','mdb','network','nlb','storage','ymq'], service_name) = 1   AND has(['nrkk','vetkasov','vsgrab'], last_architect) = 1   GROUP BY last_architect, last_client_name,  billing_account_id, date ) GROUP BY last_architect, last_client_name,  billing_account_id  UNION All  SELECT  'z.Total' N,         'z.Total' Architect,         'z.Total' BA,         'z.Total' \"Компания\",          sumIf(sum_cost, date>='2019-05-01 00:00:00' AND date<'2019-06-01 00:00:00') as prev_period,         sumIf(sum_cost, date>='2019-06-01 00:00:00' AND date<'2019-07-01 00:00:00') as period,         period - prev_period as prev_week_growth,         period/prev_period -1 as growth_pct FROM(    SELECT     date,     cons_sum as sum_cost   FROM cloud_analytics.consumption_daily_cube   WHERE (has (['All'], billing_account_id) = 1 OR 'All' = 'All')   AND has(['paid'], cons_type) = 1   AND has(['ai','compute','cr','mdb','network','nlb','storage','ymq'], service_name) = 1   AND has(['nrkk','vetkasov','vsgrab'], last_architect) = 1    )",
          "refId": "A",
          "round": "0s"
        }
      ],
      "title": "Revenue Dynamics: Breakdown by Clients",
      "transform": "table",
      "type": "table"
    },
    {
      "aliasColors": {
        "sum_cost": "#96afcd"
      },
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 16
      },
      "id": 33,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "database": "cloud_analytics",
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \ndate, sum_cost\nFROM(\nSELECT \ntoInt32(date) * 1000 as date,\nsum(sum_cost) as sum_cost\nFROM (\n\n    SELECT multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'quarter', toStartOfQuarter(date),\n                   date) AS date,\n         sum(cons_sum) as sum_cost\n    FROM cloud_analytics.consumption_daily_cube\n    WHERE (has ([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  AND has([$consumption_type], cons_type) = 1\n  AND has([$service], service_name) = 1\n  AND has([$architect], architect) = 1\n    GROUP BY date\n    ORDER BY date\n)\nGROUP BY date\nORDER BY date DESC\nLIMIT 0,1000\n)\nORDER BY date",
          "rawQuery": "SELECT  date, sum_cost FROM( SELECT  toInt32(date) * 1000 as date, sum(sum_cost) as sum_cost FROM (      SELECT multiIf('month' = 'day', date,                     'month' = 'week', toMonday(date),                    'month' = 'month', toStartOfMonth(date),                     'month' = 'quarter', toStartOfQuarter(date),                    date) AS date,          sum(cons_sum) as sum_cost     FROM cloud_analytics.consumption_daily_cube     WHERE (has (['All'], billing_account_id) = 1 OR 'All' = 'All')   AND has(['paid'], cons_type) = 1   AND has(['ai','compute','cr','mdb','network','nlb','storage','ymq'], service_name) = 1   AND has(['nrkk','vetkasov','vsgrab'], architect) = 1     GROUP BY date     ORDER BY date ) GROUP BY date ORDER BY date DESC LIMIT 0,1000 ) ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Total Revenue",
      "tooltip": {
        "shared": true,
        "sort": 2,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {
        "ai": "#96afcd",
        "compute": "#96afcd",
        "cr": "#96afcd",
        "mdb": "#96afcd",
        "network": "#96afcd",
        "nlb": "#96afcd",
        "storage": "#96afcd",
        "ymq": "#96afcd"
      },
      "bars": true,
      "cacheTimeout": null,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 16
      },
      "id": 37,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": false,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "\nSELECT \ntoInt32(now()) * 1000 as date,\narrayMap(x->(if(x.1='zother','other',x.1),x.2),arraySort(x->x.1,groupArray((service_name_, sum_cost)))) as sum_cost\nFROM (\n    \n\n    SELECT\n          if(service_name in ('compute', 'mdb', 'ai', 'storage', 'network'), service_name, 'zother') as service_name_, \n         sumIf(cons_sum, date>='$period1' AND date<'$period1_end') as sum_cost\n    FROM cloud_analytics.consumption_daily_cube\n    WHERE (has ([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  AND has([$consumption_type], cons_type) = 1\n  AND has([$service], service_name) = 1\n  AND has([$architect], architect) = 1\n    GROUP BY service_name\n\n    \n)\n\n\n    \n    ",
          "rawQuery": "SELECT  toInt32(now()) * 1000 as date, arrayMap(x->(if(x.1='zother','other',x.1),x.2),arraySort(x->x.1,groupArray((service_name_, sum_cost)))) as sum_cost FROM (           SELECT           if(service_name in ('compute', 'mdb', 'ai', 'storage', 'network'), service_name, 'zother') as service_name_,           sumIf(cons_sum, date>='2019-06-01 00:00:00' AND date<'2019-07-01 00:00:00') as sum_cost     FROM cloud_analytics.consumption_daily_cube     WHERE (has (['All'], billing_account_id) = 1 OR 'All' = 'All')   AND has(['paid'], cons_type) = 1   AND has(['ai','compute','cr','mdb','network','nlb','storage','ymq'], service_name) = 1   AND has(['nrkk','vetkasov','vsgrab'], architect) = 1     GROUP BY service_name       )",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Revenue Breakdown by Product",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "series",
        "name": null,
        "show": true,
        "values": [
          "total"
        ]
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "refresh": false,
  "schemaVersion": 18,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": "paid",
          "value": "paid"
        },
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "consumption_type",
        "options": [
          {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "trial",
            "value": "trial"
          },
          {
            "selected": true,
            "text": "paid",
            "value": "paid"
          }
        ],
        "query": "trial, paid",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT architect FROM cloud_analytics.consumption_daily_cube where architect not in  ('no_architect', '')",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "architect",
        "options": [
          {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": true,
            "text": "nrkk",
            "value": "nrkk"
          },
          {
            "selected": false,
            "text": "vetkasov",
            "value": "vetkasov"
          },
          {
            "selected": false,
            "text": "vsgrab",
            "value": "vsgrab"
          }
        ],
        "query": "SELECT DISTINCT architect FROM cloud_analytics.consumption_daily_cube where architect not in  ('no_architect', '')",
        "refresh": 0,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": "'All'",
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT billing_account_id FROM cloud_analytics.consumption_daily_cube WHERE has([$architect], architect)=1  ORDER BY billing_account_id",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "billing_account_id",
        "options": [],
        "query": "SELECT DISTINCT billing_account_id FROM cloud_analytics.consumption_daily_cube WHERE has([$architect], architect)=1  ORDER BY billing_account_id",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT distinct service_name FROM cloud_analytics.consumption_daily_cube WHERE service_name !=''",
        "hide": 0,
        "includeAll": true,
        "label": "Service",
        "multi": true,
        "name": "service",
        "options": [],
        "query": "SELECT distinct service_name FROM cloud_analytics.consumption_daily_cube WHERE service_name !=''",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "tags": [],
          "text": "month",
          "value": "month"
        },
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "aggr_period",
        "options": [
          {
            "selected": false,
            "text": "day",
            "value": "day"
          },
          {
            "selected": false,
            "text": "week",
            "value": "week"
          },
          {
            "selected": true,
            "text": "month",
            "value": "month"
          },
          {
            "selected": false,
            "text": "quarter",
            "value": "quarter"
          },
          {
            "selected": false,
            "text": "rolling_7days",
            "value": "rolling_7days"
          },
          {
            "selected": false,
            "text": "rolling_14days",
            "value": "rolling_14days"
          },
          {
            "selected": false,
            "text": "rolling_28days",
            "value": "rolling_28days"
          }
        ],
        "query": "day,week,month,quarter,rolling_7days,rolling_14days,rolling_28days",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-06-01 00:00:00",
          "value": "2019-06-01 00:00:00"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT toDateTime(concat('$period1_date', ' 00:00:00'))",
        "hide": 2,
        "includeAll": false,
        "label": "period_start_date",
        "multi": false,
        "name": "period1",
        "options": [],
        "query": "SELECT toDateTime(concat('$period1_date', ' 00:00:00'))",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 2,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-06-01",
          "value": "2019-06-01"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT toDate(multiIf('$aggr_period' = 'week', toMonday(date), '$aggr_period' = 'month', toStartOfMonth(date), '$aggr_period' = 'quarter', toStartOfQuarter(date), date)) FROM cloud_analytics.consumption_daily_cube",
        "hide": 0,
        "includeAll": false,
        "label": "period_start_date",
        "multi": false,
        "name": "period1_date",
        "options": [],
        "query": "SELECT DISTINCT toDate(multiIf('$aggr_period' = 'week', toMonday(date), '$aggr_period' = 'month', toStartOfMonth(date), '$aggr_period' = 'quarter', toStartOfQuarter(date), date)) FROM cloud_analytics.consumption_daily_cube",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 2,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-05-01 00:00:00",
          "value": "2019-05-01 00:00:00"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT multiIf('$aggr_period'='week', addWeeks(toDateTime('$period1'),-1), '$aggr_period'='month', addMonths(toDateTime('$period1'),-1), '$aggr_period'='quarter', addQuarters(toDateTime('$period1'),-1), addDays(toDateTime('$period1'),if('$aggr_period'='rolling_7days',-7,if('$aggr_period'='rolling_14days',-14,if('$aggr_period'='rolling_28days',-28,-1)))))",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "prev_period",
        "options": [],
        "query": "SELECT multiIf('$aggr_period'='week', addWeeks(toDateTime('$period1'),-1), '$aggr_period'='month', addMonths(toDateTime('$period1'),-1), '$aggr_period'='quarter', addQuarters(toDateTime('$period1'),-1), addDays(toDateTime('$period1'),if('$aggr_period'='rolling_7days',-7,if('$aggr_period'='rolling_14days',-14,if('$aggr_period'='rolling_28days',-28,-1)))))",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-07-01 00:00:00",
          "value": "2019-07-01 00:00:00"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT multiIf('$aggr_period'='week', addWeeks(toDateTime('$period1'),1), '$aggr_period'='month', addMonths(toDateTime('$period1'),1), '$aggr_period'='quarter', addQuarters(toDateTime('$period1'),1),addDays(toDateTime('$period1'),if( '$aggr_period'='rolling_7days',7,if( '$aggr_period'='rolling_14days',14, if( '$aggr_period'='rolling_28days',28,1)))))",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "period1_end",
        "options": [],
        "query": "SELECT multiIf('$aggr_period'='week', addWeeks(toDateTime('$period1'),1), '$aggr_period'='month', addMonths(toDateTime('$period1'),1), '$aggr_period'='quarter', addQuarters(toDateTime('$period1'),1),addDays(toDateTime('$period1'),if( '$aggr_period'='rolling_7days',7,if( '$aggr_period'='rolling_14days',14, if( '$aggr_period'='rolling_28days',28,1)))))",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-06-30",
          "value": "2019-06-30"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT addDays(toDate('$period1_end'), -1)",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "period1_end_date",
        "options": [],
        "query": "SELECT addDays(toDate('$period1_end'), -1)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-05-01",
          "value": "2019-05-01"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT toDate('$prev_period')",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "prev_period_date",
        "options": [],
        "query": "SELECT toDate('$prev_period')",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-05-31",
          "value": "2019-05-31"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT addDays(toDate('$period1_date'),-1)",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "prev_period_end_date",
        "options": [],
        "query": "SELECT addDays(toDate('$period1_date'),-1)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "consumption_daily_cube",
          "value": "consumption_daily_cube"
        },
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "data_source",
        "options": [
          {
            "selected": true,
            "text": "consumption_daily_cube",
            "value": "consumption_daily_cube"
          }
        ],
        "query": "consumption_daily_cube",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-90d",
    "to": "now+8d"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Cloud Architects",
  "uid": "fWpW6eSWz",
  "version": 50
}

