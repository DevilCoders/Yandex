{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 27950,
  "iteration": 1564132303569,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 32,
      "panels": [],
      "title": "Информация о дашборде",
      "type": "row"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "ch_cloud_analytics",
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 0,
        "y": 1
      },
      "id": 34,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "metadata_modification_time",
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "table",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT metadata_modification_time FROM system.tables \nWHERE name = 'consumption_daily'\nAND database = 'cloud_analytics'",
          "rawQuery": "SELECT metadata_modification_time FROM system.tables  WHERE name = 'consumption_daily' AND database = 'cloud_analytics'",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": "",
      "title": "Дата и время последнего обновления",
      "transparent": true,
      "type": "singlestat",
      "valueFontSize": "50%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "content": "\n## Если у Вас что-то не работает или Вам не хватает функциональности, пожалуйста, [дайте нам знать](https://forms.yandex-team.ru/surveys/21421/).\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 19,
        "x": 5,
        "y": 1
      },
      "id": 49,
      "links": [],
      "mode": "markdown",
      "timeFrom": null,
      "timeShift": null,
      "title": "Обратная связь",
      "transparent": true,
      "type": "text"
    },
    {
      "content": "<center> Дашборд находится в проде. Данные обновляются каждый час. <a href=\"https://wiki.yandex-team.ru/cloud/ps/projects/cloudanalytics/grafana/cloudconsumption/\"> Описание дашборда на вики</a></center>",
      "gridPos": {
        "h": 2,
        "w": 12,
        "x": 0,
        "y": 3
      },
      "id": 37,
      "links": [],
      "mode": "html",
      "title": "Disclaimer",
      "transparent": true,
      "type": "text"
    },
    {
      "content": "\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 12,
        "x": 12,
        "y": 3
      },
      "id": 51,
      "links": [],
      "mode": "markdown",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 5
      },
      "id": 25,
      "panels": [],
      "title": "Общее потребление",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 6
      },
      "id": 2,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "database": "cloud_analytics",
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \ntoInt32(date) * 1000 as date,\ngroupArray( (product, sum_cost))\nFROM (\n\n    SELECT multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date, \n           service1 as product,\n         sum(multiIf('$consumption_type'='trial',-credit, '$consumption_type'='paid', paid_consumption, cost)) as sum_cost\n    FROM cloud_analytics.$data_source\n    WHERE has([$client_type], source) = 1\n    AND has([$curr_state], ba_curr_state_extended)=1\n    AND has([$service], service1)=1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n    AND has([$segment], segment)=1\n    AND has([$person_type], person_type)=1\n    AND has([$channel], channel)=1\n    AND has([$usage_status], usage_status)=1\n    GROUP BY date, product\n    ORDER BY date, product\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32(date) * 1000 as date, groupArray( (product, sum_cost)) FROM (      SELECT multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,             service1 as product,          sum(multiIf('paid'='trial',-credit, 'paid'='paid', paid_consumption, cost)) as sum_cost     FROM cloud_analytics.consumption_daily_minus_vat     WHERE has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1     AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1     AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1)=1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')     AND has(['enterprise','isv','mass','yandex'], segment)=1     AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1     AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1     AND has(['trial','paid','disabled'], usage_status)=1     GROUP BY date, product     ORDER BY date, product ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Потребление по продуктам",
      "tooltip": {
        "shared": true,
        "sort": 2,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 6
      },
      "id": 30,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT toInt32(date) * 1000 as date, groupArray( (segment, sum_cost))\nFROM (\n\n    SELECT \n           multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date,\n           segment,\n         sum(multiIf('$consumption_type'='trial',-credit, '$consumption_type'='paid', paid_consumption, cost)) as sum_cost\n    FROM cloud_analytics.$data_source\n    WHERE has([$client_type], source) = 1 \n    AND has([$service], service1)=1\n    AND has([$curr_state], ba_curr_state_extended) = 1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n    AND has([$segment], segment)=1\n    AND has([$person_type], person_type)=1\n    AND has([$channel], channel)=1\n    AND has([$usage_status], usage_status)=1\n    GROUP BY date, segment\n    ORDER BY segment DESC\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT toInt32(date) * 1000 as date, groupArray( (segment, sum_cost)) FROM (      SELECT             multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,            segment,          sum(multiIf('paid'='trial',-credit, 'paid'='paid', paid_consumption, cost)) as sum_cost     FROM cloud_analytics.consumption_daily_minus_vat     WHERE has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1      AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1)=1     AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended) = 1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')     AND has(['enterprise','isv','mass','yandex'], segment)=1     AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1     AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1     AND has(['trial','paid','disabled'], usage_status)=1     GROUP BY date, segment     ORDER BY segment DESC ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Потребление по сегменту компании",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 15
      },
      "id": 16,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT toInt32(date) * 1000 as date, groupArray( (type_, cons))\nFROM (\n\n    \n    \n    \n    SELECT \n          multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date,\n         'paid' type_,\n         sum(multiIf('$consumption_type'='trial',0, '$consumption_type'='paid', paid_consumption, paid_consumption)) as cons\n    FROM cloud_analytics.$data_source\n    WHERE has([$client_type], source) = 1\n    AND has([$service], service1)=1\n    AND has([$curr_state], ba_curr_state_extended)=1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n    AND has([$segment], segment)=1\n    AND has([$person_type], person_type)=1\n    AND has([$channel], channel)=1\n    AND has([$usage_status], usage_status)=1\n    GROUP BY date\n    ORDER BY date\n    \n    UNION ALL\n    \n    SELECT \n            multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date,\n        'trial' type_,\n         sum(multiIf('$consumption_type'='trial',-credit, '$consumption_type'='paid', 0, -credit)) as cons\n    FROM cloud_analytics.$data_source\n    WHERE has([$client_type], source) = 1\n    AND has([$service], service1)=1\n    AND has([$curr_state], ba_curr_state_extended)=1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n    AND has([$segment], segment)=1\n    AND has([$person_type], person_type)=1\n    AND has([$usage_status], usage_status)=1\n    GROUP BY date\n    ORDER BY date\n    \n    \n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT toInt32(date) * 1000 as date, groupArray( (type_, cons)) FROM (                     SELECT            multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,          'paid' type_,          sum(multiIf('paid'='trial',0, 'paid'='paid', paid_consumption, paid_consumption)) as cons     FROM cloud_analytics.consumption_daily_minus_vat     WHERE has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1     AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1)=1     AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')     AND has(['enterprise','isv','mass','yandex'], segment)=1     AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1     AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1     AND has(['trial','paid','disabled'], usage_status)=1     GROUP BY date     ORDER BY date          UNION ALL          SELECT              multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,         'trial' type_,          sum(multiIf('paid'='trial',-credit, 'paid'='paid', 0, -credit)) as cons     FROM cloud_analytics.consumption_daily_minus_vat     WHERE has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1     AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1)=1     AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')     AND has(['enterprise','isv','mass','yandex'], segment)=1     AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1     AND has(['trial','paid','disabled'], usage_status)=1     GROUP BY date     ORDER BY date           ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Триалы/платное потребление, руб.",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 15
      },
      "id": 21,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "database": "cloud_analytics",
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \ntoInt32(date) * 1000 as date,\ngroupArray( (ba_curr_state_extended, sum_cost))\nFROM (\n\n    SELECT multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date, \n           ba_curr_state_extended,\n         sum(multiIf('$consumption_type'='trial',-credit, '$consumption_type'='paid', paid_consumption, cost)) as sum_cost\n    FROM cloud_analytics.$data_source\n    WHERE has([$client_type], source) = 1 \n    AND has([$service], service1)=1\n    AND has([$curr_state], ba_curr_state_extended) = 1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n    AND has([$segment], segment)=1\n    AND has([$person_type], person_type)=1\n    AND has([$channel], channel)=1\n    AND has([$usage_status], usage_status)=1\n    GROUP BY date, ba_curr_state_extended\n    ORDER BY date, ba_curr_state_extended\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32(date) * 1000 as date, groupArray( (ba_curr_state_extended, sum_cost)) FROM (      SELECT multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,             ba_curr_state_extended,          sum(multiIf('paid'='trial',-credit, 'paid'='paid', paid_consumption, cost)) as sum_cost     FROM cloud_analytics.consumption_daily_minus_vat     WHERE has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1      AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1)=1     AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended) = 1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')     AND has(['enterprise','isv','mass','yandex'], segment)=1     AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1     AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1     AND has(['trial','paid','disabled'], usage_status)=1     GROUP BY date, ba_curr_state_extended     ORDER BY date, ba_curr_state_extended ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Потребление по статусу BA",
      "tooltip": {
        "shared": true,
        "sort": 2,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 24
      },
      "id": 20,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT\n    toInt32( toDateTime('2018-09-01 03:00:00')) as date,\n    array(('a.10K_to_inf',0),('b.1K_to_10K',0),('c.100_to_1K',0), ('d.10_to_100',0), ('e.0_to_10',0) ) as a\n    \nUNION ALL \n\nSELECT\ntoInt64(date) * 1000,\ngroupArray(($consumption_type, sum_cost))\nFROM (\n    SELECT \n      multiIf('$aggr_period' = 'day', date, '$aggr_period' = 'week', toMonday(date), '$aggr_period' = 'month', toStartOfMonth(date), '$aggr_period' = 'year', toStartOfYear(date), date) AS date,\n      $consumption_type,\n      if('$data_source'='consumption_daily', SUM(sum_cost), SUM(if(toYear(date)<2019, sum_cost/1.18, sum_cost/1.20))) AS sum_cost\n    FROM (\n    \n      SELECT \n      date,\n      $consumption_type,\n      sum_cost\n      FROM ( \n          SELECT\n          date,\n          trial,\n          paid,\n          total\n          FROM\n          cloud_analytics.dates_x_cons_buckets\n      \n        ) ALL\n        LEFT JOIN (\n          SELECT\n            date,\n            $consumption_type,\n            SUM(multiIf('$consumption_type' = 'trial', trial_sum, \n                   '$consumption_type' = 'paid', paid_consumption_sum,\n                   cost_sum)) as sum_cost\n          FROM\n            (\n              SELECT\n                billing_account_id,\n                source,\n                ba_curr_state,\n                date,\n                trial_sum,\n                trial,\n                paid_consumption_sum,\n                paid,\n                cost_sum,\n                total \n              FROM \n                cloud_analytics.consumption_by_size_view\n              WHERE\n                has([$client_type], source) = 1 \n                AND has([$segment], segment) = 1\n                AND has([$service], service1) = 1\n                AND has([$curr_state], ba_curr_state_extended) = 1\n                AND has([$channel],  channel) = 1\n                AND has([$person_type], person_type) = 1\n                AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n              \n            )\n          GROUP BY\n            date,\n            $consumption_type\n          ORDER BY\n            date,\n            $consumption_type\n            )\n           USING \n           date,\n           $consumption_type\n      \n      ORDER BY\n      $consumption_type,\n      date\n      )\n      GROUP BY date, $consumption_type\n  )\n  \nGROUP by \ndate\nORDER BY\ndate",
          "rawQuery": "SELECT     toInt32( toDateTime('2018-09-01 03:00:00')) as date,     array(('a.10K_to_inf',0),('b.1K_to_10K',0),('c.100_to_1K',0), ('d.10_to_100',0), ('e.0_to_10',0) ) as a      UNION ALL   SELECT toInt64(date) * 1000, groupArray((paid, sum_cost)) FROM (     SELECT        multiIf('day' = 'day', date, 'day' = 'week', toMonday(date), 'day' = 'month', toStartOfMonth(date), 'day' = 'year', toStartOfYear(date), date) AS date,       paid,       if('consumption_daily_minus_vat'='consumption_daily', SUM(sum_cost), SUM(if(toYear(date)<2019, sum_cost/1.18, sum_cost/1.20))) AS sum_cost     FROM (            SELECT        date,       paid,       sum_cost       FROM (            SELECT           date,           trial,           paid,           total           FROM           cloud_analytics.dates_x_cons_buckets                ) ALL         LEFT JOIN (           SELECT             date,             paid,             SUM(multiIf('paid' = 'trial', trial_sum,                     'paid' = 'paid', paid_consumption_sum,                    cost_sum)) as sum_cost           FROM             (               SELECT                 billing_account_id,                 source,                 ba_curr_state,                 date,                 trial_sum,                 trial,                 paid_consumption_sum,                 paid,                 cost_sum,                 total                FROM                  cloud_analytics.consumption_by_size_view               WHERE                 has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1                  AND has(['enterprise','isv','mass','yandex'], segment) = 1                 AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1) = 1                 AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended) = 1                 AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'],  channel) = 1                 AND has(['company','individual','other','switzerland_nonresident_company'], person_type) = 1                 AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')                            )           GROUP BY             date,             paid           ORDER BY             date,             paid             )            USING             date,            paid              ORDER BY       paid,       date       )       GROUP BY date, paid   )    GROUP by  date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Потребление клиентов (в разбивке по потр. когортам)",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 24
      },
      "id": 46,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT toInt32(date) * 1000 as date, groupArray( (person_type, sum_cost))\nFROM (\n\n    SELECT \n           multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date,\n           person_type,\n         sum(multiIf('$consumption_type'='trial',-credit, '$consumption_type'='paid', paid_consumption, cost)) as sum_cost\n    FROM cloud_analytics.$data_source\n    WHERE has([$client_type], source) = 1 \n    AND has([$service], service1)=1\n    AND has([$curr_state], ba_curr_state_extended) = 1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n    AND has([$segment], segment)=1\n    AND has([$person_type], person_type)=1\n    AND has([$channel], channel)=1\n    AND has([$usage_status], usage_status)=1\n    GROUP BY date, person_type\n    ORDER BY person_type DESC\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT toInt32(date) * 1000 as date, groupArray( (person_type, sum_cost)) FROM (      SELECT             multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,            person_type,          sum(multiIf('paid'='trial',-credit, 'paid'='paid', paid_consumption, cost)) as sum_cost     FROM cloud_analytics.consumption_daily_minus_vat     WHERE has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1      AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1)=1     AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended) = 1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')     AND has(['enterprise','isv','mass','yandex'], segment)=1     AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1     AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1     AND has(['trial','paid','disabled'], usage_status)=1     GROUP BY date, person_type     ORDER BY person_type DESC ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Потребление по типу  клиента (физлицо/юрлицо)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 33
      },
      "id": 47,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT toInt32(date) * 1000 as date, groupArray( (channel, sum_cost))\nFROM (\n\n    SELECT \n           multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date,\n           channel,\n         sum(multiIf('$consumption_type'='trial',-credit, '$consumption_type'='paid', paid_consumption, cost)) as sum_cost\n    FROM cloud_analytics.$data_source\n    WHERE has([$client_type], source) = 1 \n    AND has([$service], service1)=1\n    AND has([$curr_state], ba_curr_state_extended) = 1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n    AND has([$segment], segment)=1\n    AND has([$person_type], person_type)=1\n    AND has([$channel], channel)=1\n    AND has([$usage_status], usage_status)=1\n    GROUP BY date, channel\n    ORDER BY channel DESC\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT toInt32(date) * 1000 as date, groupArray( (channel, sum_cost)) FROM (      SELECT             multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,            channel,          sum(multiIf('paid'='trial',-credit, 'paid'='paid', paid_consumption, cost)) as sum_cost     FROM cloud_analytics.consumption_daily_minus_vat     WHERE has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1      AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1)=1     AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended) = 1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')     AND has(['enterprise','isv','mass','yandex'], segment)=1     AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1     AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1     AND has(['trial','paid','disabled'], usage_status)=1     GROUP BY date, channel     ORDER BY channel DESC ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Потребление источнику создания Облака",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 33
      },
      "id": 35,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "database": "cloud_analytics",
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \ntoInt32(date) * 1000 as date,\nsum(sum_cost) as sum_cost\nFROM (\n\n    SELECT multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date,\n         sum(multiIf('$consumption_type'='trial',-credit, '$consumption_type'='paid', paid_consumption, cost)) as sum_cost\n    FROM cloud_analytics.$data_source\n    WHERE has([$client_type], source) = 1\n    AND has([$curr_state], ba_curr_state_extended)=1\n    AND has([$service], service1)=1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n    AND has([$segment], segment)=1\n    AND has([$person_type], person_type)=1\n    AND has([$channel], channel)=1\n    AND has([$usage_status], usage_status)=1\n    GROUP BY date\n    ORDER BY date\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32(date) * 1000 as date, sum(sum_cost) as sum_cost FROM (      SELECT multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,          sum(multiIf('paid'='trial',-credit, 'paid'='paid', paid_consumption, cost)) as sum_cost     FROM cloud_analytics.consumption_daily_minus_vat     WHERE has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1     AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1     AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1)=1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')     AND has(['enterprise','isv','mass','yandex'], segment)=1     AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1     AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1     AND has(['trial','paid','disabled'], usage_status)=1     GROUP BY date     ORDER BY date ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Общее потребление",
      "tooltip": {
        "shared": true,
        "sort": 2,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 42
      },
      "id": 23,
      "panels": [],
      "title": "Потребление сервисов",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 43
      },
      "id": 8,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT date, a \nFROM(\n\nSELECT  toInt32( date) * 1000 as date, arraySort(x->x.1, groupArray((service, sum_cost))) as a\nFROM (\n \n  SELECT \n  multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date,\n  multiIf(sku like '%c100.preemptible%', 'cpu_full_preemptible', \n          sku like '%c05.preemptible%', 'cpu_burst_preemptible', \n          sku like '%c05', 'cpu_burst',\n          sku like '%c100', 'cpu_full',\n          sku like '%image', 'image',\n          sku like '%snapshot', 'snapshot',\n          sku like '%ram%', 'ram',\n     'other') as service,\n  sum(multiIf('$consumption_type'='trial',-credit, '$consumption_type'='paid', paid_consumption, cost)) as sum_cost\n  FROM cloud_analytics.$data_source\n  WHERE has([$client_type], source) = 1\n  AND has([$curr_state], ba_curr_state_extended)=1\n  AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  AND has([$segment], segment)=1\n  AND has([$person_type], person_type)=1\n  AND has([$channel], channel)=1\n  AND has([$usage_status], usage_status)=1\n  AND service1 = 'compute'\n  GROUP BY date, service\n  ORDER BY service\n  \n  UNION ALL\n  \n  SELECT \n \n  multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date,\n  service1 as service, \n  sum(multiIf('$consumption_type'='trial',-credit, '$consumption_type'='paid', paid_consumption, cost)) as sum_cost\n  FROM cloud_analytics.$data_source\n  WHERE has([$client_type], source) = 1\n  AND has([$curr_state], ba_curr_state_extended)=1\n  AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  AND has([$segment], segment)=1\n  AND has([$usage_status], usage_status)=1\n  AND service1 = 'nbs'\n  GROUP BY date, service1\n  ORDER BY service\n  \n)\n\nGROUP BY date\nORDER BY date\n)\nORDER BY date",
          "rawQuery": "SELECT date, a  FROM(  SELECT  toInt32( date) * 1000 as date, arraySort(x->x.1, groupArray((service, sum_cost))) as a FROM (     SELECT    multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,   multiIf(sku like '%c100.preemptible%', 'cpu_full_preemptible',            sku like '%c05.preemptible%', 'cpu_burst_preemptible',            sku like '%c05', 'cpu_burst',           sku like '%c100', 'cpu_full',           sku like '%image', 'image',           sku like '%snapshot', 'snapshot',           sku like '%ram%', 'ram',      'other') as service,   sum(multiIf('paid'='trial',-credit, 'paid'='paid', paid_consumption, cost)) as sum_cost   FROM cloud_analytics.consumption_daily_minus_vat   WHERE has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1   AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1   AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')   AND has(['enterprise','isv','mass','yandex'], segment)=1   AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1   AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1   AND has(['trial','paid','disabled'], usage_status)=1   AND service1 = 'compute'   GROUP BY date, service   ORDER BY service      UNION ALL      SELECT      multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,   service1 as service,    sum(multiIf('paid'='trial',-credit, 'paid'='paid', paid_consumption, cost)) as sum_cost   FROM cloud_analytics.consumption_daily_minus_vat   WHERE has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1   AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1   AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')   AND has(['enterprise','isv','mass','yandex'], segment)=1   AND has(['trial','paid','disabled'], usage_status)=1   AND service1 = 'nbs'   GROUP BY date, service1   ORDER BY service    )  GROUP BY date ORDER BY date ) ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Потребление Compute",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 43
      },
      "id": 10,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT  toInt32( date) * 1000 as date, groupArray((service, sum_cost))\nFROM (\n \n  SELECT \n  multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date,\n  service3 as service, \n  sum(multiIf('$consumption_type'='trial',-credit, '$consumption_type'='paid', paid_consumption, cost)) as sum_cost\n  FROM cloud_analytics.$data_source\n  WHERE has([$client_type], source) = 1\n  AND has([$curr_state], ba_curr_state_extended)=1\n  AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  AND has([$segment], segment)=1\n  AND has([$channel], channel)=1\n  AND has([$usage_status], usage_status)=1\n  AND service1 = 'mdb'\n  GROUP BY date, service3\n)\n\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32( date) * 1000 as date, groupArray((service, sum_cost)) FROM (     SELECT    multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,   service3 as service,    sum(multiIf('paid'='trial',-credit, 'paid'='paid', paid_consumption, cost)) as sum_cost   FROM cloud_analytics.consumption_daily_minus_vat   WHERE has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1   AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1   AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')   AND has(['enterprise','isv','mass','yandex'], segment)=1   AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1   AND has(['trial','paid','disabled'], usage_status)=1   AND service1 = 'mdb'   GROUP BY date, service3 )  GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Потребление MDB",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 52
      },
      "id": 14,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT  toInt32( date) * 1000 as date, groupArray((service, sum_cost))\nFROM (\n \n  SELECT \n  multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date,\n  service2 || '_' || service3 as service,\n  sum(multiIf('$consumption_type'='trial',-credit, '$consumption_type'='paid', paid_consumption, cost)) as sum_cost\n  FROM cloud_analytics.$data_source\n  WHERE service1 = 'storage'\n  AND has([$client_type], source) = 1\n  AND has([$curr_state], ba_curr_state_extended)=1\n  AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  AND has([$segment], segment)=1\n  AND has([$channel], channel)=1\n  AND has([$usage_status], usage_status)=1\n  GROUP BY date, service2, service3\n)\n\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32( date) * 1000 as date, groupArray((service, sum_cost)) FROM (     SELECT    multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,   service2 || '_' || service3 as service,   sum(multiIf('paid'='trial',-credit, 'paid'='paid', paid_consumption, cost)) as sum_cost   FROM cloud_analytics.consumption_daily_minus_vat   WHERE service1 = 'storage'   AND has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1   AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1   AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')   AND has(['enterprise','isv','mass','yandex'], segment)=1   AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1   AND has(['trial','paid','disabled'], usage_status)=1   GROUP BY date, service2, service3 )  GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Потребление S3",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 52
      },
      "id": 12,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT  toInt32( date) * 1000 as date, groupArray((service, sum_cost))\nFROM (\n \n  SELECT \n  multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date,\n  service2 || '_' || service3 as service,\n  sum(multiIf('$consumption_type'='trial',-credit, '$consumption_type'='paid', paid_consumption, cost)) as sum_cost\n  FROM cloud_analytics.$data_source\n  WHERE service1 = 'ai'\n  AND has([$client_type], source) = 1\n  AND has([$curr_state], ba_curr_state_extended)=1\n  AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  AND has([$segment], segment)=1\n  AND has([$person_type], person_type)=1\n  AND has([$channel], channel)=1\n  AND has([$usage_status], usage_status)=1\n  GROUP BY date, service2, service3\n)\n\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32( date) * 1000 as date, groupArray((service, sum_cost)) FROM (     SELECT    multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,   service2 || '_' || service3 as service,   sum(multiIf('paid'='trial',-credit, 'paid'='paid', paid_consumption, cost)) as sum_cost   FROM cloud_analytics.consumption_daily_minus_vat   WHERE service1 = 'ai'   AND has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1   AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1   AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')   AND has(['enterprise','isv','mass','yandex'], segment)=1   AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1   AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1   AND has(['trial','paid','disabled'], usage_status)=1   GROUP BY date, service2, service3 )  GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Потребление AI",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 61
      },
      "id": 27,
      "panels": [],
      "title": "Среднее потребление",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 0,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 62
      },
      "id": 29,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 2,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \n  toInt32(date) * 1000 AS date,\n  avg(sum_cost) as avg_cost,\n  median(sum_cost) as median_cost\nFROM (\n  SELECT\n    date,\n    billing_account_id,\n    sum(-credit) as sum_cost\n  FROM\n    cloud_analytics.$data_source\n  WHERE\n    has([$client_type], source)=1\n    AND has([$service], service1)=1\n    AND has([$curr_state], ba_curr_state_extended)=1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n    AND has([$segment], segment)=1\n    AND has([$person_type], person_type)=1\n    AND has([$channel], channel)=1\n    AND has([$usage_status], usage_status)=1\n    AND date > '2018-11-01 00:00:00'\n  GROUP BY \n    date,\n    billing_account_id\n  )\nWHERE sum_cost > 0\nGROUP BY \ndate\nORDER BY \ndate",
          "rawQuery": "SELECT    toInt32(date) * 1000 AS date,   avg(sum_cost) as avg_cost,   median(sum_cost) as median_cost FROM (   SELECT     date,     billing_account_id,     sum(-credit) as sum_cost   FROM     cloud_analytics.consumption_daily_minus_vat   WHERE     has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source)=1     AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1)=1     AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')     AND has(['enterprise','isv','mass','yandex'], segment)=1     AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1     AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1     AND has(['trial','paid','disabled'], usage_status)=1     AND date > '2018-11-01 00:00:00'   GROUP BY      date,     billing_account_id   ) WHERE sum_cost > 0 GROUP BY  date ORDER BY  date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Среднее/медианное триальное потребление",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 0,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 62
      },
      "id": 38,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 2,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \n  toInt32(date) * 1000 AS date,\n  avg(sum_cost) as avg_cost,\n  median(sum_cost) as median_cost\nFROM (\n  SELECT\n    date,\n    billing_account_id,\n    sum(paid_consumption) as sum_cost\n  FROM\n    cloud_analytics.$data_source\n  WHERE\n    has([$client_type], source)=1\n    AND has([$service], service1)=1\n    AND has([$curr_state], ba_curr_state_extended)=1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n    AND has([$segment], segment)=1\n    AND has([$person_type], person_type)=1\n    AND has([$channel], channel)=1\n    AND has([$usage_status], usage_status)=1\n    AND date > '2018-10-01 00:00:00'\n  GROUP BY \n    date,\n    billing_account_id\n  )\nWHERE sum_cost > 0\nGROUP BY \ndate\nORDER BY \ndate",
          "rawQuery": "SELECT    toInt32(date) * 1000 AS date,   avg(sum_cost) as avg_cost,   median(sum_cost) as median_cost FROM (   SELECT     date,     billing_account_id,     sum(paid_consumption) as sum_cost   FROM     cloud_analytics.consumption_daily_minus_vat   WHERE     has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source)=1     AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1)=1     AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')     AND has(['enterprise','isv','mass','yandex'], segment)=1     AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1     AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1     AND has(['trial','paid','disabled'], usage_status)=1     AND date > '2018-10-01 00:00:00'   GROUP BY      date,     billing_account_id   ) WHERE sum_cost > 0 GROUP BY  date ORDER BY  date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Среднее/медианное платное потребление",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 0,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 71
      },
      "id": 39,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 2,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \n  toInt32(date) * 1000 AS date,\n  avg(sum_cost) as avg_cost,\n  median(sum_cost) as median_cost\nFROM (\n  SELECT\n    date,\n    billing_account_id,\n    sum(cost) as sum_cost\n  FROM\n    cloud_analytics.$data_source\n  WHERE\n    has([$client_type], source)=1\n    AND has([$service], service1)=1\n    AND has([$curr_state], ba_curr_state_extended)=1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n    AND has([$segment], segment)=1\n    AND has([$person_type], person_type)=1\n    AND has([$channel], channel)=1\n    AND has([$usage_status], usage_status)=1\n    AND date > '2018-11-01 00:00:00'\n  GROUP BY \n    date,\n    billing_account_id\n  )\nWHERE sum_cost > 0\nGROUP BY \ndate\nORDER BY \ndate",
          "rawQuery": "SELECT    toInt32(date) * 1000 AS date,   avg(sum_cost) as avg_cost,   median(sum_cost) as median_cost FROM (   SELECT     date,     billing_account_id,     sum(cost) as sum_cost   FROM     cloud_analytics.consumption_daily_minus_vat   WHERE     has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source)=1     AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1)=1     AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')     AND has(['enterprise','isv','mass','yandex'], segment)=1     AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1     AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1     AND has(['trial','paid','disabled'], usage_status)=1     AND date > '2018-11-01 00:00:00'   GROUP BY      date,     billing_account_id   ) WHERE sum_cost > 0 GROUP BY  date ORDER BY  date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Среднее/медианное общее потребление",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 80
      },
      "id": 41,
      "panels": [],
      "title": "Активные пользователи",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 81
      },
      "id": 44,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 2,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \ntoInt32(date) * 1000 as date,\nSUM(paid_users) as trial_users\nFROM (\n\n    SELECT multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date, \n         COUNT(DISTINCT billing_account_id) as paid_users\n    FROM cloud_analytics.consumption_daily\n    WHERE -credit > 0\n    AND has([$client_type], source) = 1\n    AND has([$curr_state], ba_curr_state_extended)=1\n    AND has([$service], service1)=1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n    AND has([$segment], segment)=1\n    AND has([$person_type], person_type)=1\n    AND has([$channel], channel)=1\n    AND has([$usage_status], usage_status)=1\n    GROUP BY date\n    ORDER BY date\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32(date) * 1000 as date, SUM(paid_users) as trial_users FROM (      SELECT multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,           COUNT(DISTINCT billing_account_id) as paid_users     FROM cloud_analytics.consumption_daily     WHERE -credit > 0     AND has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1     AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1     AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1)=1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')     AND has(['enterprise','isv','mass','yandex'], segment)=1     AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1     AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1     AND has(['trial','paid','disabled'], usage_status)=1     GROUP BY date     ORDER BY date ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Активные пользователи (триалы)",
      "tooltip": {
        "shared": true,
        "sort": 1,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 81
      },
      "id": 43,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 2,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \ntoInt32(date) * 1000 as date,\nSUM(paid_users) as paid_users\nFROM (\n\n    SELECT multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date, \n         COUNT(DISTINCT billing_account_id) as paid_users\n    FROM cloud_analytics.consumption_daily\n    WHERE cost + credit > 0\n    AND has([$client_type], source) = 1\n    AND has([$curr_state], ba_curr_state_extended)=1\n    AND has([$service], service1)=1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n    AND has([$segment], segment)=1\n    AND has([$person_type], person_type)=1\n    AND has([$channel], channel)=1\n    AND has([$usage_status], usage_status)=1\n    GROUP BY date\n    ORDER BY date\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32(date) * 1000 as date, SUM(paid_users) as paid_users FROM (      SELECT multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,           COUNT(DISTINCT billing_account_id) as paid_users     FROM cloud_analytics.consumption_daily     WHERE cost + credit > 0     AND has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1     AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1     AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1)=1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')     AND has(['enterprise','isv','mass','yandex'], segment)=1     AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1     AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1     AND has(['trial','paid','disabled'], usage_status)=1     GROUP BY date     ORDER BY date ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Активные пользователи (платные)",
      "tooltip": {
        "shared": true,
        "sort": 1,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 90
      },
      "id": 45,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 2,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \ntoInt32(date) * 1000 as date,\nSUM(paid_users) as paid_users\nFROM (\n\n    SELECT multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'year', toStartOfYear(date),\n                   date) AS date, \n         COUNT(DISTINCT billing_account_id) as paid_users\n    FROM cloud_analytics.consumption_daily\n    WHERE cost > 0\n    AND has([$client_type], source) = 1\n    AND has([$curr_state], ba_curr_state_extended)=1\n    AND has([$service], service1)=1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n    AND has([$segment], segment)=1\n    AND has([$person_type], person_type)=1\n    AND has([$channel], channel)=1\n    AND has([$usage_status], usage_status)=1\n    GROUP BY date\n    ORDER BY date\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32(date) * 1000 as date, SUM(paid_users) as paid_users FROM (      SELECT multiIf('day' = 'day', date,                     'day' = 'week', toMonday(date),                    'day' = 'month', toStartOfMonth(date),                     'day' = 'year', toStartOfYear(date),                    date) AS date,           COUNT(DISTINCT billing_account_id) as paid_users     FROM cloud_analytics.consumption_daily     WHERE cost > 0     AND has(['direct_offer','unknown','internal','waitlist','organic','events','email_campaigns','ml'], source) = 1     AND has(['active','payment_required','suspended_trial_expired'], ba_curr_state_extended)=1     AND has(['compute','mdb','network','storage','ai','marketplace','nbs','nlb','ymq'], service1)=1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')     AND has(['enterprise','isv','mass','yandex'], segment)=1     AND has(['company','individual','other','switzerland_nonresident_company'], person_type)=1     AND has(['Direct','Perfomance','Organic Search','Unknown','Referrals','Social','Emailing','Yandex Portal','unknown','Other','Sales'], channel)=1     AND has(['trial','paid','disabled'], usage_status)=1     GROUP BY date     ORDER BY date ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Активные пользователи (всего)",
      "tooltip": {
        "shared": true,
        "sort": 1,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "refresh": false,
  "schemaVersion": 18,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "paid",
          "value": "paid"
        },
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "consumption_type",
        "options": [
          {
            "selected": false,
            "text": "trial",
            "value": "trial"
          },
          {
            "selected": true,
            "text": "paid",
            "value": "paid"
          },
          {
            "selected": false,
            "text": "total",
            "value": "total"
          }
        ],
        "query": "trial,paid,total",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT source FROM cloud_analytics.consumption_daily",
        "hide": 0,
        "includeAll": true,
        "label": "",
        "multi": true,
        "name": "client_type",
        "options": [],
        "query": "SELECT DISTINCT source FROM cloud_analytics.consumption_daily",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "tags": [],
          "text": "day",
          "value": "day"
        },
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "aggr_period",
        "options": [
          {
            "selected": true,
            "text": "day",
            "value": "day"
          },
          {
            "selected": false,
            "text": "week",
            "value": "week"
          },
          {
            "selected": false,
            "text": "month",
            "value": "month"
          },
          {
            "selected": false,
            "text": "year",
            "value": "year"
          }
        ],
        "query": "day, week, month, year",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "active + payment_required + suspended_trial_expired",
          "value": [
            "active",
            "payment_required",
            "suspended_trial_expired"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT ba_curr_state_extended FROM cloud_analytics.consumption_daily WHERE ba_curr_state != ''",
        "hide": 0,
        "includeAll": true,
        "label": "Current state",
        "multi": true,
        "name": "curr_state",
        "options": [],
        "query": "SELECT DISTINCT ba_curr_state_extended FROM cloud_analytics.consumption_daily WHERE ba_curr_state != ''",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": "'All'",
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT billing_account_id FROM cloud_analytics.consumption_daily",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "billing_account_id",
        "options": [],
        "query": "SELECT DISTINCT billing_account_id FROM cloud_analytics.consumption_daily",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "tags": [],
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT segment FROM cloud_analytics.consumption_daily",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "segment",
        "options": [
          {
            "selected": true,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "enterprise",
            "value": "enterprise"
          },
          {
            "selected": false,
            "text": "isv",
            "value": "isv"
          },
          {
            "selected": false,
            "text": "mass",
            "value": "mass"
          },
          {
            "selected": false,
            "text": "yandex",
            "value": "yandex"
          }
        ],
        "query": "SELECT DISTINCT segment FROM cloud_analytics.consumption_daily",
        "refresh": 0,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "tags": [],
          "text": "consumption_daily_minus_vat",
          "value": "consumption_daily_minus_vat"
        },
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "data_source",
        "options": [
          {
            "selected": false,
            "text": "consumption_daily",
            "value": "consumption_daily"
          },
          {
            "selected": true,
            "text": "consumption_daily_minus_vat",
            "value": "consumption_daily_minus_vat"
          }
        ],
        "query": "consumption_daily,consumption_daily_minus_vat",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT person_type FROM cloud_analytics.consumption_daily",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "person_type",
        "options": [],
        "query": "SELECT DISTINCT person_type FROM cloud_analytics.consumption_daily",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT channel from cloud_analytics.consumption_daily",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "channel",
        "options": [],
        "query": "SELECT DISTINCT channel from cloud_analytics.consumption_daily",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "tags": [],
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT service1 FROM cloud_analytics.consumption_daily",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "service",
        "options": [
          {
            "selected": true,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "compute",
            "value": "compute"
          },
          {
            "selected": false,
            "text": "mdb",
            "value": "mdb"
          },
          {
            "selected": false,
            "text": "network",
            "value": "network"
          },
          {
            "selected": false,
            "text": "storage",
            "value": "storage"
          },
          {
            "selected": false,
            "text": "ai",
            "value": "ai"
          },
          {
            "selected": false,
            "text": "marketplace",
            "value": "marketplace"
          },
          {
            "selected": false,
            "text": "nbs",
            "value": "nbs"
          },
          {
            "selected": false,
            "text": "nlb",
            "value": "nlb"
          },
          {
            "selected": false,
            "text": "ymq",
            "value": "ymq"
          }
        ],
        "query": "SELECT DISTINCT service1 FROM cloud_analytics.consumption_daily",
        "refresh": 0,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "trial + paid + disabled",
          "value": [
            "trial",
            "paid",
            "disabled"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT usage_status FROM cloud_analytics.consumption_daily WHERE usage_status IS NOT NULL",
        "hide": 0,
        "includeAll": true,
        "label": "Usage Status",
        "multi": true,
        "name": "usage_status",
        "options": [],
        "query": "SELECT DISTINCT usage_status FROM cloud_analytics.consumption_daily WHERE usage_status IS NOT NULL",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-90d",
    "to": "now+1d"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Cloud Consumption",
  "uid": "oSiV6C0iz",
  "version": 192
}
