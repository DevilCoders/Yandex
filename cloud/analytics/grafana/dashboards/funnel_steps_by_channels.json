{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 121097,
  "iteration": 1564132598605,
  "links": [],
  "panels": [
    {
      "content": "# Важно\n1) Здесь вы смотрите НЕ на когорты, а на события. Первый график значит, что в дату произошно X созданий облаков, Y пользователей начали потреблять триально, Z начали потреблять платно и это могут быть разные пользователи.\n\n\n2) Разбивка по каналам применяется к конкретному шагу, а это значит, что у пользователей может быть один канал для созлания облака, другой для начала триального потребления, третий для начала платного потребления.\n\n\n3) Используется  атрибуция: последнее не прямое касание с окном атрибуции 90 дней. например: для шага начала платного потребления:\n\nпуть пользователя за 90 дней перед переходом в платное:\n\nПерфоманс >> Звонок >> Прямой переход >> начало платного потребления: channel = Sales, потому что последнее не прямое касание это звонок \n\nПерфоманс >> Звонок >> Прямой переход >> переход из письма >> начало платного потребления: channel = Переход из почтовых рассылок, потому что последнее не прямое касание это переход из письма \n\n4) Unknown категория возникает, если в окне атрибуции нет касаний с клиетом ИЛИ мы не смогли проклеить визиты/звонки ни с одним клиентов. Исправляем здесь: https://st.yandex-team.ru/CLOUDANA-89\n",
      "gridPos": {
        "h": 3,
        "w": 13,
        "x": 0,
        "y": 0
      },
      "id": 45,
      "links": [],
      "mode": "markdown",
      "title": "",
      "type": "text"
    },
    {
      "content": "## Если у Вас что-то не работает или Вам не хватает функциональности, пожалуйста, [дайте нам знать](https://forms.yandex-team.ru/surveys/21421/).",
      "gridPos": {
        "h": 5,
        "w": 11,
        "x": 13,
        "y": 0
      },
      "id": 49,
      "links": [],
      "mode": "markdown",
      "title": "",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "ch_cloud_analytics",
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 13,
        "x": 0,
        "y": 3
      },
      "id": 34,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "metadata_modification_time",
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "table",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT metadata_modification_time FROM system.tables \nWHERE name = 'acquisition_cube_test'\nAND database = 'cloud_analytics_testing'",
          "rawQuery": "SELECT metadata_modification_time FROM system.tables  WHERE name = 'acquisition_cube_test' AND database = 'cloud_analytics_testing'",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": "",
      "title": "Дата и время последнего обновления",
      "transparent": true,
      "type": "singlestat",
      "valueFontSize": "50%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 23,
        "x": 0,
        "y": 5
      },
      "id": 43,
      "legend": {
        "alignAsTable": true,
        "avg": false,
        "current": false,
        "hideEmpty": false,
        "hideZero": false,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "sort": "avg",
        "sortDesc": true,
        "total": true,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 2,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \ntoInt32(toDateTime(date)) * 1000 as date,\nSUM(cloud_created) as cloud_created,\nSUM(ba_created) as ba_created,\nSUM(first_trial_consumption) as first_trial_consumption,\nSUM(first_paid_consumption) as first_paid_consumption\nFROM (\n\n    SELECT\n      multiIf(\n        '$aggr_period' = 'day', toDate(event_time),\n        '$aggr_period' = 'week', toMonday(toDate(event_time)),\n        '$aggr_period' = 'month', toStartOfMonth(toDate(event_time)),\n        '$aggr_period' = 'year', toStartOfYear(toDate(event_time)),\n        toDate(event_time)\n      ) AS date, \n      countIf(event = 'cloud_created') as cloud_created,\n      countIf(event = 'ba_created') as ba_created,\n      countIf(event = 'first_trial_consumption') as first_trial_consumption,\n      countIf(event = 'first_paid_consumption') as first_paid_consumption\n    FROM cloud_analytics_testing.acquisition_cube_test\n    WHERE\n      event IN ('cloud_created', 'first_trial_consumption', 'first_paid_consumption', 'ba_created')\n      AND has([$state], multiIf(block_reason == 'ba_not_created', 'ba_not_created',ba_state == 'suspended', CONCAT(ba_state, '_', block_reason),ba_state) ) = 1\n      AND has([$segment], segment) = 1\n    GROUP BY date\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32(toDateTime(date)) * 1000 as date, SUM(cloud_created) as cloud_created, SUM(ba_created) as ba_created, SUM(first_trial_consumption) as first_trial_consumption, SUM(first_paid_consumption) as first_paid_consumption FROM (      SELECT       multiIf(         'week' = 'day', toDate(event_time),         'week' = 'week', toMonday(toDate(event_time)),         'week' = 'month', toStartOfMonth(toDate(event_time)),         'week' = 'year', toStartOfYear(toDate(event_time)),         toDate(event_time)       ) AS date,        countIf(event = 'cloud_created') as cloud_created,       countIf(event = 'ba_created') as ba_created,       countIf(event = 'first_trial_consumption') as first_trial_consumption,       countIf(event = 'first_paid_consumption') as first_paid_consumption     FROM cloud_analytics_testing.acquisition_cube_test     WHERE       event IN ('cloud_created', 'first_trial_consumption', 'first_paid_consumption', 'ba_created')       AND has(['suspended_unknown','active','ba_not_created','suspended_trial_expired','suspended_Bound card removed from passport','payment_not_confirmed','new','suspended_unbound_card','suspended_debt','inactive','payment_required','suspended_manual','suspended_Unlocked','suspended_mining','suspended_threshold','deleted','suspended_antifraud','suspended_invalid_phone'], multiIf(block_reason == 'ba_not_created', 'ba_not_created',ba_state == 'suspended', CONCAT(ba_state, '_', block_reason),ba_state) ) = 1       AND has(['mass','unknown'], segment) = 1     GROUP BY date ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Funnel Events Log Scale",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 2,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 23,
        "x": 0,
        "y": 14
      },
      "id": 39,
      "legend": {
        "alignAsTable": true,
        "avg": false,
        "current": false,
        "hideEmpty": false,
        "hideZero": false,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "sort": "avg",
        "sortDesc": true,
        "total": true,
        "values": true
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \ntoInt32(toDateTime(date)) * 1000 as date,\ngroupArray( (channel, events))\nFROM (\n\n    SELECT\n      multiIf(\n        '$aggr_period' = 'day', toDate(event_time),\n        '$aggr_period' = 'week', toMonday(toDate(event_time)),\n        '$aggr_period' = 'month', toStartOfMonth(toDate(event_time)),\n        '$aggr_period' = 'year', toStartOfYear(toDate(event_time)),\n        toDate(event_time)\n      ) AS date, \n      channel,\n      COUNT(*) as events\n    FROM cloud_analytics_testing.acquisition_cube_test\n    WHERE\n      event = 'cloud_created'\n      AND has([$state], multiIf(block_reason == 'ba_not_created', 'ba_not_created',ba_state == 'suspended', CONCAT(ba_state, '_', block_reason),ba_state) ) = 1\n      AND has([$segment], segment) = 1\n    GROUP BY date, channel\n    ORDER BY date, channel\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32(toDateTime(date)) * 1000 as date, groupArray( (channel, events)) FROM (      SELECT       multiIf(         'week' = 'day', toDate(event_time),         'week' = 'week', toMonday(toDate(event_time)),         'week' = 'month', toStartOfMonth(toDate(event_time)),         'week' = 'year', toStartOfYear(toDate(event_time)),         toDate(event_time)       ) AS date,        channel,       COUNT(*) as events     FROM cloud_analytics_testing.acquisition_cube_test     WHERE       event = 'cloud_created'       AND has(['suspended_unknown','active','ba_not_created','suspended_trial_expired','suspended_Bound card removed from passport','payment_not_confirmed','new','suspended_unbound_card','suspended_debt','inactive','payment_required','suspended_manual','suspended_Unlocked','suspended_mining','suspended_threshold','deleted','suspended_antifraud','suspended_invalid_phone'], multiIf(block_reason == 'ba_not_created', 'ba_not_created',ba_state == 'suspended', CONCAT(ba_state, '_', block_reason),ba_state) ) = 1       AND has(['mass','unknown'], segment) = 1     GROUP BY date, channel     ORDER BY date, channel ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Cloud Created By Channels",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 23,
        "x": 0,
        "y": 23
      },
      "id": 46,
      "legend": {
        "alignAsTable": true,
        "avg": false,
        "current": false,
        "hideEmpty": false,
        "hideZero": false,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "sort": "avg",
        "sortDesc": true,
        "total": true,
        "values": true
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \ntoInt32(toDateTime(date)) * 1000 as date,\ngroupArray( (channel, events))\nFROM (\n\n    SELECT\n      multiIf(\n        '$aggr_period' = 'day', toDate(event_time),\n        '$aggr_period' = 'week', toMonday(toDate(event_time)),\n        '$aggr_period' = 'month', toStartOfMonth(toDate(event_time)),\n        '$aggr_period' = 'year', toStartOfYear(toDate(event_time)),\n        toDate(event_time)\n      ) AS date, \n      channel,\n      COUNT(*) as events\n    FROM cloud_analytics_testing.acquisition_cube_test\n    WHERE\n      event = 'ba_created'\n      AND has([$state], multiIf(block_reason == 'ba_not_created', 'ba_not_created',ba_state == 'suspended', CONCAT(ba_state, '_', block_reason),ba_state) ) = 1\n      AND has([$segment], segment) = 1\n    GROUP BY date, channel\n    ORDER BY date, channel\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32(toDateTime(date)) * 1000 as date, groupArray( (channel, events)) FROM (      SELECT       multiIf(         'week' = 'day', toDate(event_time),         'week' = 'week', toMonday(toDate(event_time)),         'week' = 'month', toStartOfMonth(toDate(event_time)),         'week' = 'year', toStartOfYear(toDate(event_time)),         toDate(event_time)       ) AS date,        channel,       COUNT(*) as events     FROM cloud_analytics_testing.acquisition_cube_test     WHERE       event = 'ba_created'       AND has(['suspended_unknown','active','ba_not_created','suspended_trial_expired','suspended_Bound card removed from passport','payment_not_confirmed','new','suspended_unbound_card','suspended_debt','inactive','payment_required','suspended_manual','suspended_Unlocked','suspended_mining','suspended_threshold','deleted','suspended_antifraud','suspended_invalid_phone'], multiIf(block_reason == 'ba_not_created', 'ba_not_created',ba_state == 'suspended', CONCAT(ba_state, '_', block_reason),ba_state) ) = 1       AND has(['mass','unknown'], segment) = 1     GROUP BY date, channel     ORDER BY date, channel ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Billing Account Created By Channels",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 10,
        "w": 23,
        "x": 0,
        "y": 32
      },
      "id": 41,
      "legend": {
        "alignAsTable": true,
        "avg": false,
        "current": false,
        "hideEmpty": true,
        "hideZero": true,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "sideWidth": null,
        "sort": "avg",
        "sortDesc": true,
        "total": true,
        "values": true
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \ntoInt32(toDateTime(date)) * 1000 as date,\ngroupArray( (channel, events))\nFROM (\n\n    SELECT\n      multiIf(\n        '$aggr_period' = 'day', toDate(event_time),\n        '$aggr_period' = 'week', toMonday(toDate(event_time)),\n        '$aggr_period' = 'month', toStartOfMonth(toDate(event_time)),\n        '$aggr_period' = 'year', toStartOfYear(toDate(event_time)),\n        toDate(event_time)\n      ) AS date, \n      channel,\n      COUNT(*) as events\n    FROM cloud_analytics_testing.acquisition_cube_test\n    WHERE\n      event = 'first_trial_consumption'\n      AND has([$state], multiIf(block_reason == 'ba_not_created', 'ba_not_created',ba_state == 'suspended', CONCAT(ba_state, '_', block_reason),ba_state) ) = 1\n      AND has([$segment], segment) = 1\n    GROUP BY date, channel\n    ORDER BY date, channel\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32(toDateTime(date)) * 1000 as date, groupArray( (channel, events)) FROM (      SELECT       multiIf(         'week' = 'day', toDate(event_time),         'week' = 'week', toMonday(toDate(event_time)),         'week' = 'month', toStartOfMonth(toDate(event_time)),         'week' = 'year', toStartOfYear(toDate(event_time)),         toDate(event_time)       ) AS date,        channel,       COUNT(*) as events     FROM cloud_analytics_testing.acquisition_cube_test     WHERE       event = 'first_trial_consumption'       AND has(['suspended_unknown','active','ba_not_created','suspended_trial_expired','suspended_Bound card removed from passport','payment_not_confirmed','new','suspended_unbound_card','suspended_debt','inactive','payment_required','suspended_manual','suspended_Unlocked','suspended_mining','suspended_threshold','deleted','suspended_antifraud','suspended_invalid_phone'], multiIf(block_reason == 'ba_not_created', 'ba_not_created',ba_state == 'suspended', CONCAT(ba_state, '_', block_reason),ba_state) ) = 1       AND has(['mass','unknown'], segment) = 1     GROUP BY date, channel     ORDER BY date, channel ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "First Trial Consumption by Channels",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 10,
        "w": 23,
        "x": 0,
        "y": 42
      },
      "id": 42,
      "legend": {
        "alignAsTable": true,
        "avg": false,
        "current": false,
        "hideEmpty": true,
        "hideZero": true,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "sideWidth": null,
        "sort": "avg",
        "sortDesc": true,
        "total": true,
        "values": true
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \ntoInt32(toDateTime(date)) * 1000 as date,\ngroupArray( (channel, events))\nFROM (\n\n    SELECT\n      multiIf(\n        '$aggr_period' = 'day', toDate(event_time),\n        '$aggr_period' = 'week', toMonday(toDate(event_time)),\n        '$aggr_period' = 'month', toStartOfMonth(toDate(event_time)),\n        '$aggr_period' = 'year', toStartOfYear(toDate(event_time)),\n        toDate(event_time)\n      ) AS date, \n      channel,\n      COUNT(*) as events\n    FROM cloud_analytics_testing.acquisition_cube_test\n    WHERE\n      event = 'first_paid_consumption'\n      AND has([$state], multiIf(block_reason == 'ba_not_created', 'ba_not_created',ba_state == 'suspended', CONCAT(ba_state, '_', block_reason),ba_state) ) = 1\n      AND has([$segment], segment) = 1\n    GROUP BY date, channel\n    ORDER BY date, channel\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32(toDateTime(date)) * 1000 as date, groupArray( (channel, events)) FROM (      SELECT       multiIf(         'week' = 'day', toDate(event_time),         'week' = 'week', toMonday(toDate(event_time)),         'week' = 'month', toStartOfMonth(toDate(event_time)),         'week' = 'year', toStartOfYear(toDate(event_time)),         toDate(event_time)       ) AS date,        channel,       COUNT(*) as events     FROM cloud_analytics_testing.acquisition_cube_test     WHERE       event = 'first_paid_consumption'       AND has(['suspended_unknown','active','ba_not_created','suspended_trial_expired','suspended_Bound card removed from passport','payment_not_confirmed','new','suspended_unbound_card','suspended_debt','inactive','payment_required','suspended_manual','suspended_Unlocked','suspended_mining','suspended_threshold','deleted','suspended_antifraud','suspended_invalid_phone'], multiIf(block_reason == 'ba_not_created', 'ba_not_created',ba_state == 'suspended', CONCAT(ba_state, '_', block_reason),ba_state) ) = 1       AND has(['mass','unknown'], segment) = 1     GROUP BY date, channel     ORDER BY date, channel ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "First Paid Consumption by Channels",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "columns": [],
      "datasource": "ch_cloud_analytics",
      "fontSize": "100%",
      "gridPos": {
        "h": 9,
        "w": 23,
        "x": 0,
        "y": 52
      },
      "id": 48,
      "links": [],
      "pageSize": 20,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 1,
        "desc": true
      },
      "styles": [
        {
          "alias": "Time",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "date"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "pattern": "/.*/",
          "thresholds": [],
          "type": "number",
          "unit": "locale"
        }
      ],
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "table",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT\n    seq as sequence,\n    CAST(COUNT(DISTINCT puid) as Int32) as users,\n    AVG(toFloat64(first_paid)) as cr\nFROM(\n    \n    SELECT\n        puid,\n        groupArray(event_time) as cloud_created_times,\n        groupArray(event) as events_,\n        groupArray(channel) as  channels,\n        cloud_created_times[1] as first_trial_datetime,\n        toString(arrayFilter(x,y -> y != 'first_paid_consumption' AND y != 'first_trial_consumption', channels, events_)) as seq,\n        arraySum(arrayMap(x -> x = 'first_paid_consumption', events_)) as first_paid,\n        arrayFilter(x,y -> y = 'first_paid_consumption', channels, events_)[1] as first_paid_channel,\n        arrayFilter(x,y -> y = 'first_paid_consumption', cloud_created_times, events_)[1] as first_paid_datetime\n    FROM( \n        SELECT\n            *\n        FROM\n            cloud_analytics_testing.acquisition_cube_test\n        ORDER BY\n            puid,\n            event_time\n        )\n    WHERE\n        event IN ('first_trial_consumption', 'first_paid_consumption', 'click_mail', 'call') \n        AND event_time >=  first_first_trial_consumption_datetime AND event_time <=  multiIf(first_first_paid_consumption_datetime IS NULL, toDateTime(toDate('2100-01-01')), first_first_paid_consumption_datetime)\n        AND segment = 'mass'\n        AND first_first_trial_consumption_datetime >= toDate('2019-01-01')\n    GROUP BY\n        puid\n)\nGROUP BY\n    seq\nORDER BY\n  users DESC",
          "rawQuery": "SELECT     seq as sequence,     CAST(COUNT(DISTINCT puid) as Int32) as users,     AVG(toFloat64(first_paid)) as cr FROM(          SELECT         puid,         groupArray(event_time) as cloud_created_times,         groupArray(event) as events_,         groupArray(channel) as  channels,         cloud_created_times[1] as first_trial_datetime,         toString(arrayFilter(x,y -> y != 'first_paid_consumption' AND y != 'first_trial_consumption', channels, events_)) as seq,         arraySum(arrayMap(x -> x = 'first_paid_consumption', events_)) as first_paid,         arrayFilter(x,y -> y = 'first_paid_consumption', channels, events_)[1] as first_paid_channel,         arrayFilter(x,y -> y = 'first_paid_consumption', cloud_created_times, events_)[1] as first_paid_datetime     FROM(          SELECT             *         FROM             cloud_analytics_testing.acquisition_cube_test         ORDER BY             puid,             event_time         )     WHERE         event IN ('first_trial_consumption', 'first_paid_consumption', 'click_mail', 'call')          AND event_time >=  first_first_trial_consumption_datetime AND event_time <=  multiIf(first_first_paid_consumption_datetime IS NULL, toDateTime(toDate('2100-01-01')), first_first_paid_consumption_datetime)         AND segment = 'mass'         AND first_first_trial_consumption_datetime >= toDate('2019-01-01')     GROUP BY         puid ) GROUP BY     seq ORDER BY   users DESC",
          "refId": "A",
          "round": "0s"
        }
      ],
      "title": "Channel Sequences",
      "transform": "table",
      "type": "table"
    }
  ],
  "refresh": false,
  "schemaVersion": 18,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "week",
          "value": "week"
        },
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "aggr_period",
        "options": [
          {
            "selected": true,
            "text": "day",
            "value": "day"
          },
          {
            "selected": false,
            "text": "week",
            "value": "week"
          },
          {
            "selected": false,
            "text": "month",
            "value": "month"
          },
          {
            "selected": false,
            "text": "year",
            "value": "year"
          }
        ],
        "query": "day, week, month, year",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT distinct multiIf(block_reason == 'ba_not_created', 'ba_not_created',ba_state == 'suspended', CONCAT(ba_state, '_', block_reason),ba_state) as ba_state FROM cloud_analytics_testing.acquisition_cube_test WHERE ba_state IS NOT NULL",
        "hide": 0,
        "includeAll": true,
        "label": "BA State",
        "multi": true,
        "name": "state",
        "options": [],
        "query": "SELECT distinct multiIf(block_reason == 'ba_not_created', 'ba_not_created',ba_state == 'suspended', CONCAT(ba_state, '_', block_reason),ba_state) as ba_state FROM cloud_analytics_testing.acquisition_cube_test WHERE ba_state IS NOT NULL",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "mass + unknown",
          "value": [
            "mass",
            "unknown"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT distinct segment FROM cloud_analytics_testing.acquisition_cube_test WHERE segment IS NOT NULL",
        "hide": 0,
        "includeAll": true,
        "label": "Segment",
        "multi": true,
        "name": "segment",
        "options": [],
        "query": "SELECT distinct segment FROM cloud_analytics_testing.acquisition_cube_test WHERE segment IS NOT NULL",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-30d",
    "to": "now+7d"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Funnel Steps By Channels",
  "uid": "H0LikdCik",
  "version": 37
}
