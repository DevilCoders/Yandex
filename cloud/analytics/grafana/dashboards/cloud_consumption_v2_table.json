{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 204954,
  "iteration": 1564132649720,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 32,
      "panels": [],
      "title": "Информация о дашборде",
      "type": "row"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "ch_cloud_analytics",
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 0,
        "y": 1
      },
      "id": 34,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "metadata_modification_time",
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "table",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT metadata_modification_time FROM system.tables \nWHERE name = '$data_source'\nAND database = 'cloud_analytics'",
          "rawQuery": "SELECT metadata_modification_time FROM system.tables  WHERE name = 'consumption_daily_v2_1' AND database = 'cloud_analytics'",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": "",
      "title": "Дата и время последнего обновления",
      "transparent": true,
      "type": "singlestat",
      "valueFontSize": "50%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "content": "\n## Если у Вас что-то не работает или Вам не хватает функциональности, пожалуйста, [дайте нам знать](https://forms.yandex-team.ru/surveys/21421/).\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 19,
        "x": 5,
        "y": 1
      },
      "id": 51,
      "links": [],
      "mode": "markdown",
      "timeFrom": null,
      "timeShift": null,
      "title": "Обратная связь",
      "transparent": true,
      "type": "text"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 53,
      "panels": [],
      "title": "",
      "type": "row"
    },
    {
      "columns": [],
      "datasource": "ch_cloud_analytics",
      "fontSize": "100%",
      "gridPos": {
        "h": 25,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 49,
      "links": [],
      "pageSize": null,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 5,
        "desc": true
      },
      "styles": [
        {
          "alias": "Time",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "date"
        },
        {
          "alias": "",
          "colorMode": "value",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "growth",
          "thresholds": [
            "0",
            "0"
          ],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": "value",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "growth_pct",
          "thresholds": [
            "0",
            "0"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "pattern": "/.*/",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "table",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT  reverse(replaceAll(toFixedString(reverse(toString(rowNumberInAllBlocks() + 1)), 6), '\\0', '0')) N,\n        c1 as \"$dimension\",\n        c2 as \"$dimension2 \",\n        c3 as \"$dimension3  \",\n        sumIf(sum_cost, date>='$prev_period' AND date<'$period1')  as \"$prev_period_date to $prev_period_end_date\",\n        sumIf(sum_cost, date>='$period1' AND date<'$period1_end') as \"$period1_date to $period1_end_date\",\n        \"$period1_date to $period1_end_date\" - \"$prev_period_date to $prev_period_end_date\" as growth,\n        \"$period1_date to $period1_end_date\"/\"$prev_period_date to $prev_period_end_date\" -1 as growth_pct\nFROM( \n  SELECT\n    date,\n    $dimension as c1,\n    $dimension2 as c2,\n    $dimension3 as c3,\n    sum(cons_sum) as sum_cost\n  FROM cloud_analytics.consumption_daily_v2_1\n  WHERE has([$consumption_type], cons_type) = 1\n    AND has([$segment], segment)=1\n    AND has([$sales_name], sales_name)=1\n    AND has([$size], size)=1\n    AND has([$channel], channel)=1\n    AND has([$service_name], service_name)=1\n    AND has([$subservice_name], subservice_name)=1\n    AND has([$sku_name], sku_name)=1\n    AND has([$person_type], person_type)=1\n    AND has([$usage_status], usage_status)=1\n    AND has([$state], state)=1\n    AND has([$block_reason], block_reason)=1\n    AND has([$core_fraction], core_fraction)=1\n    AND has([$preemptible], preemptible)=1\n    AND has([$platform], platform)=1\n    AND has([$database], database)=1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  GROUP BY c1,c2,c3, date\n  \n)\nGROUP BY  c1,c2,c3\nORDER BY \"$period1_date to $period1_end_date\" DESC\nLimit 1000\nUNION All\n\nSELECT  'z.Total' N,\n        'z.Total' \"$dimension\",\n        'z.Total' \"$dimension2\",\n        'z.Total' \"$dimension3\",\n        sumIf(sum_cost, date>='$prev_period' AND date<'$period1') as prev_period,\n        sumIf(sum_cost, date>='$period1' AND date<'$period1_end') as period,\n        period - prev_period as prev_week_growth,\n        period/prev_period -1 as growth_pct\nFROM( \n  SELECT\n    date,\n    $dimension as c1,\n    $dimension2 as c2,\n    $dimension3 as c3,\n    sum(cons_sum) as sum_cost\n  FROM cloud_analytics.consumption_daily_v2_1\n  WHERE has([$consumption_type], cons_type) = 1\n    AND has([$segment], segment)=1\n    AND has([$sales_name], sales_name)=1\n    AND has([$size], size)=1\n    AND has([$channel], channel)=1\n    AND has([$service_name], service_name)=1\n    AND has([$subservice_name], subservice_name)=1\n    AND has([$sku_name], sku_name)=1\n    AND has([$person_type], person_type)=1\n    AND has([$usage_status], usage_status)=1\n    AND has([$state], state)=1\n    AND has([$block_reason], block_reason)=1\n    AND has([$core_fraction], core_fraction)=1\n    AND has([$preemptible], preemptible)=1\n    AND has([$platform], platform)=1\n    AND has([$database], database)=1\n    AND (has([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  GROUP BY c1,c2,c3, date\n)",
          "rawQuery": "SELECT  reverse(replaceAll(toFixedString(reverse(toString(rowNumberInAllBlocks() + 1)), 6), '\\0', '0')) N,         c1 as \"segment\",         c2 as \"size \",         c3 as \"total  \",         sumIf(sum_cost, date>='2019-05-01 00:00:00' AND date<'2019-06-01 00:00:00')  as \"2019-05-01 to 2019-05-31\",         sumIf(sum_cost, date>='2019-06-01 00:00:00' AND date<'2019-07-01 00:00:00') as \"2019-06-01 to 2019-06-30\",         \"2019-06-01 to 2019-06-30\" - \"2019-05-01 to 2019-05-31\" as growth,         \"2019-06-01 to 2019-06-30\"/\"2019-05-01 to 2019-05-31\" -1 as growth_pct FROM(    SELECT     date,     segment as c1,     size as c2,     total as c3,     sum(cons_sum) as sum_cost   FROM cloud_analytics.consumption_daily_v2_1   WHERE has(['trial','paid'], cons_type) = 1     AND has(['','csm','enterprise','isv','isv_large','isv_ml','unmanaged','var'], segment)=1     AND has(['','admin','alexche','anbalu','andreigusev','datishin','dmtroe','ebelobrova','flekon','gingerkote','glebmarkevich','golubin','kalifornia','marinapolik','mashmellow','moiseeva-m','niktk','obelkin','timag','unmanaged','victorbutenko','voytko'], sales_name)=1     AND has(['small','micro','unknown','medium','large'], size)=1     AND has(['Direct','Emailing','Organic Search','Other','Perfomance','Referrals','Sales','Social','Unknown','Yandex Portal','unknown'], channel)=1     AND has(['compute','mdb','network','storage','ai','cr','nlb','ymq'], service_name)=1     AND has(['','active','allocated','clickhouse','cpu','dataproc','delete','egress_inet','egress_lb','fifo','fips','get','gpu','head','image','ingress','ingress_inet','ingress_qrator','local_nvme','locator','mongo','ms_sql','mt','mysql','nbs_hdd','nbs_nvme','network','network-hdd','network-nvme','options','other','pg','posr','post','public_ip','put','ram','redis','snapshot','speech','std','storage','used_space','vision','windows','ymq'], subservice_name)=1     AND has(['ai.locator','ai.mt.detect','ai.mt.translate','ai.speech.stt','ai.speech.stt_long_running','ai.speech.tts','ai.vision.classification','ai.vision.face_detection','ai.vision.text_detection','compute.image','compute.snapshot','compute.vm.cpu.50.mdb.v2','compute.vm.cpu.50.v2','compute.vm.cpu.c05','compute.vm.cpu.c05.mdb.v1','compute.vm.cpu.c05.mdb.v2','compute.vm.cpu.c05.preemptible','compute.vm.cpu.c05.preemptible.v2','compute.vm.cpu.c05.v2','compute.vm.cpu.c100','compute.vm.cpu.c100.gpu-standard','compute.vm.cpu.c100.mdb.v1','compute.vm.cpu.c100.mdb.v2','compute.vm.cpu.c100.preemptible','compute.vm.cpu.c100.preemptible.v2','compute.vm.cpu.c100.v2','compute.vm.cpu.c20','compute.vm.cpu.c20.mdb.v1','compute.vm.cpu.c20.mdb.v2','compute.vm.cpu.c20.preemptible','compute.vm.cpu.c20.preemptible.v2','compute.vm.cpu.c20.v2','compute.vm.cpu.c50.preemptible.v2','compute.vm.gpu.gpu-standard','compute.vm.ram','compute.vm.ram.gpu-standard','compute.vm.ram.mdb.v1','compute.vm.ram.mdb.v2','compute.vm.ram.preemptible','compute.vm.ram.preemptible.v2','compute.vm.ram.v2','cr.api.delete','cr.api.get.standard','cr.api.network.cloud.egress','cr.api.network.cloud.ingress','cr.api.network.inet.egress','cr.api.network.inet.ingress','cr.api.post.standard','cr.api.put.standard','cr.bucket.used_space.standard','dummy','marketplace.ms.sql.standard','marketplace.windows.cpu.c05','marketplace.windows.cpu.c100','mdb.cluster.clickhouse.b1.medium','mdb.cluster.clickhouse.b1.micro','mdb.cluster.clickhouse.b1.nano','mdb.cluster.clickhouse.b2.medium','mdb.cluster.clickhouse.b2.micro','mdb.cluster.clickhouse.b2.nano','mdb.cluster.clickhouse.large','mdb.cluster.clickhouse.m1.micro','mdb.cluster.clickhouse.medium','mdb.cluster.clickhouse.micro','mdb.cluster.clickhouse.nano','mdb.cluster.clickhouse.s2.3xlarge','mdb.cluster.clickhouse.s2.medium','mdb.cluster.clickhouse.s2.micro','mdb.cluster.clickhouse.s2.small','mdb.cluster.clickhouse.small','mdb.cluster.clickhouse.xlarge','mdb.cluster.local-nvme','mdb.cluster.local-nvme.ch','mdb.cluster.local-nvme.mongodb','mdb.cluster.local-nvme.mysql','mdb.cluster.local-nvme.pg','mdb.cluster.mongodb.b1.micro','mdb.cluster.mongodb.b1.nano','mdb.cluster.mongodb.b2.medium','mdb.cluster.mongodb.b2.micro','mdb.cluster.mongodb.b2.nano','mdb.cluster.mongodb.medium','mdb.cluster.mongodb.micro','mdb.cluster.mongodb.nano','mdb.cluster.mongodb.s2.medium','mdb.cluster.mongodb.s2.micro','mdb.cluster.mongodb.s2.small','mdb.cluster.mongodb.s2.xlarge','mdb.cluster.mongodb.small','mdb.cluster.mysql.b1.medium','mdb.cluster.mysql.b1.micro','mdb.cluster.mysql.b1.nano','mdb.cluster.mysql.b2.medium','mdb.cluster.mysql.b2.micro','mdb.cluster.mysql.b2.nano','mdb.cluster.mysql.m1.micro','mdb.cluster.mysql.m2.micro','mdb.cluster.mysql.m2.small','mdb.cluster.mysql.medium','mdb.cluster.mysql.micro','mdb.cluster.mysql.nano','mdb.cluster.mysql.s2.3xlarge','mdb.cluster.mysql.s2.large','mdb.cluster.mysql.s2.medium','mdb.cluster.mysql.s2.micro','mdb.cluster.mysql.s2.small','mdb.cluster.mysql.s2.xlarge','mdb.cluster.mysql.small','mdb.cluster.network-hdd.ch','mdb.cluster.network-hdd.mongodb','mdb.cluster.network-hdd.mysql','mdb.cluster.network-hdd.pg','mdb.cluster.network-nvme','mdb.cluster.network-nvme.ch','mdb.cluster.network-nvme.mongodb','mdb.cluster.network-nvme.mysql','mdb.cluster.network-nvme.pg','mdb.cluster.network-nvme.redis','mdb.cluster.pg.b1.medium','mdb.cluster.pg.b1.micro','mdb.cluster.pg.b1.nano','mdb.cluster.pg.b2.medium','mdb.cluster.pg.b2.micro','mdb.cluster.pg.b2.nano','mdb.cluster.pg.large','mdb.cluster.pg.m2.micro','mdb.cluster.pg.medium','mdb.cluster.pg.micro','mdb.cluster.pg.nano','mdb.cluster.pg.s2.medium','mdb.cluster.pg.s2.micro','mdb.cluster.pg.s2.small','mdb.cluster.pg.small','mdb.cluster.public_ip','mdb.cluster.redis.b1.nano','mdb.cluster.redis.b1.small','mdb.cluster.redis.hm1.2xlarge','mdb.cluster.redis.hm1.9xlarge','mdb.cluster.redis.hm1.large','mdb.cluster.redis.hm1.medium','mdb.cluster.redis.hm1.micro','mdb.cluster.redis.hm1.nano','mdb.cluster.redis.hm1.small','mdb.cluster.redis.hm1.xlarge','mdb.dataproc.cpu.c100','mdb.dataproc.cpu.c50','mdb.mongocfg.s1.nano','mdb.mongocfg.s2.xlarge','mdb.mongos.s1.nano','mdb.mongos.s1.xlarge','mdb.zk.clickhouse.nano','mdb.zk.clickhouse.s2.medium','mdb.zk.clickhouse.s2.micro','monitoring.point.dgauge.write','nbs.network-hdd.allocated','nbs.network-nvme.allocated','network.egress.inet','network.egress.lb','network.ingress.inet','network.ingress.inet.antiddos.qrator','network.public_fips','network.public_fips.deallocated','network.public_fips.lb','network.public_fips.lb.deallocated','nlb.balancer.active','nlb.balancer.allocated','nlb.vip_bytes.ingress','storage.api.delete','storage.api.get.cold','storage.api.get.standard','storage.api.get_old.cold','storage.api.head.cold','storage.api.head.standard','storage.api.network.cloud.egress','storage.api.network.cloud.ingress','storage.api.network.inet.egress','storage.api.network.inet.ingress','storage.api.options.standard','storage.api.post.cold','storage.api.post.standard','storage.api.put.cold','storage.api.put.standard','storage.api.put_old.cold','storage.api.put_old.standard','storage.bucket.used_space.cold','storage.bucket.used_space.standard','ymq.alpha.queue.fifo.requests','ymq.alpha.queue.other.requests','ymq.alpha.queue.std.requests','ymq.network.cloud.egress','ymq.network.cloud.ingress','ymq.network.inet.egress','ymq.network.inet.ingress','ymq.network.yandex.egress','ymq.network.yandex.ingress','ymq.queue.fifo.requests','ymq.queue.other.requests','ymq.queue.std.requests'], sku_name)=1     AND has(['individual','company','','switzerland_nonresident_company'], person_type)=1     AND has(['paid','trial','disabled'], usage_status)=1     AND has(['active'], state)=1     AND has(['','Unlocked','antifraud','debt','manual','mining','threshold','trial_expired','unbound_card'], block_reason)=1     AND has(['','5','10','20','50','100'], core_fraction)=1     AND has(['','preemptible'], preemptible)=1     AND has(['','v1','v2'], platform)=1     AND has(['','mysql','pg','clickhouse','mongo','redis','ms_sql'], database)=1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')   GROUP BY c1,c2,c3, date    ) GROUP BY  c1,c2,c3 ORDER BY \"2019-06-01 to 2019-06-30\" DESC Limit 1000 UNION All  SELECT  'z.Total' N,         'z.Total' \"segment\",         'z.Total' \"size\",         'z.Total' \"total\",         sumIf(sum_cost, date>='2019-05-01 00:00:00' AND date<'2019-06-01 00:00:00') as prev_period,         sumIf(sum_cost, date>='2019-06-01 00:00:00' AND date<'2019-07-01 00:00:00') as period,         period - prev_period as prev_week_growth,         period/prev_period -1 as growth_pct FROM(    SELECT     date,     segment as c1,     size as c2,     total as c3,     sum(cons_sum) as sum_cost   FROM cloud_analytics.consumption_daily_v2_1   WHERE has(['trial','paid'], cons_type) = 1     AND has(['','csm','enterprise','isv','isv_large','isv_ml','unmanaged','var'], segment)=1     AND has(['','admin','alexche','anbalu','andreigusev','datishin','dmtroe','ebelobrova','flekon','gingerkote','glebmarkevich','golubin','kalifornia','marinapolik','mashmellow','moiseeva-m','niktk','obelkin','timag','unmanaged','victorbutenko','voytko'], sales_name)=1     AND has(['small','micro','unknown','medium','large'], size)=1     AND has(['Direct','Emailing','Organic Search','Other','Perfomance','Referrals','Sales','Social','Unknown','Yandex Portal','unknown'], channel)=1     AND has(['compute','mdb','network','storage','ai','cr','nlb','ymq'], service_name)=1     AND has(['','active','allocated','clickhouse','cpu','dataproc','delete','egress_inet','egress_lb','fifo','fips','get','gpu','head','image','ingress','ingress_inet','ingress_qrator','local_nvme','locator','mongo','ms_sql','mt','mysql','nbs_hdd','nbs_nvme','network','network-hdd','network-nvme','options','other','pg','posr','post','public_ip','put','ram','redis','snapshot','speech','std','storage','used_space','vision','windows','ymq'], subservice_name)=1     AND has(['ai.locator','ai.mt.detect','ai.mt.translate','ai.speech.stt','ai.speech.stt_long_running','ai.speech.tts','ai.vision.classification','ai.vision.face_detection','ai.vision.text_detection','compute.image','compute.snapshot','compute.vm.cpu.50.mdb.v2','compute.vm.cpu.50.v2','compute.vm.cpu.c05','compute.vm.cpu.c05.mdb.v1','compute.vm.cpu.c05.mdb.v2','compute.vm.cpu.c05.preemptible','compute.vm.cpu.c05.preemptible.v2','compute.vm.cpu.c05.v2','compute.vm.cpu.c100','compute.vm.cpu.c100.gpu-standard','compute.vm.cpu.c100.mdb.v1','compute.vm.cpu.c100.mdb.v2','compute.vm.cpu.c100.preemptible','compute.vm.cpu.c100.preemptible.v2','compute.vm.cpu.c100.v2','compute.vm.cpu.c20','compute.vm.cpu.c20.mdb.v1','compute.vm.cpu.c20.mdb.v2','compute.vm.cpu.c20.preemptible','compute.vm.cpu.c20.preemptible.v2','compute.vm.cpu.c20.v2','compute.vm.cpu.c50.preemptible.v2','compute.vm.gpu.gpu-standard','compute.vm.ram','compute.vm.ram.gpu-standard','compute.vm.ram.mdb.v1','compute.vm.ram.mdb.v2','compute.vm.ram.preemptible','compute.vm.ram.preemptible.v2','compute.vm.ram.v2','cr.api.delete','cr.api.get.standard','cr.api.network.cloud.egress','cr.api.network.cloud.ingress','cr.api.network.inet.egress','cr.api.network.inet.ingress','cr.api.post.standard','cr.api.put.standard','cr.bucket.used_space.standard','dummy','marketplace.ms.sql.standard','marketplace.windows.cpu.c05','marketplace.windows.cpu.c100','mdb.cluster.clickhouse.b1.medium','mdb.cluster.clickhouse.b1.micro','mdb.cluster.clickhouse.b1.nano','mdb.cluster.clickhouse.b2.medium','mdb.cluster.clickhouse.b2.micro','mdb.cluster.clickhouse.b2.nano','mdb.cluster.clickhouse.large','mdb.cluster.clickhouse.m1.micro','mdb.cluster.clickhouse.medium','mdb.cluster.clickhouse.micro','mdb.cluster.clickhouse.nano','mdb.cluster.clickhouse.s2.3xlarge','mdb.cluster.clickhouse.s2.medium','mdb.cluster.clickhouse.s2.micro','mdb.cluster.clickhouse.s2.small','mdb.cluster.clickhouse.small','mdb.cluster.clickhouse.xlarge','mdb.cluster.local-nvme','mdb.cluster.local-nvme.ch','mdb.cluster.local-nvme.mongodb','mdb.cluster.local-nvme.mysql','mdb.cluster.local-nvme.pg','mdb.cluster.mongodb.b1.micro','mdb.cluster.mongodb.b1.nano','mdb.cluster.mongodb.b2.medium','mdb.cluster.mongodb.b2.micro','mdb.cluster.mongodb.b2.nano','mdb.cluster.mongodb.medium','mdb.cluster.mongodb.micro','mdb.cluster.mongodb.nano','mdb.cluster.mongodb.s2.medium','mdb.cluster.mongodb.s2.micro','mdb.cluster.mongodb.s2.small','mdb.cluster.mongodb.s2.xlarge','mdb.cluster.mongodb.small','mdb.cluster.mysql.b1.medium','mdb.cluster.mysql.b1.micro','mdb.cluster.mysql.b1.nano','mdb.cluster.mysql.b2.medium','mdb.cluster.mysql.b2.micro','mdb.cluster.mysql.b2.nano','mdb.cluster.mysql.m1.micro','mdb.cluster.mysql.m2.micro','mdb.cluster.mysql.m2.small','mdb.cluster.mysql.medium','mdb.cluster.mysql.micro','mdb.cluster.mysql.nano','mdb.cluster.mysql.s2.3xlarge','mdb.cluster.mysql.s2.large','mdb.cluster.mysql.s2.medium','mdb.cluster.mysql.s2.micro','mdb.cluster.mysql.s2.small','mdb.cluster.mysql.s2.xlarge','mdb.cluster.mysql.small','mdb.cluster.network-hdd.ch','mdb.cluster.network-hdd.mongodb','mdb.cluster.network-hdd.mysql','mdb.cluster.network-hdd.pg','mdb.cluster.network-nvme','mdb.cluster.network-nvme.ch','mdb.cluster.network-nvme.mongodb','mdb.cluster.network-nvme.mysql','mdb.cluster.network-nvme.pg','mdb.cluster.network-nvme.redis','mdb.cluster.pg.b1.medium','mdb.cluster.pg.b1.micro','mdb.cluster.pg.b1.nano','mdb.cluster.pg.b2.medium','mdb.cluster.pg.b2.micro','mdb.cluster.pg.b2.nano','mdb.cluster.pg.large','mdb.cluster.pg.m2.micro','mdb.cluster.pg.medium','mdb.cluster.pg.micro','mdb.cluster.pg.nano','mdb.cluster.pg.s2.medium','mdb.cluster.pg.s2.micro','mdb.cluster.pg.s2.small','mdb.cluster.pg.small','mdb.cluster.public_ip','mdb.cluster.redis.b1.nano','mdb.cluster.redis.b1.small','mdb.cluster.redis.hm1.2xlarge','mdb.cluster.redis.hm1.9xlarge','mdb.cluster.redis.hm1.large','mdb.cluster.redis.hm1.medium','mdb.cluster.redis.hm1.micro','mdb.cluster.redis.hm1.nano','mdb.cluster.redis.hm1.small','mdb.cluster.redis.hm1.xlarge','mdb.dataproc.cpu.c100','mdb.dataproc.cpu.c50','mdb.mongocfg.s1.nano','mdb.mongocfg.s2.xlarge','mdb.mongos.s1.nano','mdb.mongos.s1.xlarge','mdb.zk.clickhouse.nano','mdb.zk.clickhouse.s2.medium','mdb.zk.clickhouse.s2.micro','monitoring.point.dgauge.write','nbs.network-hdd.allocated','nbs.network-nvme.allocated','network.egress.inet','network.egress.lb','network.ingress.inet','network.ingress.inet.antiddos.qrator','network.public_fips','network.public_fips.deallocated','network.public_fips.lb','network.public_fips.lb.deallocated','nlb.balancer.active','nlb.balancer.allocated','nlb.vip_bytes.ingress','storage.api.delete','storage.api.get.cold','storage.api.get.standard','storage.api.get_old.cold','storage.api.head.cold','storage.api.head.standard','storage.api.network.cloud.egress','storage.api.network.cloud.ingress','storage.api.network.inet.egress','storage.api.network.inet.ingress','storage.api.options.standard','storage.api.post.cold','storage.api.post.standard','storage.api.put.cold','storage.api.put.standard','storage.api.put_old.cold','storage.api.put_old.standard','storage.bucket.used_space.cold','storage.bucket.used_space.standard','ymq.alpha.queue.fifo.requests','ymq.alpha.queue.other.requests','ymq.alpha.queue.std.requests','ymq.network.cloud.egress','ymq.network.cloud.ingress','ymq.network.inet.egress','ymq.network.inet.ingress','ymq.network.yandex.egress','ymq.network.yandex.ingress','ymq.queue.fifo.requests','ymq.queue.other.requests','ymq.queue.std.requests'], sku_name)=1     AND has(['individual','company','','switzerland_nonresident_company'], person_type)=1     AND has(['paid','trial','disabled'], usage_status)=1     AND has(['active'], state)=1     AND has(['','Unlocked','antifraud','debt','manual','mining','threshold','trial_expired','unbound_card'], block_reason)=1     AND has(['','5','10','20','50','100'], core_fraction)=1     AND has(['','preemptible'], preemptible)=1     AND has(['','v1','v2'], platform)=1     AND has(['','mysql','pg','clickhouse','mongo','redis','ms_sql'], database)=1     AND (has(['All'], billing_account_id) = 1 OR 'All' = 'All')   GROUP BY c1,c2,c3, date )",
          "refId": "A",
          "round": "0s"
        }
      ],
      "title": "Revenue Dynamics: Breakdown by Clients",
      "transform": "table",
      "type": "table"
    }
  ],
  "refresh": false,
  "schemaVersion": 18,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "text": "consumption_daily_v2_1",
          "value": "consumption_daily_v2_1"
        },
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "data_source",
        "options": [
          {
            "selected": true,
            "text": "consumption_daily_v2_1",
            "value": "consumption_daily_v2_1"
          }
        ],
        "query": "consumption_daily_v2_1",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "tags": [],
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "consumption_type",
        "options": [
          {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "trial",
            "value": "trial"
          },
          {
            "selected": true,
            "text": "paid",
            "value": "paid"
          }
        ],
        "query": "trial,paid",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "tags": [],
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT segment FROM cloud_analytics.consumption_daily_v2_1",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "segment",
        "options": [
          {
            "selected": true,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "",
            "value": ""
          },
          {
            "selected": false,
            "text": "csm",
            "value": "csm"
          },
          {
            "selected": false,
            "text": "enterprise",
            "value": "enterprise"
          },
          {
            "selected": false,
            "text": "isv",
            "value": "isv"
          },
          {
            "selected": false,
            "text": "isv_large",
            "value": "isv_large"
          },
          {
            "selected": false,
            "text": "isv_ml",
            "value": "isv_ml"
          },
          {
            "selected": false,
            "text": "unmanaged",
            "value": "unmanaged"
          },
          {
            "selected": false,
            "text": "var",
            "value": "var"
          }
        ],
        "query": "SELECT DISTINCT segment FROM cloud_analytics.consumption_daily_v2_1",
        "refresh": 0,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT sales_name FROM cloud_analytics.consumption_daily_v2_1 WHERE has([$segment], segment) = 1",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "sales_name",
        "options": [],
        "query": "SELECT DISTINCT sales_name FROM cloud_analytics.consumption_daily_v2_1 WHERE has([$segment], segment) = 1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT size FROM cloud_analytics.consumption_daily_v2_1",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "size",
        "options": [],
        "query": "SELECT DISTINCT size FROM cloud_analytics.consumption_daily_v2_1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT channel from cloud_analytics.consumption_daily",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "channel",
        "options": [],
        "query": "SELECT DISTINCT channel from cloud_analytics.consumption_daily",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT service_name FROM cloud_analytics.consumption_daily_v2_1",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "service_name",
        "options": [
          {
            "selected": true,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "compute",
            "value": "compute"
          },
          {
            "selected": false,
            "text": "mdb",
            "value": "mdb"
          },
          {
            "selected": false,
            "text": "network",
            "value": "network"
          },
          {
            "selected": false,
            "text": "storage",
            "value": "storage"
          },
          {
            "selected": false,
            "text": "ai",
            "value": "ai"
          },
          {
            "selected": false,
            "text": "cr",
            "value": "cr"
          },
          {
            "selected": false,
            "text": "nlb",
            "value": "nlb"
          },
          {
            "selected": false,
            "text": "ymq",
            "value": "ymq"
          }
        ],
        "query": "SELECT DISTINCT service_name FROM cloud_analytics.consumption_daily_v2_1",
        "refresh": 0,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT subservice_name FROM cloud_analytics.consumption_daily_v2_1 WHERE has([$service_name], service_name) =1",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "subservice_name",
        "options": [],
        "query": "SELECT DISTINCT subservice_name FROM cloud_analytics.consumption_daily_v2_1 WHERE has([$service_name], service_name) =1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT sku_name FROM cloud_analytics.consumption_daily_v2_1 WHERE service_name in ($service_name) AND subservice_name in ($subservice_name)",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "sku_name",
        "options": [],
        "query": "SELECT DISTINCT sku_name FROM cloud_analytics.consumption_daily_v2_1 WHERE service_name in ($service_name) AND subservice_name in ($subservice_name)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT person_type FROM cloud_analytics.consumption_daily_v2_1",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "person_type",
        "options": [],
        "query": "SELECT DISTINCT person_type FROM cloud_analytics.consumption_daily_v2_1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "paid + trial + disabled",
          "value": [
            "paid",
            "trial",
            "disabled"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT usage_status FROM cloud_analytics.consumption_daily_v2_1",
        "hide": 0,
        "includeAll": true,
        "label": "Usage Status",
        "multi": true,
        "name": "usage_status",
        "options": [],
        "query": "SELECT DISTINCT usage_status FROM cloud_analytics.consumption_daily_v2_1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "active",
          "value": "active"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT state FROM cloud_analytics.consumption_daily_v2_1",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "state",
        "options": [],
        "query": "SELECT DISTINCT state FROM cloud_analytics.consumption_daily_v2_1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT block_reason FROM cloud_analytics.consumption_daily_v2_1 ",
        "hide": 0,
        "includeAll": true,
        "label": "",
        "multi": true,
        "name": "block_reason",
        "options": [],
        "query": "SELECT DISTINCT block_reason FROM cloud_analytics.consumption_daily_v2_1 ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-06-01 00:00:00",
          "value": "2019-06-01 00:00:00"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT toDateTime(concat('$period1_date', ' 00:00:00'))",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "period1",
        "options": [],
        "query": "SELECT toDateTime(concat('$period1_date', ' 00:00:00'))",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 2,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-05-01 00:00:00",
          "value": "2019-05-01 00:00:00"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT multiIf('$aggr_period'='week', addWeeks(toDateTime('$period1'),-1), '$aggr_period'='month', addMonths(toDateTime('$period1'),-1), '$aggr_period'='quarter', addQuarters(toDateTime('$period1'),-1), addDays(toDateTime('$period1'),if('$aggr_period'='rolling_7days',-7,if('$aggr_period'='rolling_14days',-14,if('$aggr_period'='rolling_28days',-28,-1)))))",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "prev_period",
        "options": [
          {
            "selected": false,
            "text": "2019-06-01 00:00:00",
            "value": "2019-06-01 00:00:00"
          }
        ],
        "query": "SELECT multiIf('$aggr_period'='week', addWeeks(toDateTime('$period1'),-1), '$aggr_period'='month', addMonths(toDateTime('$period1'),-1), '$aggr_period'='quarter', addQuarters(toDateTime('$period1'),-1), addDays(toDateTime('$period1'),if('$aggr_period'='rolling_7days',-7,if('$aggr_period'='rolling_14days',-14,if('$aggr_period'='rolling_28days',-28,-1)))))",
        "refresh": 0,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-07-01 00:00:00",
          "value": "2019-07-01 00:00:00"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT multiIf('$aggr_period'='week', addWeeks(toDateTime('$period1'),1), '$aggr_period'='month', addMonths(toDateTime('$period1'),1), '$aggr_period'='quarter', addQuarters(toDateTime('$period1'),1),addDays(toDateTime('$period1'),if( '$aggr_period'='rolling_7days',7,if( '$aggr_period'='rolling_14days',14, if( '$aggr_period'='rolling_28days',28,1)))))",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "period1_end",
        "options": [
          {
            "selected": false,
            "text": "2019-08-01 00:00:00",
            "value": "2019-08-01 00:00:00"
          }
        ],
        "query": "SELECT multiIf('$aggr_period'='week', addWeeks(toDateTime('$period1'),1), '$aggr_period'='month', addMonths(toDateTime('$period1'),1), '$aggr_period'='quarter', addQuarters(toDateTime('$period1'),1),addDays(toDateTime('$period1'),if( '$aggr_period'='rolling_7days',7,if( '$aggr_period'='rolling_14days',14, if( '$aggr_period'='rolling_28days',28,1)))))",
        "refresh": 0,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-06-30",
          "value": "2019-06-30"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT addDays(toDate('$period1_end'), -1)",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "period1_end_date",
        "options": [
          {
            "selected": false,
            "text": "2019-07-31",
            "value": "2019-07-31"
          }
        ],
        "query": "SELECT addDays(toDate('$period1_end'), -1)",
        "refresh": 0,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-05-01",
          "value": "2019-05-01"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT toDate('$prev_period')",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "prev_period_date",
        "options": [
          {
            "selected": false,
            "text": "2019-06-01",
            "value": "2019-06-01"
          }
        ],
        "query": "SELECT toDate('$prev_period')",
        "refresh": 0,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-05-31",
          "value": "2019-05-31"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT addDays(toDate('$period1_date'),-1)",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "prev_period_end_date",
        "options": [],
        "query": "SELECT addDays(toDate('$period1_date'),-1)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT core_fraction FROM cloud_analytics.consumption_daily_v2_1",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "core_fraction",
        "options": [],
        "query": "SELECT DISTINCT core_fraction FROM cloud_analytics.consumption_daily_v2_1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 3,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT preemptible FROM cloud_analytics.consumption_daily_v2_1",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "preemptible",
        "options": [],
        "query": "SELECT DISTINCT preemptible FROM cloud_analytics.consumption_daily_v2_1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT platform FROM cloud_analytics.consumption_daily_v2_1",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "platform",
        "options": [],
        "query": "SELECT DISTINCT platform FROM cloud_analytics.consumption_daily_v2_1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT database FROM cloud_analytics.consumption_daily_v2_1",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "database",
        "options": [],
        "query": "SELECT DISTINCT database FROM cloud_analytics.consumption_daily_v2_1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": "'All'",
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT billing_account_id FROM cloud_analytics.consumption_daily_v2_1 WHERE has([$consumption_type], cons_type) = 1 AND has([$segment], segment)=1 AND has([$sales_name], sales_name)=1 AND has([$size], size)=1 AND has([$channel], channel)=1 AND has([$service_name], service_name)=1 AND has([$person_type], person_type)=1 AND has([$usage_status], usage_status)=1 AND has([$state], state)=1 AND has([$block_reason], block_reason)=1 AND has([$core_fraction], core_fraction)=1 AND has([$preemptible], preemptible)=1 AND has([$platform], platform)=1 AND has([$database], database)=1",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "billing_account_id",
        "options": [],
        "query": "SELECT DISTINCT billing_account_id FROM cloud_analytics.consumption_daily_v2_1 WHERE has([$consumption_type], cons_type) = 1 AND has([$segment], segment)=1 AND has([$sales_name], sales_name)=1 AND has([$size], size)=1 AND has([$channel], channel)=1 AND has([$service_name], service_name)=1 AND has([$person_type], person_type)=1 AND has([$usage_status], usage_status)=1 AND has([$state], state)=1 AND has([$block_reason], block_reason)=1 AND has([$core_fraction], core_fraction)=1 AND has([$preemptible], preemptible)=1 AND has([$platform], platform)=1 AND has([$database], database)=1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "tags": [],
          "text": "month",
          "value": "month"
        },
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "aggr_period",
        "options": [
          {
            "selected": false,
            "text": "day",
            "value": "day"
          },
          {
            "selected": false,
            "text": "week",
            "value": "week"
          },
          {
            "selected": true,
            "text": "month",
            "value": "month"
          },
          {
            "selected": false,
            "text": "quarter",
            "value": "quarter"
          },
          {
            "selected": false,
            "text": "rolling_7days",
            "value": "rolling_7days"
          },
          {
            "selected": false,
            "text": "rolling_14days",
            "value": "rolling_14days"
          },
          {
            "selected": false,
            "text": "rolling_28days",
            "value": "rolling_28days"
          }
        ],
        "query": "day,week,month,quarter,rolling_7days,rolling_14days,rolling_28days",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "tags": [],
          "text": "2019-06-01",
          "value": "2019-06-01"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT toDate(multiIf('$aggr_period' = 'week', toMonday(date), '$aggr_period' = 'month', toStartOfMonth(date), '$aggr_period' = 'quarter', toStartOfQuarter(date), date)) FROM cloud_analytics.consumption_daily_v2_1",
        "hide": 0,
        "includeAll": false,
        "label": "period_start_date",
        "multi": false,
        "name": "period1_date",
        "options": [
          {
            "selected": false,
            "text": "2019-07-01",
            "value": "2019-07-01"
          },
          {
            "selected": true,
            "text": "2019-06-01",
            "value": "2019-06-01"
          },
          {
            "selected": false,
            "text": "2019-05-01",
            "value": "2019-05-01"
          },
          {
            "selected": false,
            "text": "2019-04-01",
            "value": "2019-04-01"
          },
          {
            "selected": false,
            "text": "2019-03-01",
            "value": "2019-03-01"
          },
          {
            "selected": false,
            "text": "2019-02-01",
            "value": "2019-02-01"
          },
          {
            "selected": false,
            "text": "2019-01-01",
            "value": "2019-01-01"
          },
          {
            "selected": false,
            "text": "2018-12-01",
            "value": "2018-12-01"
          },
          {
            "selected": false,
            "text": "2018-11-01",
            "value": "2018-11-01"
          },
          {
            "selected": false,
            "text": "2018-10-01",
            "value": "2018-10-01"
          },
          {
            "selected": false,
            "text": "2018-09-01",
            "value": "2018-09-01"
          }
        ],
        "query": "SELECT DISTINCT toDate(multiIf('$aggr_period' = 'week', toMonday(date), '$aggr_period' = 'month', toStartOfMonth(date), '$aggr_period' = 'quarter', toStartOfQuarter(date), date)) FROM cloud_analytics.consumption_daily_v2_1",
        "refresh": 0,
        "regex": "",
        "skipUrlSync": false,
        "sort": 2,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "tags": [],
          "text": "segment",
          "value": "segment"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Column 1",
        "multi": false,
        "name": "dimension",
        "options": [
          {
            "selected": true,
            "text": "total",
            "value": "total"
          },
          {
            "selected": false,
            "text": "cons_type",
            "value": "cons_type"
          },
          {
            "selected": false,
            "text": "segment",
            "value": "segment"
          },
          {
            "selected": false,
            "text": "sales_name",
            "value": "sales_name"
          },
          {
            "selected": false,
            "text": "size",
            "value": "size"
          },
          {
            "selected": false,
            "text": "channel",
            "value": "channel"
          },
          {
            "selected": false,
            "text": "service_name",
            "value": "service_name"
          },
          {
            "selected": false,
            "text": "subservice_name",
            "value": "subservice_name"
          },
          {
            "selected": false,
            "text": "sku_name",
            "value": "sku_name"
          },
          {
            "selected": false,
            "text": "person_type",
            "value": "person_type"
          },
          {
            "selected": false,
            "text": "usage_status",
            "value": "usage_status"
          },
          {
            "selected": false,
            "text": "state",
            "value": "state"
          },
          {
            "selected": false,
            "text": "block_reason",
            "value": "block_reason"
          },
          {
            "selected": false,
            "text": "core_fraction",
            "value": "core_fraction"
          },
          {
            "selected": false,
            "text": "preemptible",
            "value": "preemptible"
          },
          {
            "selected": false,
            "text": "platform",
            "value": "platform"
          },
          {
            "selected": false,
            "text": "database",
            "value": "database"
          },
          {
            "selected": false,
            "text": "billing_account_id",
            "value": "billing_account_id"
          },
          {
            "selected": false,
            "text": "client_name",
            "value": "client_name"
          }
        ],
        "query": "total,cons_type,segment,sales_name,size,channel,service_name,subservice_name,sku_name,person_type,usage_status,state,block_reason,core_fraction,preemptible,platform,database,billing_account_id,client_name",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "tags": [],
          "text": "size",
          "value": "size"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Column 2",
        "multi": false,
        "name": "dimension2",
        "options": [
          {
            "selected": true,
            "text": "total",
            "value": "total"
          },
          {
            "selected": false,
            "text": "cons_type",
            "value": "cons_type"
          },
          {
            "selected": false,
            "text": "segment",
            "value": "segment"
          },
          {
            "selected": false,
            "text": "sales_name",
            "value": "sales_name"
          },
          {
            "selected": false,
            "text": "size",
            "value": "size"
          },
          {
            "selected": false,
            "text": "channel",
            "value": "channel"
          },
          {
            "selected": false,
            "text": "service_name",
            "value": "service_name"
          },
          {
            "selected": false,
            "text": "subservice_name",
            "value": "subservice_name"
          },
          {
            "selected": false,
            "text": "sku_name",
            "value": "sku_name"
          },
          {
            "selected": false,
            "text": "person_type",
            "value": "person_type"
          },
          {
            "selected": false,
            "text": "usage_status",
            "value": "usage_status"
          },
          {
            "selected": false,
            "text": "state",
            "value": "state"
          },
          {
            "selected": false,
            "text": "block_reason",
            "value": "block_reason"
          },
          {
            "selected": false,
            "text": "core_fraction",
            "value": "core_fraction"
          },
          {
            "selected": false,
            "text": "preemptible",
            "value": "preemptible"
          },
          {
            "selected": false,
            "text": "platform",
            "value": "platform"
          },
          {
            "selected": false,
            "text": "database",
            "value": "database"
          },
          {
            "selected": false,
            "text": "billing_account_id",
            "value": "billing_account_id"
          },
          {
            "selected": false,
            "text": "client_name",
            "value": "client_name"
          }
        ],
        "query": "total,cons_type,segment,sales_name,size,channel,service_name,subservice_name,sku_name,person_type,usage_status,state,block_reason,core_fraction,preemptible,platform,database,billing_account_id,client_name",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "tags": [],
          "text": "total",
          "value": "total"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Column 3",
        "multi": false,
        "name": "dimension3",
        "options": [
          {
            "selected": false,
            "text": "total",
            "value": "total"
          },
          {
            "selected": false,
            "text": "cons_type",
            "value": "cons_type"
          },
          {
            "selected": false,
            "text": "segment",
            "value": "segment"
          },
          {
            "selected": false,
            "text": "sales_name",
            "value": "sales_name"
          },
          {
            "selected": false,
            "text": "size",
            "value": "size"
          },
          {
            "selected": false,
            "text": "channel",
            "value": "channel"
          },
          {
            "selected": false,
            "text": "service_name",
            "value": "service_name"
          },
          {
            "selected": false,
            "text": "subservice_name",
            "value": "subservice_name"
          },
          {
            "selected": true,
            "text": "sku_name",
            "value": "sku_name"
          },
          {
            "selected": false,
            "text": "person_type",
            "value": "person_type"
          },
          {
            "selected": false,
            "text": "usage_status",
            "value": "usage_status"
          },
          {
            "selected": false,
            "text": "state",
            "value": "state"
          },
          {
            "selected": false,
            "text": "block_reason",
            "value": "block_reason"
          },
          {
            "selected": false,
            "text": "core_fraction",
            "value": "core_fraction"
          },
          {
            "selected": false,
            "text": "preemptible",
            "value": "preemptible"
          },
          {
            "selected": false,
            "text": "platform",
            "value": "platform"
          },
          {
            "selected": false,
            "text": "database",
            "value": "database"
          },
          {
            "selected": false,
            "text": "billing_account_id",
            "value": "billing_account_id"
          },
          {
            "selected": false,
            "text": "client_name",
            "value": "client_name"
          }
        ],
        "query": "total,cons_type,segment,sales_name,size,channel,service_name,subservice_name,sku_name,person_type,usage_status,state,block_reason,core_fraction,preemptible,platform,database,billing_account_id,client_name",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-90d",
    "to": "now+1d"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Cloud Consumption v2 Table",
  "uid": "ut5TjQ4Zz",
  "version": 58
}
