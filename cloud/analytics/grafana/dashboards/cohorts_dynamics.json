{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 104642,
  "iteration": 1564132576575,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 11,
      "panels": [],
      "title": "Важно",
      "type": "row"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "ch_cloud_analytics",
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 0,
        "y": 1
      },
      "id": 9,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "metadata_modification_time",
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "table",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT metadata_modification_time FROM system.tables \nWHERE name = 'funnel_events'\nAND database = 'cloud_analytics'",
          "rawQuery": "SELECT metadata_modification_time FROM system.tables  WHERE name = 'funnel_events' AND database = 'cloud_analytics'",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": "",
      "title": "Дата и время последнего обновления",
      "transparent": true,
      "type": "singlestat",
      "valueFontSize": "50%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "content": "\n## Если у Вас что-то не работает или Вам не хватает функциональности, пожалуйста, [дайте нам знать](https://forms.yandex-team.ru/surveys/21421/).\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 19,
        "x": 5,
        "y": 1
      },
      "id": 17,
      "links": [],
      "mode": "markdown",
      "timeFrom": null,
      "timeShift": null,
      "title": "Обратная связь",
      "transparent": true,
      "type": "text"
    },
    {
      "content": "Динамика численности когорт, дошедших до определенной стадии воронки. Шаг - одна неделя. Воронка простраивается по passport_uid'у.\n\nСтадии (события) воронки:\n  * Cloud Created - владелец данного passport_uid'а зашел в консоль и создал облако;\n  * BA Created - владелец данного passport_uid'а создал платежный аккаунт;\n  * First Consumption - владелец данного passport_uid'а начал потребление;\n  * Active Consumption - владелец данного passport_uid'а считается активным, если на неделе t он хотя бы в один день потребил 10 рублей и более;\n  * First Paid Consumption - владелец данного passport_uid'а начал платное потребление;\n  * Active Paid Consumption - владелец данного passport_uid'а считается активным, если на неделе t он хотя бы в один день потребил платно 10 рублей и более.\n\nМожно выбирать следующие тэги в качестве когорт:\n  * total - фиктивная когорта, включает в себя всех пользователей\n  * week/month - неделя/месяц регистрации в Облаке;\n  * segment/ba_curr_state_extended/sales_person/channel - сегмент/статус биллинга/сейлз/канал привлечения для данного пользователя;\n\nМожно выбрать тип отображения:\n  * real - кол-во пользователей, достигших определенной стадии воронки\n  * pct_to_cloud - процент пользователей достигших определенной стадии воронки от кол-ва пользователей, зарегистрировашихся в Облаке\n  * pct_to_ba - процент пользователей достигших определенной стадии воронки от кол-ва пользователей, создавших BA в Облаке\n  * pct_to_prev - процент пользователей, достигших определенной стадии воронек от кол-ва пользователей, достигших предыдущего шага. \n  Последовательность следующая: Cloud Created, BA Created/Cloud Created, First Consumption/BA Created, Active Consumption/First Consumption, First Paid Consumption/First Consumption, Active Paid Consumption/First Paid Consumption\n\nТакже можно фильтровать данные по месяцу регистрации в Облаке (month), сегменту (segment), статусу биллинга (ba_curr_state_extended) и каналу привлечения (channel)",
      "gridPos": {
        "h": 9,
        "w": 18,
        "x": 0,
        "y": 3
      },
      "id": 15,
      "links": [],
      "mode": "markdown",
      "title": "Disclaimer",
      "type": "text"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 12
      },
      "id": 13,
      "panels": [],
      "title": "Cohorts Dynamics",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 13
      },
      "id": 2,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 2,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 3,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT\nt, groupArray(($cohort, cloud_created))\nFROM (\n  SELECT \n    toInt64(t)*1000 as t,\n    $cohort,\n    sum(cloud_created) as cloud_created\n  FROM\n    cloud_analytics.funnel_grouped\n  WHERE\n    has([$month], month ) = 1\n    AND has([$segment], segment ) = 1\n    AND has([$ba_curr_state], ba_curr_state_extended ) = 1\n    AND has([$channel], channel) = 1\n    AND has([$person_type], person_type) = 1\n  GROUP BY\n    t, \n    $cohort\n)\nGROUP BY t\nORDER BY t",
          "rawQuery": "SELECT t, groupArray((week, cloud_created)) FROM (   SELECT      toInt64(t)*1000 as t,     week,     sum(cloud_created) as cloud_created   FROM     cloud_analytics.funnel_grouped   WHERE     has(['2019-03','2019-02','2019-01'], month ) = 1     AND has(['enterprise','isv','mass','yandex'], segment ) = 1     AND has(['active','not_created','payment_not_confirmed','payment_required'], ba_curr_state_extended ) = 1     AND has(['Direct','Emailing','Organic Search','Other','Perfomance','Referrals','Sales','Social','Unknown','Yandex Portal'], channel) = 1     AND has(['not_created','individual','company','switzerland_nonresident_company','other'], person_type) = 1   GROUP BY     t,      week ) GROUP BY t ORDER BY t",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Cloud Created",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 13
      },
      "id": 3,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 2,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 3,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT\nt, groupArray(($cohort, ba_created))\nFROM (\n  SELECT \n    toInt64(t)*1000 as t,\n    $cohort,\n    multiIf('$type' = 'real', toFloat64(sum(ba_created)), \n            '$type' = 'pct_to_cloud', sum(ba_created)/sum(cloud_created)*100, \n            '$type' = 'pct_to_ba', toFloat64(sum(ba_created)),\n            sum(ba_created)/sum(cloud_created)*100)  as ba_created\n  FROM\n    cloud_analytics.funnel_grouped\n  WHERE\n    has([$month], month ) = 1\n    AND has([$segment], segment ) = 1\n    AND has([$ba_curr_state], ba_curr_state_extended ) = 1\n    AND has([$channel], channel) = 1\n    AND has([$person_type], person_type) = 1\n  GROUP BY\n    t, \n    $cohort\n)\nGROUP BY t\nORDER BY t",
          "rawQuery": "SELECT t, groupArray((week, ba_created)) FROM (   SELECT      toInt64(t)*1000 as t,     week,     multiIf('real' = 'real', toFloat64(sum(ba_created)),              'real' = 'pct_to_cloud', sum(ba_created)/sum(cloud_created)*100,              'real' = 'pct_to_ba', toFloat64(sum(ba_created)),             sum(ba_created)/sum(cloud_created)*100)  as ba_created   FROM     cloud_analytics.funnel_grouped   WHERE     has(['2019-03','2019-02','2019-01'], month ) = 1     AND has(['enterprise','isv','mass','yandex'], segment ) = 1     AND has(['active','not_created','payment_not_confirmed','payment_required'], ba_curr_state_extended ) = 1     AND has(['Direct','Emailing','Organic Search','Other','Perfomance','Referrals','Sales','Social','Unknown','Yandex Portal'], channel) = 1     AND has(['not_created','individual','company','switzerland_nonresident_company','other'], person_type) = 1   GROUP BY     t,      week ) GROUP BY t ORDER BY t",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "BA Created",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 22
      },
      "id": 4,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 2,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 3,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT\nt, groupArray(($cohort, ba_first_consumption))\nFROM (\n  SELECT \n    toInt64(t)*1000 as t,\n    $cohort,\n    multiIf('$type' = 'real', toFloat64(sum(ba_first_consumption)), \n            '$type' = 'pct_to_cloud', sum(ba_first_consumption)/sum(cloud_created)*100, \n            '$type' = 'pct_to_ba', sum(ba_first_consumption)/sum(ba_created)*100,\n            sum(ba_first_consumption)/sum(ba_created)*100)  as ba_first_consumption\n  FROM\n    cloud_analytics.funnel_grouped\n  WHERE\n    has([$month], month ) = 1\n    AND has([$segment], segment ) = 1\n    AND has([$ba_curr_state], ba_curr_state_extended ) = 1\n    AND has([$channel], channel) = 1\n    AND has([$person_type], person_type) = 1\n  GROUP BY\n    t, \n    $cohort\n)\nGROUP BY t\nORDER BY t",
          "rawQuery": "SELECT t, groupArray((week, ba_first_consumption)) FROM (   SELECT      toInt64(t)*1000 as t,     week,     multiIf('real' = 'real', toFloat64(sum(ba_first_consumption)),              'real' = 'pct_to_cloud', sum(ba_first_consumption)/sum(cloud_created)*100,              'real' = 'pct_to_ba', sum(ba_first_consumption)/sum(ba_created)*100,             sum(ba_first_consumption)/sum(ba_created)*100)  as ba_first_consumption   FROM     cloud_analytics.funnel_grouped   WHERE     has(['2019-03','2019-02','2019-01'], month ) = 1     AND has(['enterprise','isv','mass','yandex'], segment ) = 1     AND has(['active','not_created','payment_not_confirmed','payment_required'], ba_curr_state_extended ) = 1     AND has(['Direct','Emailing','Organic Search','Other','Perfomance','Referrals','Sales','Social','Unknown','Yandex Portal'], channel) = 1     AND has(['not_created','individual','company','switzerland_nonresident_company','other'], person_type) = 1   GROUP BY     t,      week ) GROUP BY t ORDER BY t",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "First Trial",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 22
      },
      "id": 5,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 2,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 3,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT\nt, groupArray(($cohort, ba_consumed_last_7days))\nFROM (\n  SELECT \n    toInt64(t)*1000 as t,\n    $cohort,\n    multiIf('$type' = 'real', toFloat64(sum(ba_first_consumption)), \n            '$type' = 'pct_to_cloud', sum(ba_consumed_last_7days)/sum(cloud_created)*100, \n            '$type' = 'pct_to_ba', sum(ba_consumed_last_7days)/sum(ba_created)*100,\n            sum(ba_consumed_last_7days)/sum(ba_first_consumption)*100)  as ba_consumed_last_7days\n  FROM\n    cloud_analytics.funnel_grouped\n  WHERE\n    has([$month], month ) = 1\n    AND has([$segment], segment ) = 1\n    AND has([$ba_curr_state], ba_curr_state_extended ) = 1\n    AND has([$channel], channel) = 1\n    AND has([$person_type], person_type) = 1\n  GROUP BY\n    t, \n    $cohort\n)\nGROUP BY t\nORDER BY t",
          "rawQuery": "SELECT t, groupArray((week, ba_consumed_last_7days)) FROM (   SELECT      toInt64(t)*1000 as t,     week,     multiIf('real' = 'real', toFloat64(sum(ba_first_consumption)),              'real' = 'pct_to_cloud', sum(ba_consumed_last_7days)/sum(cloud_created)*100,              'real' = 'pct_to_ba', sum(ba_consumed_last_7days)/sum(ba_created)*100,             sum(ba_consumed_last_7days)/sum(ba_first_consumption)*100)  as ba_consumed_last_7days   FROM     cloud_analytics.funnel_grouped   WHERE     has(['2019-03','2019-02','2019-01'], month ) = 1     AND has(['enterprise','isv','mass','yandex'], segment ) = 1     AND has(['active','not_created','payment_not_confirmed','payment_required'], ba_curr_state_extended ) = 1     AND has(['Direct','Emailing','Organic Search','Other','Perfomance','Referrals','Sales','Social','Unknown','Yandex Portal'], channel) = 1     AND has(['not_created','individual','company','switzerland_nonresident_company','other'], person_type) = 1   GROUP BY     t,      week ) GROUP BY t ORDER BY t",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Active Consumption",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 31
      },
      "id": 7,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 2,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 3,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT\nt, groupArray(($cohort, ba_first_paid_consumption))\nFROM (\n  SELECT \n    toInt64(t)*1000 as t,\n    $cohort,\n    multiIf('$type' = 'real', toFloat64(sum(ba_first_paid_consumption)), \n            '$type' = 'pct_to_cloud', sum(ba_first_paid_consumption)/sum(cloud_created)*100, \n            '$type' = 'pct_to_ba', sum(ba_first_paid_consumption)/sum(ba_created)*100,\n            sum(ba_first_paid_consumption)/sum(ba_first_consumption)*100) as ba_first_paid_consumption\n  FROM\n    cloud_analytics.funnel_grouped\n  WHERE\n    has([$month], month ) = 1\n    AND has([$segment], segment ) = 1\n    AND has([$ba_curr_state], ba_curr_state_extended ) = 1\n    AND has([$channel], channel) = 1\n    AND has([$person_type], person_type) = 1\n  GROUP BY\n    t, \n    $cohort\n)\nGROUP BY t\nORDER BY t",
          "rawQuery": "SELECT t, groupArray((week, ba_first_paid_consumption)) FROM (   SELECT      toInt64(t)*1000 as t,     week,     multiIf('real' = 'real', toFloat64(sum(ba_first_paid_consumption)),              'real' = 'pct_to_cloud', sum(ba_first_paid_consumption)/sum(cloud_created)*100,              'real' = 'pct_to_ba', sum(ba_first_paid_consumption)/sum(ba_created)*100,             sum(ba_first_paid_consumption)/sum(ba_first_consumption)*100) as ba_first_paid_consumption   FROM     cloud_analytics.funnel_grouped   WHERE     has(['2019-03','2019-02','2019-01'], month ) = 1     AND has(['enterprise','isv','mass','yandex'], segment ) = 1     AND has(['active','not_created','payment_not_confirmed','payment_required'], ba_curr_state_extended ) = 1     AND has(['Direct','Emailing','Organic Search','Other','Perfomance','Referrals','Sales','Social','Unknown','Yandex Portal'], channel) = 1     AND has(['not_created','individual','company','switzerland_nonresident_company','other'], person_type) = 1   GROUP BY     t,      week ) GROUP BY t ORDER BY t",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "First Paid",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 31
      },
      "id": 6,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 2,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 3,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT\nt, groupArray(($cohort, ba_consumed_paid_last_7days))\nFROM (\n  SELECT \n    toInt64(t)*1000 as t,\n    $cohort,\n    multiIf('$type' = 'real', toFloat64(sum(ba_consumed_paid_last_7days)), \n            '$type' = 'pct_to_cloud', sum(ba_consumed_paid_last_7days)/sum(cloud_created)*100, \n            '$type' = 'pct_to_ba',sum(ba_consumed_paid_last_7days)/sum(ba_created)*100,\n            sum(ba_consumed_paid_last_7days)/sum(ba_first_paid_consumption)*100)  as ba_consumed_paid_last_7days\n  FROM\n    cloud_analytics.funnel_grouped\n  WHERE\n    has([$month], month ) = 1\n    AND has([$segment], segment ) = 1\n    AND has([$ba_curr_state], ba_curr_state_extended ) = 1\n    AND has([$channel], channel) = 1\n    AND has([$person_type], person_type) = 1\n  GROUP BY\n    t, \n    $cohort\n)\nGROUP BY t\nORDER BY t",
          "rawQuery": "SELECT t, groupArray((week, ba_consumed_paid_last_7days)) FROM (   SELECT      toInt64(t)*1000 as t,     week,     multiIf('real' = 'real', toFloat64(sum(ba_consumed_paid_last_7days)),              'real' = 'pct_to_cloud', sum(ba_consumed_paid_last_7days)/sum(cloud_created)*100,              'real' = 'pct_to_ba',sum(ba_consumed_paid_last_7days)/sum(ba_created)*100,             sum(ba_consumed_paid_last_7days)/sum(ba_first_paid_consumption)*100)  as ba_consumed_paid_last_7days   FROM     cloud_analytics.funnel_grouped   WHERE     has(['2019-03','2019-02','2019-01'], month ) = 1     AND has(['enterprise','isv','mass','yandex'], segment ) = 1     AND has(['active','not_created','payment_not_confirmed','payment_required'], ba_curr_state_extended ) = 1     AND has(['Direct','Emailing','Organic Search','Other','Perfomance','Referrals','Sales','Social','Unknown','Yandex Portal'], channel) = 1     AND has(['not_created','individual','company','switzerland_nonresident_company','other'], person_type) = 1   GROUP BY     t,      week ) GROUP BY t ORDER BY t",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Active Paid Consumption",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "schemaVersion": 18,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "tags": [],
          "text": "week",
          "value": "week"
        },
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "cohort",
        "options": [
          {
            "selected": false,
            "text": "total",
            "value": "total"
          },
          {
            "selected": true,
            "text": "week",
            "value": "week"
          },
          {
            "selected": false,
            "text": "month",
            "value": "month"
          },
          {
            "selected": false,
            "text": "segment",
            "value": "segment"
          },
          {
            "selected": false,
            "text": "ba_curr_state_extended",
            "value": "ba_curr_state_extended"
          },
          {
            "selected": false,
            "text": "sales_person",
            "value": "sales_person"
          },
          {
            "selected": false,
            "text": "channel",
            "value": "channel"
          },
          {
            "selected": false,
            "text": "person_type",
            "value": "person_type"
          }
        ],
        "query": "total,week,month,segment,ba_curr_state_extended,sales_person,channel,person_type",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "tags": [],
          "text": "real",
          "value": "real"
        },
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "type",
        "options": [
          {
            "selected": true,
            "text": "real",
            "value": "real"
          },
          {
            "selected": false,
            "text": "pct_to_cloud",
            "value": "pct_to_cloud"
          },
          {
            "selected": false,
            "text": "pct_to_ba",
            "value": "pct_to_ba"
          },
          {
            "selected": false,
            "text": "pct_to_prev",
            "value": "pct_to_prev"
          }
        ],
        "query": "real,pct_to_cloud,pct_to_ba,pct_to_prev",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-03 + 2019-02 + 2019-01",
          "value": [
            "2019-03",
            "2019-02",
            "2019-01"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT month from cloud_analytics.funnel_events",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "month",
        "options": [],
        "query": "SELECT DISTINCT month from cloud_analytics.funnel_events",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 2,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT segment from cloud_analytics_testing.funnel_events",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "segment",
        "options": [],
        "query": "SELECT DISTINCT segment from cloud_analytics_testing.funnel_events",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "active + not_created + payment_not_confirmed + payment_required",
          "value": [
            "active",
            "not_created",
            "payment_not_confirmed",
            "payment_required"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT ba_curr_state_extended from cloud_analytics_testing.funnel_events",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "ba_curr_state",
        "options": [],
        "query": "SELECT DISTINCT ba_curr_state_extended from cloud_analytics_testing.funnel_events",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT channel FROM cloud_analytics_testing.funnel_events",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "channel",
        "options": [],
        "query": "SELECT DISTINCT channel FROM cloud_analytics_testing.funnel_events",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT person_type FROM cloud_analytics.funnel_events",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "person_type",
        "options": [],
        "query": "SELECT DISTINCT person_type FROM cloud_analytics.funnel_events",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-90d",
    "to": "now+1d"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Cohorts Dynamics",
  "uid": "ymimvV9mk",
  "version": 67
}
