{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "limit": 100,
        "name": "Annotations & Alerts",
        "showIn": 0,
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 171852,
  "iteration": 1564132621525,
  "links": [],
  "panels": [
    {
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 59,
      "title": "Информация о дашборде",
      "type": "row"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "ch_cloud_analytics",
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 0,
        "y": 1
      },
      "id": 55,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "metadata_modification_time",
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "table",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT metadata_modification_time FROM system.tables \nWHERE name = '$data_source'\nAND database = 'cloud_analytics'",
          "rawQuery": "SELECT metadata_modification_time FROM system.tables  WHERE name = 'consumption_daily_v2_1' AND database = 'cloud_analytics'",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": "",
      "title": "Последнее обновление",
      "transparent": true,
      "type": "singlestat",
      "valueFontSize": "50%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "content": "\n## Если у Вас что-то не работает или Вам не хватает функциональности, пожалуйста, [дайте нам знать](https://forms.yandex-team.ru/surveys/21421/).\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 19,
        "x": 4,
        "y": 1
      },
      "id": 57,
      "links": [],
      "mode": "markdown",
      "timeFrom": null,
      "timeShift": null,
      "title": "Обратная связь",
      "transparent": true,
      "type": "text"
    },
    {
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 53,
      "title": "Потребление",
      "type": "row"
    },
    {
      "columns": [],
      "datasource": "ch_cloud_analytics",
      "fontSize": "100%",
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 15,
      "links": [],
      "pageSize": null,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 1,
        "desc": true
      },
      "styles": [
        {
          "alias": "Time",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "date"
        },
        {
          "alias": "",
          "colorMode": "value",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "growth",
          "thresholds": [
            "0",
            "0"
          ],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": "value",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "growth_pct",
          "thresholds": [
            "0",
            "0"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "pattern": "/.*/",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "table",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \n  reverse(replaceAll(toFixedString(reverse(toString(rowNumberInAllBlocks() + 1)), 5), '\\0', '0')) N,\n  master_account_id,\n  master_account_name,\n  billing_account_id BA,\n  client_name \"Компания\",\n  sum_prev_period as \"$prev_period_date to $prev_period_end_date\",\n  sum_this_period as \"$period1_date to $period1_end_date\",\n  \"$period1_date to $period1_end_date\" - \"$prev_period_date to $prev_period_end_date\" as growth,\n  \"$period1_date to $period1_end_date\"/\"$prev_period_date to $prev_period_end_date\" -1 as growth_pct\nFROM (\nSELECT  master_account_id,\n        billing_account_id,\n        client_name, \n        sumIf(sum_cost, date>='$prev_period' AND date<'$period1') as sum_prev_period ,\n        sumIf(sum_cost, date>='$period1' AND date<'$period1_end') as sum_this_period\n        \nFROM( \n  SELECT\n    master_account_id,\n    billing_account_id,\n    date,\n    client_name,\n    sum(cons_sum) as sum_cost\n  FROM cloud_analytics.$data_source\n  WHERE (has ([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  AND has([$consumption_type], cons_type) = 1\n  AND master_account_id not in  ('dn2muumiel12ud28m476', 'dn2q97qq6iant0n4l061', '')\n  AND has([$sales_name], sales_name) = 1\n  AND has([$service], service_name) = 1\n  GROUP BY master_account_id, client_name,  billing_account_id, date\n)\nGROUP BY master_account_id, client_name,  billing_account_id\n) as a \nANY INNER JOIN (\n  SELECT DISTINCT billing_account_id as master_account_id, client_name as master_account_name\n  FROM cloud_analytics.$data_source\n  ) as b \nUSING master_account_id\n\nUNION All\n\nSELECT  'z.Total' \"N\", \n        'z.Total' \"Master Account\",  \n        'z.Total' \"Master Account Name\",  \n        'z.Total' BA,\n        'z.Total' \"Компания\", \n        sumIf(sum_cost, date>='$prev_period' AND date<'$period1') as prev_period,\n        sumIf(sum_cost, date>='$period1' AND date<'$period1_end') as period,\n        period - prev_period as prev_week_growth,\n        period/prev_period -1 as growth_pct\nFROM( \n  SELECT\n    billing_account_id,\n    date,\n    client_name,\n    sum(cons_sum) as sum_cost\n  FROM cloud_analytics.$data_source\n  WHERE (has ([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  AND has([$consumption_type], cons_type) = 1\n  AND master_account_id not in  ('dn2muumiel12ud28m476', 'dn2q97qq6iant0n4l061', '')\n  AND has([$sales_name], sales_name) = 1\n  AND has([$service], service_name) = 1\n  AND master_account_id != ''\n  GROUP BY client_name,  billing_account_id, date\n)\n",
          "rawQuery": "SELECT    reverse(replaceAll(toFixedString(reverse(toString(rowNumberInAllBlocks() + 1)), 5), '\\0', '0')) N,   master_account_id,   master_account_name,   billing_account_id BA,   client_name \"Компания\",   sum_prev_period as \"2019-06-17 to 2019-06-23\",   sum_this_period as \"2019-06-24 to 2019-06-30\",   \"2019-06-24 to 2019-06-30\" - \"2019-06-17 to 2019-06-23\" as growth,   \"2019-06-24 to 2019-06-30\"/\"2019-06-17 to 2019-06-23\" -1 as growth_pct FROM ( SELECT  master_account_id,         billing_account_id,         client_name,          sumIf(sum_cost, date>='2019-06-17 00:00:00' AND date<'2019-06-24 00:00:00') as sum_prev_period ,         sumIf(sum_cost, date>='2019-06-24 00:00:00' AND date<'2019-07-01 00:00:00') as sum_this_period          FROM(    SELECT     master_account_id,     billing_account_id,     date,     client_name,     sum(cons_sum) as sum_cost   FROM cloud_analytics.consumption_daily_v2_1   WHERE (has (['All'], billing_account_id) = 1 OR 'All' = 'All')   AND has(['paid'], cons_type) = 1   AND master_account_id not in  ('dn2muumiel12ud28m476', 'dn2q97qq6iant0n4l061', '')   AND has(['admin','timag','unmanaged','victorbutenko','voytko'], sales_name) = 1   AND has(['compute','network','storage','ai','mdb'], service_name) = 1   GROUP BY master_account_id, client_name,  billing_account_id, date ) GROUP BY master_account_id, client_name,  billing_account_id ) as a  ANY INNER JOIN (   SELECT DISTINCT billing_account_id as master_account_id, client_name as master_account_name   FROM cloud_analytics.consumption_daily_v2_1   ) as b  USING master_account_id  UNION All  SELECT  'z.Total' \"N\",          'z.Total' \"Master Account\",           'z.Total' \"Master Account Name\",           'z.Total' BA,         'z.Total' \"Компания\",          sumIf(sum_cost, date>='2019-06-17 00:00:00' AND date<'2019-06-24 00:00:00') as prev_period,         sumIf(sum_cost, date>='2019-06-24 00:00:00' AND date<'2019-07-01 00:00:00') as period,         period - prev_period as prev_week_growth,         period/prev_period -1 as growth_pct FROM(    SELECT     billing_account_id,     date,     client_name,     sum(cons_sum) as sum_cost   FROM cloud_analytics.consumption_daily_v2_1   WHERE (has (['All'], billing_account_id) = 1 OR 'All' = 'All')   AND has(['paid'], cons_type) = 1   AND master_account_id not in  ('dn2muumiel12ud28m476', 'dn2q97qq6iant0n4l061', '')   AND has(['admin','timag','unmanaged','victorbutenko','voytko'], sales_name) = 1   AND has(['compute','network','storage','ai','mdb'], service_name) = 1   AND master_account_id != ''   GROUP BY client_name,  billing_account_id, date )",
          "refId": "A",
          "round": "0s"
        }
      ],
      "title": "Revenue Dynamics: Breakdown by Clients",
      "transform": "table",
      "type": "table"
    },
    {
      "aliasColors": {
        "sum_cost": "#96afcd"
      },
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 16
      },
      "id": 45,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "database": "cloud_analytics",
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT \ntoInt32(date) * 1000 as date,\nsum(sum_cost) as sum_cost\nFROM (\n\n    SELECT multiIf('$aggr_period' = 'day', date, \n                   '$aggr_period' = 'week', toMonday(date),\n                   '$aggr_period' = 'month', toStartOfMonth(date), \n                   '$aggr_period' = 'quarter', toStartOfQuarter(date),\n                   date) AS date,\n         sum(cons_sum) as sum_cost\n    FROM cloud_analytics.$data_source\n    WHERE (has ([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  AND master_account_id not in  ('dn2muumiel12ud28m476', 'dn2q97qq6iant0n4l061', '')\n  AND has([$consumption_type], cons_type) = 1\n  AND has([$sales_name], sales_name) = 1\n  AND has([$service], service_name) = 1\n  AND master_account_id != ''\n    GROUP BY date\n    ORDER BY date\n)\nGROUP BY date\nORDER BY date",
          "rawQuery": "SELECT  toInt32(date) * 1000 as date, sum(sum_cost) as sum_cost FROM (      SELECT multiIf('week' = 'day', date,                     'week' = 'week', toMonday(date),                    'week' = 'month', toStartOfMonth(date),                     'week' = 'quarter', toStartOfQuarter(date),                    date) AS date,          sum(cons_sum) as sum_cost     FROM cloud_analytics.consumption_daily_v2_1     WHERE (has (['All'], billing_account_id) = 1 OR 'All' = 'All')   AND master_account_id not in  ('dn2muumiel12ud28m476', 'dn2q97qq6iant0n4l061', '')   AND has(['paid'], cons_type) = 1   AND has(['admin','timag','unmanaged','victorbutenko','voytko'], sales_name) = 1   AND has(['compute','network','storage','ai','mdb'], service_name) = 1   AND master_account_id != ''     GROUP BY date     ORDER BY date ) GROUP BY date ORDER BY date",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Total Revenue",
      "tooltip": {
        "shared": true,
        "sort": 2,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {
        "ai": "#96afcd",
        "compute": "#96afcd",
        "mdb": "#96afcd",
        "network": "#96afcd",
        "other": "#96afcd",
        "storage": "#96afcd"
      },
      "bars": true,
      "cacheTimeout": null,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 16
      },
      "id": 47,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": false,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "\nSELECT \ntoInt32(now()) * 1000 as date,\narrayMap(x->(if(x.1='zother','other',x.1),x.2),arraySort(x->x.1,groupArray((service_name_, sum_cost)))) as sum_cost\nFROM (\n    \n\n    SELECT\n          if(service_name in ('compute', 'mdb', 'ai', 'storage', 'network'), service_name, 'zother') as service_name_, \n         sum(cons_sum) as sum_cost\n    FROM cloud_analytics.$data_source\n    WHERE (has ([$billing_account_id], billing_account_id) = 1 OR $billing_account_id = 'All')\n  AND master_account_id not in  ('dn2muumiel12ud28m476', 'dn2q97qq6iant0n4l061', '')\n  AND has([$consumption_type], cons_type) = 1\n  AND has([$sales_name], sales_name) = 1\n  AND has([$service], service_name) = 1\n  AND master_account_id != ''\n  AND date >= '$period1'and date < '$period1_end'\n    GROUP BY service_name_\n    \n    \n\n      \n    \n)\n\n\n\n    \n    ",
          "rawQuery": "SELECT  toInt32(now()) * 1000 as date, arrayMap(x->(if(x.1='zother','other',x.1),x.2),arraySort(x->x.1,groupArray((service_name_, sum_cost)))) as sum_cost FROM (           SELECT           if(service_name in ('compute', 'mdb', 'ai', 'storage', 'network'), service_name, 'zother') as service_name_,           sum(cons_sum) as sum_cost     FROM cloud_analytics.consumption_daily_v2_1     WHERE (has (['All'], billing_account_id) = 1 OR 'All' = 'All')   AND master_account_id not in  ('dn2muumiel12ud28m476', 'dn2q97qq6iant0n4l061', '')   AND has(['paid'], cons_type) = 1   AND has(['admin','timag','unmanaged','victorbutenko','voytko'], sales_name) = 1   AND has(['compute','network','storage','ai','mdb'], service_name) = 1   AND master_account_id != ''   AND date >= '2019-06-24 00:00:00'and date < '2019-07-01 00:00:00'     GROUP BY service_name_                        )",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Revenue Breakdown by Product",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "series",
        "name": null,
        "show": true,
        "values": [
          "total"
        ]
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 26
      },
      "id": 51,
      "panels": [],
      "title": "Заявки и первое потребление",
      "type": "row"
    },
    {
      "aliasColors": {
        "approved": "dark-blue",
        "declined": "rgb(194, 194, 194)",
        "in_progress": "dark-blue",
        "in_work": "rgb(228, 228, 228)"
      },
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 27
      },
      "id": 35,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT\n  toInt64(toDateTime(created_at_week)) * 1000 as date_,\n  arraySort(x->x.1, groupArray((status, req_count)))\nFROM (\n  \n  SELECT \n    toMonday(created_at) as created_at_week,\n    multiIf(status='approved', status, status='declined', status, 'in_work') as status,\n    count(id) as req_count\n  FROM (\n    SELECT *\n    FROM cloud_analytics.var_isv_requests\n    ORDER BY status\n    )\n  WHERE id like '%CLOUDVAR%' and status != 'archived'\n  GROUP BY\n    created_at_week, \n    status\n)\nGROUP BY date_\nORDER BY date_\n",
          "rawQuery": "SELECT   toInt64(toDateTime(created_at_week)) * 1000 as date_,   arraySort(x->x.1, groupArray((status, req_count))) FROM (      SELECT      toMonday(created_at) as created_at_week,     multiIf(status='approved', status, status='declined', status, 'in_work') as status,     count(id) as req_count   FROM (     SELECT *     FROM cloud_analytics.var_isv_requests     ORDER BY status     )   WHERE id like '%CLOUDVAR%' and status != 'archived'   GROUP BY     created_at_week,      status ) GROUP BY date_ ORDER BY date_",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Заявки VAR",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {
        "approved": "dark-blue",
        "declined": "rgb(194, 194, 194)",
        "in_progress": "dark-blue",
        "in_work": "rgb(228, 228, 228)"
      },
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 27
      },
      "id": 39,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT\ntoUInt32(toDateTime(created_at_week)) * 1000 as t,\narraySort(x->x.1, groupArray((status, req_count)))\nFROM(\nSELECT\nstatus,\ncreated_at_week,\nreq_count\nFROM\n(\n\nSELECT\nstatus,\ngroupArray(created_at_week) as created_at_week,\narrayCumSum(groupArray(req_count)) as req_count\nFROM(\n\nSELECT\n  b.created_at_week as created_at_week,\n  b.status as status,\n  req_count\nFROM\n  (\n    SELECT\n      toMonday(created_at) as created_at_week,\n      multiIf(\n        status = 'approved',\n        status,\n        status = 'declined',\n        status,\n        'in_work'\n      ) as status,\n      count(id) as req_count\n    FROM\n      (\n        SELECT\n          *\n        FROM\n          cloud_analytics.var_isv_requests\n        ORDER BY\n          status\n      )\n    WHERE\n      id like '%CLOUDVAR%'\n      and status != 'archived'\n    GROUP BY\n      created_at_week,\n      status\n  ) as a FULL\n  JOIN (\n    SELECT\n      created_at_week,\n      status\n    FROM\n      (\n        SELECT\n          created_at_week,\n          status\n        FROM\n          (\n            SELECT\n              groupUniqArray(toMonday(created_at)) as created_at_week,\n              array('approved', 'declined', 'in_work') as status\n            FROM\n              cloud_analytics.var_isv_requests\n          ) ARRAY\n          JOIN status\n      ) ARRAY\n      JOIN created_at_week\n  ) as b ON (a.created_at_week = b.created_at_week)\n  AND (a.status = b.status)\nORDER BY\n  status,\n  created_at_week\n) \nGROUP BY status\n)\nARRAY JOIN created_at_week, req_count\n)\nGROUP BY t\nORDER BY t",
          "rawQuery": "SELECT toUInt32(toDateTime(created_at_week)) * 1000 as t, arraySort(x->x.1, groupArray((status, req_count))) FROM( SELECT status, created_at_week, req_count FROM (  SELECT status, groupArray(created_at_week) as created_at_week, arrayCumSum(groupArray(req_count)) as req_count FROM(  SELECT   b.created_at_week as created_at_week,   b.status as status,   req_count FROM   (     SELECT       toMonday(created_at) as created_at_week,       multiIf(         status = 'approved',         status,         status = 'declined',         status,         'in_work'       ) as status,       count(id) as req_count     FROM       (         SELECT           *         FROM           cloud_analytics.var_isv_requests         ORDER BY           status       )     WHERE       id like '%CLOUDVAR%'       and status != 'archived'     GROUP BY       created_at_week,       status   ) as a FULL   JOIN (     SELECT       created_at_week,       status     FROM       (         SELECT           created_at_week,           status         FROM           (             SELECT               groupUniqArray(toMonday(created_at)) as created_at_week,               array('approved', 'declined', 'in_work') as status             FROM               cloud_analytics.var_isv_requests           ) ARRAY           JOIN status       ) ARRAY       JOIN created_at_week   ) as b ON (a.created_at_week = b.created_at_week)   AND (a.status = b.status) ORDER BY   status,   created_at_week )  GROUP BY status ) ARRAY JOIN created_at_week, req_count ) GROUP BY t ORDER BY t",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Заявки VAR",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {
        "paid": "dark-purple",
        "trial": "rgb(194, 194, 194)"
      },
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 37
      },
      "id": 41,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT t,  arrayReverseSort(groupArray((type, ba_count)))\nFROM(\nSELECT\n    toUInt32(toDateTime(week))*1000 as t,\n    type,\n    count(billing_account_id) as ba_count\nFROM (\n    SELECT\n      'dummy' as billing_account_id,\n       toMonday(toDate('2018-09-01')) as week,\n      'paid' as type\n    \n    UNION ALL\n    \n    SELECT\n        billing_account_id,\n        toMonday(min(date)) as week,\n        'paid' as type\n    FROM\n        cloud_analytics.$data_source\n    WHERE \n      segment='var' \n      AND cons_type='paid'\n      AND usage_status != 'service'\n      AND has([$sales_name], sales_name) = 1\n  AND has([$service], service_name) = 1\n    GROUP BY\n        billing_account_id\n        \n    UNION ALL\n    \n    SELECT\n        billing_account_id,\n        toMonday(min(date)) as week,\n        'trial' as type\n    FROM\n        cloud_analytics.$data_source\n    WHERE \n      segment='var' \n      AND cons_type='trial'\n      AND usage_status != 'service'\n      AND has([$sales_name], sales_name) = 1\n    GROUP BY\n        billing_account_id\n)\nGROUP BY \n    t, type\n)\nGROUP BY t\nORDER BY t",
          "rawQuery": "SELECT t,  arrayReverseSort(groupArray((type, ba_count))) FROM( SELECT     toUInt32(toDateTime(week))*1000 as t,     type,     count(billing_account_id) as ba_count FROM (     SELECT       'dummy' as billing_account_id,        toMonday(toDate('2018-09-01')) as week,       'paid' as type          UNION ALL          SELECT         billing_account_id,         toMonday(min(date)) as week,         'paid' as type     FROM         cloud_analytics.consumption_daily_v2_1     WHERE        segment='var'        AND cons_type='paid'       AND usage_status != 'service'       AND has(['admin','timag','unmanaged','victorbutenko','voytko'], sales_name) = 1   AND has(['compute','network','storage','ai','mdb'], service_name) = 1     GROUP BY         billing_account_id              UNION ALL          SELECT         billing_account_id,         toMonday(min(date)) as week,         'trial' as type     FROM         cloud_analytics.consumption_daily_v2_1     WHERE        segment='var'        AND cons_type='trial'       AND usage_status != 'service'       AND has(['admin','timag','unmanaged','victorbutenko','voytko'], sales_name) = 1     GROUP BY         billing_account_id ) GROUP BY      t, type ) GROUP BY t ORDER BY t",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Первое потребление",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {
        "paid": "dark-purple",
        "trial": "rgb(194, 194, 194)"
      },
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "ch_cloud_analytics",
      "fill": 1,
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 37
      },
      "id": 43,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "dateTimeType": "DATETIME",
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT\n  t,\n  arrayReverseSort( groupArray((type, ba_count)))\nFROM\n  (\n    SELECT\n      type,\n      t,\n      ba_count\n    FROM\n      (\n        SELECT\n          type,\n          groupArray(toUInt32(toDateTime(week)) * 1000) as t,\n          arrayCumSum(groupArray(ba_count)) as ba_count\n        FROM\n          (\n            SELECT\n              b.week as week,\n              b.type as type,\n              ba_count\n            FROM(\n                SELECT\n                  week,\n                  type,\n                  count(billing_account_id) as ba_count\n                FROM\n                  (\n                    SELECT\n                      billing_account_id,\n                      toMonday(min(date)) as week,\n                      'trial' as type\n                    FROM\n                      cloud_analytics.$data_source\n                    WHERE\n                      segment='var' \n                      AND cons_type='trial' \n                      AND usage_status != 'service'\n                      AND has([$sales_name], sales_name) = 1\n                    GROUP BY\n                      billing_account_id\n                    UNION ALL\n                    SELECT\n                      billing_account_id,\n                      toMonday(min(date)) as week,\n                      'paid' as type\n                    FROM\n                      cloud_analytics.$data_source\n                    WHERE\n                      segment = 'var'\n                      AND cons_type = 'paid'\n                      AND usage_status != 'service'\n                      AND has([$sales_name], sales_name) = 1\n                    GROUP BY\n                      billing_account_id\n                  )\n                GROUP BY\n                  week,\n                  type\n              ) as a FULL\n              JOIN (\n                SELECT\n                  week,\n                  type\n                FROM\n                  (\n                    SELECT\n                      week,\n                      type\n                    FROM\n                      (\n                        SELECT\n                          groupUniqArray(toMonday(date)) as week,\n                          array('trial', 'paid') as type\n                        FROM\n                          cloud_analytics.$data_source\n                      ) ARRAY\n                      JOIN type\n                  ) ARRAY\n                  JOIN week\n              ) as b ON ((a.week = b.week)\n              AND (a.type = b.type))\n              ORDER BY\n                  type,\n                  week\n          )\n        GROUP BY\n          type\n      ) ARRAY\n      JOIN t,\n      ba_count\n  )\nGROUP BY\n  t\nORDER BY\n  t\n",
          "rawQuery": "SELECT   t,   arrayReverseSort( groupArray((type, ba_count))) FROM   (     SELECT       type,       t,       ba_count     FROM       (         SELECT           type,           groupArray(toUInt32(toDateTime(week)) * 1000) as t,           arrayCumSum(groupArray(ba_count)) as ba_count         FROM           (             SELECT               b.week as week,               b.type as type,               ba_count             FROM(                 SELECT                   week,                   type,                   count(billing_account_id) as ba_count                 FROM                   (                     SELECT                       billing_account_id,                       toMonday(min(date)) as week,                       'trial' as type                     FROM                       cloud_analytics.consumption_daily_v2_1                     WHERE                       segment='var'                        AND cons_type='trial'                        AND usage_status != 'service'                       AND has(['admin','timag','unmanaged','victorbutenko','voytko'], sales_name) = 1                     GROUP BY                       billing_account_id                     UNION ALL                     SELECT                       billing_account_id,                       toMonday(min(date)) as week,                       'paid' as type                     FROM                       cloud_analytics.consumption_daily_v2_1                     WHERE                       segment = 'var'                       AND cons_type = 'paid'                       AND usage_status != 'service'                       AND has(['admin','timag','unmanaged','victorbutenko','voytko'], sales_name) = 1                     GROUP BY                       billing_account_id                   )                 GROUP BY                   week,                   type               ) as a FULL               JOIN (                 SELECT                   week,                   type                 FROM                   (                     SELECT                       week,                       type                     FROM                       (                         SELECT                           groupUniqArray(toMonday(date)) as week,                           array('trial', 'paid') as type                         FROM                           cloud_analytics.consumption_daily_v2_1                       ) ARRAY                       JOIN type                   ) ARRAY                   JOIN week               ) as b ON ((a.week = b.week)               AND (a.type = b.type))               ORDER BY                   type,                   week           )         GROUP BY           type       ) ARRAY       JOIN t,       ba_count   ) GROUP BY   t ORDER BY   t",
          "refId": "A",
          "round": "0s"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Первое потребление",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "refresh": false,
  "schemaVersion": 18,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "selected": true,
          "tags": [],
          "text": "consumption_daily_v2_1",
          "value": "consumption_daily_v2_1"
        },
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "data_source",
        "options": [
          {
            "selected": true,
            "text": "consumption_daily_v2_1",
            "value": "consumption_daily_v2_1"
          },
          {
            "selected": false,
            "text": "consumption_daily_cube",
            "value": "consumption_daily_cube"
          }
        ],
        "query": "consumption_daily_v2_1,consumption_daily_cube",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": "paid",
          "value": "paid"
        },
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "consumption_type",
        "options": [
          {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "trial",
            "value": "trial"
          },
          {
            "selected": true,
            "text": "paid",
            "value": "paid"
          }
        ],
        "query": "trial, paid",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": "'All'",
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT billing_account_id FROM cloud_analytics.$data_source WHERE  has(['var'], segment) = 1 AND has([$sales_name], sales_name)=1 ORDER BY billing_account_id",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "billing_account_id",
        "options": [],
        "query": "SELECT DISTINCT billing_account_id FROM cloud_analytics.$data_source WHERE  has(['var'], segment) = 1 AND has([$sales_name], sales_name)=1 ORDER BY billing_account_id",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT distinct sales_name FROM cloud_analytics.$data_source WHERE master_account_id != ''",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "sales_name",
        "options": [],
        "query": "SELECT distinct sales_name FROM cloud_analytics.$data_source WHERE master_account_id != ''",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT distinct service_name FROM cloud_analytics.$data_source WHERE has(['var'], segment) = 1",
        "hide": 0,
        "includeAll": true,
        "label": "Service",
        "multi": true,
        "name": "service",
        "options": [],
        "query": "SELECT distinct service_name FROM cloud_analytics.$data_source WHERE has(['var'], segment) = 1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "week",
          "value": "week"
        },
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "aggr_period",
        "options": [
          {
            "selected": false,
            "text": "day",
            "value": "day"
          },
          {
            "selected": true,
            "text": "week",
            "value": "week"
          },
          {
            "selected": false,
            "text": "month",
            "value": "month"
          },
          {
            "selected": false,
            "text": "quarter",
            "value": "quarter"
          }
        ],
        "query": "day,week,month,quarter",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-06-24 00:00:00",
          "value": "2019-06-24 00:00:00"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT toDateTime(concat('$period1_date', ' 00:00:00'))",
        "hide": 2,
        "includeAll": false,
        "label": "period_start_date",
        "multi": false,
        "name": "period1",
        "options": [],
        "query": "SELECT toDateTime(concat('$period1_date', ' 00:00:00'))",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 2,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-06-24",
          "value": "2019-06-24"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT DISTINCT toDate(multiIf('$aggr_period' = 'week', toMonday(date), '$aggr_period' = 'month', toStartOfMonth(date), '$aggr_period' = 'quarter', toStartOfQuarter(date), date)) FROM cloud_analytics.$data_source WHERE has([$sales_name], sales_name) = 1",
        "hide": 0,
        "includeAll": false,
        "label": "period_start_date",
        "multi": false,
        "name": "period1_date",
        "options": [],
        "query": "SELECT DISTINCT toDate(multiIf('$aggr_period' = 'week', toMonday(date), '$aggr_period' = 'month', toStartOfMonth(date), '$aggr_period' = 'quarter', toStartOfQuarter(date), date)) FROM cloud_analytics.$data_source WHERE has([$sales_name], sales_name) = 1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 2,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-06-17 00:00:00",
          "value": "2019-06-17 00:00:00"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT multiIf('$aggr_period'='week', addWeeks(toDateTime('$period1'),-1), '$aggr_period'='month', addMonths(toDateTime('$period1'),-1), '$aggr_period'='quarter', addQuarters(toDateTime('$period1'),-1), addDays(toDateTime('$period1'),-1))",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "prev_period",
        "options": [],
        "query": "SELECT multiIf('$aggr_period'='week', addWeeks(toDateTime('$period1'),-1), '$aggr_period'='month', addMonths(toDateTime('$period1'),-1), '$aggr_period'='quarter', addQuarters(toDateTime('$period1'),-1), addDays(toDateTime('$period1'),-1))",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-07-01 00:00:00",
          "value": "2019-07-01 00:00:00"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT multiIf('$aggr_period'='week', addWeeks(toDateTime('$period1'),1), '$aggr_period'='month', addMonths(toDateTime('$period1'),1), '$aggr_period'='quarter', addQuarters(toDateTime('$period1'),1),addDays(toDateTime('$period1'),1))",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "period1_end",
        "options": [],
        "query": "SELECT multiIf('$aggr_period'='week', addWeeks(toDateTime('$period1'),1), '$aggr_period'='month', addMonths(toDateTime('$period1'),1), '$aggr_period'='quarter', addQuarters(toDateTime('$period1'),1),addDays(toDateTime('$period1'),1))",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-06-30",
          "value": "2019-06-30"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT addDays(toDate('$period1_end'), -1)",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "period1_end_date",
        "options": [],
        "query": "SELECT addDays(toDate('$period1_end'), -1)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-06-17",
          "value": "2019-06-17"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT toDate('$prev_period')",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "prev_period_date",
        "options": [],
        "query": "SELECT toDate('$prev_period')",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "2019-06-23",
          "value": "2019-06-23"
        },
        "datasource": "ch_cloud_analytics",
        "definition": "SELECT addDays(toDate('$period1_date'),-1)",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "prev_period_end_date",
        "options": [],
        "query": "SELECT addDays(toDate('$period1_date'),-1)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "'isv'",
          "value": "'isv'"
        },
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "segment",
        "options": [
          {
            "selected": false,
            "text": "'var'",
            "value": "'var'"
          }
        ],
        "query": "'var'",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-90d",
    "to": "now+7d"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "(Beta) VAR Dashboard v2",
  "uid": "RYvPWGZWz",
  "version": 39
}
