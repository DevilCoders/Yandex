use hahn;

$parse = DateTime::Parse('%Y-%m-%d %H:%M:%S');
$format = DateTime::Format('%Y-%m-%d');

DEFINE SUBQUERY $last_non_empty_table($path) AS
    $max_path = (
        SELECT MAX(Path) AS Path
        FROM FOLDER($path, 'row_count')
        WHERE Type = 'table'
            AND Yson::LookupInt64(Attributes, 'row_count') > 0
    );
    SELECT * FROM CONCAT($max_path);
END DEFINE;

$ba_cloud = (
SELECT
d, cloud_id, AGGREGATE_LIST(billing_account_id)[0] as billing_account_id
FROM (
SELECT DISTINCT
    d,
    billing_account_id,
    cloud_id
FROM (
SELECT 
    $format($parse(event_time)) as d,
    billing_account_id,
    cloud_id
FROM `//home/cloud_analytics/cubes/acquisition_cube/cube`
WHERE billing_account_id is not null and cloud_id is not null 

)

)
GROUP BY d, cloud_id
);

$ba_cloud_folder = (
SELECT DISTINCT 
    d, billing_account_id, cloud_id, folder_id
FROM (
SELECT
    d,
    billing_account_id,
    a.cloud_id as cloud_id,
    folder_id
FROM $ba_cloud as a INNER JOIN (
    SELECT 
        folder_id,
        AGGREGATE_LIST_DISTINCT(cloud_id)[0] as cloud_id
    FROM 
        $last_non_empty_table('//home/cloud_analytics/import/iam/cloud_folders/1h') 
    GROUP BY 
        folder_id
    ) as b
ON a.cloud_id = b.cloud_id
)
);

$ba_paid_status_hist =  (
        SELECT
            billing_account_id,
            d,
            if(sum(real_consumption)>sum(trial_consumption),'paid', 'trial') as ba_paid_status
        FROM (
            SELECT billing_account_id, $format($parse(event_time)) as d, real_consumption, trial_consumption
            FROM `//home/cloud_analytics/cubes/acquisition_cube/cube`
            WHERE event='day_use'
            )
        GROUP BY
            billing_account_id, d
);
$ba_time_dependent_tags = (
SELECT
    a.d as d,
    a.billing_account_id as billing_account_id,
    ba_state,
    ba_is_service,
    ba_block_reason,
    ba_sales_name,
    ba_architect,
    ba_paid_status
FROM (
SELECT
    d,
    billing_account_id,
    AGGREGATE_LIST(ba_state)[0] as ba_state,
    AGGREGATE_LIST(is_service)[0] as ba_is_service,
    AGGREGATE_LIST(block_reason)[0] as ba_block_reason,
    AGGREGATE_LIST(sales_name)[0] as ba_sales_name,
    AGGREGATE_LIST(architect)[0] as ba_architect
    FROM (
        SELECT
            $format($parse(event_time)) as d,
            billing_account_id,
            ba_state,
            block_reason,
            if(ba_usage_status = 'service', 'service', 'customer') as is_service,
            sales_name,
            architect
        FROM `//home/cloud_analytics/cubes/acquisition_cube/cube`
        WHERE
            event in ('day_use', 'ba_created', 'first_trial_consumption', 'first_paid_consumption')
    )
    GROUP BY
        d,
        billing_account_id
    ) as a LEFT JOIN $ba_paid_status_hist as b on a.billing_account_id = b.billing_account_id and a.d = b.d
);
$ba_time_independent_tags = (
    SELECT
        billing_account_id,
        MAX_BY(is_fraud, event_time) as ba_is_fraud,
        MAX_BY(ba_name, event_time) as ba_name,
        MAX_BY(ba_person_type, event_time) as ba_person_type,
        MAX_BY(ba_type, event_time) as ba_type,
        MAX_BY(channel, event_time) as ba_channel,
        MAX_BY(segment, event_time) as ba_segment,
        MAX_BY(board_segment, event_time) as ba_board_segment,
        MAX_BY(user_settings_email, event_time) as ba_email,
        MAX_BY(account_name, event_time) as ba_account_name,
        $format(DateTime::MakeDate(DateTime::StartOfMonth($parse(MAX_BY(first_ba_created_datetime, event_time))))) as ba_m_cohort,
        $format(DateTime::MakeDate(DateTime::StartOfWeek($parse(MAX_BY(first_ba_created_datetime, event_time))))) as ba_w_cohort
    FROM `//home/cloud_analytics/cubes/acquisition_cube/cube`
    WHERE
        event in ('day_use', 'ba_created', 'first_trial_consumption', 'first_paid_consumption')
    GROUP BY
        billing_account_id

);

INSERT INTO  `//home/cloud_analytics/tmp/artkaz/ba_time_dependent_tags` WITH TRUNCATE 
SELECT *
FROM $ba_time_dependent_tags;
COMMIT; 

INSERT INTO  `//home/cloud_analytics/tmp/artkaz/ba_time_independent_tags` WITH TRUNCATE 
SELECT *
FROM $ba_time_independent_tags;
COMMIT; 

INSERT INTO  `//home/cloud_analytics/tmp/artkaz/ba_cloud_folder` WITH TRUNCATE 
SELECT *
FROM $ba_cloud_folder;
COMMIT;


$folder_ba_tags = (
SELECT
    a.d as d,
    folder_id,
    cloud_id,
    a.billing_account_id as ba_id,
    ba_paid_status,
    ba_state,
    ba_is_service,
    ba_block_reason,
    ba_sales_name,
    ba_architect,
    ba_is_fraud,
    if(ba_account_name='unknown', ba_name, ba_account_name) as ba_client_name,  
    ba_person_type,
    ba_type,
    ba_channel,
    ba_segment,
    ba_board_segment,
    ba_email,
    ba_m_cohort,
    ba_w_cohort
FROM  `//home/cloud_analytics/tmp/artkaz/ba_cloud_folder` as a 
LEFT JOIN `//home/cloud_analytics/tmp/artkaz/ba_time_dependent_tags` as c 
ON a.d = c.d and a.billing_account_id = c.billing_account_id
LEFT JOIN `//home/cloud_analytics/tmp/artkaz/ba_time_independent_tags` as d 
ON a.billing_account_id = d.billing_account_id
);

INSERT INTO `//home/cloud_analytics/export/billing/folder_ba_tags/folder_ba_tags` WITH TRUNCATE 
SELECT * 
FROM $folder_ba_tags
;
COMMIT;

$cf_logs = (
SELECT
    `timestamp` as cf_call_time,
    DateTime::MakeDate(DateTime::FromSeconds(CAST (`timestamp` AS Uint32)))                                     as cf_call_time_day,
    DateTime::MakeDate(DateTime::StartOfWeek(DateTime::FromSeconds(CAST (`timestamp` AS Uint32))))              as cf_call_time_week,
    DateTime::MakeDate(DateTime::StartOfMonth(DateTime::FromSeconds(CAST (`timestamp` AS Uint32))))             as cf_call_time_month,
    DateTime::MakeDate(DateTime::StartOfQuarter(DateTime::FromSeconds(CAST (`timestamp` AS Uint32))))           as cf_call_time_quarter,
    function_id as cf_id,
    category as cf_category,
    http_remote_addr as cf_http_remote_addr,
    http_status_code as cf_http_status_code,
    duration as cf_duration,
    function_version_id as cf_version_id,
    request_id as cf_request_id,
    http_reponse_size as cf_http_reponse_size,
    service_status_code as cf_service_status_code,
    a.folder_id as folder_id,
    a.cloud_id as cloud_id,
    b.cloud_id as cloud_id2,
    ba_id,
    ba_paid_status,
    ba_state,
    ba_is_service,
    ba_block_reason,
    ba_sales_name,
    ba_architect,
    ba_is_fraud,
    ba_client_name,  
    ba_person_type,
    ba_type,
    ba_channel,
    ba_segment,
    ba_board_segment,
    ba_email,
    ba_m_cohort,
    ba_w_cohort
FROM 
RANGE('//logs/yc-function-router-access-log/1d') as a 
LEFT JOIN `//home/cloud_analytics/export/billing/folder_ba_tags/folder_ba_tags` as b
ON a.folder_id = b.folder_id and $format(DateTime::FromSeconds(CAST (a.`timestamp` AS Uint32))) = b.d

);

INSERT INTO `//home/cloud_analytics/cf_logs/cf_logs` WITH TRUNCATE 
SELECT * FROM $cf_logs;