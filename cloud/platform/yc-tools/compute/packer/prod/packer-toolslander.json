{
  "variables": {
    "folder_id": "{{env `FOLDER_ID`}}",
    "subnet_id": "{{env `SUBNET_ID`}}",
    "zone_id": "{{env `ZONE_ID`}}",
    "commit_revision": "{{env `COMMIT_REVISION`}}",
    "commit_author": "{{env `COMMIT_AUTHOR`}}",
    "commit_message": "{{env `COMMIT_MESSAGE`}}",
    "gsid": "1000",
    "account_oauth_token": "{{env `YC_OAUTH_TOKEN`}}"
  },
  "builders": [
    {
      "endpoint": "api.cloud.yandex.net:443",
      "type": "yandex",
      "token": "{{user `account_oauth_token`}}",
      "source_image_family": "ubuntu-1604-lts",
      "source_image_folder_id": "standard-images",

      "zone": "{{user `zone_id`}}",
      "folder_id": "{{user `folder_id`}}",
      "subnet_id": "{{user `subnet_id`}}",
      "disk_type": "network-ssd",

      "labels": {
        "skip_update_ssh_keys": "true"
      },
      "metadata": {
        "gsid": "{{user `GSID`}}"
      },

      "use_ipv4_nat": false,
      "use_ipv6": true,

      "image_name": "deploylander-{{isotime | clean_resource_name}}",
      "image_family": "deploylander",
      "image_description": "based on commit (https://a.yandex-team.ru/arc/commit/{{user `commit_revision`}}) by {{user `commit_author`}}@ with message '{{user `commit_message`}}'",
      "image_labels": {
        "commit_revision": "{{user `commit_revision`}}",
        "commit_author": "{{user `commit_author`}}",
        "version": "1"
      },
      "ssh_username": "ubuntu",
      "ssh_bastion_host": "vla04-s15-37.cloud.yandex.net",
      "ssh_bastion_agent_auth": true,
      "ssh_bastion_username": "thatguy"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "sudo sed -i '1i nameserver 2a02:6b8:0:3400::5005' /etc/resolv.conf",
        "echo 'Content of /etc/resolv.conf:' ; cat /etc/resolv.conf",
        "echo 'Content of /etc/hosts:' ; cat /etc/hosts"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "echo \"Image prepared by Packer at: $(date --rfc-3339 sec)\" | sudo tee /etc/image_description",
        "echo \"Unique image ID: {{uuid}}\"       | sudo tee -a /etc/image_description",
        "echo \"Create timestamp: {{timestamp}}\" | sudo tee -a /etc/image_description",
        "sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 7FCD11186050CD1A",
        "sudo apt-key adv --keyserver keyserver.ubuntu.com --recv C8F1E19FE0C56BD4",
        "echo \"deb http://repo.yandex.ru/clickhouse/deb/stable/ main/\" | sudo tee /etc/apt/sources.list.d/clickhouse.list",
        "echo 'deb http://yandex-xenial.dist.yandex.ru/yandex-xenial stable/all/'   | sudo tee -a /etc/apt/sources.list.d/yandex-xenial.list",
        "echo 'deb http://yandex-xenial.dist.yandex.ru/yandex-xenial stable/amd64/' | sudo tee -a /etc/apt/sources.list.d/yandex-xenial.list",
        "echo 'deb http://common.dist.yandex.ru/common stable/all/'                 | sudo tee -a /etc/apt/sources.list.d/common-stable.list",
        "echo 'deb http://common.dist.yandex.ru/common stable/amd64/'               | sudo tee -a /etc/apt/sources.list.d/common-stable.list",
        "echo 'deb http://yandex-cloud.dist.yandex.ru/yandex-cloud stable/all/'   | sudo tee -a /etc/apt/sources.list.d/yandex-cloud-stable.list",
        "echo 'deb http://yandex-cloud.dist.yandex.ru/yandex-cloud stable/amd64/' | sudo tee -a /etc/apt/sources.list.d/yandex-cloud-stable.list",
        "echo 'deb http://yandex-cloud.dist.yandex.ru/yandex-cloud testing/all/'   | sudo tee -a /etc/apt/sources.list.d/yandex-cloud-testing.list",
        "echo 'deb http://yandex-cloud.dist.yandex.ru/yandex-cloud testing/amd64/' | sudo tee -a /etc/apt/sources.list.d/yandex-cloud-testing.list",
        "echo '169.254.169.254 metadata.google.internal' | sudo tee -a /etc/hosts"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo apt-get update -qq",
        "export DEBIAN_FRONTEND=noninteractive",
        "sudo apt-get update -qq",
        "sudo apt-get install -y --allow-unauthenticated yandex-archive-keyring",
        "sudo apt-add-repository universe && sudo apt-get update -qq",
        "sudo apt-get upgrade -y --allow-unauthenticated --option=Dpkg::Options::=--force-confold"
      ]
    },
    {
      "type": "salt-masterless",
      "local_state_tree": "{{template_dir}}/salt_base"
    }
  ],
  "post-processors": [
    {
      "type": "manifest",
      "output": "{{ pwd }}/manifest.json",
      "strip_path": true
    }
  ]
}
