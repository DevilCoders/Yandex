grpcServer:
  maxConcurrentRequests: 100
  port: ${private_api_port}
  reflectionEnabled: true
  certificatePemFile: /run/kms/certificate.pem

authClient:
  host: local-lb.cloud-lab.yandex.net
#  host: vla04-3ct5-11a.cloud.yandex.net
  port: 14286
  timeout: PT2S
  channels: 10
  loggingMinCallDuration: PT0.5S
  exponentialBackoffRetryPolicy:
    maxRetries: 11
    delay: PT0.1S
    maxDelay: PT1.5S
    delayFactor: 2

authCache:
  expirePeriod: PT15S
  deletePeriod: PT15M
  maximumSize: 100500

metrics:
  pullPort: 4302

kmsMonitoring:
  pullPort: 4303
  refreshPeriod: PT30S

repository:
  kikimr:
    host: ""
    discoveryEndpoint: u-lb.kms-hw-blue-lab.ydb.mdb.yandexcloud.net:2135
    database: /dev_global/kms
    tablespace: /dev_global/kms/main/
    maxResultSetSize: 5000
    useSSL: true
    readTableBatchSize: 50000
    sessionCreationTimeout: PT15S
  ydbServiceAccountId: yc.kms.ydb-sa

quota:
  defaultMaxKeysPerCloud: 100
  defaultMaxVersionsPerKey: 100

cluster:
  # Copied from testing/kms. No one cares if it is unique.
  clusterId: ${id_prefix}

cache:
  refreshDuration: PT15M

crypto:
  useKdf: false

specialKeys:
  refreshDuration: PT10S
  # NOTE: We use the same key for secrets deployment and as a master encryption key. Production installations
  # should use two separate keys.
  defaultRootKmsKeyId: rootKmsKmsKeyId1

rootKmsClient:
  hosts: [local-lb.cloud-lab.yandex.net]
#  hosts: [vla04-3ct5-11a.cloud.yandex.net]
  port: 14301
  tls: true
  maxRetries: 3
  timeout: PT4S

tokenService:
  host: local-lb.cloud-lab.yandex.net
#  host: vla04-3ct5-11a.cloud.yandex.net
  port: 14282
  maxRetries: 3
  timeout: PT5S
  tls: true

hsmFront:
  fake: true

discovery:
  addrs: ${discovery_addrs}
