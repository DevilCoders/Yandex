node:
  cluster: ds7eljjtj8npuq7fm325
  id: __NODE__
  locality:
    region: __REGION__
    zone: __ZONE__

admin:
  access_log_path: /dev/stdout
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9901

layered_runtime:
  layers:
  - name: static
    static_layer:
      yandex:
        ignore_sigterm: true # envoy-wrapper will handle SIGTERM.
  - name: admin # enables /runtime_modify.
    admin_layer: {}

overload_manager:
  refresh_interval: 0.25s
  resource_monitors:
  - name: "envoy.resource_monitors.fixed_heap"
    typed_config:
      "@type": type.googleapis.com/envoy.config.resource_monitor.fixed_heap.v2alpha.FixedHeapConfig
      max_heap_size_bytes: __ENVOY_HEAP_LIMIT__
  actions:
  - name: "envoy.overload_actions.shrink_heap"
    triggers:
    - name: "envoy.resource_monitors.fixed_heap"
      threshold:
        value: 0.95
  - name: "envoy.overload_actions.stop_accepting_requests"
    triggers:
    - name: "envoy.resource_monitors.fixed_heap"
      threshold:
        value: 0.98

stats_config:
  # Envoy has a lot of predefined tags, see
  # https://github.com/envoyproxy/envoy/blob/master/source/common/config/well_known_names.cc
  # E.g. *_rq(_<response_code>) or *_rq_(<response_code_class>)xx
  # If we need to manually rewrite these tags, set to false.
  use_all_default_tags: true
  stats_tags:
  # cluster tags
  - tag_name: "backend_group_id"
    regex: "^cluster\\.(([0-9a-zA-Z]+?)_)"
  - tag_name: "backend"
    regex: "^cluster\\.[0-9a-zA-Z]+?_(([a-zA-Z_]+?)\\.)"
  - tag_name: "cluster_group"
    regex: "^cluster\\..+?(\\.(circuit_breakers|external|health_check|outlier_detection|ssl)\\.)"
  # virtual clusters tags
  - tag_name: "http_router_id"
    regex: "\\.vcluster\\.\\/(ID\\:(.+?)\\/)"
  - tag_name: "route"
    regex: "\\/(RN\\:(.+?)\\.)"
  - tag_name: "metrics_group"
    regex: "^((cluster|server|vcluster|listener)\\.)"

stats_sinks:
- name: envoy.statsd
  config:
    address:
      socket_address: { address: 127.0.0.1, port_value: 9125 }

tracing:
  http:
    name: envoy.dynamic.ot
    typed_config:
      "@type": type.googleapis.com/envoy.config.trace.v2.DynamicOtConfig
      library: /usr/local/lib/libjaegertracing_plugin.so
      config:
        service_name: dpl01-router
        sampler: { type: const, param: 1 }
        reporter: { localAgentHostPort: 127.0.0.1:5775 }

cluster_manager:
  outlier_detection:
    event_log_path: /var/log/envoy/outlier_detection.log

dynamic_resources:
  ads_config:
    api_type: GRPC
    rate_limit_settings: {}
    grpc_services:
    - google_grpc:
        target_uri: unix:/tmp/sds/xds.sock
        channel_credentials:
          local_credentials: {}
        call_credentials:
        - google_compute_engine: {}
        stat_prefix: xds
  cds_config:
    ads: {}
  lds_config:
    ads: {}

static_resources:
  secrets:
  - name: frontend_cert
    tls_certificate:
      certificate_chain:
        filename: /etc/envoy/ssl/certs/frontend.crt
      private_key:
        filename: /etc/envoy/ssl/private/frontend.key

  listeners:
    name: xds_uds
    address: { pipe: { path: /tmp/sds/xds.sock }}
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: xds_uds
          codec_type: AUTO
          route_config:
            name: default
            virtual_hosts:
            - name: default
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route: { cluster: xds_cluster }
          http_filters:
          - name: envoy.router
            typed_config:
              "@type": "type.googleapis.com/envoy.config.filter.http.router.v2.Router"

  clusters:
  - name: sds
    connect_timeout: 0.25s
    http2_protocol_options: {}
    type: STATIC
    hosts:
    - pipe: { path: /tmp/sds/sock }
  - name: xds_cluster
    connect_timeout: 1s
    http2_protocol_options: {}
    common_http_protocol_options:
      idle_timeout: 30s
    upstream_connection_options:
      tcp_keepalive:
        keepalive_probes: 1
        keepalive_time: 10
        keepalive_interval: 10
    type: STATIC
    hosts:
    - socket_address: {address: "2a02:6b8:c0e:500:0:f803:0:60", port_value: 443}
    - socket_address: {address: "2a02:6b8:c02:900:0:f803:0:60", port_value: 443}
    - socket_address: {address: "2a02:6b8:c03:500:0:f803:0:60", port_value: 443}
    tls_context:
      sni: "xds.ycp.cloud.yandex.net"
      common_tls_context:
        tls_certificate_sds_secret_configs:
        - name: xds_client_cert
          sds_config:
            api_config_source:
              api_type: GRPC
              rate_limit_settings: {}
              grpc_services:
                envoy_grpc: { cluster_name: sds }
        validation_context:
          trusted_ca:
            filename: /etc/envoy/ssl/certs/allCAs.pem

  - name: als
    connect_timeout: 0.25s
    http2_protocol_options: {}
    common_http_protocol_options:
      idle_timeout: 30s
    upstream_connection_options:
      tcp_keepalive:
        keepalive_probes: 1
        keepalive_time: 10
        keepalive_interval: 10
    type: STATIC
    hosts:
    - socket_address:
        address: 127.0.0.1
        port_value: 4436
