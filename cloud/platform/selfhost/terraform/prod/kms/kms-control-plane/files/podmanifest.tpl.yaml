apiVersion: v1
kind: PodList
items:
- apiVersion: v1
  kind: Pod
  metadata:
    name: api-infrastructure
    namespace: kube-system
    annotations:
      config_digest: ${infra_config_digest}
      scheduler.alpha.kubernetes.io/critical-pod: ""
    labels:
      role: api
  spec:
    priority: 2000000001
    hostNetwork: true
    hostPID: true
    priorityClassName: system-cluster-critical
    initContainers:
    - name: deploy-infra-configs
      image: cr.yandex/crp7nvlkttssi7kapoho/infra/metadata:${metadata_version}
      command:
      - /usr/bin/metadata
      - --attribute-name
      - infra-configs
      imagePullPolicy: Always
      volumeMounts:
      - name: all-configs
        mountPath: /etc
        terminationGracePeriodSeconds: 30
      - name: run
        mountPath: /run
        terminationGracePeriodSeconds: 30
    containers:
    - name: solomon-agent
      image: cr.yandex/crpr3khkepsccf25vvt6/solomon-agent:${solomon_version}
      resources:
        requests:
          memory: "384Mi"
        limits:
          memory: "384Mi"
      volumeMounts:
      - name: solomon-agent-config
        mountPath: /etc/solomon-agent/
        readOnly: true
    - name: billing-push-client-yc-logbroker
      image: cr.yandex/crpr3khkepsccf25vvt6/push-client:${push_client_version}
      command: ["/usr/bin/push-client", "-f", "-c", "/etc/yandex/statbox-push-client/billing-push-client-yc-logbroker.yaml"]
      resources:
        requests:
          memory: "256Mi"
        limits:
          memory: "256Mi"
      volumeMounts:
      - name: var-log
        mountPath: /var/log
        terminationGracePeriodSeconds: 30
      - name: var-spool-billing-push-client
        mountPath: /var/spool/billing-push-client
        terminationGracePeriodSeconds: 30
      - name: push-client-config
        mountPath: /etc/yandex/statbox-push-client
        readOnly: true
      - name: run-push-client
        mountPath: /run/push-client
        readOnly: true
    - name: push-client-yc-logbroker
      image: cr.yandex/crpr3khkepsccf25vvt6/push-client:${push_client_version}
      command: ["/usr/bin/push-client", "-f", "-c", "/etc/yandex/statbox-push-client/push-client-yc-logbroker.yaml"]
      resources:
        requests:
          memory: "768Mi"
        limits:
          memory: "768Mi"
      volumeMounts:
        - name: var-log
          mountPath: /var/log
          terminationGracePeriodSeconds: 30
        - name: var-spool-push-client
          mountPath: /var/spool/push-client
          terminationGracePeriodSeconds: 30
        - name: push-client-config
          mountPath: /etc/yandex/statbox-push-client
          readOnly: true
        - name: run-push-client
          mountPath: /run/push-client
          readOnly: true
    - name: jaeger-agent
      image: cr.yandex/crp6ro8l0u0o3qgmvv3r/jaeger-agent:${jaeger_agent_version}
      args:
        - --reporter.grpc.host-port=jaeger-collector.private-api.ycp.cloud.yandex.net:443
        - --reporter.grpc.tls
        - --reporter.grpc.tls.ca=/etc/kms/ssl/certs/allCAs.pem
        - --reporter.grpc.retry.max=100
        - --http-server.host-port=127.0.0.1:5778
        - --processor.zipkin-compact.server-host-port=127.0.0.1:5775
        - --processor.jaeger-compact.server-host-port=127.0.0.1:6831
        - --processor.jaeger-binary.server-host-port=127.0.0.1:6832
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "200Mi"
      volumeMounts:
        - mountPath: /etc/kms/ssl/certs/
          name: etc-certs
          readOnly: true
    volumes:
    - name: all-configs
      hostPath:
       path: /etc
       type: DirectoryOrCreate
    - name: run
      hostPath:
        path: /run
        type: DirectoryOrCreate
    - name: var-log
      hostPath:
        path: /var/log
    - name: var-spool-billing-push-client
      hostPath:
        path: /var/spool/billing-push-client
    - name: var-spool-push-client
      hostPath:
        path: /var/spool/push-client
    - name: push-client-config
      hostPath:
        path: /etc/yandex/statbox-push-client
    - name: solomon-agent-config
      hostPath:
        path: /etc/solomon-agent
    - name: etc-certs
      hostPath:
        path: /etc/kms/ssl/certs/
    - name: run-push-client
      hostPath:
        path: /run/push-client

- apiVersion: v1
  kind: Pod
  metadata:
    name: api-static
    namespace: kube-system
    labels:
      role: api
    annotations:
      config_digest: ${config_digest}
      scheduler.alpha.kubernetes.io/critical-pod: ""
  spec:
    priority: 2000000001
    priorityClassName: system-cluster-critical
    hostNetwork: true
    initContainers:
    - name: deploy-configs
      image: cr.yandex/crp7nvlkttssi7kapoho/infra/metadata:${metadata_version}
      volumeMounts:
      - name: all-configs
        mountPath: /etc
        terminationGracePeriodSeconds: 30
      - name: usr-local
        mountPath: /usr/local
        terminationGracePeriodSeconds: 30
    containers:
    - name: kms-control-plane
      image: cr.yandex/crpr3khkepsccf25vvt6/kms-control-plane:${application_version}
      resources:
        requests:
          memory: "10000Mi"
        limits:
          memory: "10000Mi"
      env:
      - name: APPLICATION_YAML
        value: /etc/kms/application.yaml
      - name: APPLICATION_LOG_DIR
        value: /var/log/kms
      - name: JAVA_TOOL_OPTIONS
        value: "-Xmx8000m -XX:-UseContainerSupport -Djava.net.preferIPv6Addresses=true -Dfile.encoding=UTF-8 -Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector -Dlog4j2.asyncQueueFullPolicy=Discard -Dlog4j2.discardThreshold=OFF -Xlog:gc*:file=/var/log/kms/gc.log::filecount=10,filesize=100M"
      - name: YANDEX_CLOUD_LOG_LEVEL
        value: info
      volumeMounts:
      - name: kms-configs
        mountPath: /etc/kms
        readOnly: true
      - name: var-kms
        mountPath: /var/kms
        terminationGracePeriodSeconds: 30
      - name: var-log-kms
        mountPath: /var/log/kms
    volumes:
    - name: all-configs
      hostPath:
        path: /etc
        type: DirectoryOrCreate
    - name: kms-configs
      hostPath:
        path: /etc/kms
        type: DirectoryOrCreate
    - name: usr-local
      hostPath:
       path: /usr/local
       type: DirectoryOrCreate
    - name: var-kms
      hostPath:
        path: /var/kms
        type: DirectoryOrCreate
    - name: var-log-kms
      hostPath:
        path: /var/log/kms
        type: DirectoryOrCreate
