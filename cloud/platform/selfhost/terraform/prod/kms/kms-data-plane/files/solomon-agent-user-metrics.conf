Registration {
    Provider: "kms"
    PullInterval: "30s"
    Description: "provider data for project kms"

    Endpoints {
    	Type: CLOUD_PROD
    	AuthMethod: "metadata"
    }
}

Cluster: "prod"

AuthProvider {
    ThreadPoolName: "Default"

    AuthMethods: [
        {
            Name: "metadata"
            MetadataServiceConfig {
                InstanceType: UNDERLAY
            }
        }
    ]
}

Logger {
    LogTo: STDERR
    Level: DEBUG
}

Python2 {
    # defines should agent try to load/write .pyc files (default: false)
    IgnorePycFiles: true
}

HttpServer {
    BindPort: 18080

    Shards: [{
        Project: "kms"
        Service: "kms"
        PreserveOriginal: false

        ShardKeyOverride {
            Project: "{{cloud_id}}"
            Cluster: "{{folder_id}}"
            Service: "kms"
            DoNotAppendHostLabel: true
        }
    }]
}

Storage {
    Limit {
        Total: "1024MiB"
    }
}

ConfigLoader {
    Static {
        Services {
            Project: "kms"
            Service: "kms"

            PullInterval: "30s"

            Modules: [
                {
                    HttpPull {
                        Url: "http://localhost:4303"
                        Format: PROMETHEUS
                    }
                    Transformations {
                        Rule {
                            Match: "sensor=key_active_versions_count"
                            ReplaceMeta: "name=key.active_versions_count, sensor=-"
                        }
                        Rule {
                            Match: "sensor=key_crypto_operations_rate"
                            ReplaceMeta: "name=key.crypto_operations_rate, sensor=-"
                        }
                    }
                }
            ]
        }
    }
}
