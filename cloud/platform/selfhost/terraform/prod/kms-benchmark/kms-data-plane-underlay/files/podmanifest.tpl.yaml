apiVersion: v1
kind: PodList
items:
- apiVersion: v1
  kind: Pod
  metadata:
    name: api-static
    namespace: kube-system
    labels:
      role: api
    annotations:
      config_digest: ${config_digest}
      scheduler.alpha.kubernetes.io/critical-pod: ""
  spec:
    priority: 2000000001
    priorityClassName: system-cluster-critical
    hostNetwork: true
    initContainers:
    - name: deploy-configs
      image: cr.yandex/crp7nvlkttssi7kapoho/infra/metadata:${metadata_version}
      volumeMounts:
      - name: all-configs
        mountPath: /etc
        terminationGracePeriodSeconds: 30
    containers:
    - name: kms-data-plane
      image: cr.yandex/crpr3khkepsccf25vvt6/kms-data-plane:${application_version}
      resources:
        requests:
          memory: "46803Mi"
        limits:
          memory: "46803Mi"
      env:
      - name: APPLICATION_YAML
        value: /etc/kms/application.yaml
      - name: APPLICATION_LOG_DIR
        value: /var/log/kms
      - name: JAVA_TOOL_OPTIONS
        value: "-Xmx42707m -XX:-UseContainerSupport -Djava.net.preferIPv6Addresses=true -Dfile.encoding=UTF-8 -Xlog:gc*:file=/var/log/kms/gc.log:time,uptime:filecount=10,filesize=100M"
      - name: YANDEX_CLOUD_LOG_LEVEL
        value: info
      # - APPLICATION_ACCESS_LOG_COMPRESSION_LEVEL
      #   value: 1
      volumeMounts:
      - name: kms-configs
        mountPath: /etc/kms
        readOnly: true
      - name: var-kms
        mountPath: /var/kms
        terminationGracePeriodSeconds: 30
      - name: var-log-kms
        mountPath: /var/log/kms
    volumes:
    - name: all-configs
      hostPath:
        path: /etc
        type: DirectoryOrCreate
    - name: kms-configs
      hostPath:
        path: /etc/kms
        type: DirectoryOrCreate
    - name: var-kms
      hostPath:
        path: /var/kms
        type: DirectoryOrCreate
    - name: var-log-kms
      hostPath:
        path: /var/log/kms
        type: DirectoryOrCreate
- apiVersion: v1
  kind: Pod
  metadata:
    name: api-gateway
    namespace: kube-system
    labels:
      role: api
    annotations:
      config_digest: ${api_gateway_config_digest}
      scheduler.alpha.kubernetes.io/critical-pod: ""
  spec:
    priority: 2000000001
    priorityClassName: system-cluster-critical
    hostNetwork: true
    hostPID: true
    initContainers:
      - name: deploy-api-gateway-configs
        image: cr.yandex/crp7nvlkttssi7kapoho/infra/metadata:${metadata_version}
        command:
          - /usr/bin/metadata
          - --attribute-name
          - api-gateway-configs
        volumeMounts:
          - name: all-configs
            mountPath: /etc
            terminationGracePeriodSeconds: 30
    containers:
      - name: api-configserver
        image: cr.yandex/crp7nvlkttssi7kapoho/api/configserver:${config_server_version}
        resources:
          requests:
            memory: "256Mi"
          limits:
            memory: "256Mi"
        volumeMounts:
          - name: api-logs
            mountPath: /var/log/configserver
            terminationGracePeriodSeconds: 30
          - name: configserver-configs
            mountPath: /etc/configserver
            readOnly: true
          - name: etc-passwd
            mountPath: /etc/passwd
            readOnly: true
      - name: api-gateway
        image: cr.yandex/crp7nvlkttssi7kapoho/api/gateway:${api_gateway_version}
        resources:
          requests:
            memory: "512Mi"
          limits:
            memory: "512Mi"
        volumeMounts:
          - name: api-logs
            mountPath: /var/log/gateway
            terminationGracePeriodSeconds: 30
          - name: gateway-configs
            mountPath: /etc/gateway
            readOnly: true
          - name: etc-passwd
            mountPath: /etc/passwd
            readOnly: true
      - name: api-envoy
        image: cr.yandex/crp7nvlkttssi7kapoho/envoy:${envoy_version}
        command: ["/usr/bin/envoy", "-c", "/etc/api/envoy/envoy.yaml"]
        resources:
          requests:
            memory: "512Mi"
          limits:
            memory: "512Mi"
        volumeMounts:
          - name: api-logs
            mountPath: /var/log/api
            terminationGracePeriodSeconds: 30
          - name: envoy-configs
            mountPath: /etc/api/envoy
            readOnly: true
      - name: private-envoy
        image: cr.yandex/crp7nvlkttssi7kapoho/envoy:${envoy_version}
        command: ["/usr/bin/envoy", "-c", "/etc/api/envoy/private-envoy.yaml", "--base-id", "1"]
        resources:
          requests:
            memory: "512Mi"
          limits:
            memory: "512Mi"
        volumeMounts:
          - name: api-logs
            mountPath: /var/log/api
            terminationGracePeriodSeconds: 30
          - name: envoy-configs
            mountPath: /etc/api/envoy
            readOnly: true
          - name: certs
            mountPath: /etc/ssl/certs
            readOnly: true
    volumes:
      - name: configserver-configs
        hostPath:
          path: /etc/api/configserver
          type: DirectoryOrCreate
      - name: envoy-configs
        hostPath:
          path: /etc/api/envoy
          type: DirectoryOrCreate
      - name: certs
        hostPath:
          path: /etc/ssl/certs/
          type: DirectoryOrCreate
      - name: gateway-configs
        hostPath:
          path: /etc/api/gateway
          type: DirectoryOrCreate
      - name: api-logs
        hostPath:
          path: /var/log/api
          type: DirectoryOrCreate
      - name: all-configs
        hostPath:
          path: /etc
          type: DirectoryOrCreate
      - name: etc-passwd
        hostPath:
          path: /etc/passwd
