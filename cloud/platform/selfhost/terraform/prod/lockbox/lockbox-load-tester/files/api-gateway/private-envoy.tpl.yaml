admin:
  access_log_path: /var/log/private-envoy/admin_access.log
  address:
    socket_address: { address: 127.0.0.1, port_value: 9902 }

# As recommended in https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge
overload_manager:
  refresh_interval: 0.25s
  resource_monitors:
  - name: "envoy.resource_monitors.fixed_heap"
    typed_config:
      "@type": type.googleapis.com/envoy.config.resource_monitor.fixed_heap.v2alpha.FixedHeapConfig
      max_heap_size_bytes: 268435456 # 256 Mb
  actions:
  - name: "envoy.overload_actions.shrink_heap"
    triggers:
    - name: "envoy.resource_monitors.fixed_heap"
      threshold:
        value: 0.95
  - name: "envoy.overload_actions.stop_accepting_requests"
    triggers:
    - name: "envoy.resource_monitors.fixed_heap"
      threshold:
        value: 0.98

static_resources:
  listeners:
    - address:
        socket_address: { address: "::", port_value: 8443 }
      filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              stat_prefix: ingress_http
              codec_type: AUTO
              request_timeout: 10s
              use_remote_address: true
              preserve_external_request_id: true
              route_config:
                name: backend_route
                virtual_hosts:
                  - name: backend_service
                    domains: ["*"]
                    routes:
                      - match: { prefix: "/" }
                        route:
                          cluster: private_backend
                          retry_policy:
                            retry_on: "connect-failure,reset,refused-stream,unavailable"
                            num_retries: 10
                            per_try_timeout: 2.5s
                            retry_back_off:
                              base_interval: 0.01s
                              max_interval: 0.1s
                            retry_host_predicate:
                              - name: envoy.retry_host_predicates.previous_hosts
              http_filters:
                - name: envoy.router
          transport_socket:
            name: "envoy.transport_sockets.tls"
            typed_config:
              "@type": type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext
              common_tls_context:
                alpn_protocols: h2
                tls_certificates:
                  - certificate_chain: { filename: "/etc/envoy/ssl/certs/api-gateway.crt" }
                    private_key: { filename: "/etc/envoy/ssl/private/api-gateway.key" }

    - name: health_v4
      address:
        socket_address: { address: "0.0.0.0", port_value: 8444 }
      filter_chains:
        - filters:
            - name: envoy.http_connection_manager
              config:
                stat_prefix: healthcheck_http
                codec_type: AUTO
                delayed_close_timeout: 0.1s
                http_protocol_options:
                  accept_http_10: true
                route_config:
                  name: healthcheck_route
                  virtual_hosts:
                    - name: healthcheck_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          direct_response:
                            status: 200
                http_filters:
                  - name: envoy.health_check
                    typed_config:
                      "@type": type.googleapis.com/envoy.config.filter.http.health_check.v2.HealthCheck
                      pass_through_mode: false
                      cluster_min_healthy_percentages:
                        private_backend: { value: 25 }
                  - name: envoy.router

    - name: health_v6
      address:
        socket_address: { address: "::", port_value: 8444 }
      filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              stat_prefix: healthcheck_http
              codec_type: AUTO
              delayed_close_timeout: 0.1s
              http_protocol_options:
                accept_http_10: true
              route_config:
                name: healthcheck_route
                virtual_hosts:
                  - name: healthcheck_service
                    domains: ["*"]
                    routes:
                      - match: { prefix: "/" }
                        direct_response:
                          status: 200
              http_filters:
                - name: envoy.health_check
                  typed_config:
                    "@type": type.googleapis.com/envoy.config.filter.http.health_check.v2.HealthCheck
                    pass_through_mode: false
                    cluster_min_healthy_percentages:
                      private_backend: { value: 25 }
                - name: envoy.router

  clusters:
    - name: private_backend
      connect_timeout: 1s
      type: STRICT_DNS
      lb_policy: RANDOM
      http2_protocol_options: {}
      load_assignment:
        cluster_name: private_backend
        endpoints:
          - priority: 0
            lb_endpoints:
              - endpoint: { address: { socket_address: { address: localhost, port_value: 9443 } } }
          - priority: 1
            lb_endpoints: ${lb_endpoints}
      health_checks:
        timeout: 1s
        interval: 10s
        unhealthy_interval: 2.5s
        healthy_threshold: 2
        unhealthy_threshold: 2
        grpc_health_check: {}
      outlier_detection:
        consecutive_5xx: 5
        enforcing_consecutive_5xx: 100
        max_ejection_percent: 75
        # Must be at least as long as interval in health_checks
        base_ejection_time: 10s
      circuit_breakers:
        thresholds:
          - priority: DEFAULT
            max_connections: 1000
            max_pending_requests: 1000
            max_requests: 1000
            # Allow all requests to be retried concurrently (e.g. when the localhost endpoint dies).
            max_retries: 1000
      tls_context:
        common_tls_context:
          alpn_protocols: h2
          validation_context:
            trusted_ca:
              filename: /etc/envoy/ssl/certs/allCAs.pem
