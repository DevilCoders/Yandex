apiVersion: v1
kind: PodList
items:
- apiVersion: v1
  kind: Pod
  metadata:
    name: api-infrastructure
    namespace: kube-system
    annotations:
      config_digest: ${infra_config_digest}
      scheduler.alpha.kubernetes.io/critical-pod: ""
    labels:
      role: api
  spec:
    priority: 2000000001
    hostNetwork: true
    hostPID: true
    priorityClassName: system-cluster-critical
    initContainers:
    - name: deploy-infra-configs
      image: cr.yandex/crp7nvlkttssi7kapoho/infra/metadata:${metadata_version}
      command:
      - /usr/bin/metadata
      - --attribute-name
      - infra-configs
      imagePullPolicy: Always
      volumeMounts:
      - name: all-configs
        mountPath: /etc
        terminationGracePeriodSeconds: 30
    containers:
    - name: solomon-agent
      image: cr.yandex/crpr3khkepsccf25vvt6/solomon-agent:${solomon_version}
      resources:
        requests:
          memory: "512Mi"
        limits:
          memory: "512Mi"
      volumeMounts:
      - name: solomon-agent-config
        mountPath: /etc/solomon-agent/
        readOnly: true
    volumes:
    - name: all-configs
      hostPath:
       path: /etc
       type: DirectoryOrCreate
    - name: var-log
      hostPath:
        path: /var/log
    - name: solomon-agent-config
      hostPath:
        path: /etc/solomon-agent
- apiVersion: v1
  kind: Pod
  metadata:
    name: api-static
    namespace: kube-system
    labels:
      role: api 
    annotations:
      config_digest: ${config_digest}
      scheduler.alpha.kubernetes.io/critical-pod: ""
  spec:
    priority: 2000000001
    priorityClassName: system-cluster-critical
    hostNetwork: true
    initContainers:
    - name: deploy-configs
      image: cr.yandex/crp7nvlkttssi7kapoho/infra/metadata:${metadata_version}
      volumeMounts:
      - name: all-configs
        mountPath: /etc
        terminationGracePeriodSeconds: 30
    containers:
    - name: root-kms
      image: cr.yandex/crpr3khkepsccf25vvt6/kms-root-service:${application_version}
      resources:
        requests:
          memory: "3300Mi"
        limits:
          memory: "3300Mi"
      env:
      - name: APPLICATION_YAML
        value: /etc/kms/application.yaml
      - name: MASTER_KEY_PATH
        value: /etc/kms/master-key-config.yaml
      - name: KEYS_PATH
        value: /etc/kms/keys-config.yaml
      - name: APPLICATION_LOG_DIR
        value: /var/log/kms
      - name: APPLICATION_LOG_FILE_MAX_FILES
        value: "3"
      - name: APPLICATION_ACCESS_LOG_FILE_MAX_FILES
        value: "3"
      - name: APPLICATION_AUDIT_LOG_FILE_MAX_FILES
        value: "3"
      - name: YANDEX_CLOUD_LOG_LEVEL
        value: debug
      - name: JAVA_TOOL_OPTIONS
        value: "-Xmx2300m -XX:-UseContainerSupport -Djava.net.preferIPv6Addresses=true -Dfile.encoding=UTF-8 -Xlog:gc*:file=/var/log/kms/gc.log:time,uptime:filecount=10,filesize=100M"
      # - name: YANDEX_CLOUD_ACCESS_LOG_LEVEL
      #   value: info
      volumeMounts:
      - name: kms-configs
        mountPath: /etc/kms
        readOnly: true
      - name: var-kms
        mountPath: /var/kms
        terminationGracePeriodSeconds: 30
      - name: var-log-kms
        mountPath: /var/log/kms
    volumes:
    - name: all-configs
      hostPath:
        path: /etc
        type: DirectoryOrCreate
    - name: kms-configs
      hostPath:
        path: /etc/kms
        type: DirectoryOrCreate
    - name: var-kms
      hostPath:
        path: /var/kms
        type: DirectoryOrCreate
    - name: var-log-kms
      hostPath:
        path: /var/log/kms
        type: DirectoryOrCreate
