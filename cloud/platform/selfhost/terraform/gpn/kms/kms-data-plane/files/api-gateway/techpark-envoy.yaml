admin:
  access_log_path: /var/log/api/techpark-envoy-admin_access.log
  address:
    socket_address: { address: 127.0.0.1, port_value: 9904 }

# As recommended in https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge
overload_manager:
  refresh_interval: 0.25s
  resource_monitors:
  - name: "envoy.resource_monitors.fixed_heap"
    typed_config:
      "@type": type.googleapis.com/envoy.config.resource_monitor.fixed_heap.v2alpha.FixedHeapConfig
      max_heap_size_bytes: 268435456 # 256 Mb
  actions:
  - name: "envoy.overload_actions.shrink_heap"
    triggers:
    - name: "envoy.resource_monitors.fixed_heap"
      threshold:
        value: 0.95
  - name: "envoy.overload_actions.stop_accepting_requests"
    triggers:
    - name: "envoy.resource_monitors.fixed_heap"
      threshold:
        value: 0.98

static_resources:
  listeners:
    - address:
        socket_address: { address: "::", port_value: 443 }
      listener_filters:
      - name: "envoy.listener.tls_inspector"
        typed_config: {}
      per_connection_buffer_limit_bytes: 32768
      filter_chains:
        - filter_chain_match:
            server_names: ["kms.gpn.yandexcloud.net"]
          filters:
          - name: envoy.http_connection_manager
            config:
              stat_prefix: ingress_http
              codec_type: AUTO
              request_timeout: 10s
              use_remote_address: true
              http2_protocol_options:
                max_concurrent_streams: 100
                initial_stream_window_size: 65536
                initial_connection_window_size: 1048576
              route_config:
                name: backend_route
                virtual_hosts:
                  - name: backend_service
                    domains: ["*"]
                    routes:
                      - match: { prefix: "/" }
                        route:
                          cluster: public_backend
              http_filters:
                - name: envoy.router
          transport_socket:
            name: "envoy.transport_sockets.tls"
            typed_config:
              "@type": type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext
              common_tls_context:
                alpn_protocols: h2
                tls_params:
                  tls_minimum_protocol_version: TLSv1_2
                tls_certificates:
                  - certificate_chain: { filename: "/etc/api/envoy/ssl/certs/api-gateway.crt" }
                    private_key: { filename: "/etc/api/envoy/ssl/private/api-gateway.key" }
        - filter_chain_match:
            server_names: ["kms.yac.techpark.local"]
          filters:
          - name: envoy.http_connection_manager
            config:
              stat_prefix: ingress_http
              codec_type: AUTO
              request_timeout: 10s
              use_remote_address: true
              http2_protocol_options:
                max_concurrent_streams: 100
                initial_stream_window_size: 65536
                initial_connection_window_size: 1048576
              route_config:
                name: backend_route
                virtual_hosts:
                  - name: backend_service
                    domains: ["*"]
                    routes:
                      - match: { prefix: "/" }
                        route:
                          cluster: public_backend
              http_filters:
                - name: envoy.router
          transport_socket:
            name: "envoy.transport_sockets.tls"
            typed_config:
              "@type": type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext
              common_tls_context:
                alpn_protocols: h2
                tls_params:
                  tls_minimum_protocol_version: TLSv1_2
                tls_certificates:
                  - certificate_chain: { filename: "/etc/api/envoy/ssl/certs/techpark-api-gateway.crt" }
                    private_key: { filename: "/etc/api/envoy/ssl/private/techpark-api-gateway.key" }

    - address:
        socket_address: { address: "0.0.0.0", port_value: 443 }
      per_connection_buffer_limit_bytes: 32768
      filter_chains:
        - filter_chain_match:
            server_names: ["kms.gpn.yandexcloud.net"]
          filters:
          - name: envoy.http_connection_manager
            config:
              stat_prefix: ingress_http
              codec_type: AUTO
              request_timeout: 10s
              use_remote_address: true
              http2_protocol_options:
                max_concurrent_streams: 100
                initial_stream_window_size: 65536
                initial_connection_window_size: 1048576
              route_config:
                name: backend_route
                virtual_hosts:
                  - name: backend_service
                    domains: ["*"]
                    routes:
                      - match: { prefix: "/" }
                        route:
                          cluster: public_backend
              http_filters:
                - name: envoy.router
          transport_socket:
            name: "envoy.transport_sockets.tls"
            typed_config:
              "@type": type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext
              common_tls_context:
                alpn_protocols: h2
                tls_params:
                  tls_minimum_protocol_version: TLSv1_2
                tls_certificates:
                  - certificate_chain: { filename: "/etc/api/envoy/ssl/certs/api-gateway.crt" }
                    private_key: { filename: "/etc/api/envoy/ssl/private/api-gateway.key" }
        - filter_chain_match:
            server_names: ["kms.yac.techpark.local"]
          filters:
          - name: envoy.http_connection_manager
            config:
              stat_prefix: ingress_http
              codec_type: AUTO
              request_timeout: 10s
              use_remote_address: true
              http2_protocol_options:
                max_concurrent_streams: 100
                initial_stream_window_size: 65536
                initial_connection_window_size: 1048576
              route_config:
                name: backend_route
                virtual_hosts:
                  - name: backend_service
                    domains: ["*"]
                    routes:
                      - match: { prefix: "/" }
                        route:
                          cluster: public_backend
              http_filters:
                - name: envoy.router
          transport_socket:
            name: "envoy.transport_sockets.tls"
            typed_config:
              "@type": type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext
              common_tls_context:
                alpn_protocols: h2
                tls_params:
                  tls_minimum_protocol_version: TLSv1_2
                tls_certificates:
                  - certificate_chain: { filename: "/etc/api/envoy/ssl/certs/techpark-api-gateway.crt" }
                    private_key: { filename: "/etc/api/envoy/ssl/private/techpark-api-gateway.key" }

    - address:
        socket_address: { address: "::", port_value: 444 }
      filter_chains:
        - filters:
            - name: envoy.http_connection_manager
              config:
                stat_prefix: healthcheck
                codec_type: AUTO
                http_protocol_options:
                  accept_http_10: true
                route_config:
                  name: healthcheck
                  virtual_hosts:
                    - name: healthcheck
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route:
                            cluster: public_healthcheck
                            timeout: 60s
                http_filters:
                  - name: envoy.router

    - address:
        socket_address: { address: 0.0.0.0, port_value: 444 }
      filter_chains:
        - filters:
            - name: envoy.http_connection_manager
              config:
                stat_prefix: healthcheck
                codec_type: AUTO
                http_protocol_options:
                  accept_http_10: true
                route_config:
                  name: healthcheck
                  virtual_hosts:
                    - name: healthcheck
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route:
                            cluster: public_healthcheck
                            timeout: 60s
                http_filters:
                  - name: envoy.router

  clusters:
    - name: public_backend
      connect_timeout: 1s
      type: STATIC
      lb_policy: RANDOM
      http2_protocol_options: {}
      load_assignment:
        cluster_name: public_backend
        endpoints:
          - priority: 0
            lb_endpoints:
              - endpoint: { address: { socket_address: { address: 127.0.0.1, port_value: 1443 } } }
      circuit_breakers:
        thresholds:
          - priority: DEFAULT
            max_connections: 1000
            max_pending_requests: 1000
            max_requests: 1000
            max_retries: 1000
      tls_context:
        common_tls_context:
          alpn_protocols: h2
          validation_context:
            trusted_ca:
              filename: /usr/local/share/ca-certificates/GPNInternalRootCA.crt

    - name: public_healthcheck
      connect_timeout: 1s
      type: STATIC
      lb_policy: RANDOM
      load_assignment:
        cluster_name: public_healthcheck
        endpoints:
          - priority: 0
            lb_endpoints:
              - endpoint: { address: { socket_address: { address: 127.0.0.1, port_value: 1444 } } }
