# Serverless folder: uid: V5ZW14jik, id: 119378
folderId: 119378
uid:      ycf-duty
title:    YCF duty
refresh:  15s
time:     1h

graphDefaults:
  datasource: 'Solomon Cloud'
  width:      8
  height:     6

queryDefaults:
  labels: >-
          project=serverless,
          host=${zone:pipe}

variables:
  ui:
    cluster:
      values:
      - prod
      - preprod
    zone:
      values:
      - '*vla*'
      - '*sas*'
      - '*myt*'
      titles:
      - vla
      - sas
      - myt
      multi: true

rows:
# router HTTP
- title: Router HTTP calls
  queryDefaults:
    labels: >-
            service=router,
            cluster=router_${cluster}
  panels:
  - title: Router HTTP request rate
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: rps
      sumLines:
      - name
    - name: alias
      alias: '{{name}}'
    queries:
    - params:
        labels: name=http_requests_completed|http_requests_inflight
    draw:
    - alias: http_requests_completed
      color: '#56A64B'
    - alias: http_requests_inflight
      color: '#E0B400'
    yAxes:
    - decimals: 0
  - title: Router HTTP error rate
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: errors
      sumLines:
      - code
    - name: alias
      alias: '{{code}}'
    queries:
    - params:
        labels: >-
                name=http_requests_completed,
                code=5*|4*
    draw:
    - alias: 500
      color: '#FF0000'
    - alias: 502
      color: '#808080'
    - alias: 503
      color: '#FF8080'
    - alias: 504
      color: '#70A070'
    - alias: 400
      color: '#0000FF'
    - alias: 401
      color: '#2020FF'
    - alias: 403
      color: '#4040FF'
    - alias: 404
      color: '#7070FF'
    - alias: 429
      color: '#A0A0FF'
    - alias: 499
      color: '#F0F0FF'
    yAxes:
    - decimals: 0
  - title: Router HTTP client response duration
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
      name:   percentile
      format: solomon
      sensor: counter
      levels:
      - 50
      - 75
      - 90
      - 95
    queries:
    - params:
        labels: name=http_request_duration_seconds
    draw:
    - alias: p50
      color: '#37872D'
    - alias: p75
      color: '#E0B400'
    - alias: p90
      color: '#FA6400'
    - alias: p95
      color: '#C4162A'
    yAxes:
    - format: s
      min:    0
# client metrics
- title: Client metrics
  queryDefaults:
    labels: >-
            service=router,
            cluster=router_${cluster}
  panels:
  - title: Request rate
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: rps
      sumLines:
      - name
    - name: alias
      alias: '{{name}}'
    queries:
    - params:
        labels: name=funcs_started|funcs_finished
    draw:
    - alias: funcs_started
      color: '#56A64B'
    - alias: funcs_finished
      color: '#E0B400'
    yAxes:
    - format:   short
      min:      0
      decimals: 0
  - title: Error rate
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
      name:     rps
      sumLines: true
    queries:
    - params:
        labels: name=funcs_errors
    draw:
    - alias: client errors
      color: '#56A64B'
    yAxes:
    - format:   short
      min:      0
      decimals: 0
  - title: Duration
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    queries:
    - params:
        labels: name=funcs_min_duration
      groupByTime:
        max: default
      select:
        group_lines: max
        alias:       min
    - params:
        labels: name=funcs_avg_duration
      groupByTime:
        max: default
      select:
        group_lines: max
        alias:       avg
    - params:
        labels: name=funcs_max_duration
      groupByTime:
        max: default
      select:
        group_lines: max
        alias:       max
    draw:
    - alias: min
      color: '#37872D'
    - alias: avg
      color: '#E0B400'
    - alias: max
      color: '#C4162A'
    yAxes:
    - format:   s
      min:      0
      decimals: 0
# router gRPC
- title: Router gRPC client calls
  queryDefaults:
    labels: >-
            service=router,
            cluster=router_${cluster}
  panels:
  - title: Router gRPC client calls
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: rps
      sumLines:
      - grpc_service
    - name:  alias
      alias: '{{grpc_service}}/{{grpc_method}}'
    queries:
    - params:
        labels: name=grpc_client_started_total
    yAxes:
    - decimals: 0
  - title: Router gRPC client errors
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: errors
      sumLines:
      - grpc_code
    - name: alias
      alias: '{{grpc_code}}'
    queries:
    - params:
        labels: >-
                name=grpc_client_handled_total,
                grpc_code!=OK
    yAxes:
    - decimals: 0
  - title: Router gRPC client response duration
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
      name:   percentile
      format: solomon
      sensor: counter
      levels:
      - 50
      - 75
      - 90
      - 95
    queries:
    - params:
        labels: name=grpc_client_handling_seconds
    draw:
    - alias: p50
      color: '#37872D'
    - alias: p75
      color: '#E0B400'
    - alias: p90
      color: '#FA6400'
    - alias: p95
      color: '#C4162A'
    yAxes:
    - decimals: 0
# scheduler. TODO: remove sensor vs name rows and use queryDefaults in hist.
- title: Scheduler
  queryDefaults:
    labels: >-
            service=scheduler,
            cluster=scheduler_${cluster},
            grpc_service=yandex.cloud.priv.serverless.functions.v1.inner.SchedulerService
  panels:
  - title: Scheduler gRPC requests
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: rps
      sumLines:
      - grpc_method
    - name:  patchSelect
      after: last
      add:
        alias: '{{grpc_method}}'
    queries:
    - params:
        labels: name=grpc_server_started_total
    - params:
        labels: sensor=grpc_server_started_total
    yAxes:
    - decimals: 0
  - title: Scheduler gRPC errors
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: errors
      sumLines:
      - grpc_code
    queryDefaults:
      labels: grpc_code!=OK
    queries:
    - params:
        labels: name=grpc_server_handled_total
    - params:
        labels: sensor=grpc_server_handled_total
    yAxes:
    - decimals: 0
  - title: Scheduler gRPC response duration
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    queries:
    - params:
        labels: name=grpc_server_handling_seconds
      groupByTime:
        max: default
      select:
        non_negative_derivative: []
        group_by_labels:
        - sum
        - bin
        histogram_percentile:
        - 50
        - bin
        alias: p50
    - params:
        labels: name=grpc_server_handling_seconds
      groupByTime:
        max: default
      select:
        non_negative_derivative: []
        group_by_labels:
        - sum
        - bin
        histogram_percentile:
        - 75
        - bin
        alias: p75
    - params:
        labels: name=grpc_server_handling_seconds
      groupByTime:
        max: default
      select:
        non_negative_derivative: []
        group_by_labels:
        - sum
        - bin
        histogram_percentile:
        - 90
        - bin
        alias: p90
    - params:
        labels: name=grpc_server_handling_seconds
      groupByTime:
        max: default
      select:
        non_negative_derivative: []
        group_by_labels:
        - sum
        - bin
        histogram_percentile:
        - 95
        - bin
        alias: p95
    - params:
        labels: sensor=grpc_server_handling_seconds
      groupByTime:
        max: default
      select:
        non_negative_derivative: []
        group_by_labels:
        - sum
        - le
        histogram_percentile:
        - 50
        - le
        alias: p50
    - params:
        labels: sensor=grpc_server_handling_seconds
      groupByTime:
        max: default
      select:
        non_negative_derivative: []
        group_by_labels:
        - sum
        - le
        histogram_percentile:
        - 75
        - le
        alias: p75
    - params:
        labels: sensor=grpc_server_handling_seconds
      groupByTime:
        max: default
      select:
        non_negative_derivative: []
        group_by_labels:
        - sum
        - le
        histogram_percentile:
        - 90
        - le
        alias: p90
    - params:
        labels: sensor=grpc_server_handling_seconds
      groupByTime:
        max: default
      select:
        non_negative_derivative: []
        group_by_labels:
        - sum
        - le
        histogram_percentile:
        - 95
        - le
        alias: p95
    draw:
    - alias: p50
      color: '#37872D'
    - alias: p75
      color: '#E0B400'
    - alias: p90
      color: '#FA6400'
    - alias: p95
      color: '#C4162A'
    yAxes:
    - format:   s
      min:      0
      decimals: 0
# engine overview: amount, state age, ready vms.
# TODO: as scheduler
- title: 'Engine state: overview'
  queryDefaults:
    labels: >-
            service=scheduler,
            cluster=scheduler_${cluster}
  graphDefaults:
    datasource: 'Solomon Cloud'
    width:      6
    height:     6
  panels:
  - title: Available engines
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: patchSelect
      after: last
      add:
        alias: '{{host}}'
    queries:
    - params:
        labels: name=sm_available_engines
      groupByTime:
        min: default
    - params:
        labels: sensor=sm_available_engines
      groupByTime:
        min: default
    yAxes:
    - format:   short
      min:      0
      decimals: 0
  - title: State age
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: patchSelect
      after: last
      add:
        alias: '{{host}}'
    queries:
    - params:
        labels: name=sm_state_age
      groupByTime:
        max: default
    - params:
        labels: sensor=sm_state_age
      groupByTime:
        max: default
    yAxes:
    - format:   ms
      min:      0
      decimals: 0
  - title: Ready VMs
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: patchSelect
      after: last
      add:
        alias: '{{host}}'
    queries:
    - params:
        labels: name=sm_ready_vms
      groupByTime:
        min: default
    - params:
        labels: sensor=sm_ready_vms
      groupByTime:
        min: default
    yAxes:
    - format:   short
      min:      0
      decimals: 0
  - title: Load
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: patchSelect
      after: last
      add:
        alias: '{{host}}'
    queries:
    - params:
        labels: name=sm_load
      groupByTime:
        max: default
    - params:
        labels: sensor=sm_load
      groupByTime:
        max: default
    yAxes:
    - format:   percentunit
      min:      0
# engine orchestration - jobs, worker sets, workers,
# TODO: as scheduler
- title: 'Engine state: orchestration'
  queryDefaults:
    labels: >-
            service=scheduler,
            cluster=scheduler_${cluster}
  panels:
  - title: Jobs
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name:   patchSelect
      before: last
      add:
        group_by_labels:
        - sum
        - host
    queries:
    - params:
        labels: name=sm_queue_length
      groupByTime:
        max:   default
      select:
        alias: 'queue@{{host}}'
    - params:
        labels: name=sm_inflight
      groupByTime:
        max: default
      select:
        alias: 'inflight@{{host}}'
    - params:
        labels: sensor=sm_queue_length
      groupByTime:
        max: default
      select:
        alias: 'queue@{{host}}'
    - params:
        labels: sensor=sm_inflight
      groupByTime:
        max: default
      select:
        alias: 'inflight@{{host}}'
    yAxes:
    - format:   short
      min:      0
      decimals: 0
  - title: Worker sets
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: patchSelect
      after: last
      add:
        alias: '{{host}}'
    queries:
    - params:
        labels: name=sm_worker_sets
      groupByTime:
        max: default
    - params:
        labels: sensor=sm_worker_sets
      groupByTime:
        max: default
    yAxes:
    - format:   short
      min:      0
      decimals: 0
  - title: Workers
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: patchSelect
      after: last
      add:
        alias: '{{host}}'
    queries:
    - params:
        labels: name=sm_workers
      groupByTime:
        max: default
    - params:
        labels: sensor=sm_workers
      groupByTime:
        max: default
    yAxes:
    - format:   short
      min:      0
      decimals: 0
# engine utilization: cores, memory, network, overall load
# TODO: as scheduler
- title: 'Engine state: utilization'
  queryDefaults:
    labels: >-
            service=scheduler,
            cluster=scheduler_${cluster}
  panels:
  - title: Cores
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name:   patchSelect
      before: last
      add:
        group_by_labels:
        - sum
        - host
    queries:
    - params:
        labels: name=sm_cores_free
      groupByTime:
        max: default
      select:
        alias: 'free@{{host}}'
    - params:
        labels: name=sm_cores
      groupByTime:
        max: default
      select:
        alias: 'total@{{host}}'
    - params:
        labels: sensor=sm_cores_free
      groupByTime:
        max: default
      select:
        alias: 'free@{{host}}'
    - params:
        labels: sensor=sm_cores
      groupByTime:
        max: default
      select:
        alias: 'total@{{host}}'
    yAxes:
    - format:   short
      min:      0
      decimals: 0
  - title: Memory
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name:   patchSelect
      before: last
      add:
        group_by_labels:
        - sum
        - host
    queries:
    - params:
        labels: name=sm_memory_free
      groupByTime:
        max: default
      select:
        alias: 'free@{{host}}'
    - params:
        labels: name=sm_memory
      groupByTime:
        max: default
      select:
        alias: 'total@{{host}}'
    - params:
        labels: sensor=sm_memory_free
      groupByTime:
        max: default
      select:
        alias: 'free@{{host}}'
    - params:
        labels: sensor=sm_memory
      groupByTime:
        max: default
      select:
        alias: 'total@{{host}}'
    yAxes:
    - format:   bytes
      min:      0
      decimals: 0
  - title: Network interrfaces
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name:   patchSelect
      before: last
      add:
        group_by_labels:
        - sum
        - host
    queries:
    - params:
        labels: name=sm_network_interfaces_in_use
      groupByTime:
        max: default
      select:
        alias: 'in_use@{{host}}'
    - params:
        labels: name=sm_network_interfaces_bound
      groupByTime:
        max: default
      select:
        alias: 'bound@{{host}}'
    - params:
        labels: name=sm_network_interfaces_failed
      groupByTime:
        max: default
      select:
        alias: 'failed@{{host}}'
    - params:
        labels: sensor=sm_network_interfaces_in_use
      groupByTime:
        max: default
      select:
        alias: 'in_use@{{host}}'
    - params:
        labels: sensor=sm_network_interfaces_bound
      groupByTime:
        max: default
      select:
        alias: 'bound@{{host}}'
    - params:
        labels: sensor=sm_network_interfaces_failed
      groupByTime:
        max: default
      select:
        alias: 'failed@{{host}}'
    yAxes:
    - format:   short
      min:      0
      decimals: 0
# engine
- title: Engine
  queryDefaults:
    labels: >-
            service=engine,
            cluster=compute,
            environment=${cluster}
  panels:
  - title: Engine gRPC requests
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: rps
      sumLines:
      - grpc_method
    queries:
    - params:
        labels: >-
                sensor=grpc_server_started_total,
                grpc_service=yandex.cloud.priv.serverless.functions.v1.inner.EngineService
    yAxes:
    - decimals: 0
  - title: Engine gRPC errors
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name: errors
      sumLines:
      - grpc_code
    - name: alias
      alias: '{{grpc_code}}'
    queries:
    - params:
        labels: >-
                sensor=grpc_server_handled_total,
                grpc_code!=OK,
                grpc_service=yandex.cloud.priv.serverless.functions.v1.inner.EngineService
    yAxes:
    - decimals: 0
  - title: Engine gRPC response duration
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name:       percentile
      format:     prometheus
      groupLines: true
      sensor:     counter
      levels:
      - 50
      - 75
      - 90
      - 95
    queries:
    - params:
        labels: >-
                sensor=grpc_server_handling_seconds,
                grpc_service=yandex.cloud.priv.serverless.functions.v1.inner.EngineService
    draw:
    - alias: p50
      color: '#37872D'
    - alias: p75
      color: '#E0B400'
    - alias: p90
      color: '#FA6400'
    - alias: p95
      color: '#C4162A'
    yAxes:
    - decimals: 0
  - title: Engine HTTP response duration
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name:       percentile
      format:     prometheus
      groupLines: true
      sensor:     counter
      levels:
      - 50
      - 75
      - 90
      - 95
    queries:
    - params:
        labels: sensor=http_request_duration_seconds
    draw:
    - alias: p50
      color: '#37872D'
    - alias: p75
      color: '#E0B400'
    - alias: p90
      color: '#FA6400'
    - alias: p95
      color: '#C4162A'
    yAxes:
    - decimals: 0
# engine resources
- title: Engine resources
  queryDefaults:
    labels: >-
            service=engine,
            cluster=compute,
            environment=${cluster}
  panels:
  - title: Workers allocated
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    queries:
    - params:
        labels: sensor=workers_allocated
      groupByTime:
        max: default
      select:
        alias: '{{host}}'
    yAxes:
    - format:   short
      min:      0
      decimals: 0
  - title: Functions allocated
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    queries:
    - params:
        labels: sensor=functions_allocated
      groupByTime:
        max: default
      select:
        alias: '{{host}}'
    yAxes:
    - format:   short
      min:      0
      decimals: 0
  - title: Memory usage
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    queries:
    - params:
        labels: sensor=memory_usage
      groupByTime:
        max: default
      select:
        alias: '{{host}}'
    yAxes:
    - format:   bytes
      min:      0
      decimals: 0
# cpl
- title: Control plane
  queryDefaults:
    labels: >-
            service=functions,
            cluster=functions_${cluster},
            app=function_server
  panels:
  - title: Control plane gRPC requests
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    queryDefaults:
      labels: >-
              name=grpc_requests,
              meter_type=count
    templates:
    - name:   patchSelect
      before: last
      add:
        non_negative_derivative: []
        group_by_labels:
        - sum
        - grpc_method
    queries:
    - params:
        labels: method=serverless.functions.v1.FunctionService/*
      groupByTime:
        max: default
      select:
        alias: FunctionService
    - params:
        labels: method=serverless.functions.v1.SessionService/*
      groupByTime:
        max: default
      select:
        alias: SessionService
    - params:
        labels: method=serverless.functions.v1.OperationService/*
      groupByTime:
        max: default
      select:
        alias: OperationService
    - params:
        labels: method=serverless.functions.v1.QuotaService/*
      groupByTime:
        max: default
      select:
        alias: QuotaService
    - params:
        labels: method=serverless.functions.v1.inner.ControlService/*
      groupByTime:
        max: default
      select:
        alias: inner.ControlService
    yAxes:
    - format:   short
      min:      0
      decimals: 0
  - title: Control plane gRPC errors
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name:     errors
      sumLines:
      - status
    - name: alias
      alias: '{{status}}'
    queries:
    - params:
        labels: >-
                name=grpc_statuses,
                status!=OK
    yAxes:
    - decimals: 0
  - title: Control plane gRPC response duration
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name:       percentile
      format:     solomon
      groupLines: true
      sensor:     counter
      levels:
      - 50
      - 75
      - 90
      - 95
    queries:
    - params:
        labels: name=grpc_durations
    draw:
    - alias: p50
      color: '#37872D'
    - alias: p75
      color: '#E0B400'
    - alias: p90
      color: '#FA6400'
    - alias: p95
      color: '#C4162A'
    yAxes:
    - decimals: 0
# packer
- title: Packer
  queryDefaults:
    labels: >-
            service=packer,
            cluster=packer_${cluster},
            grpc_service=yandex.cloud.priv.serverless.functions.v1.inner.PackageService
  panels:
  - title: Packer gRPC requests
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name:     rps
      sumLines:
      - grpc_method
    queries:
    - params:
        labels: name=grpc_server_started_total
    yAxes:
    - decimals: 0
  - title: Packer gRPC errors
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name:     errors
      sumLines:
      - grpc_code
    - name: alias
      alias: '{{grpc_code}}'
    queries:
    - params:
        labels: >-
                name=grpc_server_handled_total,
                grpc_code!=OK
    yAxes:
    - decimals: 0
  - title: Packer gRPC response duration
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name:       percentile
      format:     solomon
      groupLines: true
      sensor:     counter
      levels:
      - 50
      - 75
      - 90
      - 95
    queries:
    - params:
        labels: name=grpc_server_handling_seconds
    draw:
    - alias: p50
      color: '#37872D'
    - alias: p75
      color: '#E0B400'
    - alias: p90
      color: '#FA6400'
    - alias: p95
      color: '#C4162A'
    yAxes:
    - decimals: 0
# integrator
- title: Integrator
  queryDefaults:
    labels: >-
            service=integrator,
            cluster=integrator_${cluster},
            grpc_service=yandex.cloud.priv.serverless.functions.v1.inner.AliceIntegrationService
  panels:
  - title: Integrator gRPC requests
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name:     rps
      sumLines:
      - grpc_method
    queries:
    - params:
        labels: name=grpc_server_started_total
    yAxes:
    - decimals: 0
  - title: Integrator gRPC errors
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name:     errors
      sumLines:
      - grpc_code
    - name: alias
      alias: '{{grpc_code}}'
    queries:
    - params:
        labels: >-
                name=grpc_server_handled_total,
                grpc_code!=OK
    yAxes:
    - decimals: 0
  - title: Integrator gRPC response duration
    type:  graph
    display:
      stack: false
      empty: false
      fill:  0
      nulls: zero
      sort:  decreasing
    templates:
    - name:       percentile
      format:     solomon
      groupLines: true
      sensor:     counter
      levels:
      - 50
      - 75
      - 90
      - 95
    queries:
    - params:
        labels: name=grpc_server_handling_seconds
    draw:
    - alias: p50
      color: '#37872D'
    - alias: p75
      color: '#E0B400'
    - alias: p90
      color: '#FA6400'
    - alias: p95
      color: '#C4162A'
    yAxes:
    - decimals: 0
