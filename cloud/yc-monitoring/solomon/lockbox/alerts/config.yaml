{% import "vars.yaml" as vars with context %}

menu: "[Lockbox] Alerts"
menu_type: admin
api_path: /alerts/
tags: ["lockbox"]

entities:
  lockbox_api_errors:
    template: lockbox_api_errors.j2
    project_id: "{{ vars.project_id }}"
    exclude:
      env: [main]
  lockbox_data_alive_instances:
    template: lockbox_alive_instances.j2
    project_id: "{{ vars.project_id }}"
    exclude:
      env: [main]
    context:
      instances: 3
      service_name: "DATA"
      host_regex: "cluster-data-all"
  lockbox_control_alive_instances:
    template: lockbox_alive_instances.j2
    project_id: "{{ vars.project_id }}"
    exclude:
      env: [main]
    context:
      instances: 3
      service_name: "CONTROL"
      host_regex: "cluster-control-all"
  lockbox_low_disk_space:
    template: lockbox_low_disk_space.j2
    project_id: "{{ vars.project_id }}"
    exclude:
      env: [ main ]
    context:
      memory_limit: "2e9"
      host_regex: "lockbox-*|dpl-*|cpl-*"
      mount_point: "/etc/hosts"
  lockbox_payload_cleaner_secret_processing_errors:
    template: lockbox_payload_cleaner_processing_errors.j2
    project_id: "{{ vars.project_id }}"
    exclude:
      env: [ main ]
    context:
      resource_type: "secret"
      sensor: "processSecrets"
  lockbox_payload_cleaner_version_processing_errors:
    template: lockbox_payload_cleaner_processing_errors.j2
    project_id: "{{ vars.project_id }}"
    exclude:
      env: [ main ]
    context:
      resource_type: "version"
      sensor: "processVersions"
  lockbox_payload_cleaner_secret_processed:
    template: lockbox_payload_cleaner_processed.j2
    project_id: "{{ vars.project_id }}"
    exclude:
      env: [ main ]
    context:
      resource_type: "secret"
      sensor: "allSecretsProcessed"
  lockbox_payload_cleaner_version_processed:
    template: lockbox_payload_cleaner_processed.j2
    project_id: "{{ vars.project_id }}"
    exclude:
      env: [ main ]
    context:
      resource_type: "version"
      sensor: "allVersionsProcessed"
