{% extends "vpc_api_base_alert.j2" %}

{% set service = "vpc-api-errors" %}

{# We assume that popular requests are made to vpc-api host and indicate that it has some traffic #}
{% set popular_grpc_reqs = (
    'vpc.v1.NetworkService/List',
    'vpc.v1.SubnetService/List',
    'vpc.v1.OperationService/Get',
    'vpc.v1.inner.InternalOperationService/Get',
    'vpc.v1.inner.NetworkInterfaceAttachmentService/Create',
    'vpc.v1.inner.NetworkInterfaceAttachmentService/Delete',
) %}

{% set grpc_error_statuses = (
    'UNAVAILABLE',
    'INTERNAL',
    'UNKNOWN',
    'DEADLINE_EXCEEDED',
    'UNIMPLEMENTED',
    'DATA_LOSS',
)%}

{% macro prog() %}
// use the most popular methods NetworkService/List and SubnetService/List to prevent max metrics to load limit
let signal_ts = series_sum({
    cluster='cloud_{{env}}_vpc-api'
    ,sensor='grpc_requests_with_status'
    ,meter_type='m1_rate'
    ,app='vpc-config-plane_server'
    ,host='vpc-api-*'
    ,status='OK'
    ,method='{{ popular_grpc_reqs | join('|') }}'
});
// There should be OK stattuses
no_data_if(count(signal_ts) == 0);

let ts = series_sum({
    cluster='cloud_{{env}}_vpc-api'
    ,sensor='grpc_requests_with_status'
    ,meter_type='m1_rate'
    ,app='vpc-config-plane_server'
    ,host='vpc-api-*'
    ,status='{{ grpc_error_statuses | join('|') }}'
});
let error_rate_str = '0.000';

// It's ok, just no errors for current host for a while
ok_if(count(ts) == 0);

let error_rate = avg(ts);
let error_rate_str = to_fixed(error_rate, 3);

alarm_if(error_rate > (2 / 60.0));
warn_if(error_rate > (1 / 60.0));
{% endmacro %}

{% block main %}
    "name": "VPC API errors {{env}}",
    "annotations": {
        "error_rate": "[[ expression.error_rate_str ]]",
        "description": "VPC API error rate: [[ expression.error_rate_str ]] rps",
        "host": "{{ svm_fqdn() }}",
        "service": "{{ service }}",
        "dashboard": "{{ vpc_api_dashboard() }}",
        "wiki": "{{ wiki_url(service) }}" 
    },
    "type": {{ type_expression() }},
    "groupByLabels": [
        "host"
    ]
{% endblock %}
