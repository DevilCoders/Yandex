{% extends "base-dashboard.json.j2" %}

{% block parameters %}
{
	"name": "host",
	"value": "loadbalancer-node-*|*lb-node*"
}
{% endblock %}

{% block rows %}
[
	{
		"panels": [
			{{ render_panel(graph="grpc-client-success-fail", qs="service=loadbalancer_node&env={{env}}&dc=*", subtitle="lb-node") }},
			{{ render_panel(graph="grpc-client-timings", qs="service=loadbalancer_node&env={{env}}&dc=*&code=*&bin=*", subtitle="lb-node, ms") }},
			{{ render_panel(graph="grpc-client-success-fail", qs="service=billbro&env={{env}}&dc=*", subtitle="billbro") }},
			{{ render_panel(graph="grpc-client-timings", qs="service=billbro&env={{env}}&dc=*&code=*&bin=*", subtitle="billbro, ms") }}
		]
	},
	{
		"panels": [
			{{ render_panel(graph="vip-traffic-packets-per-dc", qs="service=billbro&env=[[env]]") }},
			{{ render_panel(graph="dataplane-ycss-clocks", qs="service=vsop&env=[[env]]&cluster=cloud_{{env}}_cloudgate") }},
			{{ render_panel(graph="dataplane-ycmh-clocks", qs="service=vsop&env=[[env]]&cluster=cloud_{{env}}_cloudgate") }},
			{{ render_panel(graph="dataplane-ycnat-clocks", qs="service=vsop&env=[[env]]&cluster=cloud_{{env}}_cloudgate") }},
			{{ render_panel(graph="dataplane-algonat-clocks", qs="service=vsop&env=[[env]]&cluster=cloud_{{env}}_cloudgate") }}
		]
	},
	{
		"panels": [
			{{ render_panel(graph="dataplane-lb-node-rules", qs="service=loadbalancer_node&env=[[env]]") }},
			{{ render_panel(graph="dataplane-lb-node-vips", qs="service=loadbalancer_node&env=[[env]]") }},
			{{ render_panel(graph="dataplane-vpp-rxtx", qs="service=cloudgate&env=[[env]]&cluster=cloud_{{env}}_cloudgate") }},
			{{ render_panel(graph="dataplane-gobgp-timings", qs="name=gobgp_*_timings&service=loadbalancer_node&env=[[env]]") }},
			{{ render_panel(graph="dataplane-gobgp-peering", qs="service=cloudgate&env=[[env]]&cluster=cloud_{{env}}_cloudgate") }}
		]
	},
	{
		"panels": [
			{{ render_panel(graph="golang-gc", qs="service=loadbalancer_node&env=[[env]]") }},
			{{ render_panel(graph="golang-goroutines", qs="service=loadbalancer_node&env=[[env]]") }},
			{{ render_panel(graph="golang-heap", qs="service=loadbalancer_node&env=[[env]]") }}
		]
	},
	{
		"panels": [
			{{ render_panel(graph="system-cpu", qs="service=sys") }},
			{{ render_panel(graph="system-mem", qs="service=sys") }},
			{{ render_panel(graph="system-net", qs="service=sys") }},
			{{ render_panel(graph="system-io", qs="service=sys") }},
			{{ render_panel(graph="system-disk", qs="service=sys") }}
		]
	},
	{
		"panels": [
			{{ render_panel(graph="lb-node-log-errors", qs="service=clickphite") }},
			{{ render_panel(graph="oom-count", qs="service=juggler-events&metric=oom-count") }},
			{{ render_panel(graph="reboot-count", qs="service=juggler-events&metric=reboot-count") }}
		]
	}
]
{% endblock %}
