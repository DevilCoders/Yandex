menu: "[YLB] Graphs"
menu_type: preview
api_path: /graphs/
tags:
  - ylb

{% set id_prefix = project_id + "-ylb-" + env %}
{% if solomon == 'israel' %}
{%   set id_prefix = "ylb" %}
{% endif %}

entities:
  # Logsync
  logsync-procfs-cpu:
    id: "{{ id_prefix }}-logsync-procfs-cpu"
    template: logsync-procfs-cpu.json.j2
    context:
      name: "Logsync Procfs CPU ({{ env }})"
      hide_no_data: "true"
      number_format: "0|auto"
      downsampling_func: "AVG"

  logsync-procfs-files:
    id: "{{ id_prefix }}-logsync-procfs-files"
    template: logsync-procfs-files.json.j2
    context:
      name: "Logsync Procfs Files ({{ env }})"
      hide_no_data: "true"
      number_format: "0|auto"
      downsampling_func: "AVG"

  logsync-procfs-mem:
    id: "{{ id_prefix }}-logsync-procfs-mem"
    template: logsync-procfs-mem.json.j2
    context:
      name: "Logsync Procfs Memory ({{ env }})"
      hide_no_data: "true"
      number_format: "0|auto"
      downsampling_func: "AVG"

  logsync-procfs-io:
    id: "{{ id_prefix }}-logsync-procfs-io"
    template: logsync-procfs-io.json.j2
    context:
      name: "Logsync Procfs IO ({{ env }})"
      hide_no_data: "true"
      number_format: "0|auto"
      downsampling_func: "AVG"

  logsync-procfs-syscall:
    id: "{{ id_prefix }}-logsync-procfs-syscall"
    template: logsync-procfs-syscall.json.j2
    context:
      name: "Logsync Procfs IO Syscalls ({{ env }})"
      hide_no_data: "true"
      number_format: "0|auto"
      downsampling_func: "AVG"

  logsync-reader-lag:
    id: "{{ id_prefix }}-logsync-reader-lag"
    template: logsync-reader-lag.json.j2
    context:
      name: "Logsync Reader Lag ({{ env }})"
      hide_no_data: "true"
      number_format: "0|auto"
      downsampling_func: "AVG"

  logsync-reader-marshal:
    id: "{{ id_prefix }}-logsync-reader-marshal"
    template: logsync-reader-marshal.json.j2
    context:
      name: "Logsync Reader Marshal Details ({{ env }})"
      hide_no_data: "true"
      number_format: "0|auto"
      downsampling_func: "AVG"

  logsync-reader-sync:
    id: "{{ id_prefix }}-logsync-reader-sync"
    template: logsync-reader-sync.json.j2
    context:
      name: "Logsync Reader Sync Details ({{ env }})"
      hide_no_data: "true"
      number_format: "0|auto"
      downsampling_func: "AVG"

  logsync-pushclient-inflight-bytes:
    id: "{{ id_prefix }}-logsync-pushclient-inflight"
    template: logsync-pushclient-inflight-bytes.json.j2
    context:
      name: "Logsync Pushclient Inflight Bytes ({{ env }})"
      hide_no_data: "true"
      number_format: "0|auto"
      downsampling_func: "AVG"

  logsync-pushclient-transfer-time:
    id: "{{ id_prefix }}-logsync-pushclient-transfer"
    template: logsync-pushclient-transfer-time.json.j2
    context:
      name: "Logsync Pushclient Transfer Time ({{ env }})"
      hide_no_data: "true"
      number_format: "0|auto"
      downsampling_func: "AVG"

  logsync-pushclient-contention-time:
    id: "{{ id_prefix }}-logsync-pushclient-contention"
    template: logsync-pushclient-contention-time.json.j2
    context:
      name: "Logsync Pushclient Contention Time ({{ env }})"
      hide_no_data: "true"
      number_format: "0|auto"
      downsampling_func: "AVG"

  # LB Controller
  lb-ctrl-node-watcher-rules:
    id: "{{ id_prefix }}-lb-ctrl-node-watcher-rules"
    template: ylb-lbctrl-node-watcher-rules.json.j2
    context:
      name: "YLB LB Controller Node Watcher Rules ({{ env }})"
      hide_no_data: "true"
      number_format: "0|auto"
      downsampling_func: "AVG"

  lb-ctrl-node-watcher-sync:
    id: "{{ id_prefix }}-lb-ctrl-node-watcher-sync"
    template: ylb-lbctrl-node-watcher-sync.json.j2
    context:
      name: "YLB LB Controller Node Watcher Sync ({{ env }})"
      number_format: "0|auto"
      downsampling_func: "AVG"

  lb-ctrl-get-health:
    id: "{{ id_prefix }}-lb-ctrl-get-health"
    template: ylb-lbctrl-get-health.json.j2
    context:
      name: "YLB LB Controller Get Health ({{ env }})"
      downsampling_func: "AVG"

  lb-ctrl-health-stream:
    id: "{{ id_prefix }}-lb-ctrl-health-stream"
    template: ylb-lbctrl-health-stream.json.j2
    context:
      name: "YLB LB Controller Health Stream ({{ env }})"
      downsampling_func: "AVG"

  lb-ctrl-stream-rules:
    id: "{{ id_prefix }}-lb-ctrl-stream-rules"
    template: ylb-lbctrl-stream-rules.json.j2
    context:
      name: "YLB LB Controller Stream Rules ({{ env }})"
      hide_no_data: "true"
      number_format: "0|auto"
      downsampling_func: "AVG"

  # Dataplane
  gobgp-peering:
    id: "{{ id_prefix }}-dataplane-gobgp-peering"
    template: dataplane/gobgp-peering.json.j2
    context:
      name: "YLB GoBGP peering ({{ env }})"

  gobgp-timings:
    id: "{{ id_prefix }}-dataplane-gobgp-timings"
    template: dataplane/gobgp-timings.json.j2
    context:
      name: "YLB GoBGP timings ({{ env }})"

  lb-node-rules:
    id: "{{ id_prefix }}-dataplane-lb-node-rules"
    template: dataplane/lb-node-rules.json.j2
    context:
      name: "YLB VPP LB-Node rules ({{ env }})"

  lb-node-vips:
    id: "{{ id_prefix }}-dataplane-lb-node-vips"
    template: dataplane/lb-node-vips.json.j2
    context:
      name: "YLB VPP LB-Node vips ({{ env }})"

  vpp-rxtx:
    id: "{{ id_prefix }}-dataplane-vpp-rxtx"
    template: dataplane/vpp-rxtx.json.j2
    context:
      name: "YLB VPP rx/tx ({{ env }})"

  ycss-clocks:
    id: "{{ id_prefix }}-dataplane-ycss-clocks"
    template: dataplane/ycss-clocks.json.j2
    context:
      name: "YLB VPP ycss clocks ({{ env }})"

  ycmh-clocks:
    id: "{{ id_prefix }}-dataplane-ycmh-clocks"
    template: dataplane/ycmh-clocks.json.j2
    context:
      name: "YLB VPP ycmh clocks ({{ env }})"

  ycnat-clocks:
    id: "{{ id_prefix }}-dataplane-ycnat-clocks"
    template: dataplane/ycnat-clocks.json.j2
    context:
      name: "YLB VPP ycnat clocks ({{ env }})"

  algonat-clocks:
    id: "{{ id_prefix }}-dataplane-algonat-clocks"
    template: dataplane/algonat-clocks.json.j2
    context:
      name: "YLB VPP algonat clocks ({{ env }})"

  # Golang
  golang-gc:
    id: "{{ id_prefix }}-golang-gc"
    template: golang/gc.json.j2
    context:
      name: "YLB Golang GC pauses&cycles ({{ env }})"

  golang-goroutines:
    id: "{{ id_prefix }}-golang-goroutines"
    template: golang/goroutines.json.j2
    context:
      name: "YLB Golang Goroutines ({{ env }})"

  golang-heap:
    id: "{{ id_prefix }}-golang-heap"
    template: golang/heap.json.j2
    context:
      name: "YLB Golang Heap objects ({{ env }})"

  # Sysinfo /proc based graphs
  system-mem:
    id: "{{ id_prefix }}-system-mem"
    template: system/mem.json.j2
    context:
      name: "YLB Memory ({{ env }})"

  system-cpu:
    id: "{{ id_prefix }}-system-cpu"
    template: system/cpu.json.j2
    context:
      name: "YLB CPU ({{ env }})"

  oom-count:
    id: "{{ id_prefix }}-oom-count"
    template: oom-count.json.j2
    context:
      name: "YLB OOM count ({{ env }})"

  reboot-count:
    id: "{{ id_prefix }}-reboot-count"
    template: reboot-count.json.j2
    context:
      name: "YLB reboot count ({{ env }})"

  system-io:
    id: "{{ id_prefix }}-system-io"
    template: system/io.json.j2
    context:
      name: "YLB IO ({{ env }})"

  system-net:
    id: "{{ id_prefix }}-system-net"
    template: system/net.json.j2
    context:
      name: "YLB Network ({{ env }})"

  system-disk:
    id: "{{ id_prefix }}-system-disk"
    template: system/disk.json.j2
    context:
      name: "YLB Disk ({{ env }})"

  # GRPC graphs
  grpc-node-to-ctrl:
    id: "{{ id_prefix }}-grpc-node-to-ctrl"
    template: grpc/node-to-ctrl.json.j2
    context:
      name: "YLB GoBGP Node to Ctrl ({{ env }})"
      downsampling_func: "AVG"

  grpc-server-success-fail:
    id: "{{ id_prefix }}-grpc-server-success-fail"
    template: grpc/success-fail.json.j2
    context:
      name: "YLB GRPC-server successes and failures"
      type: server
      downsampling_func: "AVG"

  grpc-client-success-fail:
    id: "{{ id_prefix }}-grpc-client-success-fail"
    template: grpc/success-fail.json.j2
    context:
      type: client
      name: "YLB GRPC-client successes and failures"
      downsampling_func: "AVG"

  grpc-server-timings:
    id: "{{ id_prefix }}-grpc-server-timings"
    template: grpc/timings.json.j2
    context:
      type: server
      name: "YLB GRPC-server timings"

  grpc-client-timings:
    id: "{{ id_prefix }}-grpc-client-timings"
    template: grpc/timings.json.j2
    context:
      type: client
      name: "YLB GRPC-client timings"

  # Old-school
  ylb-app-gc:
    id: "{{ id_prefix }}-app-gc"
    template: ylb-app-gc.json.j2
    context:
      name: "YLB App GC pauses ({{ env }})"

  ylb-app-memory:
    id: "{{ id_prefix }}-app-memory"
    template: ylb-app-memory.json.j2
    context:
      name: "YLB App memory ({{ env }})"

  ylb-app-ydb-timings:
    id: "{{ id_prefix }}-app-ydb-timings"
    template: ylb-app-ydb-timings.json.j2
    context:
      name: "YLB App ydb timings ({{ env }})"
      aggr: "MAX"

  ylb-app-ydb-per-request-timings:
    id: "{{ id_prefix }}-app-ydb-per-request-timings"
    template: ylb-app-ydb-per-request-timings.json.j2
    context:
      name: "YLB App ydb timings per request ({{ env }})"
      aggr: "MAX"

  ylb-app-ydb-per-request-qps:
    id: "{{ id_prefix }}-app-ydb-per-request-qps"
    template: ylb-app-ydb-per-request-qps.json.j2
    context:
      name: "YLB App ydb per request qps ({{ env }})"
      downsampling_func: "AVG"
      aggr: "MAX"

  ylb-app-ydb-errors:
    id: "{{ id_prefix }}-app-ydb-errors"
    template: ylb-app-ydb-errors.json.j2
    context:
      name: "YLB App ydb errors ({{ env }})"
      downsampling_func: "AVG"
      aggr: "MAX"

  ylb-app-ydb-tx-retries:
    id: "{{ id_prefix }}-app-ydb-tx-retries"
    template: ylb-app-ydb-tx-retries.json.j2
    context:
      name: "YLB App ydb tx retries ({{ env }})"
      aggr: "MAX"
      transform: "DIFFERENTIATE"

  ylb-hcnode-check-timings:
    id: "{{ id_prefix }}-hcnode-check-timings"
    template: ylb-hcnode-check-timings.json.j2
    context:
      name: "YLB hc-node check timings sec ({{ env }})"

  ylb-lb-ctrl-app-rules-event:
    id: "{{ id_prefix }}-lb-ctrl-app-rules-event"
    template: ylb-lb-ctrl-app-rules-event.json.j2
    context:
      name: "YLB lb-ctrl rules event ({{ env }})"

  ylb-lbnode-gobgp-timings:
    id: "{{ id_prefix }}-lbnode-gobgp-timings"
    template: ylb-lbnode-gobgp-timings.json.j2
    context:
      name: "YLB lb-node gobgp timings ({{ env }})"


  ylb-lbnode-lbctrl-msgs:
    id: "{{ id_prefix }}-lbnode-lbctrl"
    template: ylb-lbnode-lbctrl-msgs.json.j2
    context:
      name: "YLB lb-node lb-ctrl ({{ env }})"

  ylb-lbnode-vpp:
    id: "{{ id_prefix }}-lbnode-vpp"
    template: ylb-lbnode-vpp.json.j2
    context:
      name: "YLB lb-node vpp ({{ env }})"

  ylb-vip-traffic:
    id: "{{ id_prefix }}-vip-traffic-per-dc"
    template: ylb-vip-traffic.json.j2
    context:
      name: "YLB balancer vip ingress traffic per dc ({{ env }})"

  ylb-vip-traffic-packets:
    id: "{{ id_prefix }}-vip-traffic-packets-per-dc"
    template: ylb-vip-traffic-packets.json.j2
    context:
      name: "YLB balancer vip ingress traffic in packets per dc ({{ env }})"

  ylb-vpp-cpu:
    id: "{{ id_prefix }}-vpp-cpu"
    template: ylb-vpp-cpu.json.j2
    context:
      name: "YLB VPP CPU Load ({{ env }})"

  ylb-api-timings:
    id: "{{ id_prefix }}-api-timings"
    template: ylb-api-timings.json.j2
    context:
      name: "YLB Compute Api timings sec ({{ env }})"

  ylb-api-calls:
    id: "{{ id_prefix }}-api-calls"
    template: ylb-api-calls.json.j2
    context:
      name: "YLB Compute API calls ({{ env }})"

  ylb-api-calls-wo-200:
    id: "{{ id_prefix }}-api-calls-wo-200"
    template: ylb-api-calls-wo-200.json.j2
    context:
      name: "YLB Compute API calls HTTP_200 ({{ env }})"

  ylb-api-errors:
    id: "{{ id_prefix }}-api-errors"
    template: ylb-api-errors.json.j2
    context:
      name: "YLB Compute API errors ({{ env }})"

  ylb-api-errors-test:
    id: "{{ id_prefix }}-api-errors-test"
    template: ylb-api-errors-test.json.j2
    context:
      name: "YLB Compute API errors test ({{ env }})"

  ylb-api-task-operations:
    id: "{{ id_prefix }}-api-task-operations"
    template: ylb-api-task-operations.json.j2
    context:
      name: "YLB Compute Api task operations ({{ env }})"

  ylb-api-kikimr-errors:
    id: "{{ id_prefix }}-kikimr-query-block-error-types"
    template: ylb-api-kikimr-errors.json.j2
    context:
      name: "KiKiMR query block error types ({{ env }})"

  ylb-hc-node-log-errors:
    id: "{{ id_prefix }}-hc-node-log-errors"
    template: ylb-apps-log-errors.json.j2
    context:
      name: "YLB hc-node log errors ({{ env }})"
      host_exp: "hc-node*"

  ylb-hc-ctrl-log-errors:
    id: "{{ id_prefix }}-hc-ctrl-log-errors"
    template: ylb-apps-log-errors.json.j2
    context:
      name: "YLB hc-ctrl log errors ({{ env }})"
      host_exp: "hc-ctrl*"

  ylb-lb-node-log-errors:
    id: "{{ id_prefix }}-lb-node-log-errors"
    template: ylb-apps-log-errors.json.j2
    context:
      name: "YLB lb-node log errors ({{ env }})"
      host_exp: "loadbalancer-node*"

  ylb-lb-ctrl-log-errors:
    id: "{{ id_prefix }}-lb-ctrl-log-errors"
    template: ylb-apps-log-errors.json.j2
    context:
      name: "YLB lb-ctrl log errors ({{ env }})"
      host_exp: "lb-ctrl*"
