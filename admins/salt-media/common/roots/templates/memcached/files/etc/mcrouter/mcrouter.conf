{%- set agg_group = salt['pillar.get']('memcached:mcrouter:group', grains['conductor']['group']) -%}
{%- set hosts = salt['http.query']('https://c.yandex-team.ru/api/groups2hosts/' + agg_group + '?format=json', decode_type='json', decode=True)['dict'] -%}
{%- set dchosts = salt.conductor.groups2hosts(agg_group, salt.grains.get("conductor:root_datacenter")) -%}
{%- set mport = salt['pillar.get']('memcached:port', 11211) -%}
{%- set get_policy = salt['pillar.get']('memcached:mcrouter:get_policy', 'FailoverRoute') -%}

{
    "pools": {
        "localhost": {
            "servers": [
                "[::1]:{{ mport }}"
            ]
        },
        "localdc": {
            "servers": [
                {% for host in dchosts -%}
                {% if host != grains.conductor.fqdn -%}{% if not loop.last -%}"{{ host }}:{{ mport }}",{% else %}"{{ host }}:{{ mport }}"{% endif %}{% endif %}
                {% endfor -%}
            ]
        },
        "anotherdcs": {
            "servers": [
                {% for host in hosts -%}
                {% if host.fqdn not in dchosts -%}{% if not loop.last -%}"{{ host.fqdn }}:{{ mport }}",{% else %}"{{ host.fqdn }}:{{ mport }}"{% endif %}{% endif %}
                {% endfor -%}
            ]
        },
        "all": {
            "servers": [
                "[::1]:{{ mport }}",
                {% for host in hosts -%}
                {% if host.fqdn != grains.conductor.fqdn -%}{% if not loop.last -%}"{{ host.fqdn }}:{{ mport }}",{% else %}"{{ host.fqdn }}:{{ mport }}"{% endif %}{% endif %}
                {% endfor -%}
            ]
        }
    },
    "route": {
        "type": "OperationSelectorRoute",
        "operation_policies": {
            "get": {
                "type": "{{ get_policy }}",
                "children": [ "Pool|localhost", "Pool|localdc", "Pool|anotherdcs" ]
            }
        },
        "default_policy": "{{ salt['pillar.get']('memcached:mcrouter:default_policy', 'AllInitialRoute') }}|Pool|all"
    }
}
