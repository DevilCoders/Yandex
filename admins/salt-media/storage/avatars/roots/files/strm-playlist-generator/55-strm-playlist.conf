include strm/upstreams-trns-groups.conf;
include strm/upstreams-mds.conf;
include strm/upstreams-mds-int.conf;
include strm/upstreams-s3.conf;

#tskv_log_format strm-access-log '$time_local $remote_addr $request_id $uri $args $ssl_session_id $scheme $ssl_protocol $ssl_handshake_time $upstream_cache_status $upstream_addr $upstream_status $bytes_sent $upstream_response_time $request_time $unixtime $tcpinfo_rtt $tcpinfo_rttvar $tcpinfo_snd_cwnd $tcpinfo_rcv_space range=$http_range exp=$upstream_http_x_strm_expboxes strm_session=$cookie_strm_session x_plg=$upstream_http_x_plg';
#tskv_log  /var/log/nginx/strm-tskv.log strm-access-log;

upstream playlist {
  {% for port in playlist_ports -%}
  server localhost:{{ port }} max_fails=5 fail_timeout=2 weight=8;
  {% endfor -%}
  server users-playlist.strm.yandex.net:80 backup;
  keepalive 4;
}

map $uri $transcoders {
  include strm/map_uri_transcoders.conf;
}

map $uri $fallback {
  include strm/map_mode_fallback.conf;
}

map $uri $bucket_allowed {
  include strm/map_bucket_allowed.conf;
}

map $uri $drm_enabled {
  include strm/map_drm_enable.conf;
}

map $uri $drm_key {
  include strm/map_drm_key.conf;
}

# this option is always useful because it allowes range-requests for files that does not have Accept-Ranges header
proxy_force_ranges on;

server {
    listen 5888;
    listen [::]:5888 ipv6only=on default;

tskv_log_format strm-access-log '$time_local $remote_addr $request_id $uri $args $ssl_session_id $scheme $ssl_protocol $ssl_handshake_time $upstream_cache_status $upstream_addr $upstream_status $bytes_sent $upstream_response_time $request_time $unixtime $tcpinfo_rtt $tcpinfo_rttvar $tcpinfo_snd_cwnd $tcpinfo_rcv_space range=$http_range exp=$upstream_http_x_strm_expboxes strm_session=$cookie_strm_session x_plg=$upstream_http_x_plg';
tskv_log  /var/log/nginx/strm-tskv.log strm-access-log;

    server_name avatars-playlist;

    include strm/vars.conf;

    more_set_headers "X_h: $hostname";

    gzip_types application/yandex-dictionary application/x-mpegURL;

    # https://st.yandex-team.ru/VH-3573
    request_id_length 16;
    request_id_from_header on;
    request_id_header_name X-Strm-Request-Id;
    proxy_set_header X-Strm-Request-Id $request_id;

    # plg returns cookies > 4KB. raise buffer to avoid errors:
    # "upstream sent too big header while reading response header from upstream"
    proxy_buffer_size 16k;


    # https://st.yandex-team.ru/VH-1042#1486999787000
    # https://st.yandex-team.ru/VH-3640
    #
    location = /ping {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_connect_timeout 1;

        proxy_pass http://playlist;
    }

    #
    # VOD playlists from different channels - https://st.yandex-team.ru/VH-3145
    #
    location ~* ^/vh-[a-z0-9_-]*-converted/ {

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_connect_timeout 1;

        proxy_pass http://playlist/vod$uri?$args;

    }


# Status for 1TV https://st.yandex-team.ru/TRAFFIC-1601
    location = /cdn-status {
        if ($http_token = "chohLi5EshaiH0Ah") {
                rewrite .* /status.xml break;
                root /var/www/cdn-status;
        }
        return 403;
    }

    # 1TV location
    location /cdn1tvru {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_connect_timeout 1;
        proxy_pass http://playlist$uri?$args;
    }

    location @return_404 {
        return 404;
    }
    #
    # all other requests
    #
    location / {
            if ($arg_hide_stub) { # robot detected (like chanel-tumbler), do not redirect to ngenix
                set $ngenix '';
            }

            more_clear_headers "Content-Type";
            more_set_headers "Content-Type: application/x-mpegURL";
            proxy_ignore_headers "X-Accel-Redirect";
            proxy_pass_header "X-Accel-Redirect";

            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 1;

            proxy_pass http://playlist$uri?$args;
    }

}
