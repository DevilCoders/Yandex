upstream registry {
        server unix:/var/run/docker_registry/docker_registry.sock;
}
upstream upload {
        server docker01h.ape.yandex.net;

        server docker01f.ape.yandex.net backup fail_timeout=3s max_fails=0;
        server docker01e.ape.yandex.net backup fail_timeout=3s max_fails=0;
}

proxy_cache_path  /var/cache/nginx/cache  levels=1:2   keys_zone=registry-cached:4000m inactive=365d  max_size=512G;

server {
        server_name registry.ape.yandex.net;
        listen 80 default backlog=16834;
        listen [::]:80 ipv6only=on backlog=16834;
        listen 5000 default backlog=16834;
        listen [::]:5000 ipv6only=on backlog=16834;

        location / {
		return 404 "lavochka zakrita!";
#
    #            if ($request_method = PUT) {
   #                     #proxy_pass http://upload;
  #                      return 403;
 #               }
#
   #             if ($request_method != PUT) {
  #                      proxy_pass http://registry;
 #               }
#
   #             if ($remote_addr = $server_addr) {
  #                      proxy_pass http://registry;
 #               }
#
        #        proxy_set_header Host $http_host;
        #        proxy_http_version 1.1;
        #        proxy_set_header Connection "";
        #        proxy_set_header        X-Real-IP       $remote_addr;
        #        proxy_read_timeout 900s;
	#	proxy_send_timeout 900s;
        #        proxy_cache registry-cached;
        #        proxy_cache_key      $request_uri;
        #        proxy_cache_use_stale error timeout invalid_header updating http_500 http_503;
        #        proxy_cache_valid  200 301 302 1d;
        #        proxy_cache_min_uses 1;
        }
        #location /v2 {
        #        return 404;
        #}
	location = /_ping {
		return 200 "true";
	}
        #location = /v1/_ping {
        #        return 200 "true";
	#	add_header X-Docker-Registry-Standalone True;
	#	add_header X-Docker-Registry-Version 0.8.1;
	#	add_header X-Docker-Registry-Config production;
        #}
        location = /proxy_ad {
                resolver 127.0.0.1;
                proxy_pass $arg_uri;
        }
}
