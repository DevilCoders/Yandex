{%- set env = grains['yandex-environment'] -%}
{%- set dc = grains['conductor']['root_datacenter'] -%}
{
  "mds": {
    "parts_prefetch": 2,
    "namespace_resolver": {
      "data_source_version": "mds_json_v2",
      "default": {
      {%- if env == "testing" %}
        "standard": { "namespace": "s3-dev" },
        "cold": { "namespace": "s3-dev" }
      {% else -%}
        "standard": { "namespace": "s3-default" },
        "cold": { "namespace": "s3-default-cold" }
      {% endif -%}
      },
      "clouds": {
      {%- if env == "testing" %}
        "36108":{"namespace": "s3-dev-x3"}
      {% else -%}
        "2":    {"namespace": "s3-default"},
        "318":  {"namespace": "s3-default"},
        "407":  {"namespace": "s3-default"},
        "2173": {"namespace": "s3-default"},
        "3463": {"namespace": "s3-default"},
        "5909": {"namespace": "s3-default"},
        "1558": {"namespace": "s3-default-smart"},
        "1358": {"namespace": "s3-default-smart"},
        "94":   {"namespace": "s3-default-cold"},
        "102":  {"namespace": "s3-default-cold"},
        "105":  {"namespace": "s3-ringbuffer"},
        "675":  {"namespace": "s3-ringbuffer"},
        "188":  {"namespace": "s3-default-cold"},
        "315":  {"namespace": "s3-default-cold"},
        "469":  {"namespace": "s3-ringbuffer"},
        "622":  {"namespace": "s3-default-cold"},
        "700":  {"namespace": "s3-ringbuffer"},
        "737":  {"namespace": "s3-default-cold"},
        "741":  {"namespace": "s3-default-cold"},
        "961":  {"namespace": "s3-default-cold"},
        "969":  {"namespace": "s3-default-cold"},
        "1068": {"namespace": "s3-default-cold"},
        "1170": {"namespace": "s3-default-cold"},
        "1265": {"namespace": "s3-default-cold"},
        "1332": {"namespace": "s3-default-cold"},
        "1334": {"namespace": "s3-default-cold"},
        "1373": {"namespace": "s3-default-cold"},
        "2660": {"namespace": "s3-default-cold"},
        "1487": {"namespace": "s3-default-cold"},
        "1488": {"namespace": "s3-ringbuffer"},
        "1666": {"namespace": "s3-default-cold"},
        "1891": {"namespace": "s3-default-cold"},
        "1949": {"namespace": "s3-default-cold"},
        "1971": {"namespace": "s3-satellite-factory"},
        "2026": {"namespace": "s3-default-cold"},
        "2541": {"namespace": "s3-ringbuffer"},
        "3940": {"namespace": "s3-default-cold"},
        "5807": {"namespace": "s3-default-cold"},
        "1984": {"namespace": "s3-panoramas"},
        "1986": {"namespace": "s3-panoramas-backoffice"},
        "4090": {"namespace": "s3-panoramas-backoffice"},
        "4947": {"namespace": "s3-panoramas-backoffice"},
        "4948": {"namespace": "s3-panoramas-backoffice"},
        "4949": {"namespace": "s3-panoramas-backoffice"},
        "5134": {"namespace": "s3-panoramas-backoffice"},
        "5135": {"namespace": "s3-panoramas-backoffice"},
        "7727": {"namespace": "s3-panoramas-backoffice"},
        "7728": {"namespace": "s3-panoramas-backoffice"},
        "7729": {"namespace": "s3-panoramas-backoffice"},
        "7730": {"namespace": "s3-panoramas-backoffice"},
        "7731": {"namespace": "s3-panoramas-backoffice"},
        "7732": {"namespace": "s3-panoramas-backoffice"},
        "7733": {"namespace": "s3-panoramas-backoffice"},
        "7734": {"namespace": "s3-panoramas-backoffice"}
      {% endif -%}
      },
      "buckets": {
        {%- if env != "testing" %}
        "vh-youtube-content": {"namespace": "s3-default-cold"},
        "vh-tusd": {"namespace": "s3-default-cold"},
        {% endif -%}
        "avatars-staff": {"namespace": "avatars-staff"},
        "avatars-pdb-preview": {"namespace": "avatars-pdb-preview"},
        "avatars-yablog": {"namespace": "avatars-yablog"}
      }
    },
    "retries": 3,
    "base_retry_delay_msec": 50,
    "max_retry_delay_msec": 1000,
    "max_idle_conns": 150,
    "max_conns_per_host": 50,
    "idle_conn_timeout_sec": 300,
    "connect_timeout_msec": 500,
    "type": "libmds",
    "libmds": {
      "handystats": {
        "enable": true,
        "dump-interval": 4507,
        "statistics": {
            "moving-interval": 5000,
            "histogram-bins": 30,
            "tags": ["moving-avg", "histogram"]
        },
        "gauge": {
            "tags": ["histogram"]
        },
        "counter": {
            "tags": ["value"]
        },
        "timer": {
            "idle-timeout": 60000,
            "tags": ["moving-avg"]
        },
        "io.replies": {
            "tags": ["rate"]
        },
        "io.{input,output}.queue.size": {
            "tags": ["moving-avg"]
        },
        "pool.sys.*.active_threads": {
            "tags": ["moving-avg"]
        },
        "pool.sys.*.queue.size": {
            "tags": ["moving-avg"]
        },
        "libmm.storage_info.age_seconds": {
            "tags": ["value"]
        },
        "libmds.*.*.write.*.retry_num": {
            "tags": ["moving-avg"]
        },
        "proxy.*.*.process.*.*": {
            "tags": ["value"]
        },
        "libmds.*.*.acl.cache.lifetime": {
            "tags": ["value"]
        },
        "libmds.*.*.nscfg.lifetime": {
          "tags": ["value"]
        },
        "libmds.*.*.nscfg.version": {
          "tags": ["value"]
        },
        "elliptics.nodes_alive": {
            "tags": ["value"]
        },
        "tvm_cache.status.*": {
            "tags": ["value"]
        }
      },
      "elliptics": {
        "io_threads": 8,
        "nonblocking_io_threads": 5,
        "net_threads": 8,
        "wait_timeout_sec": 30,
        "check_timeout_sec": 20,
        "flags": 4,
        "features" : {
          "independent_protocol" : true
        },
        "tls": {
          "support": "allowed",
          "cert_path": "/etc/elliptics/ssl/storage.crt",
          "key_path": "/etc/elliptics/ssl/storage.key",
          "certificate_path": "/etc/elliptics/ssl/storage.crt",
          "private_key_path": "/etc/elliptics/ssl/storage.key",
          "ca_path": "/etc/elliptics/ssl/"
        }
      },

      "mastermind": {
        "remotes": [
          {
            "host": "[::]",
            "port": 8383
          }
        ],
        "cache_path": "/var/tmp/libmm-goose.cache",
        "enqueue_retries": 4,
        "enqueue_timeout_msec": 15000,
        "expire_time_sec": 604800,
        "reconnect_timeout_msec": 2000,
        "update_period_sec": 60,
        "warning_time_sec": 300,
        "worker_name": "mastermind-drooz-http"
      },

      {% if env == "testing" -%}
      "karl": {
        "enabled": true,
        "dc": "{{ dc }}",
        "use_federations": true,
        "use_locality": true,
        "default_federation": 1,
        "discovery": {
          "connection_string": "zk01man.mdst.yandex.net:2181,zk01myt.mdst.yandex.net:2181,zk01sas.mdst.yandex.net:2181",
          "prefix": "/karl_test_discovery",
          "snapshot_filename" : "/var/cache/mastermind/{{ component_name }}/karl_discovery.proxy"
        },
        "tls": {
          "enabled": true,
          "cert_path": "/etc/karl/ssl/karl.crt",
          "key_path": "/etc/karl/ssl/karl.key",
          "ca_paths": ["/etc/karl/ssl/ca.crt"]
        }
      },

      "metamastermind": {
        "tls": {
          "key_path": "/etc/mavrodi/ssl/mavrodi.key",
          "cert_path": "/etc/mavrodi/ssl/mavrodi.crt",
          "ca_paths": [
            "/etc/mavrodi/ssl/ca.crt"
          ]
        },
        "max_history_depth": 2,
        "max_snapshot_age_sec": 86400,
        "snapshots_dir": "/var/cache/mastermind/{{ component_name }}/snapshots",
        "grpc_endpoints": [
          "mavrodi.mdst.yandex.net:9999"
        ],
        "grpc_calls_before_endpoint_switch": 10,
        "grpc_call_timeout_sec": 20,
        "http_connect_timeout_sec": 1,
        "http_request_timeout_sec": 20,
        "snapshot_update_interval_sec": 60
      },

      "nscfg": {
        "http_source": "http://nscfg.mdst.yandex.net:9532/all",
        "cache_path": "/var/cache/mastermind/{{ component_name }}/nscfg.cache",
        "update_interval_sec": 60,
        "http_request_timeout_sec": 10000,
        "warning_age_sec": 1200
      },
      {% endif -%}

      "libmds": {
        {% if env == "testing" -%}
        "enable_lepton": true,
        "lepton_address": "http://lepton.mdst.yandex.net/",
        "enable_federation_mode_fallback": true,
        {% endif -%}
        "read_chunk_size_mb": 50,
        "write_chunk_size_mb": 20,
        "lookup_timeout_sec": 2,
        "read_timeout_sec": 7,
        "write_timeout_sec": 10,
        "lookup_chunk_limit_mb": 5,
        "checksum_rate_mbps": 10,
        "index_timeout_sec": 30,
        "part_timeout_sec": 30,
        "remove_timeout_sec": 2,
        "chunk_timeout_sec": 30,
        "recovery_session_timeout_sec": 30,
        "group_write_attempts": 5,
        "scale_group_retry_timeout": 1,
        "executor_threads": 8,
        "die_limit": {{ 10 if env == "testing" else 950 }}
      },

      "loggers": {
        "levels": {
          "elliptics": "{{ 'info' if env == 'testing' else 'error' }}",
          "mastermind": "info",
          "libmds": "info"
        },
        "core": [
          {
            "sinks": [
              {
                "sink": {
                  "flush": 100,
                  "type": "file",
                  "path": "/var/log/s3/{{ component_name }}/libmds.log"
                },
                "type": "asynchronous",
                "overflow": "wait",
                "factor": 16
              }
            ],
            "formatter": {
              "sevmap": [
                "DEBUG",
                "NOTICE",
                "INFO",
                "WARNING",
                "ERROR"
              ],
              "type": "string",
              "pattern": "{timestamp:l} {trace_id:{0:default}0>16}/{thread:d}/{process} {severity}: {message}, attrs: [{...}]"
            }
          }
        ],
        "access": [
          {
            "sinks": [
              {
                "sink": {
                  "flush": 100,
                  "type": "file",
                  "path": "/var/log/s3/{{ component_name }}/libmds-access.log"
                },
                "type": "asynchronous",
                "overflow": "wait",
                "factor": 16
              }
            ],
            "formatter": {
              "remove": [
                "severity",
                "message"
              ],
              "create": {
                "tskv_format": "elliptics-storage-server-log",
                "type": "elliptics-storage"
              },
              "mutate": {
                "timestamp": {
                  "gmtime": false,
                  "strftime": "%Y-%m-%dT%H:%M:%S"
                },
                "unixtime_microsec_utc": {
                  "strftime": "%s.%f",
                  "gmtime": false
                },
                "timezone": {
                  "strftime": "%z"
                }
              },
              "type": "tskv"
            }
          }
        ]
      }
    }
  }
}
