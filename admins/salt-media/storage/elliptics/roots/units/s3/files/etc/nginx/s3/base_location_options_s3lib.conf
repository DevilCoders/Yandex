proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto      $scheme;
proxy_set_header X-Real-IP              $remote_addr;
proxy_set_header X-Request-Id           $request_id;
proxy_set_header X-S3mds-Connection     $http_connection;
proxy_set_header X-S3mds-Endpoint-Type  $http_endpoint_type;
proxy_set_header X-S3mds-Expect         $http_expect;
proxy_set_header X-S3mds-Keep-Alive     $http_keep_alive;

# We don't use HTTP/1.1 because of Transfer-Encoding header.
# Content-Length is required in S3 API and we have to send the exact size of an object to MDS
# before uploading.
# Switch to 1.1 causes nginx to remove 'Content-Length' header from request to upstream which
# makes S3 Goose to instantly reply with HTTP 411 code.
# See http://www.ietf.org/rfc/rfc2616.txt chapters 4.4 -> 3 and 3.6
proxy_http_version                  1.0;

proxy_set_header Connection         "";
proxy_set_header Cookie             "";

header_filter_by_lua_block {
    local S3Lib = require "s3.lib"
    S3Lib.fillHeaders()
}

body_filter_by_lua_block {
    local S3Lib = require "s3.lib"
    S3Lib.countBucketReadTraffic()
}

proxy_pass  http://$s3_upstream;
include     s3/error_page_503.conf;
