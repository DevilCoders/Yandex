perl_modules /etc/nginx/YandexMusic;
perl_require music-secure-download.pm;
perl_set $token_check_result YandexMusic::checkToken;
perl_set $ping YandexMusic::ping;

upstream mediastorage_head {
    server unix:/var/run/mediastorage/mediastorage-proxy.sock fail_timeout=0;
}

upstream mimic_head {
    server localhost:11000 fail_timeout=0;
}

upstream mediastorage {
    server unix:/var/run/mediastorage/mediastorage-proxy.sock fail_timeout=0 max_fails=0;
    {%- if grains['yandex-environment'] == 'testing' %}
    server spacemimic.mdst.yandex.net:11000 fail_timeout=0 backup;
    {% else %}
    server spacemimic.storage.yandex.net:11000 fail_timeout=0 backup;
    {% endif %}
    keepalive 2;
}

upstream mimic {
    server localhost:11000 fail_timeout=1 max_fails=0;
    {%- if grains['yandex-environment'] == 'testing' %}
    server spacemimic.mdst.yandex.net:11000 fail_timeout=0 backup;
    {% else %}
    server spacemimic.storage.yandex.net:11000 fail_timeout=0 backup;
    {% endif %}
    keepalive 2;
}

map $http_origin $allowed_origin {
    include include/map_allowed_origins.conf;
}

open_file_cache max=10000;
open_file_cache_min_uses 2;

server {
    listen 80 reuseport;
    listen [::]:80 ipv6only=on reuseport;
    listen 443 ssl reuseport;
    listen [::]:443 ssl ipv6only=on reuseport;
    include ssl/https.conf;
    server_name  ~^(((s|elisto|els)[0-9]+[a-z]+[0-9]*\.(storage|mdst|mds|mt|music|(elliptics\.)?music.dev)\.yandex\.(net|ru))$);

    #https://st.yandex-team.ru/MDS-849
    include crossdomain/crossdomain-xml;

    # Не надо буферизировать ответ spacemimic, если это делать, то в spacemimic будут НЕчестные времена ответа и будут артефакты;
    # UPD. Не понятно почему из-за выключения proxy_buffering будут НЕчестные тайминги.
    # Как раз наоборот, на графиках upstream_timings будут почти такие же числа, как в request_timings.
    # UPD2. Включение proxy_buffering делает более честными upstream_timings, но начинает насиловать диски.
    # Можно выставить proxy_max_temp_file_size в 0, но тогда и смысла особого нет от включения proxy_buffering
    proxy_buffering off;
    # proxy_buffering on;
    # proxy_buffers 64 16k;
    # proxy_buffer_size 64k;
    # proxy_max_temp_file_size 0;



    # Передаём в upstream Request-ID всегда
    proxy_set_header X-Request-Id    $request_id;
    request_id_from_header on;
    request_id_header_name X-Request-Id;

    more_set_headers -s '200 206 404 401 500' "X-Content-Type-Options: nosniff";

    location /ping {
        set $unistat_request_type "ping";
        return 200;
    }

    # MDS-9791
    location /mds-test/5mb.dump {
        alias /var/www/test_files/5m_ping.file;
        add_header 'Access-Control-Allow-Origin' '*';
    }

    location / {
        auth_sign $http_host$uri/$arg_ts;
        auth_sign_signature $arg_sign$arg_s;
        auth_sign_expire $arg_ts;
        auth_sign_hash sha256;

        return 410;

        # templated configs from salt
        include include/rvideo/*.conf;
        include include/rns_80443/*.conf;

        include include/tfb_testing.conf;
        include include/docker-registry.conf;
        include include/maps-offline-caches.conf;
        include include/mds-dev.conf;
        include include/music.conf;
        include include/pogoda.conf;
        include include/rdisk.conf;
        include include/sandbox-tmp.conf;
        include include/skynet.conf;
        include include/taxi.conf;
        include include/tfb.conf;
        include include/tools_st.conf;
        include include/tv.conf;
        include include/zen.conf;
        include include/jing.conf;

        include include/nel.conf;
    }

    # https://st.yandex-team.ru/MDS-4809
    set $unistat_cluster_type "storage";
    {%- if grains['yandex-environment'] == 'testing' %}
    set $cloud_mimic_addr "2a02:6b8:0:3400:0:37f:0:3";
    {% else %}
    set $cloud_mimic_addr "2a02:6b8:0:3400::30f";
    {% endif %}
    header_filter_by_lua_block {
            increment_metric("stat_monitor_dmmm", 1)
    }
    log_by_lua_file /etc/nginx/include/metrics_storage.lua;
}

server {
    listen     *:8090 reuseport;
    listen  [::]:8090 ipv6only=on reuseport;

    # old config for music-search (by agodin@)
    #location /music {
    #    eblob;
    #    alias /srv/storage/;
    #}

    proxy_buffering off;

    # MDS-14400
    location ~ ^/ping-([\w-]+) {
        set $unistat_namespace $1;
        set $unistat_request_type "ping";

        if ( $request_method !~ '^(HEAD)$' ) {
            return 403;
        }
        {%- if grains['yandex-environment'] == 'testing' %}
        proxy_pass http://mediastorage/gate/get/320.ping.E69015%3A311834263829288833852895743757?ping-$unistat_namespace;
        {% else %}
        proxy_pass http://mimic/get/2739.yadisk:uploader.97099719030826319143612335895?ping-$unistat_namespace;
        {% endif %}
    }

    # MDS-14400
    location ~ ^/pingnginx-([\w-]+) {
        set $unistat_namespace $1;
        set $unistat_request_type "ping";

        if ( $request_method !~ '^(HEAD)$' ) {
            return 403;
        }
        return 200;
    }

    location ~ ^/get-([\w-]+) {
        set $unistat_namespace $1;
        set $unistat_request_type "head";

        if ( $request_method !~ '^(HEAD)$' ) {
            return 403;
        }
        include include/mediastorage-settings-head.conf;
        include include/maintenance.conf;
    }

    location /get/ {
        set $unistat_namespace "disk";
        set $unistat_request_type "head";

        if ( $request_method !~ '^(HEAD)$' ) {
            return 403;
        }
        include include/mediastorage-settings-disk-head.conf;
        include include/maintenance.conf;
    }

    # https://st.yandex-team.ru/MDS-4809
    set $unistat_cluster_type "storage";
    {%- if grains['yandex-environment'] == 'testing' %}
    set $cloud_mimic_addr "2a02:6b8:0:3400:0:37f:0:3";
    {% else %}
    set $cloud_mimic_addr "2a02:6b8:0:3400::30f";
    {% endif %}
    header_filter_by_lua_block {
            increment_metric("stat_monitor_dmmm", 1)
    }
    log_by_lua_file /etc/nginx/include/metrics_storage.lua;
}

server {
    listen     *:8181 reuseport;
    listen  [::]:8181 ipv6only=on reuseport;

    proxy_buffering off;

    location / {
        auth_sign $hostname$uri/$arg_ts;
        auth_sign_signature $arg_sign$arg_s;
        auth_sign_expire $arg_ts;
        auth_sign_hash sha256;

        include include/rns_8181/*.conf;

        include include/devtools.conf;
        include include/docker-registry.conf;
        include include/repo.conf;
        include include/sandbox-tmp.conf;
        include include/zen.conf;
    }

    # https://st.yandex-team.ru/MDS-4809
    set $unistat_cluster_type "storage";
    {%- if grains['yandex-environment'] == 'testing' %}
    set $cloud_mimic_addr "2a02:6b8:0:3400:0:37f:0:3";
    {% else %}
    set $cloud_mimic_addr "2a02:6b8:0:3400::30f";
    {% endif %}

    header_filter_by_lua_block {
            increment_metric("stat_monitor_dmmm", 1)
    }
    log_by_lua_file /etc/nginx/include/metrics_storage.lua;
}
