location /rdisk/ {
    set $unistat_namespace "disk";
    set $unistat_request_type "get";
    set $unistat_backend "eblob";

    # MDS-11972
    include /etc/nginx/disk/include/downloader-referers.include;

    rewrite (.*) /$arg_bp?orig_path=$1 break;

    auth_sign $http_host$arg_orig_path$arg_uid$arg_bp/$arg_ts;
    auth_sign_optional stid=$arg_pb;
    auth_sign_signature $arg_s;
    auth_sign_expire $arg_ts;
    auth_sign_hash sha256;
    auth_sign_token "{{ pillar['yav']['storage-auth_sign_token-rdisk'] }}";
    auth_sign_decrypt dec_pb arg_pb;

    # Run lua in ACCESS phase, after auth_sign check.
    # eblob directive works in CONTENT phase.
    access_by_lua '

        -- Get request arguments into lua dict args
        local args = ngx.req.get_uri_args()
        if ngx.var.dec_pb ~= nil and ngx.var.dec_pb ~= "" then
            var2 = ngx.var.dec_pb
        end

        -- If pb  and dec_pb is in args
        if args.pb ~= nil and args.pb ~= "" then

            --  Do internal redirect to unescaped orig_path
            ngx.exec(ngx.unescape_uri("/get-disk-internal/" .. var2), args)
        end

        -- If pb not present continue in this location
        ';

    include include/rdisk-settings.conf;

    #eblob;
    root /srv/storage/;

}

location /get-disk-internal/ {
    set $unistat_namespace "disk";
    set $unistat_request_type "get";
    set $unistat_backend "eblob";

    # MDS-11972
    include /etc/nginx/disk/include/downloader-referers.include;

    internal;
    proxy_set_header If-Match "*";
    rewrite /get-disk-internal/(.*) /gate/get/$1 break;
    include include/mediastorage-settings-disk.conf;
    include include/rdisk-settings.conf;
}
