location /get-taxi/ {
    auth_sign_optional orig_path=$arg_orig_path content_type=$arg_content_type filename=$arg_filename disposition=$arg_disposition;
    auth_sign_token "{{ pillar['yav']['storage-auth_sign_token-taxi'] }}";

    header_filter_by_lua_block {
        local args = ngx.req.get_uri_args()

        local ua = ngx.req.get_headers()["User-Agent"]
        local filename = ""
        local escaped_fn = ngx.escape_uri(args.filename)
        escaped_fn = ngx.re.gsub(escaped_fn, ",", "%2C")
        escaped_fn = ngx.re.gsub(escaped_fn, "'", "%27")

        if ua ~= nil then
            if string.match(ua, 'Safari') and  not string.match(ua, 'Chrome') then
                filename = "filename=" .. args.filename
            elseif string.match(ua, 'MSIE [78]\\.0') then
                filename = "filename=" .. escaped_fn
                filename = ngx.re.gsub(filename, "%20", " ")
                filename = ngx.re.gsub(filename, "%25", "%")
            elseif string.match(ua, 'Android') then
                filename = "filename=" .. "\"" .. args.filename .. "\""
            else
                filename ="filename*=UTF-8''" .. escaped_fn
        end
    end

        if filename ~= nil and args.disposition ~= nil and args.disposition ~= "" then
            ngx.header.Content_Disposition = args.disposition .. "; " .. filename
        end

        if args.content_type ~= nil and args.content_type ~= "" then
            ngx.header.Content_Type = args.content_type
        end

    }


    include include/mediastorage-settings.conf;

    set $unistat_namespace "taxi";
    set $unistat_request_type "get";
}

location /get-taxi-internal/ {
    internal;
    rewrite /get-taxi-internal/(.*) /$1 break;
    include include/mediastorage-settings.conf;
}
