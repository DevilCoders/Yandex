{%- set speed_iface = salt['cmd.shell']('source /usr/local/sbin/autodetect_active_eth; ethtool $default_route_iface |grep Speed |awk "{print $NF}"  |egrep "[0-9]+" -o') | int %}

{%- if speed_iface > 0 %}
     {%- set slb_weight = ((( speed_iface / 1000 ) + 40 ) / 5 ) %}
     {%- if slb_weight <= 0 %}
         {%- set slb_weight = 2 %}
     {%- endif %}
{%- endif %}

    location ^~ /get-tech/ {
        proxy_pass http://mediastorage;
        #proxy_cache_valid 200 1h;
        #proxy_cache_key "$request_method$uri$args";
        #proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_404;
        #proxy_cache tech;

        set $unistat_request_type "get";
        set $unistat_namespace "tech";
        log_by_lua_file /etc/nginx/include/metrics.lua;
    }

    location ^~ /get-docker-registry/ {
        proxy_pass http://mediastorage;
        proxy_cache_valid 200 12h;
        proxy_cache_min_uses 3;
        proxy_cache_key "$request_method$uri$args";
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_404;
        proxy_cache docker-registry;

        if ($arg_content_type) {
            more_set_headers -s '200 206' "Content-Type: $arg_content_type";
        }

        set $unistat_namespace "docker-registry";
        set $unistat_request_type "get";
        log_by_lua_file /etc/nginx/include/metrics.lua;
    }

    location ~ ^/get-(backa|thoth|va|photo-facemodels|taxi|ichwill|imageparser|bugbounty|lego-site|erudit|disk-worker|dataapi|disk-smartcache|conductor-logs|webmaster|signer|molly|bannerstorage|autotest|load-ammo|intmimca|signals|metrics-serpsets|antivir|direct-files|shuttilka|kinopoisk|ydf-private|corestorage|browser-infra|contest|advisor|pogoda|skynet|gorynych|tools_st|mpro-dataset|kinopoisk-archive|appmetrica-export|browser-api-spa2|jing|callrec|market-ichwill|tools_sp|pypi|wiki-evaluation|wiki-wiki|wiki-school|newhire|sentry|maps_mrc|maps_mrc_testing|marketcrm|hurge|yamarec|eine|browser-api-data|load-archive|maps-ios-pods|toloka|rock-int|patterns|yambo|goldencity-cvs|classif-archive|libra|review|wiki-connect|market-ios|balance|metrika-logs|glance|oebs_group_print|tfb|femida|browser-tests|tv-import|alet|browser-clouddoc|otrs|appchecker|parts|devtools|arcadia-review|oops|oebs_dss_doc|turbo-commodity-feed|passp-sec-backup|uzedo|payments-modadvert|modadvert|payments|blogs|telephony-internal|qdm|ps-cache|tfb_testing|tickets-private|mass-recruitment|telephony-external|pdd-ipa|avia-partner-raw-response|backpack|yadoc|yadoc-test|yamonetization|forms|q-internal|sologger|oebs-lob|mba-ariba-integration|music-qa-blobs|music-blobs)/ {
        proxy_pass http://mediastorage;

        if ($arg_content_type) {
            more_set_headers -s '200 206' "Content-Type: $arg_content_type";
        }

        set $unistat_request_type "get";
        set $unistat_namespace $1;
        log_by_lua_file /etc/nginx/include/metrics.lua;
    }

    location ^~ /get-speechbase/ {
        proxy_pass http://mediastorage;

        if ($arg_content_type) {
            more_set_headers -s '200 206' "Content-Type: $arg_content_type";
        }

        set $unistat_request_type "get";
        set $unistat_namespace "speechbase";
        log_by_lua_file /etc/nginx/include/metrics.lua;
    }

    location ^~ /get-sologger/ {
        proxy_pass http://mediastorage;

        if ($arg_content_type) {
            more_set_headers -s '200 206' "Content-Type: $arg_content_type";
        }

        set $unistat_request_type "get";
        set $unistat_namespace "sologger";
        log_by_lua_file /etc/nginx/include/metrics.lua;
    }

    location ^~ /get-distbuild/ {
        proxy_pass http://mediastorage;

        if ($arg_content_type) {
            more_set_headers -s '200 206' "Content-Type: $arg_content_type";
        }

        set $unistat_request_type "get";
        set $unistat_namespace "distbuild";
        log_by_lua_file /etc/nginx/include/metrics.lua;

    }

    location ^~ /get-rtmr/ {
        proxy_pass http://mediastorage;

        if ($arg_content_type) {
            more_set_headers -s '200 206' "Content-Type: $arg_content_type";
        }

        set $unistat_request_type "get";
        set $unistat_namespace "rtmr";
        log_by_lua_file /etc/nginx/include/metrics.lua;

    }

    #https://st.yandex-team.ru/MUSIC-10793#1489490854000
    location ^~ /get-music/ {
        proxy_pass http://mediastorage;

        set $unistat_request_type "get";
        set $unistat_namespace "music";
        log_by_lua_file /etc/nginx/include/metrics.lua;
    }

    location ^~ /get/weather-embed/ {
        rewrite ^/get/weather-embed(.*) /get-weather-embed$1 break;
        proxy_pass http://mediastorage;
        #proxy_cache_valid 200 3m;
        #proxy_cache_key "$request_method$uri$args";
        #proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_404;
        #proxy_cache weather-embed;

        set $unistat_request_type "get";
        set $unistat_namespace "weather-embed";
        log_by_lua_file /etc/nginx/include/metrics.lua;
    }

    location ^~ /get-zen/ {
        proxy_pass http://mediastorage;
        #proxy_cache_valid 200 1d;
        #proxy_cache_key "$request_method$uri$args";
        #proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_404;
        #proxy_cache zen;

        set $unistat_request_type "get";
        set $unistat_namespace "zen";
        log_by_lua_file /etc/nginx/include/metrics.lua;
    }

    # Сюда добавляем все namespace видеоплатформы
    # For videoplatform NS;
    location ~ /(downloadinfo|get)-video-(user-backup|ya-awaps|migration-dev|edu-platform|kinopoisk-trailers|ya-holiday|ruscorpora|developers|autoru-office|ya-expert|ya-ukraine-official|ya-events|afisha-trailers|ya-maps|ya-fishki|ya-cinema|platon|podskazky|direct|adv-blog|shad-spb|ya-taxi|ya-money|ya-zno|market-review|sales-edu|ya-maps-help|histrf|ya-traffic|ya-adfox|an|ya-study-hr|disk|nda|news|ott|agencyevents|hosting|ya-launcher|ya-display|geo|videodirekt)/ {
        proxy_pass http://mediastorage;

        set $unistat_request_type $1;
        set $unistat_namespace video-$2;
        log_by_lua_file /etc/nginx/include/metrics.lua;
    }

    # Сюда добавляем все namespace для раздачи torrent
    location ~ /(downloadinfo|get)-(zen|repo|arcadia-review|docker-registry|devtools)/ {
        proxy_pass http://mediastorage;

        set $unistat_request_type $1;
        set $unistat_namespace $2;
        log_by_lua_file /etc/nginx/include/metrics.lua;
    }

    # Сюда добавляем все namespace S3
    # For S3 NS;
{% set s3_namespaces = ['vh-superfast', 'sandbox', 'load-ssd',
'videohosting', 'sdc', 'strm', 'default', 'soccoro', 'satellite-factory', 'yc2', 'pgaas',
'load', 'fml', 'nirvana', 'adfox', 'news', 'autoru', 'inframedia', 'music', 'qloud', 'weather',
'marketito', 'browser-teamcity', 'panoramas', 'videopoisk', 'teamcity', 'octopus', 'ott',
'yastatic', 'antivirbrowser', 'cdn', 'panoramas-backoffice', 'maps-front', 'homexports', 'diskcommon',
'signer', 'marketcrm', 'ugcvideo', 'ycinfra', 'b2bgeo-courier', 'solomon', 'yabs', 'npm', 'taxigreenplum',
'market-backoffice', 'adfox-ui'] %}

{%- for s3_namespace in s3_namespaces %}
    location ^~ /get-s3-{{ s3_namespace }}/ {
        proxy_pass                  http://mediastorage;
        proxy_request_buffering     off;
        proxy_read_timeout          7200s;
        proxy_send_timeout          600s;
        proxy_connect_timeout       300s;
        proxy_buffer_size           64k;
        proxy_buffers               16 32k;
        proxy_redirect              off;

        set $unistat_request_type "get";
        set $unistat_namespace s3-{{ s3_namespace }};
        log_by_lua_file /etc/nginx/include/metrics.lua;
    }
{%- endfor %}

{% set s3_yc_namespaces = ['yc-cold', 'yc-cold-preprod'] %}

{%- for s3_yc_namespace in s3_yc_namespaces %}
    location ^~ /get-s3-{{ s3_yc_namespace }}/ {
        # cache only requests with byte range in range 0-512k
        # bypass cache for requests without range header and for
        # ranges with offset != 0
        proxy_pass                  http://mediastorage;
        set_by_lua_block $nocache {
            local range = ngx.var.http_range
            if range == nil or range == '' then
                return 1
            end
            local from, to, err = ngx.re.find(range, "bytes=0-([0-9]+)", "jo", nil, 1)
            if from == nil then
                return 1
            end
            local upper_boundry = tonumber(string.sub(range, from, to))
            if upper_boundry > 524288 then
                return 1
            end
            return 0
        }
        proxy_cache_bypass $nocache;
        proxy_no_cache $nocache;
        proxy_cache s3-yc;
        proxy_cache_key $request_method$uri$args$http_range;
        proxy_cache_valid 200 206 24h;
        proxy_cache_min_uses 2;
        proxy_set_header Range $http_range;

        #https://st.yandex-team.ru/MDS-7737
        proxy_set_header X-MDS-NGINX-URI $uri;

        # https://st.yandex-team.ru/MDS-54 - НЕ УБИРАТЬ НИКОГДА
        proxy_set_header X-MDS-SECURITY "{{ pillar['yav']['x_mds_security'] }}";
        proxy_set_header X-Request-Id    $request_id;

        proxy_request_buffering     off;
        proxy_read_timeout          7200s;
        proxy_send_timeout          600s;
        proxy_connect_timeout       300s;
        proxy_buffer_size           64k;
        proxy_buffers               16 32k;
        proxy_redirect              off;

        set $unistat_request_type "get";
        set $unistat_namespace s3-{{ s3_yc_namespace }};
        log_by_lua_file /etc/nginx/include/metrics.lua;
    }
{%- endfor %}

    location ~ ^/statistics-([\w-]+) {
        proxy_pass http://mavrodi/statistics/$1;
        request_id_from_header on;
        request_id_header_name X-Request-Id;

        log_by_lua_block {
            increment_metric("stat_system_dmmm", 1)
        }
    }

    location ^~ /ping {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass http://mediastorage;

        more_set_headers -s '200' "RS-Weight: {{ slb_weight | int }}";

        set $unistat_request_type "ping";
        log_by_lua_file /etc/nginx/include/metrics.lua;
    }

    location / {
        return 410;

        log_by_lua_block {
            increment_metric("stat_system_dmmm", 1)
        }
    }
