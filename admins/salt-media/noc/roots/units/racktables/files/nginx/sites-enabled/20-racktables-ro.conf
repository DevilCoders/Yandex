# vim: set ft=nginx:

server
{
    charset UTF-8;
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name ro.racktables.yandex-team.ru ro.racktables.yandex.net ro.prestable.test.racktables.yandex-team.ru;

    ssl_certificate /etc/nginx/certs/wildcard.pem;
    ssl_certificate_key /etc/nginx/certs/wildcard.key;

    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    add_header X-RT-Balancer $hostname always;
    add_header X-RT-RO $hostname always;

    access_log  /var/log/nginx-access-L7-balancer.log main if=$loggable;

    log_by_lua_file /etc/nginx/lua/solomon-metrics.lua;

    location / {
        add_header X-RT-Balancer $hostname always;
        add_header X-RT-RO $hostname always;
        # пропускаем запросы через proxy для того, чтобы можно было менять бекенд в healthcheck
        proxy_pass https://rt_ro_http;
    }
    location = /export/slb-check.php {
        root /www/racktables;
        add_header Access-Control-Allow-Origin $cors_allowed_origin;
        add_header "Vary" "Origin";
        add_header Access-Control-Max-Age 600;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, HEAD';
        add_header X-RT-Balancer $hostname always;
        add_header X-RT-RO $hostname always;
        fastcgi_pass rt_fpm;
        #proxy_pass https://[2a02:6b8:b010:31::100]; # debug
        access_log  /var/log/nginx-access.log main if=$loggable;
    }
    # Переключение ручки на ipv4mgr
    location = /export/map-nat64.json {
        access_log /var/log/nginx-access-nat64.log cache;
        rewrite ^/export/(.*)$ /racktables/export/$1 break;
        proxy_set_header Host ipv4.yandex-team.ru;
        proxy_pass https://[2a02:6b8::3400:0:71d:0:126];
        proxy_cache export_map_nat64;
        proxy_cache_valid 502 504      2s;
        proxy_cache_valid any      1m;
        proxy_buffering            on;
        proxy_cache_use_stale error updating http_504 http_502;
    }
    location = /export/expand-fw-macro.php {
        rewrite ^ /macros/$arg_macro?format=text&trypo_format=none? break;
        proxy_set_header   X-Real-IP        "";
        proxy_set_header   X-Forwarded-For  "";
        proxy_set_header   Host             hbf.yandex.net;
        add_header X-RT-Balancer $hostname always;
        proxy_pass         http://hbf_upstream;
    }
}

server
{
    listen 9001 ssl;
    listen [::]:9001 ssl;

    server_name ro.racktables.yandex-team.ru ro.racktables.yandex.net ro.prestable.test.racktables.yandex-team.ru;

    ssl_certificate        /etc/nginx/certs/wildcard.pem;
    ssl_certificate_key    /etc/nginx/certs/wildcard.key;

    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;


    # allow from noc-sas/noc-myt only
    allow 2a02:6b8:b010:31::100; # noc-sas
    allow 2a02:6b8:0:1482::100; # noc-myt
    #allow 2a02:6b8:b011:6407:e61d:2dff:fe01:fa20; # man1-rt1
    #deny all;

    set_real_ip_from 2a02:6b8:b010:31::100; # noc-sas
    set_real_ip_from 2a02:6b8:0:1482::100; # noc-myt
    #set_real_ip_from 2a02:6b8:b011:6407:e61d:2dff:fe01:fa20; # man1-rt1
    set_real_ip_from    127.0.0.1;
    set_real_ip_from    ::1;

    root /www/racktables;
    add_header X-RT-Server $hostname always;
    add_header X-RT-RO $hostname always;

    log_by_lua_file /etc/nginx/lua/solomon-metrics.lua;

    location ~ "^/(index\.php)?$" {
        if ($host ~ ^ro\.racktables\.yandex\.net) {
            return 302 https://ro.racktables.yandex-team.ru$request_uri;
        }
        if ($arg_module = chrome) {
            rewrite .* /$arg_uri? last;
        }
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SERVER_PORT 443;
        fastcgi_pass rt_fpm;
    }
    location /idm {
        rewrite /idm/([^/]+)(/)? /export/idm.php?op=$1 last;
    }
    location = /export/expand-fw-macro.php {
        rewrite ^ https://$http_host$request_uri last;
    }
    location /alexandria {
        rewrite /alexandria/(.*) /$1 break;
        proxy_set_header  Host              $host;
        proxy_set_header  X-Forwarded-For   $remote_addr;
        proxy_set_header  X-Forwarded-Port  $server_port;
        proxy_set_header  X-Forwarded-Host  $host;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_pass http://localhost:9999;
    }
    location ~ "/api/(?P<filename>.+\.(html|jpg|jpeg|gif|png|ico|css|js|svg|graphql))" {
        {%- if salt['file.directory_exists' ]('/usr/share/rtapi2rr/rtapi') %}
        root /usr/share/rtapi2rr/rtapi/api/static;
        {%- else %}
        root /usr/share/invapi/api/static;
        {%- endif %}
        try_files /$filename =404;
    }
    location /api {
        rewrite /api/(.*) /$1 break;
        proxy_set_header  Host              $host;
        proxy_set_header  X-Forwarded-For   $remote_addr;
        proxy_set_header  X-Forwarded-Port  $server_port;
        proxy_set_header  X-Forwarded-Host  $host;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_pass http://127.0.0.1:8080;
    }
    location ~ "/as-user/(?P<as_user>[^/]+)/export/static/" {
        rewrite (.*)/as-user/[^/]+/(.*) $1/$2 last;
    }
    location ~ "/as-user/(?P<as_user>[^/]+)/" {
        rewrite (.*)/as-user/[^/]+/(.*) $1/$2 break;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTP_RT_AUTH_AS_USER $as_user;
        fastcgi_param SERVER_PORT 443;
        fastcgi_index index.php;
        fastcgi_pass rt_fpm;
    }
    location ~         /\. {
        deny all;
    }
    location ~ /(pix|css|js)/.+\.(jpg|jpeg|gif|png|ico|css|js|svg) {

        root /usr/local/racktables-production/wwwroot;
        try_files /$uri @pluginsstatic;
    }
    location @pluginsstatic {
        root /usr/local/racktables-plugins;
        try_files /$uri =404;
    }
    # Переключение ручки на ipv4mgr
    location = /export/map-nat64.json {
        access_log /var/log/nginx-access-nat64.log cache;
        rewrite ^/export/(.*)$ /racktables/export/$1 break;
        proxy_set_header Host ipv4.yandex-team.ru;
        proxy_pass https://[2a02:6b8::3400:0:71d:0:126];
        proxy_cache export_map_nat64;
        proxy_cache_valid 502 504      2s;
        proxy_cache_valid any      1m;
        proxy_buffering            on;
        proxy_cache_use_stale error updating http_504 http_502;
    }
    location ~* ^/export/(ip-info|vip_on_balancers|conductor-netconfig|regional-links|golem-net-fwsections|allobjects|juggler_groups|cactiexport|golem-objects-by-tag|noc-zabbix|regional-links-alldevs|get-vlanconfig-by-port|golem-slb-list|peers-report)\.php {
        access_log off;
        add_header X-RT-RO $hostname always;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SERVER_PORT 443;
        fastcgi_index index.php;
        fastcgi_pass rt_fpm;
    }
    location ~ \.php$ {
        add_header X-RT-Server $hostname always;
        add_header X-RT-RO $hostname always;
        add_header Access-Control-Allow-Origin $cors_allowed_origin;
        add_header "Vary" "Origin";
        add_header Access-Control-Max-Age 600;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, HEAD';
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SERVER_PORT 443;
        fastcgi_pass rt_fpm;
    }
    location /export/netmap/ {
        access_log off;
        autoindex on;
        root /www/racktables;
    }
    location /export/ {
        autoindex on;
        root /www/racktables/;
    }
    location /export/tmp/ {
        autoindex off;
    }
    location = / {
        index index.php;
    }
}
