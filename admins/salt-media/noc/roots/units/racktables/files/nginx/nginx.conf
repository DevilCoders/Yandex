# vim: set ft=nginx:

#user  nobody;
worker_processes  8;

#error_log  logs/error.log;
error_log   /var/log/nginx-error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
	use epoll;
	worker_connections  1024;
	multi_accept on;
}

http {
	include       mime.types;
	default_type  text/plain;
	map $http_user_agent $loggable {
		"noc-export-syncer" 0;
		default 1;
	}

	log_format  main  '$remote_addr - $remote_user [$time_local] $host "$request" '
	                  '$status $body_bytes_sent $request_time "$http_referer" '
	                  '"$http_user_agent" "$http_x_forwarded_for"';
	log_format cache
		'$time_local'
		' $http_host'
		' $request'
		' $status'
		' $body_bytes_sent'
		' $request_time'
		' $upstream_response_time'
		' $upstream_cache_status'
		' $upstream_addr'
		' $remote_addr';

	access_log  /var/log/nginx-access.log main if=$loggable;
	sendfile        on;
	#tcp_nopush     on;
	#rewrite_log     on;

	upstream hbf_upstream {
		server [2a02:6b8:0:3400:0:5c3:0:3];
	}

	# backends for RT master must be down on start to avoid sending request to non-master
	# backup backends needs when no RT master. At this case requests will be sended to all alive backends
{% if grains['yandex-environment'] == 'production' %}
	upstream rt_http {
		# RT master
		server [2a02:6b8:b010:31::100]:9001 down; # noc-sas
		server 93.158.158.93:9001 down; # noc-sas
		server [2a02:6b8:0:1482::100]:9001 down; # noc-myt
		server 77.88.1.117:9001 down; # noc-myt

		server [2a02:6b8:b010:31::100]:9001 backup down; # noc-sas
		server 93.158.158.93:9001 backup down; # noc-sas
		server [2a02:6b8:0:1482::100]:9001 backup down; # noc-myt
		server 77.88.1.117:9001 backup down; # noc-myt
		#server [2a02:6b8:b011:6407:e61d:2dff:fe01:fa20]:9001 backup down; # man1-rt1
	}
	upstream rt_ro_http {
		# RT read-only. Use local if it available. Or use any alive.
		server 127.0.0.1:9001;

		server [2a02:6b8:b010:31::100]:9001 backup down; # noc-sas
		server 93.158.158.93:9001 backup down; # noc-sas
		server [2a02:6b8:0:1482::100]:9001 backup down; # noc-myt
		server 77.88.1.117:9001 backup down; # noc-myt
		#server [2a02:6b8:b011:6407:e61d:2dff:fe01:fa20]:9001 backup down; # man1-rt1
	}
{% else %}
	upstream rt_http {
		server [::]:9001 down;
		server [::]:9001 backup down;
	}
	upstream rt_ro_http {
		# RT read-only. Use local if it available. Or use any alive.
		server 127.0.0.1:9001;
	}
{% endif %}

	upstream rt_fpm {
		server 127.0.0.1:9000;
	}

	include fastcgi_params;
	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	fastcgi_index index.php;
	#keepalive_timeout  0;
	keepalive_timeout  65;

	proxy_redirect     off;
	proxy_set_header   Host             $host;
	proxy_set_header   X-Real-IP        $remote_addr;
	proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

	# эти опции работает только если nginx собран с --with-http_realip_module!
	# мы вообще это используем?
	set_real_ip_from	127.0.0.1;
	set_real_ip_from	::1;
	set_real_ip_from	77.88.1.117;  # noc-myt
	set_real_ip_from	2a02:6b8:0:1482::100;  # noc-myt
	set_real_ip_from	93.158.158.93;  # noc-sas
	set_real_ip_from	2a02:6b8:b010:31::100;  # noc-sas
	#set_real_ip_from	2a02:6b8:b011:6407:e61d:2dff:fe01:fa20; # man1-rt1
	real_ip_header		X-Real-IP;
	real_ip_recursive on;

	client_max_body_size       10m;
	client_body_buffer_size    128k;

	proxy_connect_timeout      10;
	proxy_send_timeout         121;
	proxy_read_timeout         600; # some requests could be very slow
	proxy_buffering            off;
	proxy_temp_file_write_size 64k;

	add_header X-RT-Server $hostname always;

	ssl_session_cache  builtin:1000  shared:SSL:10m;
	ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
	ssl_prefer_server_ciphers on;

	map $http_origin $cors_allowed_origin {
		default '';

		https://yd.yandex-team.ru $http_origin;
		~^https:\/\/.*\.yd\.yandex-team\.ru$ $http_origin;

		https://deploy.yandex-team.ru $http_origin;
		~^https:\/\/.*\.deploy\.yandex-team\.ru$ $http_origin;
	}

	proxy_cache_path /var/cache/nginx/export-map-nat64 levels=1:2 keys_zone=export_map_nat64:16m
			inactive=5m use_temp_path=off;
	
	include sites-enabled/*.conf;
	include conf.d/*.conf;
}
