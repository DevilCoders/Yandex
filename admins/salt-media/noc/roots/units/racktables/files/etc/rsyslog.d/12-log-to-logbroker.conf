# vim: ft=jinja
{% if grains["kernel"] == "Linux" %}
# by default, we disable forwarding from journal NOCDEV-7903
module(load="imjournal" StateFile="imjournal" Ratelimit.Interval="0" IgnorePreviousMessages="on")
{% else %}
# module(load="omprog") # loaded in 09-fw-restart.conf
{% endif %}
module(load="mmjsonparse")

template(name="date-rfc3339" type="string" string="%timegenerated:::date-rfc3339")
template(name="json-log-fmt" type="string" string="%$!%\n")
template(name="escape_msg" type="string" string="%$!msg:::json%")


# from journald
if ($programname contains 'invapi') then {
  call racktables_logs
}

# NOCDEV-7682
## input files
input (type="imfile" file="/var/log/invapi/access.log" tag="invapi-access-log" ruleset="racktables_logs" PersistStateInterval="100")
{% if grains["kernel"] == "FreeBSD" %}
# /var/log/invapi/invapi.log - https://st.yandex-team.ru/NOCDEV-7682#62d79b4aa25f677ebe0b45f8
#input (type="imfile" file="/var/log/invapi/invapi.log" tag="invapi-log" ruleset="racktables_logs" PersistStateInterval="100")
input (type="imfile" file="/var/log/invapid.log" tag="invapid-log" ruleset="racktables_logs" PersistStateInterval="100")
{% endif %}

ruleset(name="setlevel") {
  # static const char *syslog_severity_names[8]={"emerg", "alert", "crit", "err", "warning", "notice", "info", "debug"};
  if ($/init == 0) then {
    set $.ret = parse_json(
      '{"emerg":"crit", "alert":"crit", "err":"error", "warning":"warn", "notice":"info"}',
      "\$/syslog_severity_names_renames"
    );
    set $/init = 1;
  }
  set $!level = get_property($/syslog_severity_names_renames, $syslogseverity-text);
  if ($!level == "") then {
    set $!level = $syslogseverity-text;
  }
}


ruleset(name="racktables_logs") {
  # preserve meta
  set $._PID = $!_PID;
  set $._SYSTEMD_UNIT = $!_SYSTEMD_UNIT;
  set $._CMDLINE = $!_CMDLINE;
  set $._UID = $!_UID;
  unset $!;

  # set defaults
  # set $!ts = exec_template("date-rfc3339");
  set $!ts = cnum($$now-unixtimestamp);
  # set $!level = $pri-text;
  call setlevel
  set $!host = $hostname;
  set $!syslogtag = $syslogtag;

  action(type="mmjsonparse" cookie="")
  set $! = $.;  # enrich message by meta

  if ($syslogtag != "invapi-access-log") then {
    set $!msg = exec_template("escape_msg");
  }

  {% if grains["kernel"] == "FreeBSD" %}
  action(
    type="omprog"
    binary="/usr/local/bin/rsyslog-omlb --config /usr/local/etc/rsyslog-omlb.yaml"
    template="json-log-fmt"
    confirmMessages="on"
    queue.filename="rsyslog-omlb" 
    queue.size="50000" 
    queue.type="LinkedList"
    output="/var/log/rsyslog-omlb.log"
  )
  {% else %}
  action(type="omfwd" target="localhost" port="10514" protocol="udp" template="json-log-fmt")
  {% endif %}
}
