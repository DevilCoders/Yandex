map $http_origin $cors_origin {
    https://manage.valve.yandex-team.ru $http_origin;
    https://qyp.yandex-team.ru $http_origin;
    https://dev-qyp.nanny.yandex-team.ru $http_origin;
    https://qyp-testing.in.yandex-team.ru $http_origin;
    https://localhost.yandex-team.ru $http_origin;
    https://*.infracloud.yandex-team.ru $http_origin;
    default "";
}

access_log off;

server {
    listen 80 reuseport;
    listen [::]:80 reuseport;
    listen 443 ssl reuseport;
    listen [::]:443 ssl reuseport;

    server_name api.puncher.yandex-team.ru;

    error_log /var/log/nginx/api-error.log;

    ssl_certificate /etc/nginx/ssl/api.puncher.yandex-team.ru.pem;
    ssl_certificate_key /etc/nginx/ssl/api.puncher.yandex-team.ru.key;

    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # ciphers are taken from the wiki, but DES-CBC3-SHA have been removed from the list (due to sslrate.yandex-team.ru warning)
    ssl_ciphers kEECDH+AESGCM+AES128:kEECDH+AES128:kRSA+AESGCM+AES128:kRSA+AES128:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2;
    ssl_session_cache shared:SSL:64m;
    ssl_session_timeout 28h;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

    # PUNCHER-140: added gzip compressing for css and js
    include include/gzip-front-options;

    log_by_lua_file /etc/nginx/lua/solomon-metrics.lua;

    # Separate location for balancer, we want custom log file for ping requests
    location /_ping {
        set_real_ip_from 127.0.0.1;
        set_real_ip_from ::1;
        rewrite .* /ping? break;
        real_ip_header X-Real-IP; # replace remote_addr for requests generated by nodejs
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://localhost:8080/;
        tskv_log /var/log/nginx/api-ping-access.log tskv-log;
    }

    location /api/dynfw/ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Origin' $cors_origin;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Origin' $cors_origin;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

        set_real_ip_from 127.0.0.1;
        set_real_ip_from ::1;
        real_ip_header X-Real-IP; # replace remote_addr for requests generated by nodejs

        proxy_set_header Host $host;
        proxy_set_header X-Path-Prefix "/api/dynfw";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://localhost:8080/;
    }

    location / {
        set_real_ip_from 127.0.0.1;
        set_real_ip_from ::1;
        real_ip_header X-Real-IP; # replace remote_addr for requests generated by nodejs

        proxy_set_header Host $host;
        proxy_set_header X-Path-Prefix "/api/dynfw";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://localhost:8080/;
        proxy_redirect / /api/dynfw/;
    }

    location /api/st-update/ {
        set_real_ip_from 127.0.0.1;
        set_real_ip_from ::1;
        real_ip_header X-Real-IP; # replace remote_addr for requests generated by nodejs

        proxy_set_header Host $host;
        proxy_set_header X-Path-Prefix "/api/st-update";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://localhost:8084/;
        proxy_redirect / /api/st-update/;
    }
}
