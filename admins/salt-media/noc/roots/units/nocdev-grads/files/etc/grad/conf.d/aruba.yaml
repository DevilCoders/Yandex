series:
  snmp_poller.aruba_wlc:
    min_interval: 300
  snmp_poller.aruba_radio:
    min_interval: 300
  snmp_poller.aruba_wlc_ap:
    min_interval: 30
  snmp_poller.aruba_wlc_radio:
    min_interval: 30
  snmp_poller.aruba_wlc_ssid:
    min_interval: 30
  snmp_poller.aruba_iap_ap:
    min_interval: 30

pollers:
  SNMP aruba WLC SSID:
    poller: snmp
    poller version: 2
    poller params:
      oid_limit: 30
      counters:
        - { oid: aruba-ap.aiSSID, options: [ "use_snmpbulkget" ] }
        - { oid: aruba-ap.aiClients, options: [ "use_snmpget" ] }
    filter: "{Aruba} and [опрос SNMP]"
    series: aruba_wlc
    interval: 300

  SNMP aruba radio:
    poller: snmp
    poller version: 2
    poller params:
      oid_limit: 30
      counters:
        - { oid: aruba-ap.aiRadioIndex, options: [ "use_snmpbulkget" ] }
        - { oid: aruba-ap.aiRadioChannel, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioTransmitPower, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioNoiseFloor, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioUtilization64, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioTxTotalFrames, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioTxMgmtFrames, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioTxDataBytes, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioTxDrops, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioRxTotalFrames, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioRxDataFrames, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioRxDataBytes, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioRxMgmtFrames, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioRxBad, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioPhyEvents, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioStatus, options: [ "use_snmpget" ] }
        - { oid: aruba-ap.aiRadioClientNum, options: [ "use_snmpget" ] }
    filter: "{Aruba} and [работает SNMP]"
    series: aruba_radio
    interval: 300

  SNMP aruba wlc ap:
    poller: snmp
    poller version: 2
    poller params:
      oid_limit: 30
      counters:
        - { oid: WLSX-WLAN-MIB.wlanAPName, options: [ "use_snmpbulkget" ] }
        - { oid: WLSX-WLAN-MIB.wlanAPStatus, options: [ "use_snmpget" ] }
    filter: "{Aruba WiFi controller} and [работает SNMP]"
    series: aruba_wlc_ap
    interval: 30

  SNMP aruba wlc radio:
    poller: snmp
    poller version: 2
    poller params:
      oid_limit: 30
      counters:
        - { oid: WLSX-WLAN-MIB_radio.wlanAPRadioTxPkts, options: [ "use_snmpbulkget", "add_index" ] }
        - { oid: WLSX-WLAN-MIB_radio.wlanAPRadioTxBytes, options: [ "use_snmpbulkget", "add_index" ] }
        - { oid: WLSX-WLAN-MIB_radio.wlanAPRadioRxPkts, options: [ "use_snmpbulkget", "add_index" ] }
        - { oid: WLSX-WLAN-MIB_radio.wlanAPRadioRxBytes, options: [ "use_snmpbulkget", "add_index" ] }
        - { oid: WLSX-WLAN-MIB_radio.wlanAPRadioTxDataBytes, options: [ "use_snmpbulkget", "add_index" ] }
        - { oid: WLSX-WLAN-MIB_radio.wlanAPChUtilization, options: [ "use_snmpbulkget", "add_index" ] }
        - { oid: WLSX-WLAN-MIB_radio.wlanAPRadioHTChannel, options: [ "use_snmpbulkget", "add_index" ] }
        - { oid: WLSX-WLAN-MIB_radio.wlanAPRadioTransmitPower10x, options: [ "use_snmpbulkget", "add_index" ] }
        - { oid: WLSX-WLAN-MIB_radio.wlanAPRadioTxDroppedPkts, options: [ "use_snmpbulkget", "add_index" ] }
        - { oid: WLSX-WLAN-MIB_radio.wlanAPRadioTxErrorPkts, options: [ "use_snmpbulkget", "add_index" ] }
        # to resolve ap name
        - { oid: WLSX-WLAN-MIB.wlanAPName, options: [ "use_snmpbulkget" ] }
      post_fn: [ recalc_aruba_wlc ]
    filter: "{Aruba WiFi controller} and [работает SNMP]"
    series: aruba_wlc_radio
    interval: 30

  SNMP aruba wlc ssid:
    poller: snmp
    poller version: 2
    poller params:
      oid_limit: 30
      counters:
        - { oid: WLSX-WLAN-MIB_ssid.wlanAPESSID, options: [ "use_snmpbulkget", "add_index" ] }
        - { oid: WLSX-WLAN-MIB_ssid.wlanAPNumClients, options: [ "use_snmpget" ] }
        # to resolve ap name
        - { oid: WLSX-WLAN-MIB.wlanAPName, options: [ "use_snmpbulkget", "add_index" ] }
      post_fn: [ recalc_aruba_wlc ]
    filter: "{Aruba WiFi controller} and [работает SNMP]"
    series: aruba_wlc_ssid
    interval: 30
  SNMP aruba iap uptime: # NOC-19737
    poller: snmp
    poller version: 3
    poller params:
      oid_limit: 30
      fn:
        "/iap_uptime/": [ multiplier_0.01 ]
      counters:
        - { oid: aruba-ap.aiAPName, options: [ "use_snmpbulkget" ] }
        - { oid: aruba-ap.aiAPUptime, options: [ "use_snmpbulkget" ] }
      post_fn: [ [ group_by_count, { keys: [ "host" ], new_sensor: ap_count } ] ]
    filter: "rt%{Aruba IAP WLC} and [работает SNMP]"
    series: snmp_poller.aruba_iap_ap
    offset: 5
    scattering_percent: 100
    interval: 30
