[[inputs.nginx]]
  urls = ["http://127.0.0.1/nginx_status"]
  response_timeout = "5s"
  tagexclude = ["server", "exe"]

[[inputs.procstat]]
  fielddrop = ["memory_swap", "cpu_time_guest", "cpu_time_guest_nice", "cpu_time_steal", "cpu_time_stolen", "pid",
               "rlimit_file_locks_soft", "nice_priority", "rlimit_num_fds_hard", "rlimit_num_fds_soft", "rlimit_realtime_priority_hard",
               "rlimit_realtime_priority_soft", "created_at"]
  tagexclude = ["pattern", "exe"]
  namedrop = ["procstat_lookup"]
  pattern = "/usr/bin/grad_server -c /etc/grad/grad_server.yml --config-directory /etc/grad/conf.d"
  user = "grad"
  cmdline_tag = true

  [inputs.procstat.tags]
    _db = "grad"

[[inputs.procstat]]
  fielddrop = ["memory_swap", "cpu_time_guest", "cpu_time_guest_nice", "cpu_time_steal", "cpu_time_stolen", "pid",
               "rlimit_file_locks_soft", "nice_priority", "rlimit_num_fds_hard", "rlimit_num_fds_soft", "rlimit_realtime_priority_hard",
               "rlimit_realtime_priority_soft", "created_at"]
  tagexclude = ["pattern", "exe"]
  user = "rabbitmq"

  [inputs.procstat.tags]
    _db = "grad"

[[processors.regex]]
  namepass = ["procstat"]
  [[processors.regex.tags]]
    key = "cmdline"
    pattern = "/usr/bin/grad_server -c /etc/grad/grad_server.yml --config-directory /etc/grad/conf.d \\[(?P<svc>.+)\\]"
    replacement = "grad_server ${svc}"

[[inputs.socket_listener]]
  data_format = "influx"
  service_address = "udp://127.0.0.1:8127"
  [inputs.socket_listener.tags]
    _db = "grad"
    _cluster = "auto_DC"

[[inputs.statsd]]
  allowed_pending_messages = 1000000
  delete_counters = true
  delete_gauges = true
  delete_timings = true
  fielddrop = ["*_sum", "*_stddev"]
  parse_data_dog_tags = true
  service_address = ":8126"
  tagexclude = ["metric_type"]
  templates = ["*.*.* _db.measurement.field", "*.* measurement.field"]
  read_buffer_size = 524280
  [inputs.statsd.tags]
    _db = "grad"
    _cluster = "auto_DC"

# drop some tags from specified metrics
# we can use any processor here, regex works fine.
# NOCDEV-4082
[[processors.regex]]
namepass = ["poller_*", "scheduler*"]  # drop host from these...
namedrop = ["scheduler_status*", "scheduler_send_data", "poller_telemetry_recv_size", "poller_telemetry_packets"]
tagexclude = ["host"]

[[inputs.iptables]]
  alias = "iptables"
  use_sudo = true
  chains = [ "INPUT", "OUTPUT" ]
  table = "filter"
  binary = "iptables"
  [inputs.iptables.tags]
    iptables = "iptables"
    _db = "grad"

[[inputs.iptables]]
  alias = "ip6tables"
  use_sudo = true
  chains = [ "INPUT", "OUTPUT" ]
  table = "filter"
  binary = "ip6tables"
  [inputs.iptables.tags]
    iptables = "ip6tables"
    _db = "grad"

[[inputs.unbound]]
  server = "127.0.0.1:8953"
  use_sudo = true
  thread_as_tag = true
  [inputs.unbound.tags]
    _db = "grad"

[[inputs.netstat]]
[[inputs.linux_sysctl_fs]]

[[inputs.rabbitmq]]
client_timeout = "6s"
fielddrop = ["idle_since"]
header_timeout = "5s"
tagexclude = ["url", "node"]

[inputs.rabbitmq.tagdrop]
queue = ["*.gen-*", "linkeye_dev*", "federation.rmq_cat*"]

[inputs.rabbitmq.tags]
_db = "grad"
