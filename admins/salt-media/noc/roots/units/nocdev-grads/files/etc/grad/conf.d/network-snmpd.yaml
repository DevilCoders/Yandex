variables:
  network key ifname: &network_key_ifname
    - ifmib.ifName
    - ifmib.ifAlias
    - {oid: ifmib.ifHighSpeed, options: ["use_snmpget"]}
    - {oid: ifmib.ifHCInOctets, options: ["use_snmpget"]}
    - {oid: ifmib.ifHCOutOctets, options: ["use_snmpget"]}
    - {oid: ifmib.ifHCInUcastPkts, options: ["use_snmpget"]}
    - {oid: ifmib.ifHCOutUcastPkts, options: ["use_snmpget"]}
    - {oid: ifmib.ifInNUcastPkts, options: ["use_snmpget"]}
    - {oid: ifmib.ifOutNUcastPkts, options: ["use_snmpget"]}
    - {oid: ifmib.ifInDiscards, options: ["use_snmpget"]}
    - {oid: ifmib.ifOutDiscards, options: ["use_snmpget"]}
    - {oid: ifmib.ifInErrors, options: ["use_snmpget"]}
    - {oid: ifmib.ifOutErrors, options: ["use_snmpget"]}
    - {oid: ifmib.ifOperStatus, options: ["use_snmpget"]}
    - {oid: ifmib.ifAdminStatus, options: ["use_snmpget"]}
    - {oid: ifmib.ifLastChange, options: ["use_snmpget"]}
    - {oid: ifmib.ifInMulticastPkts, options: ["use_snmpget"]}
    - {oid: ifmib.ifOutMulticastPkts, options: ["use_snmpget"]}
    - {oid: ifmib.ifInBroadcastPkts, options: ["use_snmpget"]}
    - {oid: ifmib.ifOutBroadcastPkts, options: ["use_snmpget"]}

pollers:
  SNMP nokia:
    poller: snmp
    poller version: 2
    poller params:
      oid_limit: 30  # saw timeouts TODO: recheck
      max_job_parallel: 4
      counters: *network_key_ifname
      post_fn: [rearrange_partial_data, sum_ifmib_counters_new, check_net_data_sanity]
      skip_key_expr: {'ifname': '^(A/|system)', 'ifalias': '^(QSFP-DD Connector)'}
    filter: "{Nokia}"
    series: network_fast
    interval: 30

  SNMP linux:
    poller: snmp
    poller version: 2
    poller params:
      counters: *network_key_ifname
      post_fn: [rearrange_partial_data, sum_ifmib_counters_new, check_net_data_sanity]
      skip_key_expr:  {'ifname': '(dummy|veth|in\.kni|out\.kni)'}
    filter: "{конюшня NOC} and {Linux} and [опрос SNMP] and not ([Switchdev] or [Cumulus])"
    series: network_fast
    interval: 30

  SNMP Aruba network:
    poller: snmp
    poller version: 2
    poller params:
      counters: *network_key_ifname
      post_fn: [rearrange_partial_data, sum_ifmib_counters_new, check_net_data_sanity]
    filter: "{Aruba} and [опрос SNMP]"
    series: network
    interval: 300
