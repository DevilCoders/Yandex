#!/usr/bin/env glua
-- load common
do local _c, _e = loadfile("common.test"); if _e then print(_e); os.exit(1) else _c() end end
-- end common

local os = require("os")
local log = require("log")

-- XXX globals for module
payload = {{
  Tags = {type = "metahost", name = "host1", metahost = "host1"},
  Result = {
    backend = {

      ["2xx"] = 3600.0, ["3xx"] = 336.1, ["4xx"] = 46.2, ["5xx"] = 1006.3,
      request_timings = {1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9},

      int = {
        ["2xx"] = 2000, ["3xx"] = 33.1, ["4xx"] = 46.2, ["5xx"] = 56.3,
        ssl_timings = {0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9}},

      int_bad = {
        ["foo-bar.2xx"] = 2000, ["foo-bar.3xx"] = 3.1,
        ["foo-bar.4xx"] = 6.2,  ["foo-bar.5xx"] = 256.3,
        ["foo-bar.total_rps"] = 2500,
      },

      ext = {
        api = {
          ["2xx"] = 70, ["3xx"] = 73.1, ["4xx"] = 76.2, ["5xx"] = 76.3,
          total_upstream_timings = {7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9}
        }
      },
    }
  }},

  {
  Tags = {type = "host", name = "host2", metahost = "host1 with default"},
  Result = {
    ["2xx"] = 600.0, ["3xx"] = 36.1, ["4xx"] = 6.2, ["5xx"] = 10.3,
    total_upstream_timings = {1.01, 1.02, 1.03, 1.04, 1.05, 1.06, 1.07, 1.08, 1.09},
    backend = {
      ["2xx"] = 200, ["3xx"] = 330.1, ["4xx"] = 460.2, ["5xx"] = 50.3,
      total_upstream_timings = {0.11, 0.22, 0.33, 0.44, 0.55, 0.66, 0.77, 0.88, 0.99}},
    ["mega.service"] = {
      ["2xx"] = 200, ["3xx"] = 330.1, ["4xx"] = 460.2, ["5xx"] = 600.3,
      total_upstream_timings = {0.11, 0.22, 0.33, 0.44, 0.55, 0.66, 0.77, 0.88, 0.99}},
 }},
}
variables = {}
config = {
  type = "host",
  limits = {backend={default=30}, default=900},
}
-- XXX end globals

loadPlugin("picker.lua")

print("Result #1:", tprint(run()))

config.type = "metahost"

config.query = "^(backend)/.*/([54]xx)$"
config.limits = {backend = {["4xx"] = {50, "(404) Not Found"}}}
print("Result #2:", tprint(run()))

config.query = "^(backend)/.*/([54]xx)$"
config.limits.backend = {60, "common case"}
print("Result #3:", tprint(run()))

variables = {limit_n61_d71 = "iftimeofday(16, 18, 61, 71)"}
config.query = "^(backend)/.*/([54]xx)$"

config.limits = {backend = {"limit_n61_d71", "case with variables"}}
print("Result #4:", tprint(run()))

config.as_percent = {base = "[0-9]xx$"}
config.limits = {["5xx"] = {5, "我们都会死!!!"}}
config.query = "^backend/int_bad/.+(([4-5]xx))$"
print("Result #5:", tprint(run()))

config.as_percent = {base = "[0-9]xx$"}
config.limits = {["5xx"] = {{CRIT = 9, WARN = 5}, "我们都会死!!! with CRIT and WARN"}}
config.query = "^backend/int_bad/.+(([4-5]xx))$"
print("Result #6:", tprint(run()))

config.as_percent = {base = "[0-9]xx$"}
config.limits = {["5xx"] = {{CRIT = 100500, WARN = 5}, "我们都会死!!! with CRIT and WARN (assert level warn)"}}
config.query = "^backend/int_bad/.+(([4-5]xx))$"
print("Result #6:", tprint(run()))

config.as_percent = {base = "[0-9]xx$"}
config.limits = {["5xx"] = {{}, "我们都会死!!! with CRIT and WARN malformed limits"}}
config.query = "^backend/int_bad/.+(([4-5]xx))$"
print("Result #6:", tprint(run()))
