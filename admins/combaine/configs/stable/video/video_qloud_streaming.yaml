---
name: qloud_streaming_playlists_timings
parsing:
  groups: [disk_qloud_videostreaming_stable]
  DataFetcher:
    logname: yandex/disk/videostreaming-access-tskv.log
    timetail_url: "/timetail?pattern=qloud_streaming_playlists_timings&type=java&log_ts="
  Combainer:
    MINIMUM_PERIOD: 60

aggregate:
  data:
    playlist:
      type: custom
      class: Multimetrics
      factor: 1000
  senders:
    graphite:
      type: graphite
      cluster: media.video

---
name: qloud_streaming_first_chunk_timings
parsing:
  groups: [disk_qloud_videostreaming_stable]
  DataFetcher:
    logname: yandex/disk/videostreaming-access-tskv.log
    timetail_url: "/timetail?pattern=qloud_streaming_first_chunk_timings&type=java&log_ts="
  Combainer:
    MINIMUM_PERIOD: 60

aggregate:
  data:
    1st_chunk:
      type: custom
      class: Multimetrics
      factor: 1000
  senders:
    graphite:
      type: graphite
      cluster: media.video

---
name: qloud_streaming_all_chunks_timings
parsing:
  groups: [disk_qloud_videostreaming_stable]
  DataFetcher:
    logname: yandex/disk/videostreaming-access-tskv.log
    timetail_url: "/timetail?pattern=qloud_streaming_all_chunks_timings&type=java&log_ts="
  Combainer:
    MINIMUM_PERIOD: 60

aggregate:
  data:
    all_chunks:
      type: custom
      class: Multimetrics
      factor: 1000
  senders:
    graphite:
      type: graphite
      cluster: media.video

---
name: qloud_streaming_converted_chunks_timings
parsing:
  groups: [disk_qloud_videostreaming_stable]
  DataFetcher:
    logname: yandex/disk/videostreaming-access-tskv.log
    timetail_url: "/timetail?pattern=qloud_streaming_converted_chunks_timings&type=java&log_ts="
  Combainer:
    MINIMUM_PERIOD: 60

aggregate:
  data:
    transcoding_chunks:
      type: custom
      class: Multimetrics
      factor: 1000
  senders:
    graphite:
      type: graphite
      cluster: media.video

---
name: qloud_streaming_cached_chunks_timings
parsing:
  groups: [disk_qloud_videostreaming_stable]
  DataFetcher:
    logname: yandex/disk/videostreaming-access-tskv.log
    timetail_url: "/timetail?pattern=qloud_streaming_cached_chunks_timings&type=java&log_ts="
  Combainer:
    MINIMUM_PERIOD: 60

aggregate:
  data:
    cache_chunks:
      type: custom
      class: Multimetrics
      factor: 1000
  senders:
    graphite:
      type: graphite
      cluster: media.video

---
name: qloud_streaming_ffmpeg
parsing:
  groups: [disk_qloud_videostreaming_stable]
  DataFetcher:
    logname: yandex/disk/videostreaming-tskv.log
    timetail_url: "/timetail?pattern=qloud_streaming_ffmpeg&type=java&log_ts="
  Combainer:
    MINIMUM_PERIOD: 60

aggregate:
  data:
    ffmpeg:
      type: custom
      class: Multimetrics
      factor: 1000
  senders:
    graphite:
      type: graphite
      cluster: media.video

---
name: qloud_streaming_ffprobe
parsing:
  groups: [disk_qloud_videostreaming_stable]
  DataFetcher:
    logname: yandex/disk/videostreaming-tskv.log
    timetail_url: "/timetail?pattern=qloud_streaming_ffprobe&type=java&log_ts="
  Combainer:
    MINIMUM_PERIOD: 60

aggregate:
  data:
    ffprobe:
      type: custom
      class: Multimetrics
      factor: 1000
  senders:
    graphite:
      type: graphite
      cluster: media.video

---
name: qloud_streaming_mulca_chunks
parsing:
  groups: [disk_qloud_videostreaming_stable]
  DataFetcher:
    logname: yandex/disk/videostreaming-tskv.log
    timetail_url: "/timetail?pattern=qloud_streaming_mulca_chunks&type=java&log_ts="
  Combainer:
    MINIMUM_PERIOD: 60

aggregate:
  data:
    mulca_chunks:
      type: custom
      class: Multimetrics
      factor: 1000
  senders:
    graphite:
      type: graphite
      cluster: media.video

---
name: qloud_streaming_db_queries
parsing:
  groups: [disk_qloud_videostreaming_stable]
  DataFetcher:
    logname: yandex/disk/videostreaming-tskv.log
    timetail_url: "/timetail?pattern=qloud_streaming_db_queries&type=java&log_ts="
  Combainer:
    MINIMUM_PERIOD: 60

aggregate:
  data:
    db_queries:
      type: custom
      class: Multimetrics
      factor: 1000
  senders:
    graphite:
      type: graphite
      cluster: media.video

---
name: qloud_streaming_prefetched_chunks_timings
parsing:
  groups: [disk_qloud_videostreaming_stable]
  DataFetcher:
    logname: yandex/disk/videostreaming-access-tskv.log
    timetail_url: "/timetail?pattern=qloud_streaming_prefetched_chunks_timings&type=java&log_ts="
  Combainer:
    MINIMUM_PERIOD: 60

aggregate:
  data:
    prefetched_chunks:
      type: custom
      class: Multimetrics
      factor: 1000
  senders:
    graphite:
      type: graphite
      cluster: media.video

---
name: qloud_streaming_nginx_segments_timings
parsing:
  groups: [disk_qloud_videostreaming_stable]
  metahost: streaming.disk.yandex.net
  DataFetcher:
    logname: nginx/access-tskv.log
    timetail_url: "/timetail?pattern=qloud_streaming_nginx_segments_timings&type=tskv&log_ts="
  Combainer:
    MINIMUM_PERIOD: 60

aggregate:
  data:
    nginx_chunks:
      type: custom
      class: Multimetrics
      factor: 1000
  senders:
    graphite:
      type: graphite
      cluster: media.video

    juggler_qloud_streaming_segment_timings_99perc:
      type: juggler
      namespace: video
      host: "streaming.disk.yandex.net"
      notifications:
        - template_name: phone_escalation
          template_kwargs:
            on_success_next_call_delay: 120
            repeat: 100
            delay: 300
            logins:
                - robot-disk-java-mntr
                - shirankov
                - akinfold
                - kis8ya
                - sanya2013
                - yak-dmitriy
                - friendlyevil
                - c4et4uk
                - derovi
      Aggregator: timed_more_than_limit_is_problem
      checkname: qloud_streaming_segment_timings_99perc
      description: qloud_streaming_segment_timings_99perc
      flaps: { stable_time: 120, critical_time: 300 }
      meta:
        urls:
          - title: Documentation
            url: https://wiki.yandex-team.ru/disk/videostreaming/links/#priproblemax
            type: wiki
      aggregator_kwargs:
        nodata_mode: force_ok
        limits: [{crit: 0,time_start: 2,time_end: 1,day_end: 7,day_start: 1}]
      CRIT: [" ${nginx_chunks}['request_timings'][8] > 9000 "]
      tags:
        - production

---
name: qloud_streaming_nginx_status
parsing:
  groups: [disk_qloud_videostreaming_stable]
  metahost: streaming.disk.yandex.net
  DataFetcher:
    logname: nginx/access-tskv.log
    timetail_url: "/timetail?pattern=qloud_streaming_nginx_status&type=tskv&log_ts="
  Combainer:
    MINIMUM_PERIOD: 60

aggregate:
  data:
    nginx_status:
      type: custom
      class: Multimetrics
      factor: 1000
  senders:
    graphite:
      type: graphite
      cluster: media.video

    juggler_qloud_streaming_nginx_status_5xx: &juggler-conf
      type: juggler
      namespace: video
      host: "streaming.disk.yandex.net"
      notifications:
        - template_name: phone_escalation
          template_kwargs:
            on_success_next_call_delay: 120
            repeat: 100
            delay: 300
            logins:
                - robot-disk-java-mntr
                - shirankov
                - akinfold
                - kis8ya
                - sanya2013
                - yak-dmitriy
                - friendlyevil
                - c4et4uk
                - derovi
      Aggregator: timed_more_than_limit_is_problem
      checkname: qloud_streaming_nginx_status_5xx
      description: qloud_streaming_nginx_status_5xx
      flaps: { stable_time: 120, critical_time: 300 }
      aggregator_kwargs:
        nodata_mode: force_ok
        limits: [{crit: 0,time_start: 2,time_end: 1,day_end: 7,day_start: 1}]
      CRIT: [" ${nginx_status}['5xx'] > 50 "]
      tags:
        - production

    juggler_valid_traffic:
      << : *juggler-conf
      checkname: valid_traffic
      description: valid_traffic
      config:
          type: metahost
      CRIT: [" ${nginx_status}['2xx'] <= 250 "]

    juggler_datacenter_valid_traffic:
      << : *juggler-conf
      checkname: datacenter_valid_traffic
      description: datacenter_valid_traffic
      config:
          type: datacenter
      CRIT: [" ${nginx_status}['2xx'] <= 20 "]
      aggregator_kwargs:
        nodata_mode: force_ok
        unreach_checks: ["streaming.disk.yandex.net:valid_traffic"]
