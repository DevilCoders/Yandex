# this file is autogenerated with generate-awacs-config
# please update the original config.yaml rather than this file

{%- macro balancer_backends(on_error) %}
backends:
  {%- for dc, children in dcs.items() %}
  - weight: 1
    name: {{ section }}_{{ dc }}
    modules:
      - report:
          uuid: requests_{{ section }}_to_{{ dc }}
          ranges: default
      - balancer2:
          connection_attempts: {{ attempts.connect }}
          {%- if on_error %}
          rr: {}
          attempts: 1
          {%- else %}
          attempts: {{ attempts.insidedc }}
          {%- if ping %}
          active:
            delay: {{ active.delay }}
            request: '{{ ping }}'
          {%- else %}
          rr: {}
          {%- endif %}
          watermark_policy:
            lo: {{ watermark['lo'] }}
            hi: {{ watermark['hi'] }}
            unique_policy: {}
          {%- endif %}
          generated_proxy_backends:
            proxy_options:
              connect_timeout: {{ timeout.connect }}
              backend_timeout: {{ timeout.on_error_request if on_error else timeout.request }}
              {%- if on_error %}
              status_code_blacklist: []
              fail_on_5xx: false
              {%- else %}
              {%- if status_code_blacklist %}
              status_code_blacklist: {{ status_code_blacklist }}
              {%- endif %}
              {%- endif %}
            {%- if mode == 'conductor' %}
            instances:
            {%- for host in children %}
              - weight: {{ host.weight }}
                host: {{ host.fqdn }}
                port: {{ connection.port }}
            {%- endfor %}
            {%- else %}
            gencfg_groups:
              - name: {{ children.name }}
                version: {{ children.tag }}
                {%- if children.mtn %}
                port: {{ children.port|default(connection.port) }}
                use_mtn: True
                {%- endif %}
            {%- endif %}
  {%- endfor %}
{%- endmacro %}

auth:
  staff:
    owners:
      logins:
      {%- for user in admins['users'] %}
        - {{ user }}
      {%- endfor %}
      groups:
      {%- for group in admins['groups'] %}
        - {{ group }}
      {%- endfor %}
labels:
  order: '{{ order|default(10000000) }}'
---
regexp_section:
  {%- if host %}
  matcher:
    match_fsm:
      host: '{{ host }}'
  {%- else %}
  matcher: {}
  {%- endif %}
  modules:
    - report:
        uuid: {{ section }}
        ranges: default
    {%- if icookie %}
    - icookie:
        use_default_keys: true
        domains:
          {%- for name in icookie %}
          - '{{ name }}'
          {%- endfor %}
    {%- endif %}
    {%- if redirect %}
    - headers:
        create:
          Location: '1'
    - rewrite:
        actions:
            - regexp: '.*'
              header_name: Location
              rewrite: '{{ redirect }}'
    - errordocument:
        status: 302
        remain_headers: Location
    {%- else %}
    {%- if external %}
    - geobase_macro: {}
    - threshold:
        lo_bytes: {{ threshold.lo }}
        hi_bytes: {{ threshold.hi }}
        pass_timeout: "{{ timeout.threshold.pass }}"
        recv_timeout: "{{ timeout.threshold.recv }}"
    {%- endif %}
    - balancer2:
        rr: { weights_file: ./controls/traffic_control.weights }
        attempts: {{ attempts['crossdc'] }}
        {%- if not external %}
        by_name_policy:
          name: !f get_geo("{{ section }}_", "random")
          unique_policy: {}
        {%- endif %}
        {{- balancer_backends(False) | indent(8) }}
        {%- if errors == 'pass_through' %}
        on_error:
          modules:
            - report:
                uuid: onerror_{{ section }}
                ranges: default
            - balancer2:
                rr: { weights_file: ./controls/traffic_control.weights }
                attempts: 1
                {{- balancer_backends(True) | indent(16) }}
        {%- elif errors == 'static' %}
        on_error:
          modules:
            - report:
                uuid: onerror_{{ section }}
                ranges: default
            - errordocument:
                status: 504
                content: 'Service not available'
        {%- endif %}
    {%- endif %}
