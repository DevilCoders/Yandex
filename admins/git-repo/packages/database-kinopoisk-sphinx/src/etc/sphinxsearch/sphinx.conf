#
# sphinx configuration file sample
#

#############################################################################
## data source definition
#############################################################################

source actors_notranslate
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
                select id_actor, rating as group_id, name from actor where view!='no' and rus=''
        sql_query_post          =
        sql_query_info          = SELECT * FROM actor WHERE id_actor=$id
        sql_attr_uint = group_id
}
index actor_notranslate_idx
{
        html_strip = 1
        html_index_attrs =
        source                  = actors_notranslate
        path                    = /home/sphinx/actor_notranslate_idx                                                                                  
        morphology              = stem_enru                                                                                                            
        stopwords                       =                                                                                                              
        min_word_len            = 2                                                                                                                    
        min_infix_len = 2
        enable_star = 1
        charset_type            = sbcs
}


source films
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
			select id_film, rating AS group_id, REPLACE(REPLACE(name, 'ё','е'), '&\#232;','html232') AS name, rus, REPLACE(find_name, 'ё','е') AS find_name, ua FROM content WHERE VIEW!='no'
        sql_query_post          =
        sql_query_info          = SELECT * FROM content WHERE id_film=$id
        sql_attr_uint = group_id
}

index film_idx
{
        html_strip = 1
        html_index_attrs =
        source                  = films
        path                    = /home/sphinx/film_idx
        morphology              = stem_enru
        stopwords                       =
        min_word_len            = 2
        min_infix_len = 2
        enable_star = 1
        charset_type            = sbcs
}


source actors
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
                      select id_actor, rating as group_id, name, rus, find_name from actor where view!='no'
        sql_query_post          =
        sql_query_info          = SELECT * FROM actor WHERE id_actor=$id
        sql_attr_uint = group_id
}
index actor_idx
{
        html_strip = 1
        html_index_attrs =
        source                  = actors
        path                    = /home/sphinx/actor_idx
        morphology              = stem_enru
        stopwords                       =
        min_word_len            = 2
        min_infix_len = 2
        enable_star = 1
        charset_type            = sbcs
}


source keyword
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
SELECT k.keyword_id,4 AS group_id, k.name, kr.rus_translated AS rus \
FROM keyword k \
INNER JOIN keyword_rus_rel USING(keyword_id) \
INNER JOIN keyword_rus kr USING(rus_id)
        sql_query_post          =
        sql_attr_uint = group_id
}

index keyword_idx
{
        html_strip = 1
        html_index_attrs =
        source                  = keyword
        path                    = /home/sphinx/keyword_idx
        morphology              = stem_enru
        stopwords               =
        min_word_len            = 1
        charset_type            = sbcs
}
source company
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
                      select id_company,5 as group_id, name, rus from company
        sql_query_post          =
        sql_attr_uint = group_id
}
index company_idx
{
        html_strip = 1
        html_index_attrs =
        source                  = company
        path                    = /home/sphinx/company_idx
        morphology              = stem_enru
        stopwords               =
        min_word_len            = 1
        charset_type            = sbcs
}
source study
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
                select study_id,5 as group_id, name, rus from study
        sql_query_post          =
        sql_attr_uint = group_id
}
index study_idx
{
        html_strip = 1
        html_index_attrs =
        source                  = study
        path                    = /home/sphinx/study_idx
        morphology              = stem_enru
        stopwords               =
        min_word_len            = 1
        charset_type            = sbcs
}


source user_src
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
                select user_id,6 as group_id, login from shop_user
        sql_query_post          =
        sql_attr_uint = group_id
}

source user_shop_src
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
                select user_id, login, old_login, first_name, last_name, login AS login_cleared from shop_user WHERE reg_key NOT IN('banned', 'deleted') AND login REGEXP '[0-9a-zA-Zа-яА-ЯёЁ\ \'\-\.\_]+'
#                select user_id, login, old_login, first_name, last_name, preg_replace(login, "[^0-9a-zA-Zа-яА-Я ]"," ") AS login_cleared from shop_user where reg_key!='banned'
        sql_query_post          =
        sql_attr_uint = group_id
}

source tcontent_news_src
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre = SET NAMES CP1251
        sql_query_pre = SET COLLATION_CONNECTION=CP1251_GENERAL_CI
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
        select t.id_t_content,8 as group_id, tx.title `title`, if (tx.big_text='',tx.sm_text,tx.big_text) `text` from t_content t inner join t_content_text tx using (id_t_content) where t.type = 'news' and t.view='ok';
        sql_query_post          =
        sql_attr_uint = group_id
}
source tcontent_sinopsys_src
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre = SET NAMES CP1251
        sql_query_pre = SET COLLATION_CONNECTION=CP1251_GENERAL_CI
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
        select t.id_t_content,9 as group_id, tx.title `title`, if (tx.big_text='',tx.sm_text,tx.big_text) `text` from t_content t inner join t_content_text tx using (id_t_content) inner join t_content_relation rel using (id_t_content) inner join content ko ON (ko.id_film=rel.id AND rel.type='id_film') where t.type = 'sinopsys' and t.view='ok'; 
        sql_query_post          =
        sql_attr_uint = group_id
}
source tcontent_interview_src
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre = SET NAMES CP1251
        sql_query_pre = SET COLLATION_CONNECTION=CP1251_GENERAL_CI
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
        select t.id_t_content,11 as group_id, tx.title `title`, if (tx.big_text='',tx.sm_text,tx.big_text) `text` from t_content t inner join t_content_text tx using (id_t_content) where t.type = 'interview' and t.view='ok';
        sql_query_post          =
        sql_attr_uint = group_id
}
source tcontent_review_src
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre = SET NAMES CP1251
        sql_query_pre = SET COLLATION_CONNECTION=CP1251_GENERAL_CI
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
        select t.id_t_content,12 as group_id, tx.title `title`, if (tx.big_text='',tx.sm_text,tx.big_text) `text` from t_content t inner join t_content_text tx using (id_t_content) where t.type = 'review' and t.view='ok';
        sql_query_post          =
        sql_attr_uint = group_id
}
source tcontent_info_src
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre = SET NAMES CP1251
        sql_query_pre = SET COLLATION_CONNECTION=CP1251_GENERAL_CI
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
        select t.id_t_content,13 as group_id, tx.title `title`, if (tx.big_text='',tx.sm_text,tx.big_text) `text` from t_content t inner join t_content_text tx using (id_t_content) inner join t_content_relation rel using (id_t_content) inner join content ko ON (ko.id_film=rel.id AND rel.type='id_film') where t.type = 'info' and t.view='ok' and t.view='ok';
        sql_query_post          =
        sql_attr_uint = group_id
}
source tcontent_events_src
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre = SET NAMES CP1251
        sql_query_pre = SET COLLATION_CONNECTION=CP1251_GENERAL_CI
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
        select t.id_t_content,14 as group_id, tx.title `title`, if (tx.big_text='',tx.sm_text,tx.big_text) `text` from t_content t inner join t_content_text tx using (id_t_content) where t.type = 'events' and t.view='ok';
        sql_query_post          =
        sql_attr_uint = group_id
}
source message_src
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre = SET NAMES CP1251
        sql_query_pre = SET COLLATION_CONNECTION=CP1251_GENERAL_CI
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
        select f.id_mess+5000000000 as docid,10 as group_id, f.title, f.message as `text` from forum f inner join content ko ON (f.id_rel=ko.id_film) where f.type='film' and f.type_mess='forum' and f.view='';
        sql_query_post          =
        sql_attr_uint = group_id
}
source survey_src 
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre = SET NAMES CP1251
        sql_query_pre = SET COLLATION_CONNECTION=CP1251_GENERAL_CI
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
            select s.survey_id+6000000000 as docid,15 as group_id,s.title `title`,CONCAT(s.text,GROUP_CONCAT(q.quest,' ')) `text` from survey s inner join survey_question q using (survey_id) where s.status='ok' group by q.survey_id
        sql_query_post          =
        sql_attr_uint = group_id
}
source blog_kp_src 
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre = SET NAMES CP1251
        sql_query_pre = SET COLLATION_CONNECTION=CP1251_GENERAL_CI
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
            select id_blog+7000000000, 16 as group_id, title, text from blog_kp  where blog_kp.is_public='yes'
        sql_query_post          =
        sql_attr_uint = group_id
}

source tcontent_article_src
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre = SET NAMES CP1251
        sql_query_pre = SET COLLATION_CONNECTION=CP1251_GENERAL_CI
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
        select t.id_t_content,18 as group_id, tx.title `title`, if (tx.big_text='',tx.sm_text,tx.big_text) `text` from t_content t inner join t_content_text tx using (id_t_content) where t.type = 'article' and t.view='ok';
        sql_query_post          =
        sql_attr_uint = group_id
}

source  film_events_src
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre = SET NAMES CP1251
        sql_query_pre = SET COLLATION_CONNECTION=CP1251_GENERAL_CI
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
        select id+9000000000 as docid, 17 as group_id, title, description as text from film_events where film_events.is_public='yes' 
        sql_query_post          =
        sql_attr_uint = group_id
}

source film_trivia_src
{
    sql_host = localhost
    type = mysql
    sql_user = sphinx
    sql_pass = eroivmj290
    sql_db = kinopoisk
    sql_port = 3306
    sql_query_pre = SET NAMES CP1251
    sql_query_pre = SET COLLATION_CONNECTION=CP1251_GENERAL_CI
    sql_query_pre = SET CHARACTER_SET_RESULTS=cp1251
    sql_query_pre = SET SESSION group_concat_max_len = 10000
    sql_query = \
    SELECT id_film + 10000000000 AS docid,19 AS group_id, IF(rus = '', `name`, rus) `title`, GROUP_CONCAT(DISTINCT trivia_text SEPARATOR '\n\n<br><br>' ) AS `text` FROM trivia INNER JOIN content ko ON (ko.id_film = obj_id) WHERE obj_type = 'film' AND is_hide = 'no' GROUP BY id_film UNION SELECT id_actor + 15000000000 AS docid, 19 AS group_id, IF(rus = '', `name`, rus) `title`, GROUP_CONCAT( DISTINCT trivia_text SEPARATOR '\n\n<br><br>' ) AS `text` FROM trivia INNER JOIN actor a ON (a.id_actor = obj_id) WHERE obj_type = 'actor' AND is_hide = 'no' GROUP BY id_actor;
    sql_query_post =
    sql_attr_uint = group_id
}

index tcontent_messages_idx
{
        html_strip = 1
        html_index_attrs =
    #morphology              = stem_enru
    #min_stemming_len = 1
    wordforms = /home/sphinx/wordforms.txt
    enable_star = 1
    stopwords               =
    source                  = tcontent_news_src
    source                  = tcontent_sinopsys_src
    source                  = message_src
    source                  = tcontent_interview_src
    source                  = tcontent_review_src
    source                  = tcontent_info_src
    source                  = tcontent_events_src
    source                  = survey_src
    source                  = blog_kp_src 
    source                  = tcontent_article_src
    source                  = film_events_src
    source                  = film_trivia_src
    path                    = /home/sphinx/tcontent_messages_idx
    min_word_len            = 2
    charset_type            = sbcs
    charset_table = 0..9, A..Z->a..z, _, a..z, U+A8->U+E5, U+B8->U+E5, U+C0..U+DF->U+E0..U+FF, U+E0..U+FF 
}

index user_idx
{
        html_strip = 1
        html_index_attrs =
        source                  = user_src
        path                    = /home/sphinx/user_idx
        morphology              = stem_enru
        stopwords               =
        min_word_len            = 1
        charset_type            = sbcs
}

index user_shop_idx
{
        html_strip = 1
        html_index_attrs =
        source                  = user_shop_src
        path                    = /home/sphinx/user_shop_idx
        morphology              = stem_enru
        stopwords               =
        min_word_len            = 2
        min_infix_len = 2
        enable_star = 1
        charset_type            = sbcs
}


source location_src
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
                      select id_actor, rating as group_id, location_r from actor where location_r!=''
        sql_query_post          =
        sql_query_info          = SELECT * FROM actor WHERE id_actor=$id
        sql_attr_uint = group_id
}

index location_idx
{
        html_strip = 1
        html_index_attrs =
        source                  = location_src
        path                    = /home/sphinx/location_idx
        morphology              = stem_enru
        stopwords               =
        min_word_len            = 1
        charset_type            = sbcs
        index_exact_words       = 1
}

source cinema
{
        type                            = mysql
        sql_host                        = localhost
        sql_user                        = sphinx
        sql_pass                        = eroivmj290
        sql_db                          = kinopoisk
        sql_port                        = 3306                          # optional, default is 3306
        sql_query_pre           = SET CHARACTER_SET_RESULTS=cp1251
        sql_query                       = \
            SELECT k.id_cinema AS `id`, CONCAT(city.name,' ',IF(kn.name IS NULL,' ',kn.name),' ',k.name) AS `title` FROM kinoteatr k INNER JOIN city USING(id_city) LEFT JOIN kinoteatr_network kn ON(k.network = kn.id_network) WHERE k.hidden='no'
        sql_query_post          =
}

index cinema_idx
{
        html_strip = 1
        html_index_attrs =
        source                  = cinema
        path                    = /home/sphinx/cinema_idx
        morphology              = stem_enru
        stopwords                       =
        min_word_len            = 1
        charset_type            = sbcs
}


# inherited index example
#
# all the parameters are copied from the parent index,
# and may then be overridden in this index definition
#index test1stemmed : test1
#{
#       path                    = /home/sphinx/test1stemmed
#       morphology              = stem_en
#}


# distributed index example
#
# this is a virtual index which can NOT be directly indexed,
# and only containts references to other local and/or remote indexes
#
# if searchd receives a query against this index,
# it does the following:
#
# 1) connects to all the specified remote agents,
# 2) issues the query,
# 3) searches local indexes (while the remote agents are searching),
# 4) collects remote search results,
# 5) merges all the results together (removing the duplicates),
# 6) sends the merged resuls to client.
#
# this index type is primarily intenteded to be able to split huge (100GB+)
# datasets into chunks placed on different physical servers and them search
# through those chunks in parallel, reducing response times and server load;
# it seems, however, that it could also be used to take advantage of
# multi-processor systems or to implement HA (high-availability) search.
#index dist1
#{
        # 'distributed' index type MUST be specified
#       type                            = distributed

        # local index to be searched
        # there can be many local indexes configured
#       local                           = film_idx
#       local                           = actor_idx
#       #local                          = test1stemmed
#
#       # remote agent
#       # multiple remote agents may be specified
#       # syntax is 'hostname:port:index1,[index2[,...]]
#       agent                           = localhost:3313:remote1
#       agent                           = localhost:3314:remote2,remote3
#
#       # remote agent connection timeout, milliseconds
#       # optional, default is 1000 ms, ie. 1 sec
#       agent_connect_timeout   = 1000
#
#       # remote agent query timeout, milliseconds
#       # optional, default is 3000 ms, ie. 3 sec
#       agent_query_timeout             = 3000
#}

#############################################################################
## indexer settings
#############################################################################

indexer
{
        # memory limit
        # can be specified in bytes, kilobytes (mem_limit=1000K) or megabytes (mem_limit=10M)
        # will grow if set unacceptably low
        # will warn if set too low, hurting the performance
        # optional, default is 32M
        mem_limit                       = 512M
}

#############################################################################
## searchd settings
#############################################################################

searchd
{
    listen = 13312
    listen = 13307:mysql41

        # log file
        # searchd run info is logged here
        log                                     = /var/log/searchd.log

        # query log file
        # all the search queries are logged here
        # query_log                     = /var/log/sphinxsearch/query.log


        # client read timeout, seconds
        read_timeout            = 30


        # maximum amount of children to fork
        # useful to control server load
        max_children            = 200


        # a file which will contain searchd process ID
        # used for different external automation scripts
        # MUST be present
        pid_file                        = /var/run/sphinxsearch.pid


        # maximum amount of matches this daemon would retrieve from each index
        # and serve to client
        #
        # this parameter affects per-client memory usage slightly (16 bytes per match)
        # and CPU usage in match sorting phase; so blindly raising it to 1 million
        # is definitely NOT recommended
        #
        # default is 1000 (just like with Google)
        max_matches                     = 100000
}

# --eof--
