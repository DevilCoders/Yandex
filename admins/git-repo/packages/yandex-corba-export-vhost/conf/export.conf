
$HTTP["host"] =~ "^((browser)?export(-ng)?|vb-update)\.([a-z0-9]+\.)?yandex\.(ru|com\.tr|ua|com|kz|by)" {

	alias.url = ( "___invalid___" => "___invalid___",
                      "/404.xml" => "/usr/local/www5/common/404.xml",
                    )	
	url.redirect = ( "(.*/\w+)$" => "http://%0$1/" )

debug.log-request-handling = "enable" 
#        $HTTP["url"] =~ "^/www5/\\.conductor_auth$" {
#         url.rewrite-once += ( "/www5/\\.conductor_auth$" => "/404.xml" )
#        }	

        server.document-root = "/usr/local/www5/export"

	fastcgi.map-extensions += ( "/counters-js" => ".xml" )
        fastcgi.server = (
                ".xml" =>
                ((
                        "socket" => "/tmp/xscript-multiple/xscript-export.sock",
                        "check-local" => "enable",
                        "allow-x-send-file" => "enable"
                ))
        )	

        server.error-handler-404 = "/404.xml"

        $HTTP["url"] =~ "^/counters-js.xml" {
                proxy.server  = ( "" => ( ( "host" => "141.8.146.178", "port" => 80)))
        }

        $HTTP["url"] =~ "^/www5/.conductor_auth" {
           url.access-deny = ( "" )
        }

#https://st.yandex-team.ru/EXPORT-228
        $HTTP["url"] =~ "^/for/login.xml" {
           url.access-deny = ( "" )
        }
        $HTTP["url"] =~ "^/login.xml" {
           url.access-deny = ( "" )
        }

#https://st.yandex-team.ru/EXPORT-216
        $HTTP["url"] =~ "^/inflect.xml" {
           url.access-deny = ( "" )
        }


        $HTTP["url"] =~ "^/bar/(quotes|quotelist|reginfo|translate|reginfo-with-quotes|firefox_update-test|firefox_update|radio|translate-langs|config|blacklist).xml" {
#        $HTTP["url"] =~ "^/bar/(quotes|quotelist|reginfo|translate).xml" {
#        $HTTP["url"] =~ "^/bar/reginfo.xml" {

#                                setenv.replace-request-header = ( "Host" => "legacy.noexport.yandex.ru" ),
                proxy.server  = ( "" => ( ( "host" => "141.8.146.178", "port" => 80)))
        }

        $HTTP["url"] =~ "^/bar/_accelerator.css" {
                proxy.server  = ( "" => ( ( "host" => "141.8.146.178", "port" => 80)))
        }
        $HTTP["url"] =~ "^/crossdomain.xml" {
                proxy.server  = ( "" => ( ( "host" => "141.8.146.178", "port" => 80)))
        }
        $HTTP["url"] =~ "^/company/yandex_on_blogosphere_autumn_2006.pdf" {
                proxy.server  = ( "" => ( ( "host" => "141.8.146.178", "port" => 80)))
        }

	$HTTP["url"] =~ "/xml/services.mybar.xml" {
		fastcgi.server = ()
	}
#	$HTTP["url"] =~ "/last/last20x-static.xml" {
#		fastcgi.server = ()
#	}
        $HTTP["url"] =~ "^/last/(last20x-static|last20x).xml" {
                proxy.server  = ( "" => ( ( "host" => "141.8.146.178", "port" => 80)))
        }

	$HTTP["url"] =~ "^/get/weather" {
				setenv.replace-request-header = ( "Host" => "pogoda.yandex.ru" ),
                proxy.server  = ( "" => ( ( "host" => "127.0.0.1", "port" => 81)))
        }
        $HTTP["url"] =~ "^/get/weather.*/forecasts/0.xml" {
                proxy.server = ()
                fastcgi.server = ()
        }
	
	$HTTP["url"] =~ "^/cards/mail_banner.xml" {
                fastcgi.server = ()
        }

	$HTTP["url"] =~ "^/phonedetect-export" {
                fastcgi.server = ()
        }

# this handler is above
#	$HTTP["url"] =~ "^/bar/config.xml" {
#                fastcgi.server = ()
#        }

	$HTTP["url"] =~ "^/geobase/" {
                setenv.add-environment += ("OUTPUT_ENCODING" => "utf-8")
        }

	$HTTP["referer"] =~ "translate\.yandex" {
			  url.access-deny = ( "" )
			  }

	$HTTP["referer"] !~ "^(https?:\/\/)?(([^\?\/]*\.)?(yandex(-team)?\.(ru|ua|com|net|kz|by|st|com\.tr)|ya\.ru|moikrug\.ru)(:\d+)?(\/.*)?|x-gadget.*|)$" {
		$HTTP["referer"] !~ "^file:\/\/" {
			url.access-deny = ( "" )
		}
	}

	mimetype.assign += (
	                ".bz2" => "application/x-bzip"
	)

	$HTTP["querystring"] =~ "usepdd" {

			fastcgi.server = (
					".xml" =>
					((
					  "socket" => "/tmp/xscript-multiple/xscript-pdd.sock",
					  "check-local" => "disable",
					  "allow-x-send-file" => "disable"
					 ))
					)
	}
        $HTTP["url"] =~ "^/for/(counters|unread).xml" {
                                setenv.replace-request-header = ( "Host" => "legacy.noexport.yandex.ru" ),
                proxy.server  = ( "" => ( ( "host" => "141.8.146.178", "port" => 80)))
        }

	url.rewrite-once = (
                        "/weather\-ng/([^/]*/.*)\?(.*)" => "/get/weather-embed/$1?$2&embed=1",
                        "/weather\-ng/([^/]*/.*)" => "/get/weather-embed/$1?embed=1",
                        "/weather\-ng/(export)([^/]*\.tar\.[^/]*)" => "/get/weather-embed/$1/$1$2?embed=1",
                        "/weather\-ng/(forecasts|forecasts\-by\-geo)(\.tar\.[^/]*)" => "/get/weather-embed/$1/$1$2?embed=1",
                        "^/for/.*/(.*\.xml)\?(.*)$" => "/$1?$2&usepdd=1","^/for/.*/(.*\.xml)$" => "/$1?usepdd=1"
                        )
}
