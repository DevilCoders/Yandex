user www-data;                                                                                                               
worker_processes  10;
worker_priority  -10;
worker_rlimit_nofile 100000;                                                                                                 
                                                                                                                             
error_log /var/log/nginx/error.log;
pid        /var/run/nginx.pid;                                                                                               
                                                                                                                             
events {                                                                                                                     
    worker_connections  65536;                                                                                               
    multi_accept on;                                                                                                         
}                                                                                                                            
                                                                                                                             
http {                                                                                                                       
    include       /etc/nginx/mime.types;
                                                                                                                                                       
log_format main '$remote_addr - $remote_user [$time_local] $request '                                                                                  
    '"$status" $body_bytes_sent "$http_referer" '                                                                                                      
    '"$http_user_agent" "$http_x_forwarded_for"';                                                                                                      

    access_log  /var/log/nginx/access.log main;

    open_file_cache          max=1000  inactive=120s;
    open_file_cache_valid    900s;
    open_file_cache_min_uses 20;
    open_file_cache_errors   on;
    client_header_buffer_size   4k;
    large_client_header_buffers 1000 8k;

    reset_timedout_connection on;
    
    client_header_timeout 10m;
    client_body_timeout 10m;
    send_timeout 10s;
    client_max_body_size 700m;

    connection_pool_size 2048;
    request_pool_size 4k;
    log_not_found off;
    
    output_buffers 128 64k;
    postpone_output 1460;

    sendfile off;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout 75 60;

    ignore_invalid_headers on;

    gzip  off;
    
    server {
            listen  [::]:80;

            server_name  ~^tr(\d+)?\.h\.kp\.yandex\.net$;
            access_log  /var/log/nginx/tr.kinopoisk.ru-acceess.log;

            location = / {
                    empty_gif;
            }

            location /bnnr {
                    root   /home/www/trailers;
                    try_files $uri @fetch;
            }

            location /js/ {   
                    root         /home/www/kinopoisk.ru/;
                    expires      30d;
            }

            location / {
                    root   /home/www/trailers;
#                    try_files $uri @fetch; 
              
            location ~* ^/(?<tp>.+)/iphone_(?<n1>\d+)(?<t>\..+) {
                    root /home/www/trailers;
                    try_files $uri @fetch;

            if ( $args ~ width ) {
                rewrite ^ /$tp/iphone${arg_width}_$n1$t? last;
            }
            if ( $args ~ height ) {
                rewrite ^ /$tp/iphone${arg_height}h_$n1$t? last;
            }
            }

            }
            location @fetch {
                internal;
                proxy_set_header Host tr01h.kp.yandex.net;
                proxy_pass http://tr01h.kp.yandex.net;
                proxy_store on;
                proxy_store_access user:rw group:rw all:r;
                proxy_temp_path /home/www/trailers/.tmp;
                root /home/www/trailers;
          }
            location /nginx_status {
                stub_status on;
                allow 127.0.0.1;
                allow ::1;
                deny all;
        }
        location /ping {
            return 200;
        }

    }



    server {
        listen       443;
        ssl                     on;
        ssl_protocols           SSLv3 TLSv1;
        server_name tr.kinopoisk.ru;
        resolver 127.0.0.1;


        access_log  /var/log/nginx/tr.kinopoisk.ru-acceess-ssl.log;

        ssl_certificate         /etc/nginx/ssl/wildcard.kinopoisk.ru.crt;
        ssl_certificate_key     /etc/nginx/ssl/wildcard.kinopoisk.ru.key;


            location = / {
                    empty_gif;
            }

            location /bnnr {
                    root   /home/www/trailers;
                    try_files $uri @fetch;
            }

            location /js/ {
                    root         /home/www/kinopoisk.ru/;
                    expires      30d;
            }

            location / {
                    root   /home/www/trailers;
                    try_files $uri @fetch;

            location ~* ^/(?<tp>.+)/iphone_(?<n1>\d+)(?<t>\..+) {
                    root /home/www/trailers;
                    try_files $uri @fetch;

            if ( $args ~ width ) {
                rewrite ^ /$tp/iphone${arg_width}_$n1$t? last;
            }
            if ( $args ~ height ) {
                rewrite ^ /$tp/iphone${arg_height}h_$n1$t? last;
            }
            }

            }
            location @fetch {
                internal;
                proxy_set_header Host tr01h.kp.yandex.net;
                proxy_pass http://tr01h.kp.yandex.net;
                proxy_store on;
                proxy_store_access user:rw group:rw all:r;
                proxy_temp_path /home/www/trailers/.tmp;
                root /home/www/trailers;
          }
            location /nginx_status {
                stub_status on;
                allow 127.0.0.1;
                allow ::1;
                deny all;
        }
        location /ping {
            return 200;
        }
}
}
