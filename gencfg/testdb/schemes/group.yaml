# Store ordered dict to define order when convert data back to yaml

# WARNING!!! Changing scheme may lead to changing of groups default values
# we'd better add a way to export-import groups to perform changes in scheme

# For each key following properties can be set:
# - Types - required property. 
#       Types property ends with 'type' keyword, i.e. 'string type'
#       Types property supports multiple 'or' separated types, i.e. 'None or string type'
#       Types supports lists for each supported type, i.e. 'list of string type'
#       Types supports python constants, i.e. 'None or string type'
#       Following base types are supported: [positive/nonnegative] int, string, bool, byte size, function
# - Default value - required property
#       When no value given for a group default value is used
#       There can be no default value, i.e. 'no default value'
#        but this is allowed only for some root-level properties, so try to avoid it!
#       Default value ends with 'by default' keyword, i.e. '0 by default'
#       When default value is not equal to any keyword gencfg assumes it is a string constant
# - Inheritance
#       When slave group does not have property then property is inherited from master group 
#        if property is marked as inherited 
#       By default all properties are not inherited
#       Following keywords are used: "inherited" and "not inherited"
# - Readonly
#       When property is "readonly" then it cannot be modified on web service
#       TODO: support "readonly when intlookup exists"
# - Description
#       Description is a property that does not end with any special keyword
#       Description is used to describe property in web service
#       TODO: write descriptions for all props
# - Choices
#       Function name to provide user values to choose
# - Display name
#       Item display name in web interface

# - _node section is used to provide Description for the node

# all nodes should start with !!omap keyword (this is required to preserve order)

!!omap
- _node: displayed as General Options
- name: string type; no default value; readonly; displayed as Name
- description: string type; no default value; displayed as Description
- owners: list of string type; no default value; inherited; displayed as Owners
- managers: list of string type; [] by default; inherited; displayed as Managers
- developers: list of string type; [] by default; inherited; displayed as Developers
- watchers: list of string type; [] by default; inherited; displayed as Subscribers
- access: !!omap
    - _node: displayed as Access lists
    - sshers: list of string type; [] by default; inherited; displayed as Sshers
    - sudoers: list of string type; [] by default; inherited; displayed as Sudoers
    - sudo_commands: !!omap
        - _node: displayed as Users with sudo commands allowed
        - _list: !!omap
            - _node: displayed as Sudo element
            - users: list of string type; [] by default; displayed as Users
            - command: "string type; \"\" by default; displayed as Command for sudo"
- host_donor: None or string type; None by default; readonly; displayed as Host Donor Group
- intlookups: list of string type; [] by default; readonly; displayed as Actual Intlookups
- on_update_trigger: None or string type; None by default; readonly; displayed as Trigger on groups update
- searcherlookup_postactions: !!omap
    - _node: displayed as Group searcherlookup postactions
    - custom_tier: !!omap
        - _node: displayed as Tier, assigned to all group instances
        - enabled: bool type; False by default; displayed as Custom tier
        - tier_name: "Tier type; \"\" by default; displayed as Tier name"
    - shardid_tag: !!omap
        - _node: displayed as Add shardid tags to all intlookup instances
        - enabled: bool type; False by default; displayed as Add shard_id to searcherlookup
        - tag_prefix: "string type; \"a_shard_\" by default; displayed as Prefix fo shardid tag (obsolete, use tag_format instead)"
        - tag_format: "None or string type; None by default; displayed as Format for tag string (deprecated)"
        - tags_format: "list of string type; [] by default; displayed as Format for tag string"
        - write_primus_name: bool type; False by default; displayed as Add primus name rather than shard id
    - host_memory_tag: !!omap
        - _node: displayed as Add to searcherlookup host memory tag
        - enabled: bool type; False by default; displayed as Add host memory tag
    - gen_by_code_tags: !!omap
        - _node: displayed as List of python lambda funcs, executed for each instance
        - _list: !!omap
            - _node: displayed as Python lambda-func
            - code: string type; BrokenCode by default; readonly; displayed as Python code
    - copy_on_ssd_tag: !!omap
        - _node: displayed as Add tag indicating copy on ssd
        - enabled: bool type; False by default; displayed as Add tag itag_copy_on_ssd
    - pre_in_pre_tags: !!omap
        - _node: displayed as List of tags, set on part of instances (stable to host add/removal)
        - _list: !!omap
            - _node: displayed as Tag description with options
            - seed: string type; deafult_seed by default; displayed as Random Seed for sorting hosts
            - tags: list of string type; [] by default; displayed as Tag names
            - count: positive int type; 1 by default; displayed as Number of hosts to set tag
            - filter: "string type; \"lambda x: True\" by default; displayed as Filter on group instances"
            - exclude: list of string type; [] by default; displayed as List of excluded prestable_in_prestable tags
            - intersect: list of string type; [] by default; displayed as Intersect with other prestable_in_prestable tags
            - affect_slave_groups: bool type; True by default; displayed as Add this tag to all slave groups
    - replica_tags: !!omap
        - _node: displayed as Add replica tags to instances
        - enabled: bool type; False by default; displayed as Add replica tags
        - first_replica_tag: None or string type; None by default; displayed as Add this tag to all 1st replica instances
    - int_with_snippet_reqs_tag: !!omap
        - _node: displayed as Add tag indicating ints processing snippet reqs
        - enabled: bool type; False by default; displayed as Add tag to all ints processing snippet reqs
    - fixed_hosts_tags: !!omap
        - _node: displayed as Tags, set on fixed host list
        - _list: !!omap
            - _node: displayed as Tags, set on fixed host list
            - tag: string type; itag_tagname by default; displayed as Tag name
            - hosts: list of string type; [] by default; displayed as List of hosts to set specified tag
    - aline_tag: !!omap
        - _node: displayed as Add a_line_ tag to each instance
        - enabled: bool type; False by default; displayed as Add a_line_ tag
    - conditional_tags: !!omap
        - _node: displayed as List of tags, added to group instance on certain condition
        - _list: !!omap
            - _node: displayed as Tags and filter func
            - tags: list of string type; [] by default; displayed as Tag names
            - filter: "string type; \"lambda x: True\" by default; displayed as Filter on group instances"
    - memory_limit_tags: !!omap
        - _node: displayed as Add tags for porto
        - enabled: bool type; False by default; displayed as Add memory limit tags to all used instances
    - snippet_ssd_instance_tag: !!omap
        - _node: displayed as Add tag, marking all instances, processing ssd requests
        - enabled: bool type; False by default; displayed as Add tag snippet_ssd_instance_tag to snippet instances
- tags: !!omap
    - _node: displayed as Group Tags; Group tags
    - ctype: Ctype type; no default value; inherited; ctype choice; displayed as Cluster Type (a_ctype)
    - itype: Itype type; no default value; inherited; itype choice; displayed as Instance Type (a_itype)
    - prj: list of Prj type; no default value; inherited; displayed as Project (a_prj)
    - metaprj: Metaprj type; unknown by default; inherited; displayed as Meta Project (a_metaprj)
    - itag: list of string type; [] by default; inherited; displayed as Custom handmade tags (itag)
- reqs: !!omap
    - _node: displayed as Requirements
    - instances: !!omap
        - _node: displayed as Instance Requirements
        - memory_guarantee: byte size type; 0 Gb by default; displayed as Guaranted memory
        - memory_overcommit: byte size type; 100 Mb by default; displayed as Memory overcommit
        # try to use min_power in shard section instead if possible
        - power: nonnegative int type; 0 by default; displayed as Min Power Usage
        - disk: byte size type; 0 Gb by default; displayed as Min HDD Usage
        - ssd: byte size type; 0 Gb by default; displayed as Min SSD Usage
        - net_guarantee: byte size type; 0 Gb by default; displayed as Net guarantee on outgoing traffic
        - net_limit: byte size type; 0 Gb by default; displayed as Net limit on outgoing traffic
        - min_per_host: "nonnegative int type; 0 by default; displayed as Min # Of Instances Per Host"
        - max_per_host: "nonnegative int type; 0 by default; displayed as Max # Of Instances Per Host"
        - port: nonnegative int type; 8041 by default; readonly; displayed as First Instance Port
        - port_step: positive int type; 8 by default; readonly; displayed as Port Step

    - hosts: !!omap
        - _node: displayed as Host Requirements
        - max_per_switch: ReqsHostsMaxPerSwitch type; 0 by default; displayed as Max Hosts Per Switch
        - max_per_queue: nonnegative int type; 0 by default; readonly; displayed as Max Hosts Per Queue

        - have_ipv4_addr: ReqsHostsHaveIpv4Addr type; False by default; displayed as Hosts must have ipv4 addr
        - have_ipv6_addr: ReqsHostsHaveIpv6Addr type; False by default; displayed as Hosts must have ipv6 addr

        - netcard_regexp: None or ReqsHostsNetcardRegexp type; None by default; displayed as Python regex on model of network card

        - memory: byte size type; 0 Gb by default; displayed as Minimal total host memory

        # most of host requirements will be deduced from instance's reqs
        - ndisks: ReqsHostsNdisks type; 0 by default; readonly; displayed as Min Number Of Physical HDDs
        - os: list of string type; [] by default; readonly; displayed as OS; os choice
        - cpu_models: list of string type; [] by default; readonly; displayed as CPU Models; cpu_model choice
        - except_cpu_models: list of string type; [] by default; readonly; displayed as Except CPU Models; cpu_model choice

        - location: !!omap
            - _node: displayed as Location Requirements
            # Location, i.e. MSK, SAS, AMS, LAS
            - location: list of string type; [] by default; readonly; displayed as Permitted hosts locations
            # Datacenter
            - dc: list of string type; [] by default; readonly; displayed as Permitted hosts data centers
            # Queue (line) inside datacenter
            - queue: list of string type; [] by default; readonly; displayed as Permitted hosts queues

    - shards: !!omap
        - _node: displayed as Shard Requirements
        - min_power: nonnegative int type; 0 by default; readonly; displayed as Min Power Per Shard
        - min_replicas: positive int type; 1 by default; readonly; displayed as Min Replicas Per Shard
        - max_replicas: positive int type; 1000 by default; readonly; displayed as Max Replicas Per Shard
        - equal_instances_power: bool type; False by default; readonly; displayed as If this field is set, all instances must have same power

# interface for old-style groups
- legacy: !!omap
    - _node: displayed as Manual Groups Settings
    - masterBasePort: bool type; False by default; readonly; displayed as Use Master Base Port
    - funcs: !!omap
        # TODO: we should probably remove inheritance here
        - _node: displayed as Functions; Information for instance generations
        - instanceCount: None or string type; default by default; inherited; displayed as Instance Count Func; legacy_instance_count choice
        - instancePower: None or string type; default by default; inherited; displayed as Instance Power Func; legacy_instance_power choice; readonly
        - instancePort: None or InstancePortFunc type; default by default; inherited; displayed as Instance Port Func
- properties: !!omap
    - _node: displayed as Group Properties
    - expires: None or date type; None by default; displayed as Expiration Date
    - ignore_cpu_audit: bool type; False by default; inherited; readonly; displayed as Ignore CPU Audit # TODO: remove
    - untouchable: bool type; False by default; inherited; displayed as Untouchable # TODO: remove
    - nonsearch: bool type; False by default; inherited; displayed as Nonsearch
    - extra_disk_size: nonnegative int type; 0 by default; displayed as Extra disk size (in case we have instances on host)
    - extra_disk_size_per_instance: nonnegative int type; 0 by default; displayed as Extra disk size for every instance
    - extra_disk_shards: nonnegative int type; 2 by default; displayed as Number of bases per instances
    - share_master_ports: bool type; False by default; inherited; readonly; displayed as Share ports with master group
    - yasmagent_prestable_group: bool type; False by default; inherited; displayed as Add to yasmagent prestable group
    - yasmagent_production_group: bool type; True by default; inherited; displayed as Add to yasmagent production group
    - fake_group: bool type; False by default; displayed as Fake group
    - unraisable_group: bool type; False by default; displayed as Unraisable group # instance is not started via bsconfig/iss
    - background_group: bool type; False by default; inherited; displayed as Background group # is now used for yasm agents only
    - export_to_cauth: bool type; False by default; inherited; displayed as Export group owners to cauth # export owner for "nonsearch" groups to cauth
    - created_from_portovm_group: None or string type; None by default; inherited; displayed as Portovm master group, used to create this group; readonly
    - nidx_for_group: None or string type; None by default; displayed as Current group intlookups was created by shifting specified group; readonly
    - full_host_group: bool type; False by default; displayed as Full host group; readonly # requested hosts instead of instances (no limits exported to nanny/searcherlookup, master group only)
- recluster: !!omap
    - _node: displayed as List of commands to recluster this group
    - next_stage: None or string type; None by default; displayed as Next recluster stage
    - cleanup: !!omap
        - _node: displayed as List of commands to cleanup this group
        - _list: !!omap
            - _node: displayed as Command description
            - id: string type; no default value; displayed as Command Id
            - command: string type; no default value; displayed as Command to execute
            - prerequisites: list of string type; [] by default; displayed as List of commands to be completed before we can run this command
    - alloc_hosts: !!omap
        - _node: displayed as List of commands needed to allocate hosts
        - _list: !!omap
            - _node: displayed as Command description
            - id: string type; no default value; displayed as Command Id
            - command: string type; no default value; displayed as Command to execute
            - prerequisites: list of string type; [] by default; displayed as List of commands to be completed before we can run this command
    - generate_intlookups: !!omap
        - _node: displayed as List of commands needed to generate intlookups
        - _list: !!omap
            - _node: displayed as Command description
            - id: string type; no default value; displayed as Command Id
            - command: string type; no default value; displayed as Command to execute
            - prerequisites: list of string type; [] by default; displayed as List of commands to be completed before we can run this command
- triggers: !!omap
    - _node: displayed as Triggers, perfomed on various actions with groups
    - on_add_host: !!omap
        - _node: displayed as Trigger, performed every time host added to group
        - method: string type; "default" by default; displayed as Trigger function
- reminders: !!omap
    - _node: displayed as Reminders (do not forget to do something with group in future)
    - _list: !!omap
        - _node: displayed as Reminder
        - message: string type; "Empty message" by default; displayed as Reminder message
        - expires: None or date type; None by default; displayed as Reminder expiration time
- balancer: !!omap
    - _node: displayed as Section for balancer to all group instances
    - enabled: bool type; False by default; displayed as Add this group to balancer section
    - dnsname: None or string type; None by default; displayed as Prefix for balancer dns name; Prefix for balancer dns name (by default group name with underlines replaced by dashes is used)
    - balancer_type: string type; hashing by default; displayed as Balancer balancing algorithm
- configs: !!omap
    - _node: displayed as Params for group configs
    - enabled: bool type; False by default; displayed as Enabled config generation for this group
    - basesearch: !!omap
        - _node: displayed as Params for <basesearch> config generator
        - template: None or string type; None by default; displayed as Subpath to template file name
        - custom_name: None or string type; None by default; displayed as Custom output config name
        - jinja_params: !!omap
            - _node: displayed as Extra jinja params to pass into config generation
            - _list: !!omap
                - _node: displayed as Jinja key-value param
                - key: string type; "Sample key" by default; displayed as Key
                - value: string type; "Sample value" by default; displayed as Value
    - balancer: !!omap
        - _node: displayed as Params for <balancer> config generator
        - module_name: None or string type; None by default; displayed as Name of balancer module, generating config for this group
        - sub_module_name: None or string type; None by default; displayed as Name of file in <module_name> directory
        - params: None or string type; None by default; displayed as Params passed to balancer config genrator (option -p to generate_balancer_config.py)
        - output_file: None or string type; None by default; displayed as Output file name
# Here comes slaves section. Each slave is a group with the same scheme,
# but cannot have slaves.
#
#- slaves:
#    - _node: list of group; [] by default
