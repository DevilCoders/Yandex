syntax = "proto3";

package cdn.cloud_api.proto.userapi;

import "google/api/annotations.proto";

import "cdn/cloud_api/proto/model/origins.proto";
import "cdn/cloud_api/proto/model/resource.proto";
import "cdn/cloud_api/proto/userapi/resource_params.proto";

option go_package = "a.yandex-team.ru/cdn/cloud_api/proto/userapi";

service ResourceService {
    rpc CreateResource(CreateResourceRequest) returns (model.Resource) {
        option (google.api.http) = {
            post: "/userapi/resources"
            body: "*"
        };
    }

    rpc GetResource(GetResourceRequest) returns (model.Resource) {
        option (google.api.http) = {
            get: "/userapi/resources/{resource_id}"
        };
    }

    rpc ListResources(ListResourcesRequest) returns (ListResourcesResponse) {
        option (google.api.http) = {
            get: "/userapi/resources"
        };
    }

    rpc UpdateResource(UpdateResourceRequest) returns (model.Resource) {
        option (google.api.http) = {
            put: "/userapi/resources/{resource_id}"
            body: "*"
        };
    }

    rpc DeleteResource(DeleteResourceRequest) returns (DeleteResourceResponse) {
        option (google.api.http) = {
            delete: "/userapi/resources/{resource_id}"
        };
    }

    rpc ActivateResource(ActivateResourceRequest) returns (ActivateResourceResponse) {
        option (google.api.http) = {
            patch: "/userapi/resources/{resource_id}/activate"
            body: "*"
        };
    }

    rpc ListResourceVersions(ListResourceVersionsRequest) returns (ListResourceVersionsResponse) {
        option (google.api.http) = {
            get: "/userapi/resources/{resource_id}/versions"
        };
    }

    rpc CalculateResourceDiff(CalculateResourceDiffRequest) returns (CalculateResourceDiffResponse) {
        option (google.api.http) = {
            get: "/userapi/resources/{resource_id}/diff"
        };
    }
}
