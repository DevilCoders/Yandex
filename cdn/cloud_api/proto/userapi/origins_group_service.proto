syntax = "proto3";

package cdn.cloud_api.proto.userapi;

import "google/api/annotations.proto";

import "cdn/cloud_api/proto/model/origins.proto";

option go_package = "a.yandex-team.ru/cdn/cloud_api/proto/userapi";

service OriginsGroupService {
    rpc CreateOriginsGroup(CreateOriginsGroupRequest) returns (model.OriginsGroup) {
        option (google.api.http) = {
            post: "/userapi/origins_groups"
            body: "*"
        };
    }

    rpc GetOriginsGroup(GetOriginsGroupRequest) returns (model.OriginsGroup) {
        option (google.api.http) = {
            get: "/userapi/origins_groups/{group_id}"
        };
    }

    rpc ListOriginsGroup(ListOriginsGroupRequest) returns (ListOriginsGroupResponse) {
        option (google.api.http) = {
            get: "/userapi/origins_groups"
        };
    }

    rpc UpdateOriginsGroup(UpdateOriginsGroupRequest) returns (model.OriginsGroup) {
        option (google.api.http) = {
            put: "/userapi/origins_groups/{group_id}"
            body: "*"
        };
    }

    rpc DeleteOriginsGroup(DeleteOriginsGroupRequest) returns (DeleteOriginsGroupResponse) {
        option (google.api.http) = {
            delete: "/userapi/origins_groups/{group_id}"
        };
    }

    rpc ActivateOriginsGroup(ActivateOriginsGroupRequest) returns (ActivateOriginsGroupResponse) {
        option (google.api.http) = {
            patch: "/userapi/origins_groups/{group_id}/activate"
            body: "*"
        };
    }

    rpc ListOriginsGroupVersions(ListOriginsGroupVersionsRequest) returns (ListOriginsGroupVersionsResponse) {
        option (google.api.http) = {
            get: "/userapi/origins_groups/{group_id}/versions"
        };
    }

    rpc CalculateOriginsGroupDiff(CalculateOriginsGroupDiffRequest) returns (CalculateOriginsGroupDiffResponse) {
        option (google.api.http) = {
            get: "/userapi/origins_groups/{group_id}/diff"
        };
    }
}

message CreateOriginsGroupRequest {
    string folder_id = 1;
    string name = 2;
    bool use_next = 3;
    repeated OriginParams origins = 4;
}

message OriginParams {
    string source = 1;
    bool enabled = 2;
    bool backup = 3;
    model.OriginType type = 4;
}

message GetOriginsGroupRequest {
    int64 group_id = 1;
}

message ListOriginsGroupRequest {
    string folder_id = 1;

    uint32 page_size = 100; // can be zero, then the default size is used
    uint32 page_token = 101;
}

message ListOriginsGroupResponse {
    repeated model.OriginsGroup groups = 1;

    uint32 next_page_token = 100;
}

message UpdateOriginsGroupRequest {
    int64 group_id = 1;
    string name = 2;
    bool use_next = 3;
    repeated OriginParams origins = 4;
}

message DeleteOriginsGroupRequest {
    int64 group_id = 1;
}

message DeleteOriginsGroupResponse {}

message ActivateOriginsGroupRequest {
    int64 group_id = 1;
    int64 version = 2;
}

message ActivateOriginsGroupResponse {}

message ListOriginsGroupVersionsRequest {
    int64 group_id = 1;
}

message ListOriginsGroupVersionsResponse {
    repeated model.OriginsGroup groups = 1;
}

message CalculateOriginsGroupDiffRequest {
    int64 group_id = 1;
    int64 version_left = 2;
    int64 version_right = 3;
}

message CalculateOriginsGroupDiffResponse {
    string diff = 1;
}
