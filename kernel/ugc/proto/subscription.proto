syntax = "proto3";

import "google/protobuf/timestamp.proto";

package NUgc.NSchema;

// One instance of a subscription for an event.
message TSubscription {
    // Mutually exclusive states the subscription can be in. Absence of a status is equivalent to
    // nonexistent subscription.
    oneof Status {
        // Explicitly subscribed.
        bool On = 2;
        // Explicitly unsubscribed.
        bool Off = 3;
    }

    // Time after which this entry should be deleted.
    google.protobuf.Timestamp DeleteAfter = 4;
}

// Subscrption to events about a video series identified by an OntoId.
message TOntoIdSeriesSubscription {
    // Key: OntoId of the series.
    string OntoId = 1;
    // Event type: new content has been released.
    TSubscription New = 2;
}

// Subscrption to events about a video series identified by a non-ontodb content id.
message TContentIdSeriesSubscription {
    // Key: id of the series.
    string ContentId = 1;
    // Event type: new content has been released.
    TSubscription New = 2;
}

// Subscription to events about a popular person.
message TPersonSubscription {
    // The person's Yandex login.
    string Login = 1;
    // The person's OntoId.
    string OntoId = 2;
    // Event type: general interest about this person.
    TSubscription Follow = 3;
}

// Subscription to: arbitrary object in ontodb
message TObjectSubscription {
    // Key: OntoId of this object
    string Id = 1;
    // Ontodb otype of this object.
    string OType = 2;
    // Event type: any update of this object
    TSubscription Update = 3;
    bool Processing = 4;
    google.protobuf.Timestamp CreateTime = 5;
}

// Subscription to: arbitrary organization in sprav
message TOrgSubscription {
    // Key: permalink of this org
    string Id = 1;
    // Event type: any update of this object
    TSubscription Update = 2;
    bool Processing = 3;
    google.protobuf.Timestamp CreateTime = 4;
}

// Subscription to: arbitrary user in ugc
message TUserSubscription {
    // Key: puidHash of user
    string Id = 1;
    // Event type: any update of this user
    TSubscription Update = 2;
    bool Processing = 3;
    google.protobuf.Timestamp CreateTime = 4;
}

// Subscription to community
message TCommunitySubscription {
    // Key: community id
    string Id = 1;
    // Event type: any update of this subscription
    TSubscription Update = 2;
    bool Processing = 3;
    google.protobuf.Timestamp CreateTime = 4;
}

message TNewReleasesSubscription {
    //Key: fake key, always equals to 1
    string Id = 1;
    // Event type: any update of this user
    TSubscription Update = 2;
    bool Processing = 3;
    google.protobuf.Timestamp CreateTime = 4;
}

message TSubscriptionAggregate {
    string Id = 1;
    google.protobuf.Timestamp UpdateTime = 2;
    int64 SubscriptionCount = 3;
}
