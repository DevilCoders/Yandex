syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "kernel/ugc/proto/collections/competition_result.proto";
import "kernel/ugc/proto/collections/common.proto";
import "kernel/ugc/proto/collections/content.proto";
import "kernel/ugc/proto/collections/origin.proto";
import "kernel/ugc/proto/collections/request_wizard_judgement.proto";
import "kernel/ugc/proto/collections/source_meta.proto";
import "kernel/ugc/schema/proto/schema.proto";

package NUgc.NSchema.NCollections;

message TCardStats {
    // Number of likes of this card.
    int64 LikesCount = 1;
    // Number of shares of this card.
    int64 SharesCount = 2;
    // Number of comments of this card.
    int64 CommentsCount = 3;
}

// One card collected by a user.
// Next field: 31
message TCard {
    //* Identity.

    // GUID of the card.
    string Id = 1;
    // GUID of the board the card belongs to; may be empty for an orphan card.
    string BoardId = 2;
    // GUID of the group that links duplicates together.
    string GroupOfDuplicatesId = 3;
    // Browser-assigned id of this bookmark. TODO: should be in LinkSource?
    string BrowserBookmarkId = 4;

    //* Presentation.

    // User-editable textual description of the card.
    string Description = 5;
    // Image to represent the entire card (Content can have multiple images).
    TEmbeddedPicture Preview = 6;

    //* Content.

    // Main content of the card (a subtable).
    repeated TContent Content = 7;
    // Arbitrary tags for use by specific applications.
    repeated string Labels = 8;
    // GUID of cooking recipe.
    string RecipeId = 9;
    // GUID of market model.
    string MarketModelId = 10;
    // GUID of the Object Answer.
    string ObjectAnswerId = 11;
    // Title of the object.
    string ObjectAnswerTitle = 12;
    // Date relevant to this card.
    google.protobuf.Timestamp Date = 13;
    // Geo coordinates relevant to this card.
    TGeoLocation GeoLocation = 14;
    // TODO: document, refactor more.
    string Org = 15;

    //* Provenance.

    // Pointer to the location where the card originated from.
    TSourceMeta SourceMeta = 16;
    // GUID of the card that this card was repinned from.
    string ParentId = 17;
    // GUID of the very first card that was repinned from.
    string TreeParentId = 18;
    // Information about the client agent that created the card.
    TOrigin Origin = 19;

    //* Status.

    // Generic status fields.
    TStatus Status = 20;
    // Card statistics.
    TCardStats Stats = 21;
    //Id of task for async card creation, seems obsolete. TODO: remove.
    string TaskId = 22;
    // Something about async creation. TODO: remove.
    string DocId = 23;
    // Verdict whether the card is an ad.
    bool IsAdvert = 24;
    // Reqwizard verdict about the Description text.
    TRequestWizardJudgement DescriptionReqWizard = 25;
    // Reqwizard verdict about the board title. TODO: normalize away.
    TRequestWizardJudgement BoardTitleDescriptionReqWizard = 26;
    // TODO: document.
    EModerationStatus ModGathering = 27;
    // TODO: document.
    EModerationStatus ModOfTheDay = 28;
    // Competitions where this card participates.
    repeated TCompetitionResult Competitions = 29;
    // TODO: document, refactor more.
    string IndexId = 30;

    option (schema) = {
        Table: {
            Name: "content"
            Field: "Content"
            Key: "Id"
        }
    };
}
