import "google/protobuf/descriptor.proto";

package NFact;

// Case conversion type of a fact field
enum ECaseConversionType {
    AS_IS = 0;
    TITLE = 1;    // Convert to title-case the first word only
    CAMEL = 2;    // Convert to title-case all words
    UPPER = 3;    // Convert to upper-case all words
    LOWER = 4;    // Convert to lower-case all words
};

// Normalization type of a fact field
enum ENormalizationType {
    NONE = 0;
    NOMINATIVE = 1;    // Convert text to nominative case
    GAZETTEER = 2;    // Use lemmas from gazetteer
    LEMMER = 3; // Use normalized text from lemmer
};

// Matcher execution mode
enum ESearchType {
    SEARCH_ALL = 1;
    MATCH_ALL = 2;
    SEARCH_FIRST = 3;
    MATCH_FIRST = 4;
};

// Matcher type
enum EMatcherType {
    REMORPH = 1;
    TOKENLOGIC = 2;
    CHAR = 3;
};

// Fact field options
extend google.protobuf.FieldOptions {
    // Original sub-match name (optional). Use this option if sub-match name doesn't match the fact field name
    optional string origin = 60001;
    // Case conversion method (optional)
    optional ECaseConversionType text_case = 60002 [default = AS_IS];
    // Text normalization (optional)
    optional ENormalizationType norm = 60003 [default = NONE];
    // Marker of primary field.
    // If fact has at least one primary field than fact priority is calculate using only primary fields instead of the hole match
    optional bool prime = 60004 [default = false];
    // Marker of a head field. Such field is used to retrieve the main symbol of the fact.
    // If there are several fields, marked as the head, than the first field in fact definition is used.
    // The number value of the marker is used to choose a symbol, if the field covers several symbols.
    // 0 means the first symbol, 1 - second, and so on. Negative value refers to symbols in back order:
    // -1 means the last symbol, -2  - previous of last, and so on.
    optional int32 head = 60005;
}

// Fact options
extend google.protobuf.MessageOptions {
    // Matcher rules file, which is used to find facts of this type
    optional string matcher = 60001;
    // Matcher type
    optional EMatcherType matcher_type = 60002 [default = REMORPH];
    // Gazetteer file
    optional string gazetteer = 60003;
    // Literal logical expression, which is used to filter unneeded search variants
    optional string filter = 60004;
    // The used method to call the remorph. Default is SEARCH_ALL
    optional ESearchType search_type = 60005 [default = SEARCH_ALL];
    // Comma-separated list of gazetteer articles/types, which always participate in the search
    optional string dominants = 60006;
    // Keep gazetteer ambiguity and search using all gazetteer results
    optional bool ambig_gazetteer = 60007 [default = true];
    // Keep cascaded results ambiguity and search using all results
    optional bool ambig_cascade = 60008 [default = true];
    // Gazetteer results ranking method, comma separated ranking checks
    optional string gazetteer_rank_method = 60009;
    // Cascaded results ranking method, comma separated ranking checks
    optional string cascade_rank_method = 60010;
}
