package NFactor;

/**
 * Possible factor tags
 *
 * Please, update documentation while adding new tag:
 * https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/opisanie-tjegov/
 */
enum ETag {
    // each factor must have one of the following tags:
    TG_DYNAMIC          = 1;  // depends on query
    TG_STATIC           = 2;  // does not depend on query

    // each factor must have one of the following tags:
    TG_DOC              = 20; // depends on document (document can have several urls)
    TG_HOST             = 21; // depends on host
    TG_OWNER            = 22; // depends on owner (https://wiki.yandex-team.ru/Robot/KlassifikacijaXostingov#areas.lst)
    TG_DOWNER           = 23; // depends on 'd' attr (http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/TerminyZnanija/DomAttr)
    TG_QUERY_ONLY       = 24; // depends on query only, not on document


    // optional tags

    // Factors that depend on geographical region
    // the strictest of 3 levels must be chosen
    TG_LOCALIZED_COUNTRY= 41; // factor value depends on user's country
    TG_LOCALIZED_REGION = 42; // factor value depends on user's region
    TG_LOCALIZED_CITY   = 43; // factor value depends on user's city

    TG_LOCALIZED_GEOINQUERY = 44; // factor value depends on region mentioned in user's query

    TG_STATIC_REGINFO       = 45; // page regionality static factor


    // specific tags

    // user data
    TG_USER             = 50; // factor uses data mined from user behaviour
    TG_BROWSER          = 51; // uses data from YaBar/Elements, Yandex.Browser, etc.
    TG_COUNTER          = 52; // uses data from counters, like Metrika
    TG_USER_SEARCH      = 53; // uses data from user behaviour when interacting with Search Engines
    TG_USER_SEARCH_ONLY = 54; // uses data from user behaviour only when interacting with Search Engines
                              // (w/o after the click trail information from BROWSER and/or COUNTER)
                              // TG_USER_SEARCH_ONLY is a subset of TG_USER_SEARCH
    TG_USER_EXT_DATA    = 55; // uses data from user behaviour obtained from partners (not Yandex services)
    TG_USER_SEARCH_EXTERNAL = 56; // temp tag for SEARCH-874: features that are currently at middlesearch and will be moved to querysearch
    TG_METRIKA          = 57; // like TG_COUNTER, but just Metrika. ISSUE: SEARCHSPAM-8810
    TG_TOLOKA           = 58; // uses data from toloka tasks

    // document
    TG_DOC_TEXT         = 70; // for doc text, like bm25 etc
    TG_URL_TEXT         = 72; // data from text of url, like trigrams

    // links
    TG_LINK_GRAPH       = 80; // factor uses information from graph of web links
    TG_LINK_TEXT        = 81; // factor depends of link text

    // query
    TG_NAV              = 90;
    // 91 stands for removed TG_REGEX

    // misc
    TG_TRANS            = 100; // trans feature
    TG_BINARY           = 101; // can take only 0 or 1 values
    TG_META             = 102; // factor is calculated on middle metasearch

    TG_DATE             = 110; // date-related factors
    TG_THEME_CLASSIF    = 111; // theme classifiers
    TG_CATALOG          = 112; // catalog related factors
    TG_COMMERCIAL       = 113; // commercial
    TG_GEO_SEARCH       = 114; // factor uses geo information from request; do not mix up TG_LOCALIZED
    TG_BEAST            = 115; // beast family
    TG_WIKIPEDIA        = 116; // wikipedia
    TG_DOPP             = 117; // doppelgangers
    TG_SYNNORM          = 118; // synnorms
    TG_ANNOTATION_FILTER = 119; // indexann features
    // 120 stands for removed TG_QI
    TG_COLLABORATED     = 121; // XFactor (collaborative filtering)
    // 122 stands for removed TG_1WORD
    TG_ANNOTATION_NOFILTER = 124; // indexfactorann features
    TG_LINGBOOST        = 125; // lingboost features
    TG_SIMILAR_DOCS     = 126; // similar docs features
    TG_RELATED          = 127; // related video features

    TG_L2               = 150;  // FastRank factors
    TG_OFTEN_ZERO       = 151;  // hint for relev_fml_codegen
    TG_UNUSED           = 152;  // the factor shall not be used in training of new formulas, but can be used otherwise (for example for rearrangements)
    TG_NOT_01           = 153;  // the factor takes values outside of [0, 1] interval; it is strongly recommended to avoid this tag for new factors
    TG_DEPRECATED       = 154;  // the factor shall not be used anywhere, but it is still computed and may be present in existing formulas
    TG_UNIMPLEMENTED    = 155;  // factor is not approved by OTK yet
    TG_REMOVED          = 156;  // the factor is completely removed
    TG_REARR_USE        = 157;  // the factor is used in rearrange
    TG_NO_L3            = 158;  // factor is used in L2 formula
    TG_UNDOCUMENTED     = 159;  // BUKI-2000
    TG_FRESHNESS_USE    = 160;  // factor is used for freshness ranking; FRESHNESS-617
    TG_SNIPPET_MANUAL   = 161;  // Snippets: manual factor which is used to boost special candidates
    TG_SNIPPET_FORMULA  = 162;  // Snippets: factor which is used in formulas like Algo2 and so on
    TG_L3_MODEL_VALUE   = 163;  // Each slice can have at most one factor where l3 model value should be written
    TG_PERS             = 164;  // personalized factor
    TG_VIDEO_CLICK_ADDITION_USE = 165;  // Use factor in click addition formula despite TG_UNUSED
    TG_DOC_CONTENT      = 166;  // Features extracted from document content (e.g. images, video, audio)
    TG_CV               = 167;  // Factor is calculated using CV technologies
    TG_MASCOT           = 168;  // Antispam Mascot factors, https://wiki.yandex-team.ru/JandeksPoisk/Antispam/Tech/Mascot
    TG_NEURAL           = 169;  // Factors based on neural network models (DSSM and dependant mainly)
    TG_L3               = 170;  // L3 factors
    TG_L1               = 171;  // L1 factors

    TG_KNN              = 172;  // Factors based on similar query from via KNN over DSSM
    TG_L3_OVERWRITE     = 173;  // Factor used by both L2 and L3; L3 stage recomputes it with (potentially) different value
    TG_META_OVERWRITE   = 209;  // Factor is known on base-search, but overwrites on mmeta for fast diffs delivery

    TG_TEXT_MACHINE     = 174;  // Factors that calculated with text_machine

    TG_NANOBTANIUM      = 175;  // nanobtanium metafeatures
    TG_BASIC_META       = 176;  // simple statiscal metafeatures calculated in search/meta/rank/features/stat_meta_features.cpp
    TG_RANDOM_LOG       = 177;  // pseudometafactors calculting using factor values from random log

    TG_UNSUPPORTED      = 178;  // factor is produced by a model that will never be updated in production

    TG_FRESHNESS_FROZEN_POOL = 179;  // Factors cannot be recollected on freshness pool (IMAGES-16100).
    TG_FRESHNESS_ZERO   = 180;  // Factors should not be used for fresh sources (IMAGES-16100).

    TG_PRS              = 181;  // feature value depends on other documents in PRS

    TG_SAMOHOD_UNIMPLEMENTED  = 182; // FRESHNESS-4032
    TG_CALLISTO_UNIMPLEMENTED = 183; //

    TG_FROZEN = 184;  // For RandomLog* and Similar Hosts factors that are not updated

    TG_DATA_FROM_SAASKV = 185; // factor uses data from SaaS key-value storage
    TG_DATA_FROM_RTMR   = 186; // factor uses data from RTMR

    TG_USE_MARKUP   = 187; // factor uses toloka/assessors markup

    TG_BROKEN = 188; // For factors that are marked TG_REMOVED, but still used in some formulas

    TG_ALL_RELEVANCE_MARKUP = 189;  // factor uses assessors plus toloka relevance markups
    TG_YANG_RELEVANCE_MARKUP = 190;  // factor uses assessors relevance markups
    TG_TOLOKA_RELEVANCE_MARKUP = 191;  // factor uses toloka relevance markups
    TG_SIN_SIG_MARKUP = 192;  // factor uses sin sig markups
    TG_CS_SIN_SIG_MARKUP = 307;
    TG_DBD_MARKUP = 193;  // factor uses DbD markups
    TG_GOAL_MARKUP = 194;  // factor uses goal markups

    TG_LEFT_DOC = 195; // For ItdItp static factors fill code gen
    TG_RIGHT_DOC = 196;

    TG_USERFEAT_SAMPLE_PERIOD = 197;  // WEBFRESH-350: tags to mark up factors with their aggregation periods in the User Features pipeline
    TG_USERFEAT_MAX_PERIOD = 198;
    TG_USERFEAT_1D = 199;
    TG_USERFEAT_30D = 200;
    TG_USERFEAT_90D = 201;
    TG_USERFEAT_238D = 202;
    TG_USERFEAT_365D = 203;
    TG_USERFEAT_730D = 204;
    TG_USERFEAT_1600D = 205;
    TG_USERFEAT_1832D = 206;

    TG_REUSABLE = 207; // factor's position can be reused for new factors

    TG_NN_OVER_FEATURES_USE = 208; // factor is used as input for neural net
    TG_ALICE_MUSIC = 210; // factor for Alice Music
    TG_USER_QUERY = 211; // factor uses history of previous user queries
    TG_USERFEAT_SEARCH_DWELL_TIME = 212; // factor is based on data from Userfeat which depend on DwellTime

    TG_BERT_DISTILL = 213; // NN was trained using BERT model prediction

    TG_USERFEAT_MULTI_PERIOD = 214; // Factor depends on userfeat aggregations of multiple periods (often aggregation on ann stream)
    TG_USERFEAT = 215; // Single tag for all userfeat factors

    // USERFEAT-1489: tags to group user_browse (spy_log and similargroup based) factors from User Features pipeline
    TG_USERFEAT_VISITS_ACTIVITY_DOWNLOADS = 216;
    TG_USERFEAT_BROWSER_PAGE_RANK = 217;
    TG_USERFEAT_NHOP = 218;
    TG_USERFEAT_NHOP_SUM_DWELLTIME = 219;
    TG_USERFEAT_SURFING_TREE = 220;
    TG_USERFEAT_URL_QUERY_TRIGRAMS = 221;
    TG_USERFEAT_VISITS_FROM = 222;
    TG_USERFEAT_USER_HUB = 223;
    TG_USERFEAT_POPULAR_SE_FRC = 224;
    TG_USERFEAT_SAME_QUERY_RETURN = 225;
    TG_USERFEAT_REVISITS = 226;
    TG_USERFEAT_REG_SITE_BROWSER = 227;
    TG_USERFEAT_BROWSER_QUERY_PAGE_RANK = 228;
    TG_USERFEAT_BROWSER_QUERY_PAGE_RANK_SAMPLE = 229;
    TG_USERFEAT_USER_BROWSE_LONG_PERIOD_STATIC = 230;
    TG_USERFEAT_FIELDSET2 = 231;
    TG_BERT = 232;
    TG_CS_BERT = 306;
    TG_BERT_RUNTIME = 233; // Factor was calculated at runtime on the dedicated BERT service
    TG_PROXIMA_KC_MARKUP = 234;

    TG_DATA_FROM_BIGRT   = 235; // factor uses data from BigRT
    TG_SPLIT_BERT = 236; // features calculated by model sbr:1671264412
    TG_SPYLOG_RAPID_CLICKS_BIGRT = 237; // features calculated by spylog via BigRt
    TG_SEARCH_RAPID_CLICKS_BIGRT = 238; // features calculated by search via BigRt

    TG_REMAPPED = 239;

    TG_RTMODELS_SERVICE = 240; // features calculated in rtmodels service https://wiki.yandex-team.ru/users/gaiduk/rtmodels-service/

    // USERFEAT-1510: tags to group user_search (user_sessions based) factors from User Features pipeline
    TG_USERFEAT_CLICKS_SHOWS = 241; // The factor is calculated from clicks_shows counters
    TG_USERFEAT_USF = 242; // The factor is calculated from user_sessions_features counters
    TG_USERFEAT_CLICK_MACHINE = 243; // The factor or the underlying stream is calculated with ClickMachine
    TG_USERFEAT_SBM = 244; // The factor is calculated from click data weighted with Single Browsing Model. The model tries to account for positional bias.
    TG_USERFEAT_GEOCLICKS = 245;
    TG_USERFEAT_USF_SAMPLE_PERIOD = 246; // The factor is calculated from user_sessions_features counters with days selected by special sampling
    TG_USERFEAT_META_STREAM = 247; // Polynomial combination of regular streams

    TG_CALC_ON_ARS = 248; //used for web-meta-rearr formulas, that are calced only on after-ranking-set (at fetch stage)

    TG_USERBERT = 249; // Userbert (also known as userbody and tushka) models for personalization

    TG_QUERY_DETECTOR_PREDICT = 250; // Prediction of the query model applied in begemot.

    // import market tags
    TG_BLENDER_PLACE = 251;
    TG_MODEL_OFFER_PLACE = 252;
    TG_OFFER = 253;
    TG_TEXT_PLACE = 254;
    TG_MODEL = 255;
    TG_CATFACTOR = 256;
    TG_MODEL_FOR_OFFER_ONLY = 257;
    TG_TIME = 258;
    TG_REGION = 259;
    TG_DELIVERY = 260;
    TG_DOCUMENT = 261;
    TG_MODEL_FOR_MODEL_ONLY = 262;
    TG_DOCUMENT_CATEGORY = 263;
    TG_FROM_META = 264;
    TG_DOCUMENT_QUERY_CTR = 265;
    TG_DOCUMENT_STATIC = 266;
    TG_DOCUMENT_TEXT_MACHINE = 267;
    TG_DELETED = 268;
    TG_BASE = 269;
    TG_CATEGORY = 270;
    TG_DSSM = 271;
    TG_BASE_COLLAPSED = 272;
    TG_AVERAGE = 273;
    TG_PLACE_PRIME = 274;
    TG_META_ONLY = 275;
    TG_PLACE_MAPS = 276;
    TG_PLACE_PARALLEL = 277;
    TG_REQUEST_VISUAL_VENDOR = 278;
    TG_PERSONAL = 279;
    TG_OFFER_INCUT = 280;
    TG_OFFER_INCUT_TITLES = 281;
    TG_OFFER_INCUT_DESCRIPTIONS = 282;
    TG_OFFER_INCUT_COMMENTS = 283;
    TG_OFFER_INCUT_CATEGORIES = 284;
    TG_OFFER_INCUT_PRICES = 285;
    TG_OFFER_INCUT_VISUAL = 286;
    TG_MODELS = 287;
    TG_MODELS_TITLES = 288;
    TG_MODELS_CATEGORIES = 289;
    TG_AGGREGATE = 290;
    TG_AGGREGATE_CATEGORIES = 291;
    TG_AGGREGATE_SHOPS = 292;
    TG_AGGREGATE_GROUP_MODELS = 293;
    TG_VISUAL_CARDS = 294;
    TG_PLACE_MAINREPORT = 295;
    TG_MARKET_BLENDER = 296;
    TG_ORGANIC_AGGREGATED = 297;
    TG_INCUT_ORGANIC_AGGREGATED = 298;
    TG_DELETE_CANDIDATE = 299;
    TG_FORMULA_CHECK_PARROT = 300;
    TG_ALLOW_USE_FOR_DEFAULT_L3 = 301; // the factor with unresolved tags can still be used for V_DEFAULT_L3 formulas
    TG_ALLOW_USE_FOR_ALICE      = 302; // similary, for V_ALICE_WEB_MUSIC_L3
    TG_ALLOW_USE_FOR_CS_L3      = 308; // similaty, for V_CS_L3
    TG_ALLOW_USE_FOR_PROXIMA_OPT_L3 = 309; // the factor with unresolved tags can still be used for opt L3 formulas
    TG_ALLOW_USE_FOR_SPAM_FORMULAS = 315; // the factor with unresolved tags can still be used for spam formulas
    TG_USED_IN_CONF_REARR       = 305; // The factor is used in configurable rearrange graphs
    TG_RUNTIME = 304;
    TG_DJ                       = 310; // market factors taked from dj
    TG_FORMULA_2245_DEP = 311; // DEPRECATED factors for FORMULA-2245 batch #1
    TG_FORMULA_2245_DEP_2 = 314; // DEPRECATED factors for FORMULA-2245 batch #2
    TG_FORMULA_2245_DEP_3 = 316; // DEPRECATED factors for FORMULA-2245 batch #3
    TG_FORMULA_2245_DEP_4 = 318; // DEPRECATED factors for FORMULA-2245 batch #4
    TG_FORMULA_2245_DEP_5 = 319; // DEPRECATED factors for FORMULA-2245 batch #5

    TG_ALICE_ARAMUSIC = 312; // arabic alice music search scenario
    TG_FULL_SPLIT_BERT = 313; // factor calculated by full_split_bert model
    TG_YT_BIN = 317; // factor calculated on yt table data delivered by yt2binfile
    TG_GOODS_ONLY = 320; // goods only factors in market factor slices
    // next tag 321
}

enum ECountries {
    CNT_ALL     = 0;
    CNT_RU      = 1;
    CNT_UA      = 2;
    CNT_BY      = 3;
    CNT_KZ      = 4;
    CNT_TR      = 5;
    CNT_RELEV   = 6; // list of countries in relev_regions* on perun
}

message TCodeGenInput {
    message TDependsOn {
        optional string         Slice   = 1;
        repeated string         Feature = 2;
    }
    message TUseArtifact {
        required string Name = 1;

        // means that factor depends on artifact, so where some influenct, but not in direct way
        optional bool IsIndirectDependency = 2;
    }

    message TSource {
        required string ClassName = 1;
        optional string Arg = 2;
    }

    message TMoveFromFactorSource {
        repeated TSource      Sources = 1;
        optional string       Expression = 2;
    }

    message TFactorDescriptor {
        required uint32                Index = 1;
        required string                CppName = 2;
        required string                Name = 3;
        optional float                 AntiSeoUpperBound = 4;
        optional string                Comment = 5;
        repeated string                Ticket = 6;
        optional string                Wiki = 7;              // link to a wiki page with the detailed description of how the factor works
        repeated string                Group = 8;
        repeated ETag                  Tags = 9;
        repeated ECountries            Countries = 10;
        optional string                Description = 11;
        repeated string                Authors = 12;           // logins of people who participated in factor creation (both idea and implementation)
        repeated string                Responsibles = 13;      // logins of people who are maintaining the factor (should be 2+ of them)
        optional float                 CanonicalValue = 14;    // zero if not set
        repeated TDependsOn            DependsOn = 15;         // components for meta-features
        optional TMoveFromFactorSource MoveFromFactorSource = 16;
        optional string                ImplementationTime = 17; // YYYY-MM-DD when TG_UNIMPLEMENTED was removed
        repeated TUseArtifact          UseArtifact = 18;
        optional float                 MinValue = 19 [default = 0.0]; // for TG_NOT_01 features
        optional float                 MaxValue = 20 [default = 1.0]; // for TG_NOT_01 features
    }

    message TStreamDescriptor {
        required string StreamName = 1;
        required int32  Level      = 2;
        repeated string Expansion  = 3;
        optional string LevelName  = 4 [default = "all"];
    }

    // To generate 'size_t GetXXXOffset()' and 'float* GetRawXXX()' methods.
    message TFactorOffset {
        required string Name  = 1;
        required uint32 Index = 2;
    }

    message TSliceDescriptor {
        required string Name = 1; // Slice name, see kernel/factor_slices/factor_slices_gen.in
        repeated TFactorDescriptor Factor = 2; // List of factors in slice
        repeated TStreamDescriptor Stream = 3; // List of streams to generate factors
        repeated TFactorOffset Offset = 4; // List of slice-relative offsets
        optional bool Generate = 5; // Generate factors from static IFactorsSource
        optional bool Enable = 6; // Automatically enable slice at run time
    }

    repeated string Group = 1;
    repeated TFactorDescriptor Factor = 2;
    repeated TStreamDescriptor Stream = 3;
    repeated TFactorOffset Offset = 4;
    repeated TSliceDescriptor Slice = 5;
}
