Group: [
    "Query"
]

Slice {
Name: "web_new_l1"

Factor {
    Index:              0
    CppName:            "FI_VIDEO_QUERY_CLUSTER_MUSIC"
    Name:               "VideoQueryClusterMusic"
    Tags:               [ TG_QUERY_ONLY , TG_UNIMPLEMENTED]
    Description:        "Близость запроса к кластеру музыки на основе vpqV3. Видеопоисковый фактор."
    Ticket:             "VIDEOPOISK-13321"
    Authors:            ["vkaneva", "tobo"]
    Responsibles:       ["vkaneva", "tobo"]
}

Factor {
    Index:              1
    CppName:            "FI_DMOZ_QUERY_THEMES"
    Name:               "DmozQueryThemes"
    Ticket:             "FOREIGN-221"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_UNDOCUMENTED, TG_L2]
    Description:        "Тема запроса, определяемая ((http://wiki.yandex-team.ru/JandeksPoisk/ZarubezhnyjjInternet/DMOZqueryClassifier1 правилом колдунщика DMOZTheme)), учитываются только несколько самых популярных тем."
    Authors:            "lamo"
    Responsibles:       "lamo"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDmozQueryThemes()" }
    DependsOn:          [{Feature: ["DmozQueryThemes"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              2
    CppName:            "FI_DMOZ_QUERY_BEST_THEME"
    Name:               "DmozQueryBestTheme"
    Ticket:             "FOREIGN-221"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_UNDOCUMENTED, TG_L2]
    Description:        "Наиболее вероятная тема запроса, определяемая ((http://wiki.yandex-team.ru/JandeksPoisk/ZarubezhnyjjInternet/DMOZqueryClassifier1 правилом колдунщика DMOZTheme)), учитываются только самые популярные темы (но здесь их больше чем в факторе DmozQueryThemes). Фактор содержит вероятность соотвествия запроса тематике, но для каждой темы берётся свой интервал на отрезке [0..1]"
    Authors:            "lamo"
    Responsibles:       "lamo"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDmozQueryBestTheme()" }
    DependsOn:          [{Feature: ["DmozQueryBestTheme"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              3
    CppName:            "FI_POPULAR_Q"
    Name:               "PopularQ"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_REARR_USE, TG_L2]
    Description:        "Популярность запроса"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetPopularQ()" }
    DependsOn:          [{Feature: ["PopularQ"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              4
    CppName:            "FI_Q_DIVERSITY"
    Name:               "QDiversity"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2]
    Description:        "Степень централизации точек, из которой задается запрос"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQDiversity()" }
    DependsOn:          [{Feature: ["QDiversity"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              5
    CppName:            "FI_Q_DIVERSITY2"
    Name:               "Diversity2"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2]
    Description:        "Географическая распределенность запроса"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDiversity2()" }
    DependsOn:          [{Feature: ["Diversity2"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              6
    CppName:            "FI_HOUR_DIVERSITY"
    Name:               "HourDiversity"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2]
    Description:        "Степень выраженности задания запросов в разное время суток"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetHourDiversity()" }
    DependsOn:          [{Feature: ["HourDiversity"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              7
    CppName:            "FI_AVG_SESSION_LEN"
    Name:               "AvgSessionLen"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_L2]
    Description:        "Средняя длина логической сессии, в которой был запрос"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetAvgSessionLen()" }
    DependsOn:          [{Feature: ["AvgSessionLen"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              8
    CppName:            "FI_FOUND"
    Name:               "Found"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_L2]
    Description:        "Среднее количество найденного по запросу"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetFound()" }
    DependsOn:          [{Feature: ["Found"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              9
    CppName:            "FI_NIGHT_QUERY"
    Name:               "NightQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_BINARY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2]
    Description:        "Запрос задают преимущественно ночью"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetNightQuery()" }
    DependsOn:          [{Feature: ["NightQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              10
    CppName:            "FI_MORNING_QUERY"
    Name:               "MorningQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_BINARY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2]
    Description:        "Запрос задают преимущественно утром"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetMorningQuery()" }
    DependsOn:          [{Feature: ["MorningQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              11
    CppName:            "FI_DAY_QUERY"
    Name:               "DayQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_BINARY, TG_REARR_USE, TG_L2]
    Description:        "Запрос задают преимущественно днем"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDayQuery()" }
    DependsOn:          [{Feature: ["DayQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              12
    CppName:            "FI_EVENING_QUERY"
    Name:               "EveningQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_BINARY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2]
    Description:        "Запрос задают преимущественно вечером"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetEveningQuery()" }
    DependsOn:          [{Feature: ["EveningQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              13
    CppName:            "FI_COUNTRY_POPULAR_Q"
    Name:               "CountryPopularQ"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2]
    Description:        "Популярность запроса внутри страны"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCountryPopularQ()" }
    DependsOn:          [{Feature: ["CountryPopularQ"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              14
    CppName:            "FI_COUNTRY_Q_DIVERSITY"
    Name:               "CountryQDiversity"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2]
    Description:        "Степень централизации точек, из которой задается запрос (внутри страны)"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCountryQDiversity()" }
    DependsOn:          [{Feature: ["CountryQDiversity"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              15
    CppName:            "FI_COUNTRY_Q_DIVERSITY2"
    Name:               "CountryQDiversity2"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2]
    Description:        "Географическая распределенность запроса внутри страны"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCountryQDiversity2()" }
    DependsOn:          [{Feature: ["CountryQDiversity2"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              16
    CppName:            "FI_COUNTRY_HOUR"
    Name:               "CountryHour"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_OFTEN_ZERO, TG_L2]
    Description:        "Час, в который больше всего задают этот запрос"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCountryHour()" }
    DependsOn:          [{Feature: ["CountryHour"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              17
    CppName:            "FI_COUNTRY_HOUR_DIVERSITY"
    Name:               "CountryHourDiversity"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_OFTEN_ZERO, TG_L2]
    Description:        "Степень выраженности задания запросов в разное время суток (внутри страны)"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCountryHourDiversity()" }
    DependsOn:          [{Feature: ["CountryHourDiversity"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              18
    CppName:            "FI_MUSIC_Q"
    Name:               "MusicQ"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "музыкальность запроса. Результаты работы колдунщика Антона Коныгина."
    Authors:            "alejes"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetMusicQ()" }
    DependsOn:          [{Feature: ["MusicQ"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              19
    CppName:            "FI_QUERY_NON_COMMERCIALITY"
    Name:               "QueryNonCommerciality"
    Ticket:             "SEARCHSPAM-7504"
    Tags:               [TG_COMMERCIAL, TG_DYNAMIC, TG_QUERY_ONLY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2, TG_DEPRECATED]
    Description:        "Коммерческость запроса по словарю фраз от Директа: 0 - максимальная коммерческость, 1 - минимальная."
    Authors:            "somov"
    Responsibles:       ["sisoid", "anelyubin"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQueryNonCommerciality()" }
    DependsOn:          [{Feature: ["QueryNonCommerciality"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              20
    CppName:            "FI_QUERY_COMMERCIALITY_MX"
    Name:               "QueryCommercialityMx"
    Ticket:             "SEARCHSPAM-2317"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_COMMERCIAL, TG_TRANS, TG_REARR_USE, TG_L2, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Мера 'коммерческости' запроса. Является комплексно рассчитываемым фактором MatrixNet формулой по словарю  закупок в директе  + по логам пользовательских запросов + доп. интентные словари.  Запросы с интентом купить  фактор стремится в ->1    товарные запросы  ->0.6    с интентом не купить, обзоры и тп  -> 0 ((http://wiki.yandex-team.ru/AntonNeljubin/FaktorydljaNovogoKlassifikatorazaprosov факторы классификатора))((http://wiki.yandex-team.ru/JandeksPoisk/Antispam/AntiSEO/KlassifikatorKommercheskixZaprosov еще про него))"
    Authors:            ["anelyubin", "kvn"]
    Responsibles:       ["anelyubin", "kvn"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQueryCommercialityMx()" }
    DependsOn:          [{Feature: ["QueryCommercialityMx"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              21
    CppName:            "FI_QUERY_IS_NAV_MX"
    Name:               "IsNavMxQuery"
    Ticket:             "SEARCHSPAM-3647"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NAV, TG_TRANS, TG_UNDOCUMENTED, TG_L2, TG_REARR_USE, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Ранг 'навигационности' запроса"
    Authors:            ["anelyubin", "kvn"]
    Responsibles:       ["anelyubin", "kvn"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsNavMxQuery()" }
    DependsOn:          [{Feature: ["IsNavMxQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              22
    CppName:            "FI_NON_COMMERCIAL_QUERY"
    Name:               "NonCommercialQuery"
    Ticket:             "SEARCHSPAM-7504"
    Tags:               [TG_COMMERCIAL, TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2, TG_DEPRECATED]
    Description:        "Бинарная некоммерческость запроса: QueryNonCommerciality > 0.965."
    Authors:            "alejes"
    Responsibles:       ["sisoid", "anelyubin"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetNonCommercialQuery()" }
    DependsOn:          [{Feature: ["NonCommercialQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              23
    CppName:            "FI_PORNO_QUERY"
    Name:               "PornoQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "Есть ли в запросе слова из yweb/pornofilter/porno.query."
    Authors:            "alejes"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetPornoQuery()" }
    DependsOn:          [{Feature: ["PornoQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              24
    CppName:            "FI_XPORNO_QUERY"
    Name:               "XPornoQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2]
    Description:        "Классификатор порно-запросов, другой словарь чем PornoQuery"
    Authors:            "alejes"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetXPornoQuery()" }
    DependsOn:          [{Feature: ["XPornoQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              25
    CppName:            "FI_Q_BLOG"
    Name:               "QBlog"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_DEPRECATED]
    Description:        "Содержит ли запрос блоговую лексику"
    Authors:            "alejes"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQBlog()" }
    DependsOn:          [{Feature: ["QBlog"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              26
    CppName:            "FI_IS_NAV_QUERY"
    Name:               "IsNavQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_USER_EXT_DATA, TG_NAV, TG_BINARY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2]
    Description:        "Является ли запрос навигационным, по кликабельности ответов"
    Authors:            ["akhropov", "denplusplus", "prs"]
    Responsibles:       ["akhropov", "prs"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsNavQuery()" }
    DependsOn:          [{Feature: ["IsNavQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              27
    CppName:            "FI_IS_FOREIGN_QUERY"
    Name:               "IsForeignQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "Запрос не на русском языке"
    Authors:            "denplusplus"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsForeignQuery()" }
    DependsOn:          [{Feature: ["IsForeignQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              28
    CppName:            "FI_IS_VIDEO_QUERY"
    Name:               "VideoQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "Запрос про видео"
    Authors:            "alejes"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetVideoQuery()" }
    DependsOn:          [{Feature: ["VideoQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              29
    CppName:            "FI_REGIONAL_U_QUERY"
    Name:               "GeoRegionalityU"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_THEME_CLASSIF, TG_DEPRECATED]
    Description:        "Запросные факторы - результат работы ((http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/GeoRegionality классификатора геолокализованности запроса))U- геобесполезные - региональная выдача по запросу бессмысленна"
    Authors:            "alejes"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetGeoRegionalityU()" }
    DependsOn:          [{Feature: ["GeoRegionalityU"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              30
    CppName:            "FI_REGIONAL_R_QUERY"
    Name:               "GeoRegionalityR"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_THEME_CLASSIF, TG_DEPRECATED]
    Description:        "R-  георелевантные - региональные результаты в выдаче могли бы быть полезны, но не более того"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetGeoRegionalityR()" }
    DependsOn:          [{Feature: ["GeoRegionalityR"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              31
    CppName:            "FI_REGIONAL_V_QUERY"
    Name:               "GeoRegionalityV"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_THEME_CLASSIF, TG_DEPRECATED]
    Description:        "V-  геовитальные -  региональная выдача имеет принципиальное значение"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetGeoRegionalityV()" }
    DependsOn:          [{Feature: ["GeoRegionalityV"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              32
    CppName:            "FI_REGIONAL_U_QUERY_NEW"
    Name:               "GeoRegionalityUNew"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_THEME_CLASSIF, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "Запросные факторы - результат работы ((http://wiki.yandex-team.ru/PoiskovajaPlatforma/Lingvistika/ZaprosnyjeFactory/LocalizovannyjeZaprosy классификатора геолокализованности запроса)) - новая версия факторов [328]-[330]:  U - геобесполезные - региональная выдача по запросу бессмысленна;"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetGeoRegionalityUNew()" }
    DependsOn:          [{Feature: ["GeoRegionalityUNew"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              33
    CppName:            "FI_REGIONAL_R_QUERY_NEW"
    Name:               "GeoRegionalityRNew"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_THEME_CLASSIF, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "Запросные факторы - результат работы ((http://wiki.yandex-team.ru/PoiskovajaPlatforma/Lingvistika/ZaprosnyjeFactory/LocalizovannyjeZaprosy классификатора геолокализованности запроса)) - новая версия факторов [328]-[330]:  R - георелевантные - региональные результаты в выдаче могли бы быть полезны, но не более того;"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetGeoRegionalityRNew()" }
    DependsOn:          [{Feature: ["GeoRegionalityRNew"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              34
    CppName:            "FI_REGIONAL_V_QUERY_NEW"
    Name:               "GeoRegionalityVNew"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_THEME_CLASSIF, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "Запросные факторы - результат работы ((http://wiki.yandex-team.ru/PoiskovajaPlatforma/Lingvistika/ZaprosnyjeFactory/LocalizovannyjeZaprosy классификатора геолокализованности запроса)) - новая версия факторов [328]-[330]: V - геовитальные -  региональная выдача имеет принципиальное значение."
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetGeoRegionalityVNew()" }
    DependsOn:          [{Feature: ["GeoRegionalityVNew"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              35
    CppName:            "FI_REG_NAV_QUERY"
    Name:               "RegNavQuery"
    Ticket:             "QREG-23"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_LOCALIZED_CITY, TG_UNDOCUMENTED, TG_L2]
    Description:        "Регионально-навигационный запрос - в регионе пользователя есть один или несколько навигационных результатов по нему"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRegNavQuery()" }
    DependsOn:          [{Feature: ["RegNavQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              36
    CppName:            "FI_QUERY_TH3973"
    Name:               "QueryThVideohosting"
    Ticket:             "QREG-28"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_USER, TG_UNDOCUMENTED, TG_L2]
    Description:        "Результат работы лексического классификатора запросов, предсказывающего вероятность клика по странице тематики 3973"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQueryThVideohosting()" }
    DependsOn:          [{Feature: ["QueryThVideohosting"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              37
    CppName:            "FI_QUERY_TH3561"
    Name:               "QueryThEncyclopedic"
    Ticket:             "QREG-28"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_UNDOCUMENTED, TG_L2]
    Description:        "Результат работы лексического классификатора запросов, предсказывающего вероятность клика по странице тематики 3561"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQueryThEncyclopedic()" }
    DependsOn:          [{Feature: ["QueryThEncyclopedic"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              38
    CppName:            "FI_TUR_QR"
    Name:               "QrTur"
    Ticket:             "QREG-27"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_UNDOCUMENTED, TG_L2, TG_REARR_USE]
    Description:        "Предсказание доли «хороших»(хотя бы с двумя разными городами и частотой>=10) упоминаний запроса с географией в Турции"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQrTur()" }
    DependsOn:          [{Feature: ["QrTur"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              39
    CppName:            "FI_QUERY_NEARBY"
    Name:               "NearbyQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2]
    Description:        "При ответе на запрос важны результаты в непосредственной близости ([аптеки], [детская поликлиника])"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetNearbyQuery()" }
    DependsOn:          [{Feature: ["NearbyQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              40
    CppName:            "FI_QUERY_CITY"
    Name:               "CityQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_UNDOCUMENTED, TG_L2, TG_REARR_USE]
    Description:        "При ответе на запрос важны результаты внутри города (основная масса локализуемых запросов)"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCityQuery()" }
    DependsOn:          [{Feature: ["CityQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              41
    CppName:            "FI_QUERY_ADM"
    Name:               "AdmQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_UNDOCUMENTED, TG_L2, TG_REARR_USE]
    Description:        "При ответе на запрос важны результаты из области, региона пользователя ([аэропорт], [молокозавод])"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetAdmQuery()" }
    DependsOn:          [{Feature: ["AdmQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              42
    CppName:            "FI_QUERY_ISGEO"
    Name:               "IsGeo"
    Ticket:             "BUKI-1316"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "Cпускает на базовые поиски под именем isgeo максимальный вес встреченного геообъекта в запросе. Под геообъектом понимается объект категории Geo, Geo1, GeoAddr, GeoAddr1, LandMark, LandMark1 (см. ((http://wiki.yandex-team.ru/AlekseySokirko/QueryObjects som-овскую разметку))).((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares Подробнее))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsGeo()" }
    DependsOn:          [{Feature: ["IsGeo"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              43
    CppName:            "FI_QUERY_ISMUSIC"
    Name:               "IsMusic"
    Ticket:             "BUKI-1316"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "Cпускает на базовые поиски под именем ismusic максимальный вес встреченного объекта категории Music или Music1 в запросе. (см. ((http://wiki.yandex-team.ru/AlekseySokirko/QueryObjects som-овскую разметку))).((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares Подробнее))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsMusic()" }
    DependsOn:          [{Feature: ["IsMusic"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              44
    CppName:            "FI_QUERY_ISORG"
    Name:               "IsOrg"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "В запросе название организации (пример: Газпром, газпрома) ((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares Описание))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsOrg()" }
    DependsOn:          [{Feature: ["IsOrg"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              45
    CppName:            "FI_QUERY_ISHUM"
    Name:               "IsHum"
    Ticket:             "BUKI-1316"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "Cпускает на базовые поиски под именем ishum максимальный вес встреченного объекта категории Hum или Hum1 в запросе. (см. ((http://wiki.yandex-team.ru/AlekseySokirko/QueryObjects som-овскую разметку))).((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares#ishum Подробнее))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsHum()" }
    DependsOn:          [{Feature: ["IsHum"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              46
    CppName:            "FI_QUERY_ISTEXT"
    Name:               "IsText"
    Ticket:             "BUKI-1316"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "Cпускает на базовые поиски под именем istext максимальный вес встреченного объекта категории Text или Text1 в запросе. (см. ((http://wiki.yandex-team.ru/AlekseySokirko/QueryObjects som-овскую разметку))).((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares#istext Подробнее))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsText()" }
    DependsOn:          [{Feature: ["IsText"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              47
    CppName:            "FI_QUERY_ISPICTURE"
    Name:               "IsPicture"
    Ticket:             "BUKI-1316"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "Cпускает на базовые поиски под именем ispicture максимальный вес встреченного объекта категории Picture или Picture1 в запросе. (см. ((http://wiki.yandex-team.ru/AlekseySokirko/QueryObjects som-овскую разметку))).((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares#ispicture Подробнее))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsPicture()" }
    DependsOn:          [{Feature: ["IsPicture"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              48
    CppName:            "FI_QUERY_MINONE"
    Name:               "MinOne"
    Ticket:             "BUKI-1316"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "Возвращает под именем wminone максимальную степень нарицательности встреченных объектов в запросе. (см. ((http://wiki.yandex-team.ru/AlekseySokirko/QueryObjects som-овскую разметку))).((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares#minone Подробнее))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetMinOne()" }
    DependsOn:          [{Feature: ["MinOne"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              49
    CppName:            "FI_QUERY_MAXONE"
    Name:               "MaxOne"
    Ticket:             "BUKI-1316"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2]
    Description:        "Возвращает под именем wmaxone максимальную степень нарицательности встреченных объектов в запросе. (см. ((http://wiki.yandex-team.ru/AlekseySokirko/QueryObjects som-овскую разметку))).((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares#maxone Подробнее))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetMaxOne()" }
    DependsOn:          [{Feature: ["MaxOne"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              50
    CppName:            "FI_COUNTRY_QUERY_REGIONALITY"
    Name:               "CountryQueryRegionality"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_UNDOCUMENTED, TG_L2]
    Description:        "Страновый классификатор локализуемости - насколько запрос подразумевает контекст страны"
    Authors:            "shutovich"
    Responsibles:       "shutovich"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCountryQueryRegionality()" }
    DependsOn:          [{Feature: ["CountryQueryRegionality"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              51
    CppName:            "FI_QCLASS_DOWNLOAD"
    Name:               "QClassDownload"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2]
    Description:        "=1 - вкл. формула Download. Запросы класса: скачать/смотреть онлайн/играть/фото/слушать"
    Authors:            "asannikova"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassDownload()" }
    DependsOn:          [{Feature: ["QClassDownload"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              52
    CppName:            "FI_QCLASS_BRANDNAMES"
    Name:               "QClassBrandnames"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2]
    Description:        "Результат классификатора запроса  - в запросе  есть слова из соответствующего словаря.   бренд"
    Authors:            "agorodilov"
    Responsibles:       "agorodilov"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassBrandnames()" }
    DependsOn:          [{Feature: ["QClassBrandnames"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              53
    CppName:            "FI_QCLASS_DISEASE"
    Name:               "QClassDisease"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2]
    Description:        "медицинсий словарь"
    Authors:            "agorodilov"
    Responsibles:       "agorodilov"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassDisease()" }
    DependsOn:          [{Feature: ["QClassDisease"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              54
    CppName:            "FI_QCLASS_KAK"
    Name:               "QClassKak"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2]
    Description:        "вопрос"
    Authors:            "agorodilov"
    Responsibles:       "agorodilov"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassKak()" }
    DependsOn:          [{Feature: ["QClassKak"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              55
    CppName:            "FI_QCLASS_MOSCOW"
    Name:               "QClassMoscow"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2]
    Description:        "запрос специфический для Москвы"
    Authors:            "agorodilov"
    Responsibles:       "agorodilov"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassMoscow()" }
    DependsOn:          [{Feature: ["QClassMoscow"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              56
    CppName:            "FI_QCLASS_OAO"
    Name:               "QClassOAO"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2]
    Description:        "организация"
    Authors:            "agorodilov"
    Responsibles:       "agorodilov"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassOAO()" }
    DependsOn:          [{Feature: ["QClassOAO"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              57
    CppName:            "FI_QCLASS_PORNO"
    Name:               "QClassPorno"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2]
    Description:        "порно"
    Authors:            "agorodilov"
    Responsibles:       "agorodilov"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassPorno()" }
    DependsOn:          [{Feature: ["QClassPorno"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              58
    CppName:            "FI_QCLASS_TRAVEL"
    Name:               "QClassTravel"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2]
    Description:        "путешествия"
    Authors:            "agorodilov"
    Responsibles:       "agorodilov"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassTravel()" }
    DependsOn:          [{Feature: ["QClassTravel"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              59
    CppName:            "FI_DIVERSITY_CATEG_NEED_PHOTO"
    Name:               "DiversityCategNeedPhoto"
    Ticket:             "BUKI-1213"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_UNDOCUMENTED, TG_L2]
    Description:        "0 или 1 в зависимости от наличия в запросе явно выраженного интента need_photo из разнообразия"
    Authors:            "stasd07"
    Responsibles:       "stasd07"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDiversityCategNeedPhoto()" }
    DependsOn:          [{Feature: ["DiversityCategNeedPhoto"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              60
    CppName:            "FI_DIVERSITY_CATEG_NEED_MAP"
    Name:               "DiversityCategNeedMap"
    Ticket:             "BUKI-1213"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_UNDOCUMENTED, TG_L2]
    Description:        "0 или 1 в зависимости от наличия в запросе явно выраженного интента need_map из разнообразия"
    Authors:            "stasd07"
    Responsibles:       "stasd07"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDiversityCategNeedMap()" }
    DependsOn:          [{Feature: ["DiversityCategNeedMap"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              61
    CppName:            "FI_DIVERSITY_CATEG_DOWNLOAD"
    Name:               "DiversityCategDownload"
    Ticket:             "ROBOT-2688"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2]
    Description:        "0 или 1 - матчится ли запрос регулярке из тикета"
    Authors:            "stasd07"
    Responsibles:       "stasd07"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDiversityCategDownload()" }
    DependsOn:          [{Feature: ["DiversityCategDownload"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              62
    CppName:            "FI_DIVERSITY_CATEG_REVIEW"
    Name:               "DiversityCategReview"
    Ticket:             "ROBOT-2688"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_L2]
    Description:        "0 или 1 - матчится ли запрос регулярке из тикета"
    Authors:            "stasd07"
    Responsibles:       "stasd07"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDiversityCategReview()" }
    DependsOn:          [{Feature: ["DiversityCategReview"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              63
    CppName:            "FI_DIVERSITY_CATEG_WATCH"
    Name:               "DiversityCategWatch"
    Ticket:             "ROBOT-2688"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_L2]
    Description:        "0 или 1 - матчится ли запрос регулярке из тикета"
    Authors:            "stasd07"
    Responsibles:       "stasd07"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDiversityCategWatch()" }
    DependsOn:          [{Feature: ["DiversityCategWatch"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              64
    CppName:            "FI_HAS_MISSPELL"
    Name:               "HasMisspell"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_L2, TG_DEPRECATED]
    Description:        "В запросе есть опечатка"
    Authors:            "denplusplus"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetHasMisspell()" }
    DependsOn:          [{Feature: ["HasMisspell"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              65
    CppName:            "FI_ERRATUM_LOG_QUERY_PROBABILITY"
    Name:               "ErratumLogQueryProbability"
    Ticket:             "BUKI-1388"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_BROWSER, TG_COUNTER, TG_USER_SEARCH, TG_USER_EXT_DATA, TG_UNDOCUMENTED, TG_L2]
    Description:        "Двоичный логарифм вероятности запроса по языковой модели сервиса опечаток erratum"
    Authors:            "snow"
    Responsibles:       ["snow", "khristich"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetErratumLogQueryProbability()" }
    DependsOn:          [{Feature: ["ErratumLogQueryProbability"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              66
    CppName:            "FI_MISSPELL_LM_NGR_YANDEX_DIRECT_ORIGINAL"
    Name:               "MisspellLmNgrYandexDirectOriginal"
    Ticket:             ["FACTOR-1205"]
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Cумма скоров слов запроса по языковой модели 3grams-yandex-direct."
    Authors:            ["mbusel", "anton-fr", "enhydra"]
    Responsibles:       ["mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetMisspellLmNgrYandexDirectOriginal()" }
    DependsOn:          [{Feature: ["MisspellLmNgrYandexDirectOriginal"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              67
    CppName:            "FI_MISSPELL_LM_RTL_NGR_WEB_MT_ORIGINAL"
    Name:               "MisspellLmRtlNgrWebMtOriginal"
    Ticket:             ["FACTOR-1205"]
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Cумма скоров слов запроса по языковой модели web-mt."
    Authors:            ["mbusel", "anton-fr", "enhydra"]
    Responsibles:       ["mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetMisspellLmRtlNgrWebMtOriginal()" }
    DependsOn:          [{Feature: ["MisspellLmRtlNgrWebMtOriginal"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              68
    CppName:            "FI_YABAR_WORD_DNGI"
    Name:               "YabarWordDepthNodesGradientMin"
    Ticket:             "BUKI-1482"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_BROWSER, TG_USER_SEARCH, TG_L2]
    Description:        "Угол в пространстве Depth Nodes, посчитанный только по словам (Min по всем)"
    Authors:            ["atolstikov", "smikler"]
    Responsibles:       ["atolstikov", "smikler"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetYabarWordDepthNodesGradientMin()" }
    DependsOn:          [{Feature: ["YabarWordDepthNodesGradientMin"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              69
    CppName:            "FI_FRACTION_OF_QUERIES_WITH_GEO_PREDICTION"
    Name:               "FractionOfQueriesWithGeoPredicted"
    Ticket:             "FACTOR-508"
    Tags:               [TG_QUERY_ONLY, TG_USER_SEARCH, TG_LOCALIZED_COUNTRY, TG_DYNAMIC, TG_L2]
    Description:        "Предсказание доли запросов с географией по мешку слов, построенному для запроса"
    Authors:            ["yazevnul"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetFractionOfQueriesWithGeoPredicted()" }
    DependsOn:          [{Feature: ["FractionOfQueriesWithGeoPredicted"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              70
    CppName:            "FI_IS_LOCAL_PROBABILITY"
    Name:               "IsLocalProbability"
    Ticket:             "QREG-105"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2]
    Description:        "Значение классификатора локализуемости для запроса"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsLocalProbability()" }
    DependsOn:          [{Feature: ["IsLocalProbability"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              71
    CppName:            "FI_URL_IS_EXACT"
    Name:               "IsExactUrl"
    Ticket:             "FACTOR-682"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_OFTEN_ZERO, TG_L2]
    Description:        "Запрос является урлом с точностью до простановки точек и пробельных символов - используется правило колдунщика isurl"
    Authors:            ["mbusel", "smikler"]
    Responsibles:       "mbusel"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsExactUrl()" }
    DependsOn:          [{Feature: ["IsExactUrl"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              72
    CppName:            "FI_IS_RELEV_LOCALE_RU"
    Name:               "IsRelevLocaleRU"
    Ticket:             "QREG-108"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2]
    Description:        "relev_locale == ru"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleRU()" }
    DependsOn:          [{Feature: ["IsRelevLocaleRU"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              73
    CppName:            "FI_IS_RELEV_LOCALE_UA"
    Name:               "IsRelevLocaleUA"
    Ticket:             "QREG-108"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2]
    Description:        "relev_locale == ua"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleUA()" }
    DependsOn:          [{Feature: ["IsRelevLocaleUA"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              74
    CppName:            "FI_IS_RELEV_LOCALE_BY"
    Name:               "IsRelevLocaleBY"
    Ticket:             "QREG-108"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2]
    Description:        "relev_locale == by"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleBY()" }
    DependsOn:          [{Feature: ["IsRelevLocaleBY"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              75
    CppName:            "FI_IS_RELEV_LOCALE_KZ"
    Name:               "IsRelevLocaleKZ"
    Ticket:             "QREG-108"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2]
    Description:        "relev_locale == kz"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleKZ()" }
    DependsOn:          [{Feature: ["IsRelevLocaleKZ"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              76
    CppName:            "FI_IS_RELEV_LOCALE_TR"
    Name:               "IsRelevLocaleTR"
    Ticket:             "QREG-108"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY]
    Description:        "relev_locale == tr"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleTR()" }
    DependsOn:          [{Feature: ["IsRelevLocaleTR"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              77
    CppName:            "FI_IS_RELEV_LOCALE_ID"
    Name:               "IsRelevLocaleID"
    Ticket:             "QREG-116"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY]
    Description:        "relev_locale == id"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleID()" }
    DependsOn:          [{Feature: ["IsRelevLocaleID"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              78
    CppName:            "FI_IS_RELEV_LOCALE_WORLD"
    Name:               "IsRelevLocaleWORLD"
    Ticket:             "QREG-108"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY]
    Description:        "relev_locale == world"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleWORLD()" }
    DependsOn:          [{Feature: ["IsRelevLocaleWORLD"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              79
    CppName:            "FI_HAS_PORNO_QUERY"
    Name:               "HasPornoQuery"
    Ticket:             "FACTOR-123"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2]
    Description:        "Результат работы adult правила колдунщика."
    Authors:            "zagrebin"
    Responsibles:       "smikler"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetHasPornoQuery()" }
    DependsOn:          [{Feature: ["HasPornoQuery"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              80
    CppName:            "FI_QCLASS_PORNO_VW"
    Name:               "QClassPornoVw"
    Ticket:             "FACTOR-847"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2]
    Description:        "Porn query classification result from Wizard (iad_vw flag, based on Vowpal Wabbit)"
    Authors:            ["akolosov", "tobo"]
    Responsibles:       "tobo"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassPornoVw()" }
    DependsOn:          [{Feature: ["QClassPornoVw"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              81
    CppName:            "FI_DSSM_VK_POPULARITY"
    Name:               "DssmVkPopularity"
    Ticket:             ["FACTOR-1177"]
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_NEURAL]
    Description:        "Вероятность того, что хост vk.com является популярным для данного запроса согласно соответствующей dssm-модели."
    Authors:            ["mbusel", "tsimkha"]
    Responsibles:       ["mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmVkPopularity()" }
    DependsOn:          [{Feature: ["DssmVkPopularity"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              82
    CppName:            "FI_DSSM_ONLINER_POPULARITY"
    Name:               "DssmOnlinerPopularity"
    Ticket:             ["FACTOR-1177"]
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_NEURAL]
    Description:        "Вероятность того, что хост onliner.by является популярным для данного запроса согласно соответствующей dssm-модели."
    Authors:            ["mbusel", "tsimkha"]
    Responsibles:       ["mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmOnlinerPopularity()" }
    DependsOn:          [{Feature: ["DssmOnlinerPopularity"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              83
    CppName:            "FI_DSSM_RAMBLER_POPULARITY"
    Name:               "DssmRamblerPopularity"
    Ticket:             ["FACTOR-1177"]
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_NEURAL]
    Description:        "Вероятность того, что хост rambler.ru является популярным для данного запроса согласно соответствующей dssm-модели."
    Authors:            ["mbusel", "tsimkha"]
    Responsibles:       ["mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRamblerPopularity()" }
    DependsOn:          [{Feature: ["DssmRamblerPopularity"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              84
    CppName:            "FI_DSSM_EXPERTCEN_POPULARITY"
    Name:               "DssmExpertcenPopularity"
    Ticket:             ["FACTOR-1177"]
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_NEURAL]
    Description:        "Вероятность того, что хост expertcen.ru является популярным для данного запроса согласно соответствующей dssm-модели."
    Authors:            ["mbusel", "tsimkha"]
    Responsibles:       ["mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmExpertcenPopularity()" }
    DependsOn:          [{Feature: ["DssmExpertcenPopularity"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              85
    CppName:            "FI_DSSM_SUNHOME_POPULARITY"
    Name:               "DssmSunhomePopularity"
    Ticket:             ["FACTOR-1177"]
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_NEURAL]
    Description:        "Вероятность того, что хост sunhome.ru является популярным для данного запроса согласно соответствующей dssm-модели."
    Authors:            ["mbusel", "tsimkha"]
    Responsibles:       ["mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmSunhomePopularity()" }
    DependsOn:          [{Feature: ["DssmSunhomePopularity"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              86
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_NEWS"
    Name:               "RandomLogQueryAvgNews"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Среднее значение News по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgNews()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgNews"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              87
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_ADD_TIME"
    Name:               "RandomLogQueryAvgAddTime"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DATE]
    Description:        "Среднее значение AddTime по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgAddTime()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgAddTime"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              88
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_TEXT_HI_RELEV_SYN"
    Name:               "RandomLogQueryAvgTxtHiRelSy"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Среднее значение TxtHiRelSy по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgTxtHiRelSy()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgTxtHiRelSy"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              89
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_TEXT_LIKE"
    Name:               "RandomLogQueryAvgTextLike"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Среднее значение TextLike по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgTextLike()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgTextLike"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              90
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_HAS_NO_ALL_WORDS_TR_SYN"
    Name:               "RandomLogQueryAvgHasNoAllWordsTRSy"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Среднее значение HasNoAllWordsTRSy по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgHasNoAllWordsTRSy()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgHasNoAllWordsTRSy"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              91
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_IS_FORUM"
    Name:               "RandomLogQueryAvgIsForum"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Среднее значение IsForum по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgIsForum()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgIsForum"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              92
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_HAS_PAYMENTS"
    Name:               "RandomLogQueryAvgHasPayments"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Среднее значение HasPayments по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgHasPayments()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgHasPayments"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              93
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_YABAR_HOST_AVG_TIME2"
    Name:               "RandomLogQueryAvgYabarHostAvgTime2"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER]
    Description:        "Среднее значение YabarHostAvgTime2 по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgYabarHostAvgTime2()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgYabarHostAvgTime2"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              94
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_YABAR_URL_VISITORS"
    Name:               "RandomLogQueryAvgYabarUrlVisitors"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER]
    Description:        "Среднее значение YabarUrlVisitors по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgYabarUrlVisitors()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgYabarUrlVisitors"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              95
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_QUERY_DOWNER_ONLY_CLICK_RATE"
    Name:               "RandomLogQueryAvgQueryDOwnerOnlyClickRate"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DOWNER, TG_USER_EXT_DATA, TG_USER_SEARCH_EXTERNAL]
    Description:        "Среднее значение QueryDOwnerOnlyClickRate по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgQueryDOwnerOnlyClickRate()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgQueryDOwnerOnlyClickRate"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              96
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_DATER_AGE"
    Name:               "RandomLogQueryAvgDaterAge"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Среднее значение DaterAge по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgDaterAge()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgDaterAge"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              97
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_LONGEST_TEXT"
    Name:               "RandomLogQueryAvgLongestText"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Среднее значение LongestText по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgLongestText()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgLongestText"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              98
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_DIFFERENT_INTERNAL_LINKS"
    Name:               "RandomLogQueryAvgDifferentInternalLinks"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Среднее значение DifferentInternalLinks по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgDifferentInternalLinks()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgDifferentInternalLinks"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              99
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_QUERY_DOWNER_ONLY_CLICK_RATE_REG"
    Name:               "RandomLogQueryAvgQueryDOwnerOnlyClickRate_Reg"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DOWNER, TG_USER_EXT_DATA, TG_USER_SEARCH_EXTERNAL]
    Description:        "Среднее значение QueryDOwnerOnlyClickRate_Reg по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgQueryDOwnerOnlyClickRate_Reg()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgQueryDOwnerOnlyClickRate_Reg"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              100
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_IS_HUB"
    Name:               "RandomLogQueryAvgIsHub"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Среднее значение IsHub по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgIsHub()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgIsHub"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              101
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_IS_TARGET_BUSSINESS_CARD"
    Name:               "RandomLogQueryAvgIsTargetBussinessCard"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_CATALOG, TG_DEPRECATED]
    Description:        "Среднее значение IsTargetBussinessCard по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgIsTargetBussinessCard()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgIsTargetBussinessCard"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              102
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_BM25_0"
    Name:               "RandomLogQueryAvgBM25_0"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Среднее значение BM25_0 по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgBM25_0()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgBM25_0"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              103
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_BOCM"
    Name:               "RandomLogQueryAvgBocm"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Среднее значение Bocm по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgBocm()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgBocm"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              104
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_IS_INDEX_PAGE"
    Name:               "RandomLogQueryAvgIsIndexPage"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Среднее значение IsIndexPage по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgIsIndexPage()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgIsIndexPage"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              105
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_QUERIES_AVG_CM2"
    Name:               "RandomLogQueryAvgQueriesAvgCM2"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_OWNER, TG_COMMERCIAL]
    Description:        "Среднее значение QueriesAvgCM2 по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgQueriesAvgCM2()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgQueriesAvgCM2"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              106
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_BROWSER_HOST_DOWNLOAD_PROBABILITY"
    Name:               "RandomLogQueryAvgBrowserHostDownloadProbability"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER, TG_DEPRECATED]
    Description:        "Среднее значение BrowserHostDownloadProbability по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgBrowserHostDownloadProbability()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgBrowserHostDownloadProbability"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              107
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_REG_BROWSER_USER_HUB"
    Name:               "RandomLogQueryAvgRegBrowserUserHub"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER, TG_USER_EXT_DATA]
    Description:        "Среднее значение RegBrowserUserHub по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgRegBrowserUserHub()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgRegBrowserUserHub"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              108
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_AUX_TITLE_BM25"
    Name:               "RandomLogQueryAvgAuxTitleBM25"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Среднее значение AuxTitleBM25 по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgAuxTitleBM25()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgAuxTitleBM25"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              109
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_QUERY_URL_CORRECTED_CTR_XFACTOR"
    Name:               "RandomLogQueryAvgQueryUrlCorrectedCtrXfactor"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_COLLABORATED, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Среднее значение QueryUrlCorrectedCtrXfactor по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgQueryUrlCorrectedCtrXfactor()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgQueryUrlCorrectedCtrXfactor"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              110
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_QUERY_TO_DOC_ALL_SUM_F_COUNT_TEXT_BM11_NORM16384"
    Name:               "RandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Среднее значение QueryToDocAllSumFCountTextBm11Norm16384 по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              111
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_XF_DT_SHOW_ALL_SUM_WF_SUM_W_BODY_MIN_WINDOW_SIZE"
    Name:               "RandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST]
    Description:        "Среднее значение XfDtShowAllSumWFSumWBodyMinWindowSize по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize()" }
    DependsOn:          [{Feature: ["RandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              112
    CppName:            "FI_RANDOM_LOG_QUERY_CLICKS_WEIGHTED_AVG_IS_MAIN_PAGE"
    Name:               "RandomLogQueryClicksWeightedAvgIsMainPage"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Средневзвешанное кликами значение IsMainPage по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryClicksWeightedAvgIsMainPage()" }
    DependsOn:          [{Feature: ["RandomLogQueryClicksWeightedAvgIsMainPage"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              113
    CppName:            "FI_RANDOM_LOG_QUERY_CLICKS_WEIGHTED_AVG_YABAR_URL_AVG_TIME"
    Name:               "RandomLogQueryClicksWeightedAvgYabarUrlAvgTime"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER]
    Description:        "Средневзвешанное кликами значение YabarUrlAvgTime по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryClicksWeightedAvgYabarUrlAvgTime()" }
    DependsOn:          [{Feature: ["RandomLogQueryClicksWeightedAvgYabarUrlAvgTime"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              114
    CppName:            "FI_RANDOM_LOG_QUERY_CLICKS_WEIGHTED_AVG_DIFFERENT_INTERNAL_LINKS"
    Name:               "RandomLogQueryClicksWeightedAvgDifferentInternalLinks"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DEPRECATED, TG_FORMULA_2245_DEP ]
    Description:        "Средневзвешанное кликами значение DifferentInternalLinks по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryClicksWeightedAvgDifferentInternalLinks()" }
    DependsOn:          [{Feature: ["RandomLogQueryClicksWeightedAvgDifferentInternalLinks"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              115
    CppName:            "FI_RANDOM_LOG_QUERY_DWELLTIME_WEIGHTED_AVG_URL_DOMAIN_FRACTION"
    Name:               "RandomLogQueryDwelltimeWeightedAvgUrlDomainFraction"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Средневзвешанное dwelltime-ами значение UrlDomainFraction по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryDwelltimeWeightedAvgUrlDomainFraction()" }
    DependsOn:          [{Feature: ["RandomLogQueryDwelltimeWeightedAvgUrlDomainFraction"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              116
    CppName:            "FI_DSSM_QUERY_EMBEDDING_CTR_NO_MINER_PCA_0"
    Name:               "DssmQueryEmbeddingCtrNoMinerPca0"
    Ticket:             "FACTOR-1440"
    Tags:               [TG_QUERY_ONLY, TG_L2, TG_NEURAL, TG_USER, TG_USER_SEARCH]
    Description:        "Главные компоненты запросного эмбединга от модели DssmCtrNoMiner"
    Authors:            ["dskor"]
    Responsibles:       ["dskor"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmQueryEmbeddingCtrNoMinerPca0()" }
    DependsOn:          [{Feature: ["DssmQueryEmbeddingCtrNoMinerPca0"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              117
    CppName:            "FI_DSSM_QUERY_EMBEDDING_CTR_NO_MINER_PCA_1"
    Name:               "DssmQueryEmbeddingCtrNoMinerPca1"
    Ticket:             "FACTOR-1440"
    Tags:               [TG_QUERY_ONLY, TG_L2, TG_NEURAL, TG_USER, TG_USER_SEARCH]
    Description:        "Главные компоненты запросного эмбединга от модели DssmCtrNoMiner"
    Authors:            ["dskor"]
    Responsibles:       ["dskor"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmQueryEmbeddingCtrNoMinerPca1()" }
    DependsOn:          [{Feature: ["DssmQueryEmbeddingCtrNoMinerPca1"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              118
    CppName:            "FI_DSSM_QUERY_EMBEDDING_CTR_NO_MINER_PCA_2"
    Name:               "DssmQueryEmbeddingCtrNoMinerPca2"
    Ticket:             "FACTOR-1440"
    Tags:               [TG_QUERY_ONLY, TG_L2, TG_NEURAL, TG_USER, TG_USER_SEARCH]
    Description:        "Главные компоненты запросного эмбединга от модели DssmCtrNoMiner"
    Authors:            ["dskor"]
    Responsibles:       ["dskor"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmQueryEmbeddingCtrNoMinerPca2()" }
    DependsOn:          [{Feature: ["DssmQueryEmbeddingCtrNoMinerPca2"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              119
    CppName:            "FI_DSSM_QUERY_EMBEDDING_CTR_NO_MINER_PCA_3"
    Name:               "DssmQueryEmbeddingCtrNoMinerPca3"
    Ticket:             "FACTOR-1440"
    Tags:               [TG_QUERY_ONLY, TG_L2, TG_NEURAL, TG_USER, TG_USER_SEARCH]
    Description:        "Главные компоненты запросного эмбединга от модели DssmCtrNoMiner"
    Authors:            ["dskor"]
    Responsibles:       ["dskor"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmQueryEmbeddingCtrNoMinerPca3()" }
    DependsOn:          [{Feature: ["DssmQueryEmbeddingCtrNoMinerPca3"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              120
    CppName:            "FI_DSSM_QUERY_EMBEDDING_CTR_NO_MINER_PCA_4"
    Name:               "DssmQueryEmbeddingCtrNoMinerPca4"
    Ticket:             "FACTOR-1440"
    Tags:               [TG_QUERY_ONLY, TG_L2, TG_NEURAL, TG_USER, TG_USER_SEARCH]
    Description:        "Главные компоненты запросного эмбединга от модели DssmCtrNoMiner"
    Authors:            ["dskor"]
    Responsibles:       ["dskor"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmQueryEmbeddingCtrNoMinerPca4()" }
    DependsOn:          [{Feature: ["DssmQueryEmbeddingCtrNoMinerPca4"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              121
    CppName:            "FI_DSSM_QUERY_EMBEDDING_CTR_NO_MINER_PCA_5"
    Name:               "DssmQueryEmbeddingCtrNoMinerPca5"
    Ticket:             "FACTOR-1440"
    Tags:               [TG_QUERY_ONLY, TG_L2, TG_NEURAL, TG_USER, TG_USER_SEARCH]
    Description:        "Главные компоненты запросного эмбединга от модели DssmCtrNoMiner"
    Authors:            ["dskor"]
    Responsibles:       ["dskor"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmQueryEmbeddingCtrNoMinerPca5()" }
    DependsOn:          [{Feature: ["DssmQueryEmbeddingCtrNoMinerPca5"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              122
    CppName:            "FI_DSSM_QUERY_COUNTRY_TO_URL_ESTIMATED_DISTANCE"
    Name:               "DssmQueryCountryToUrlEstimatedDistance"
    Ticket:             "BUKI-2544"
    Tags:               [TG_DYNAMIC, TG_L2, TG_LOCALIZED_COUNTRY, TG_NEURAL, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_UNSUPPORTED]
    Description:        "Предсказанная по запросу и стране, с помощью dssm-модели длина клика из данной страны."
    Authors:            ["volverine", "mbusel"]
    Responsibles:       ["volverine", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmQueryCountryToUrlEstimatedDistance()" }
    DependsOn:          [{Feature: ["DssmQueryCountryToUrlEstimatedDistance"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              123
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_NEWS"
    Name:               "DssmRandomLogQueryAvgNews"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Предсказанное с помощью нейронной сети среднее значение News по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgNews()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgNews"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              124
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_ADD_TIME"
    Name:               "DssmRandomLogQueryAvgAddTime"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DATE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение AddTime по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgAddTime()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgAddTime"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              125
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_TEXT_HI_RELEV_SYN"
    Name:               "DssmRandomLogQueryAvgTxtHiRelSy"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Предсказанное с помощью нейронной сети среднее значение TxtHiRelSy по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgTxtHiRelSy()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgTxtHiRelSy"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              126
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_TEXT_LIKE"
    Name:               "DssmRandomLogQueryAvgTextLike"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Предсказанное с помощью нейронной сети среднее значение TextLike по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgTextLike()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgTextLike"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              127
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_HAS_NO_ALL_WORDS_TR_SYN"
    Name:               "DssmRandomLogQueryAvgHasNoAllWordsTRSy"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Предсказанное с помощью нейронной сети среднее значение HasNoAllWordsTRSy по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgHasNoAllWordsTRSy()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgHasNoAllWordsTRSy"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              128
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_IS_FORUM"
    Name:               "DssmRandomLogQueryAvgIsForum"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Предсказанное с помощью нейронной сети среднее значение IsForum по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgIsForum()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgIsForum"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              129
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_HAS_PAYMENTS"
    Name:               "DssmRandomLogQueryAvgHasPayments"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Предсказанное с помощью нейронной сети среднее значение HasPayments по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgHasPayments()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgHasPayments"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              130
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_YABAR_HOST_AVG_TIME2"
    Name:               "DssmRandomLogQueryAvgYabarHostAvgTime2"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER]
    Description:        "Предсказанное с помощью нейронной сети среднее значение YabarHostAvgTime2 по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgYabarHostAvgTime2()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgYabarHostAvgTime2"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              131
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_YABAR_URL_VISITORS"
    Name:               "DssmRandomLogQueryAvgYabarUrlVisitors"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER]
    Description:        "Предсказанное с помощью нейронной сети среднее значение YabarUrlVisitors по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgYabarUrlVisitors()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgYabarUrlVisitors"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              132
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_QUERY_DOWNER_ONLY_CLICK_RATE"
    Name:               "DssmRandomLogQueryAvgQueryDOwnerOnlyClickRate"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_USER_EXT_DATA, TG_USER_SEARCH_EXTERNAL]
    Description:        "Предсказанное с помощью нейронной сети среднее значение QueryDOwnerOnlyClickRate по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgQueryDOwnerOnlyClickRate()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgQueryDOwnerOnlyClickRate"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              133
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_DATER_AGE"
    Name:               "DssmRandomLogQueryAvgDaterAge"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Предсказанное с помощью нейронной сети среднее значение DaterAge по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgDaterAge()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgDaterAge"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              134
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_LONGEST_TEXT"
    Name:               "DssmRandomLogQueryAvgLongestText"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Предсказанное с помощью нейронной сети среднее значение LongestText по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgLongestText()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgLongestText"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              135
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_DIFFERENT_INTERNAL_LINKS"
    Name:               "DssmRandomLogQueryAvgDifferentInternalLinks"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Предсказанное с помощью нейронной сети среднее значение DifferentInternalLinks по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgDifferentInternalLinks()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgDifferentInternalLinks"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              136
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_QUERY_DOWNER_ONLY_CLICK_RATE_REG"
    Name:               "DssmRandomLogQueryAvgQueryDOwnerOnlyClickRate_Reg"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_USER_EXT_DATA, TG_USER_SEARCH_EXTERNAL]
    Description:        "Предсказанное с помощью нейронной сети среднее значение QueryDOwnerOnlyClickRate_Reg по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgQueryDOwnerOnlyClickRate_Reg()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgQueryDOwnerOnlyClickRate_Reg"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              137
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_IS_TARGET_BUSSINESS_CARD"
    Name:               "DssmRandomLogQueryAvgIsTargetBussinessCard"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_CATALOG, TG_DEPRECATED]
    Description:        "Предсказанное с помощью нейронной сети среднее значение IsTargetBussinessCard по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgIsTargetBussinessCard()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgIsTargetBussinessCard"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              138
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_BOCM"
    Name:               "DssmRandomLogQueryAvgBocm"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Предсказанное с помощью нейронной сети среднее значение Bocm по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgBocm()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgBocm"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              139
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_IS_INDEX_PAGE"
    Name:               "DssmRandomLogQueryAvgIsIndexPage"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Предсказанное с помощью нейронной сети среднее значение IsIndexPage по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgIsIndexPage()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgIsIndexPage"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              140
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_QUERIES_AVG_CM2"
    Name:               "DssmRandomLogQueryAvgQueriesAvgCM2"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_COMMERCIAL]
    Description:        "Предсказанное с помощью нейронной сети среднее значение QueriesAvgCM2 по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgQueriesAvgCM2()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgQueriesAvgCM2"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              141
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_BROWSER_HOST_DOWNLOAD_PROBABILITY"
    Name:               "DssmRandomLogQueryAvgBrowserHostDownloadProbability"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER, TG_DEPRECATED]
    Description:        "Предсказанное с помощью нейронной сети среднее значение BrowserHostDownloadProbability по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgBrowserHostDownloadProbability()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgBrowserHostDownloadProbability"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              142
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_REG_BROWSER_USER_HUB"
    Name:               "DssmRandomLogQueryAvgRegBrowserUserHub"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER, TG_USER_EXT_DATA]
    Description:        "Предсказанное с помощью нейронной сети среднее значение RegBrowserUserHub по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgRegBrowserUserHub()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgRegBrowserUserHub"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              143
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_AUX_TITLE_BM25"
    Name:               "DssmRandomLogQueryAvgAuxTitleBM25"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Предсказанное с помощью нейронной сети среднее значение AuxTitleBM25 по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgAuxTitleBM25()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgAuxTitleBM25"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              144
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_QUERY_URL_CORRECTED_CTR_XFACTOR"
    Name:               "DssmRandomLogQueryAvgQueryUrlCorrectedCtrXfactor"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_COLLABORATED, TG_DEPRECATED, TG_FORMULA_2245_DEP ]
    Description:        "Предсказанное с помощью нейронной сети среднее значение QueryUrlCorrectedCtrXfactor по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgQueryUrlCorrectedCtrXfactor()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgQueryUrlCorrectedCtrXfactor"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              145
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_QUERY_TO_DOC_ALL_SUM_F_COUNT_TEXT_BM11_NORM16384"
    Name:               "DssmRandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Предсказанное с помощью нейронной сети среднее значение QueryToDocAllSumFCountTextBm11Norm16384 по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              146
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_XF_DT_SHOW_ALL_SUM_WF_SUM_W_BODY_MIN_WINDOW_SIZE"
    Name:               "DssmRandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST]
    Description:        "Предсказанное с помощью нейронной сети среднее значение XfDtShowAllSumWFSumWBodyMinWindowSize по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              147
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_CLICKS_WEIGHTED_AVG_IS_MAIN_PAGE"
    Name:               "DssmRandomLogQueryClicksWeightedAvgIsMainPage"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Предсказанное с помощью нейронной сети средневзвешанное кликами значение IsMainPage по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryClicksWeightedAvgIsMainPage()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryClicksWeightedAvgIsMainPage"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              148
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_CLICKS_WEIGHTED_AVG_YABAR_URL_AVG_TIME"
    Name:               "DssmRandomLogQueryClicksWeightedAvgYabarUrlAvgTime"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER]
    Description:        "Предсказанное с помощью нейронной сети средневзвешанное кликами значение YabarUrlAvgTime по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryClicksWeightedAvgYabarUrlAvgTime()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryClicksWeightedAvgYabarUrlAvgTime"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              149
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_CLICKS_WEIGHTED_AVG_DIFFERENT_INTERNAL_LINKS"
    Name:               "DssmRandomLogQueryClicksWeightedAvgDifferentInternalLinks"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Предсказанное с помощью нейронной сети средневзвешанное кликами значение DifferentInternalLinks по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryClicksWeightedAvgDifferentInternalLinks()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryClicksWeightedAvgDifferentInternalLinks"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              150
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_DWELLTIME_WEIGHTED_AVG_URL_DOMAIN_FRACTION"
    Name:               "DssmRandomLogQueryDwelltimeWeightedAvgUrlDomainFraction"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Предсказанное с помощью нейронной сети средневзвешанное dwelltime-ами значение UrlDomainFraction по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryDwelltimeWeightedAvgUrlDomainFraction()" }
    DependsOn:          [{Feature: ["DssmRandomLogQueryDwelltimeWeightedAvgUrlDomainFraction"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              151
    CppName:            "FI_REGIONALITY5_LOCALIZATION_PROBABILITY"
    Name:               "Regionality5LocalizationProbability"
    Ticket:             "BUKI-2544"
    Tags:               [TG_DYNAMIC, TG_L2, TG_LOCALIZED_COUNTRY, TG_NEURAL, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH]
    Description:        "Предсказание вероятности того, что запрос локализуем в соответствии с правилом Regionality5."
    Authors:            ["volverine", "mbusel"]
    Responsibles:       ["volverine", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRegionality5LocalizationProbability()" }
    DependsOn:          [{Feature: ["Regionality5LocalizationProbability"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              152
    CppName:            "FI_LONG_QUERY_SYN"
    Name:               "LongQuerySyn"
    Ticket:             "BUKI-1361"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_L2]
    Description:        "Фактор -- аналог LongQuery (сумма idf слов запроса), но с 'корректным' учетом синонимов. Конкретно -- выбирается минимум по idf (т.е. самое частое) из синонимов и слова."
    Authors:            "morph"
    Responsibles:       "morph"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetWordSumIdfSyn()" }
    DependsOn:          [{Feature: ["LongQuerySyn"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              153
    CppName:            "FI_DSSM_BOOSTING_XF_ONE_SE_AM_SS_QUERY_MUTATION_DEL_SITE_WORD_RENORMED_DISTANCE"
    Name:               "DssmBoostingXfOneSeAmSsHardQueryMutationDelSiteWordRenormedDistance"
    Ticket:             "FACTOR-1665",
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_NEURAL, TG_OFTEN_ZERO, TG_L2, TG_UNSUPPORTED]
    Description:        "Характеризует запрос по степени изменения от удаления фиксированного слова ('сайт' для кирилицы), используется dssm модель DssmBoostingXfOneSeAmSsHard"
    Authors:            ["ilnurkh"]
    Responsibles:       ["ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmBoostingXfOneSeAmSsQueryMutationFeatures().GetDelSiteWordRenormedDistance()" }
    DependsOn:          [{Feature: ["DssmBoostingXfOneSeAmSsHardQueryMutationDelSiteWordRenormedDistance"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              154
    CppName:            "FI_DSSM_BOOSTING_XF_ONE_SE_AM_SS_QUERY_MUTATION_ADD_FIXED_YEAR_WORD_RENORMED_DISTANCE"
    Name:               "DssmBoostingXfOneSeAmSsHardQueryMutationAddFixedYearWordRenormedDistance"
    Ticket:             "FACTOR-1665",
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_NEURAL, TG_L2, TG_UNSUPPORTED]
    Description:        "Характеризует запрос по степени изменения от добавления фиксированного слова (номер некоторого года), используется dssm модель DssmBoostingXfOneSeAmSsHard"
    Authors:            ["ilnurkh"]
    Responsibles:       ["ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmBoostingXfOneSeAmSsQueryMutationFeatures().GetAddFixedYearWordRenormedDistance()" }
    DependsOn:          [{Feature: ["DssmBoostingXfOneSeAmSsHardQueryMutationAddFixedYearWordRenormedDistance"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              155
    CppName:            "FI_DSSM_BOOSTING_XF_ONE_SE_AM_SS_QUERY_MUTATION_ADD_ONLINE_WORD_RENORMED_DISTANCE"
    Name:               "DssmBoostingXfOneSeAmSsHardQueryMutationAddOnlineWordRenormedDistance"
    Ticket:             "FACTOR-1665",
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_NEURAL, TG_L2, TG_UNSUPPORTED]
    Description:        "Характеризует запрос по степени изменения от добавления фиксированного слова ('онлайн' для кирилицы), используется dssm модель DssmBoostingXfOneSeAmSsHard"
    Authors:            ["ilnurkh"]
    Responsibles:       ["ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmBoostingXfOneSeAmSsQueryMutationFeatures().GetAddOnlineWordRenormedDistance()" }
    DependsOn:          [{Feature: ["DssmBoostingXfOneSeAmSsHardQueryMutationAddOnlineWordRenormedDistance"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              156
    CppName:            "FI_RANDOM_LOG_WORD_MAX_HAS_NO_TR"
    Name:               "RandomLogWordMaxHasNoTr"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение HasNoTr по запросам за 3 месяца. Далее по всем словам запроса берётся максимум этой величины."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordMaxHasNoTr()" }
    DependsOn:          [{Feature: ["RandomLogWordMaxHasNoTr"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              157
    CppName:            "FI_RANDOM_LOG_WORD_MAX_IS_LJ"
    Name:               "RandomLogWordMaxIsLJ"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение IsLJ по запросам за 3 месяца. Далее по всем словам запроса берётся максимум этой величины."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordMaxIsLJ()" }
    DependsOn:          [{Feature: ["RandomLogWordMaxIsLJ"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              158
    CppName:            "FI_VIDEO_QUERY_CLUSTER_PORN"
    Name:               "VideoQueryClusterPorn"
    Tags:               [ TG_QUERY_ONLY ]
    Description:        "Близость запроса к кластеру порно на основе vpqV3. Видеопоисковый фактор."
    Ticket:             "VIDEOPOISK-13321"
    Authors:            ["vkaneva", "tobo"]
    Responsibles:       ["vkaneva", "tobo"]
}

Factor {
    Index:              159
    CppName:            "FI_RANDOM_LOG_WORD_MIN_BCLM_LITE"
    Name:               "RandomLogWordMinBclmLite"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение BclmLite по запросам за 3 месяца. Далее по всем словам запроса берётся минимум этой величины."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordMinBclmLite()" }
    DependsOn:          [{Feature: ["RandomLogWordMinBclmLite"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              160
    CppName:            "FI_RANDOM_LOG_WORD_SKIP_STOP_WORDS_MAX_DBM40"
    Name:               "RandomLogWordSkipStopWordsMaxDBM40"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение DBM40 по запросам за 3 месяца. Далее по всем не стоп словам запроса берётся максимум этой величины."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordSkipStopWordsMaxDBM40()" }
    DependsOn:          [{Feature: ["RandomLogWordSkipStopWordsMaxDBM40"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              161
    CppName:            "FI_RANDOM_LOG_WORD_SKIP_STOP_WORDS_MAX_IS_DESKTOP_REQUEST"
    Name:               "RandomLogWordSkipStopWordsMaxIsDesktopRequest"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение IsDesktopRequest по запросам за 3 месяца. Далее по всем не стоп словам запроса берётся максимум этой величины."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordSkipStopWordsMaxIsDesktopRequest()" }
    DependsOn:          [{Feature: ["RandomLogWordSkipStopWordsMaxIsDesktopRequest"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              162
    CppName:            "FI_RANDOM_LOG_WORD_MAX_RLQ_AVG_HAS_NO_ALL_WORDS_TR_SYN"
    Name:               "RandomLogWordMaxRLQAvgHasNoAllWordsTrSyn"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение RLQAvgHasNoAllWordsTrSyn по запросам за 3 месяца. Далее по всем словам запроса берётся максимум этой величины."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordMaxRLQAvgHasNoAllWordsTrSyn()" }
    DependsOn:          [{Feature: ["RandomLogWordMaxRLQAvgHasNoAllWordsTrSyn"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              163
    CppName:            "FI_RANDOM_LOG_WORD_MAX_DSSM_AGGREGATED_ANN_REG"
    Name:               "RandomLogWordMaxDssmAggregatedAnnReg"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DEPRECATED, TG_UNSUPPORTED]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение DssmAggregatedAnnReg по запросам за 3 месяца. Далее по всем словам запроса берётся максимум этой величины."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordMaxDssmAggregatedAnnReg()" }
    DependsOn:          [{Feature: ["RandomLogWordMaxDssmAggregatedAnnReg"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              164
    CppName:            "FI_RANDOM_LOG_WORD_MAX_META_NUM_URLS_PER_HOST_FIXED"
    Name:               "RandomLogWordMaxMetaNumUrlsPerHostFixed"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение MetaNumUrlsPerHostFixed по запросам за 3 месяца. Далее по всем словам запроса берётся максимум этой величины."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordMaxMetaNumUrlsPerHostFixed()" }
    DependsOn:          [{Feature: ["RandomLogWordMaxMetaNumUrlsPerHostFixed"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              165
    CppName:            "FI_RANDOM_LOG_WORD_SKIP_STOP_WORDS_MAX_SD_IS_NAV_MX_QUERY_MAX"
    Name:               "RandomLogWordSkipStopWordsMaxSDIsNavMxQueryMax"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение MaxSDIsNavMxQueryMax по запросам за 3 месяца. Далее по всем не стоп словам запроса берётся максимум этой величины."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordSkipStopWordsMaxSDIsNavMxQueryMax()" }
    DependsOn:          [{Feature: ["RandomLogWordSkipStopWordsMaxSDIsNavMxQueryMax"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              166
    CppName:            "FI_DSSM_GOOGLE_SPECIFICITY"
    Name:               "DssmGoogleSpecificity"
    Ticket:             "FORMULA-1218"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_UNUSED]
    Description:        "DSSM prediction of google specificity for query"
    Authors:            ["gaiduk"]
    Responsibles:       ["conscience", "gaiduk"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmGoogleSpecificity()" }
    DependsOn:          [{Feature: ["DssmGoogleSpecificity"], Slice: "begemot_query_factors"}]
    ImplementationTime: "2018-07-18"
}

Factor {
    Index:              167
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_ADD_TIME"
    Name:               "KnnRandomLogQueryAvgAddTime"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Среднее значение RandomLogQueryAvgAddTime ближайших по knn запросов."
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgAddTime()" }
    DependsOn:          [{Feature: ["KnnRandomLogQueryAvgAddTime"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              168
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_TEXT_HI_RELEV_SYN"
    Name:               "KnnRandomLogQueryAvgTxtHiRelSy"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Среднее значение RandomLogQueryAvgTxtHiRelSy ближайших по knn запросов."
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgTxtHiRelSy()" }
    DependsOn:          [{Feature: ["KnnRandomLogQueryAvgTxtHiRelSy"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              169
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_TEXT_LIKE"
    Name:               "KnnRandomLogQueryAvgTextLike"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Среднее значение RandomLogQueryAvgTextLike ближайших по knn запросов."
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgTextLike()" }
    DependsOn:          [{Feature: ["KnnRandomLogQueryAvgTextLike"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              170
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_IS_FORUM"
    Name:               "KnnRandomLogQueryAvgIsForum"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Среднее значение RandomLogQueryAvgIsForum ближайших по knn запросов."
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgIsForum()" }
    DependsOn:          [{Feature: ["KnnRandomLogQueryAvgIsForum"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              171
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_HAS_PAYMENTS"
    Name:               "KnnRandomLogQueryAvgHasPayments"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Среднее значение RandomLogQueryAvgHasPayments ближайших по knn запросов."
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgHasPayments()" }
    DependsOn:          [{Feature: ["KnnRandomLogQueryAvgHasPayments"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              172
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_DIFFERENT_INTERNAL_LINKS"
    Name:               "KnnRandomLogQueryAvgDifferentInternalLinks"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Среднее значение RandomLogQueryAvgDifferentInternalLinks ближайших по knn запросов."
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgDifferentInternalLinks()" }
    DependsOn:          [{Feature: ["KnnRandomLogQueryAvgDifferentInternalLinks"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              173
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_IS_TARGET_BUSSINESS_CARD"
    Name:               "KnnRandomLogQueryAvgIsTargetBussinessCard"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Среднее значение RandomLogQueryAvgIsTargetBussinessCard ближайших по knn запросов."
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgIsTargetBussinessCard()" }
    DependsOn:          [{Feature: ["KnnRandomLogQueryAvgIsTargetBussinessCard"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              174
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_QUERY_TO_DOC_ALL_SUM_F_COUNT_TEXT_BM11_NORM16384"
    Name:               "KnnRandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Среднее значение RandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384 ближайших по knn запросов."
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384()" }
    DependsOn:          [{Feature: ["KnnRandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              175
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_XF_DT_SHOW_ALL_SUM_WF_SUM_W_BODY_MIN_WINDOW_SIZE"
    Name:               "KnnRandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_DEPRECATED, TG_FORMULA_2245_DEP]
    Description:        "Среднее значение RandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize ближайших по knn запросов."
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize()" }
    DependsOn:          [{Feature: ["KnnRandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              176
    CppName:            "FI_IS_DESKTOP_REQUEST"
    Name:               "IsDesktopRequest"
    Ticket:             "FORMULA-686"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY]
    Countries:          [CNT_ALL]
    Description:        "request came from yandsearch (rearr.is_desktop == 1) (https://wiki.yandex-team.ru/users/lpshka/platformfeatures)"
    Authors:            ["lpshka", "bochkarev"]
    Responsibles:       ["lpshka", "bochkarev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsDesktopRequest()" }
    DependsOn:          [{Feature: ["IsDesktopRequest"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              177
    CppName:            "FI_IS_MOBILE_REQUEST"
    Name:               "IsMobileRequest"
    Ticket:             "FORMULA-686"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY]
    Countries:          [CNT_ALL]
    Description:        "request came from touchsearch (rearr.is_mobile == 1) (https://wiki.yandex-team.ru/users/lpshka/platformfeatures)"
    Authors:            ["lpshka", "bochkarev"]
    Responsibles:       ["lpshka", "bochkarev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsMobileRequest()" }
    DependsOn:          [{Feature: ["IsMobileRequest"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              178
    CppName:            "FI_IS_TABLET_REQUEST"
    Name:               "IsTabletRequest"
    Ticket:             "FORMULA-686"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY]
    Countries:          [CNT_ALL]
    Description:        "request came from padsearch (rearr.is_tablet == 1) (https://wiki.yandex-team.ru/users/lpshka/platformfeatures)"
    Authors:            ["lpshka", "bochkarev"]
    Responsibles:       ["lpshka", "bochkarev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsTabletRequest()" }
    DependsOn:          [{Feature: ["IsTabletRequest"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              179
    CppName:            "FI_QUERY_DOPP_MEDIAN_DWELLTIME"
    Name:               "QueryDoppMedianDwelltime"
    Ticket:             "FACTOR-1978"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_L2, TG_UNIMPLEMENTED]
    Description:        "Медаинный двеллтайм запроса за всю историю. Двеллтайм обрезается до 6000. Запрос нормализуется по доппельгангерам"
    Authors:            "mihaild"
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetMedianDwelltime()" }
    DependsOn:          [{Feature: ["QueryDoppMedianDwelltime"], Slice: "begemot_query_factors"}]
    UseArtifact:        {Name: "QueryStaticFeaturesBigDict"}
}

Factor {
    Index:              180
    CppName:            "FI_QUERY_DOPP_MULTIPLE_CLICKS_SHOWS"
    Name:               "QueryDoppMultipleClicksShows"
    Ticket:             "FACTOR-1978"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_L2, TG_UNIMPLEMENTED]
    Description:        "Число показов запроса с более чем одним кликом за всю историю. Запрос нормализуется по доппельгангерам"
    Authors:            "mihaild"
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetMultipleClicksShows()" }
    DependsOn:          [{Feature: ["QueryDoppMultipleClicksShows"], Slice: "begemot_query_factors"}]
    UseArtifact:        {Name: "QueryStaticFeaturesBigDict"}
}

Factor {
    Index:              181
    CppName:            "FI_QUERY_DOPP_MULTIPLE_CLICKS_PROBABILITY"
    Name:               "QueryDoppMultipleClicksProbability"
    Ticket:             "FACTOR-1978"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_L2, TG_UNIMPLEMENTED]
    Description:        "Доля показов запроса с более чем одним кликом от всех показов за всю историю. Запрос нормализуется по доппельгангерам"
    Authors:            "mihaild"
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetMultipleClicksProbability()" }
    DependsOn:          [{Feature: ["QueryDoppMultipleClicksProbability"], Slice: "begemot_query_factors"}]
    UseArtifact:        {Name: "QueryStaticFeaturesBigDict"}
}

Factor {
    Index:              182
    CppName:            "FI_QUERY_TO_TEXT_ALL_AVG"
    Name:               "QueryToTextAllAvg"
    Ticket:             "FACTOR-1959"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST]
    Countries:          [CNT_ALL]
    Description:        "Среднее значение запросного фактора по данным лингвобустинга - QueryToText, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetQueryToTextAllAvg()" }
    DependsOn:          [{Feature: ["QueryToTextAllAvg"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              183
    CppName:            "FI_QUERY_TO_TEXT_KNN_ALL_AVG"
    Name:               "QueryToTextKnnAllAvg"
    Ticket:             "FACTOR-1959"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_LINGBOOST]
    Countries:          [CNT_ALL]
    Description:        "Среднее значение запросного фактора по данным лингвобустинга - QueryToTextByXfDtShowKnn, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetQueryToTextKnnAllAvg()" }
    DependsOn:          [{Feature: ["QueryToTextKnnAllAvg"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              184
    CppName:            "FI_XFDT_SHOW_ALL_TOTAL_W"
    Name:               "XfDtShowAllTotalW"
    Ticket:             "FACTOR-1959"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST]
    Countries:          [CNT_ALL]
    Description:        "sum / (sum + 10) для запросного фактора по данным лингвобустинга - XfDtShow, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetXfDtShowAllTotalW()" }
    DependsOn:          [{Feature: ["XfDtShowAllTotalW"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              185
    CppName:            "FI_XFDT_SHOW_QUANTILE_01"
    Name:               "XfDtShowQuantile01"
    Ticket:             "FACTOR-1959"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST]
    Countries:          [CNT_ALL]
    Description:        "Квантиль 0.1 для запросного фактора по данным лингвобустинга XfDtShow, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetXfDtShowQuantile01()" }
    DependsOn:          [{Feature: ["XfDtShowQuantile01"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              186
    CppName:            "FI_XFDT_SHOW_KNN_QUANTILE_01"
    Name:               "XfDtShowKnnQuantile10"
    Ticket:             "FACTOR-1959"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_LINGBOOST]
    Countries:          [CNT_ALL]
    Description:        "Квантиль 0.1 для запросного фактора по данным лингвобустинга XfDtShowKnn, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetXfDtShowKnnQuantile01()" }
    DependsOn:          [{Feature: ["XfDtShowKnnQuantile10"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              187
    CppName:            "FI_XFDT_SHOW_KNN_QUANTILE_09"
    Name:               "XfDtShowKnnQuantile09"
    Ticket:             "FACTOR-1959"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_LINGBOOST]
    Countries:          [CNT_ALL]
    Description:        "Квантиль 0.9 для запросного фактора по данным лингвобустинга XfDtShowKnn, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetXfDtShowKnnQuantile09()" }
    DependsOn:          [{Feature: ["XfDtShowKnnQuantile09"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              188
    CppName:            "FI_QFUF_ALL_TOTAL_WEIGHT"
    Name:               "QfufAllTotalWeight"
    Ticket:             "FACTOR-1959"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST]
    Countries:          [CNT_ALL]
    Description:        "sum / (sum + 10) для запросного фактора по данным лингвобустинга Qfuf, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetQfufAllTotalWeight()" }
    DependsOn:          [{Feature: ["QfufAllTotalWeight"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              189
    CppName:            "FI_QFUF_ALL_AVG"
    Name:               "QfufAllAvg"
    Ticket:             "FACTOR-1959"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST]
    Countries:          [CNT_ALL]
    Description:        "Среднее значение для запросного фактора по данным лингвобустинга Qfuf, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetQfufAllAvg()" }
    DependsOn:          [{Feature: ["QfufAllAvg"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              190
    CppName:            "FI_NN_OVER_DSSM_DOT_PRODUCT"
    Name:               "NnOverDssmDotProduct"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_USE_MARKUP, TG_NEURAL]
    Description:        "Newest runtime factor nn_over_dssm_dot_product. L0-embed relevance value, b-embed."
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              191
    CppName:            "FI_MASK_100_RELEVANCE_SUM"
    Name:               "Mask100RelevanceSum"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_relevance_sum"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              192
    CppName:            "FI_MASK_100_RELEVANCE_AVG"
    Name:               "Mask100RelevanceAvg"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_relevance_avg"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              193
    CppName:            "FI_MASK_100_RELEVANCE_MIN"
    Name:               "Mask100RelevanceMin"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_relevance_min"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              194
    CppName:            "FI_MASK_100_RELEVANCE_MAX"
    Name:               "Mask100RelevanceMax"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_relevance_max"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              195
    CppName:            "FI_MASK_100_RELEVANCE_SUM_NORMED"
    Name:               "Mask100RelevanceSumNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_relevance_sum_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              196
    CppName:            "FI_MASK_100_RELEVANCE_SUM_TO_TERM_COUNT"
    Name:               "Mask100RelevanceSumToTermCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_relevance_sum_to_term_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              197
    CppName:            "FI_MASK_100_RELEVANCE_SUM_TO_WORD_COUNT"
    Name:               "Mask100RelevanceSumToWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_relevance_sum_to_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              198
    CppName:            "FI_MASK_100_RELEVANCE_SUM_TO_MATCHED_WORD_COUNT"
    Name:               "Mask100RelevanceSumToMatchedWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_relevance_sum_to_matched_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              199
    CppName:            "FI_MASK_100_MATCHED_TERM_COUNT_NORMED"
    Name:               "Mask100MatchedTermCountNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_matched_term_count_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              200
    CppName:            "FI_MASK_100_MATCHED_TERM_COUNT_TO_TOTAL_TERM_COUNT"
    Name:               "Mask100MatchedTermCountToTotalTermCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_matched_term_count_to_total_term_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              201
    CppName:            "FI_MASK_100_MATCHED_WORD_COUNT_TO_TOTAL_WORD_COUNT"
    Name:               "Mask100MatchedWordCountToTotalWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_matched_word_count_to_total_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              202
    CppName:            "FI_MASK_100_MATCHED_WORD_COUNT_NORMED"
    Name:               "Mask100MatchedWordCountNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_matched_word_count_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              203
    CppName:            "FI_MASK_100_WORD_WEIGHTS_SUM"
    Name:               "Mask100WordWeightsSum"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_word_weights_sum"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              204
    CppName:            "FI_MASK_100_WORD_WEIGHTS_AVG"
    Name:               "Mask100WordWeightsAvg"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_word_weights_avg"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              205
    CppName:            "FI_MASK_100_WORD_WEIGHTS_MIN"
    Name:               "Mask100WordWeightsMin"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_word_weights_min"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              206
    CppName:            "FI_MASK_100_WORD_WEIGHTS_MAX"
    Name:               "Mask100WordWeightsMax"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_word_weights_max"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              207
    CppName:            "FI_MASK_100_WORD_WEIGHTS_SUM_TO_TOTAL_WORD_COUNT"
    Name:               "Mask100WordWeightsSumToTotalWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_100_word_weights_sum_to_total_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              208
    CppName:            "FI_MASK_010_RELEVANCE_SUM"
    Name:               "Mask010RelevanceSum"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_relevance_sum"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              209
    CppName:            "FI_MASK_010_RELEVANCE_AVG"
    Name:               "Mask010RelevanceAvg"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_relevance_avg"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              210
    CppName:            "FI_MASK_010_RELEVANCE_MIN"
    Name:               "Mask010RelevanceMin"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_relevance_min"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              211
    CppName:            "FI_MASK_010_RELEVANCE_MAX"
    Name:               "Mask010RelevanceMax"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_relevance_max"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              212
    CppName:            "FI_MASK_010_RELEVANCE_SUM_NORMED"
    Name:               "Mask010RelevanceSumNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_relevance_sum_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              213
    CppName:            "FI_MASK_010_RELEVANCE_SUM_TO_TERM_COUNT"
    Name:               "Mask010RelevanceSumToTermCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_relevance_sum_to_term_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              214
    CppName:            "FI_MASK_010_RELEVANCE_SUM_TO_WORD_COUNT"
    Name:               "Mask010RelevanceSumToWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_relevance_sum_to_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              215
    CppName:            "FI_MASK_010_RELEVANCE_SUM_TO_MATCHED_WORD_COUNT"
    Name:               "Mask010RelevanceSumToMatchedWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_relevance_sum_to_matched_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              216
    CppName:            "FI_MASK_010_MATCHED_TERM_COUNT_NORMED"
    Name:               "Mask010MatchedTermCountNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_matched_term_count_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              217
    CppName:            "FI_MASK_010_MATCHED_TERM_COUNT_TO_TOTAL_TERM_COUNT"
    Name:               "Mask010MatchedTermCountToTotalTermCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_matched_term_count_to_total_term_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              218
    CppName:            "FI_MASK_010_MATCHED_WORD_COUNT_TO_TOTAL_WORD_COUNT"
    Name:               "Mask010MatchedWordCountToTotalWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_matched_word_count_to_total_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              219
    CppName:            "FI_MASK_010_MATCHED_WORD_COUNT_NORMED"
    Name:               "Mask010MatchedWordCountNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_matched_word_count_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              220
    CppName:            "FI_MASK_010_WORD_WEIGHTS_SUM"
    Name:               "Mask010WordWeightsSum"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_word_weights_sum"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              221
    CppName:            "FI_MASK_010_WORD_WEIGHTS_AVG"
    Name:               "Mask010WordWeightsAvg"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_word_weights_avg"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              222
    CppName:            "FI_MASK_010_WORD_WEIGHTS_MIN"
    Name:               "Mask010WordWeightsMin"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_word_weights_min"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              223
    CppName:            "FI_MASK_010_WORD_WEIGHTS_MAX"
    Name:               "Mask010WordWeightsMax"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_word_weights_max"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              224
    CppName:            "FI_MASK_010_WORD_WEIGHTS_SUM_TO_TOTAL_WORD_COUNT"
    Name:               "Mask010WordWeightsSumToTotalWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_010_word_weights_sum_to_total_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              225
    CppName:            "FI_MASK_001_RELEVANCE_SUM"
    Name:               "Mask001RelevanceSum"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_relevance_sum"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              226
    CppName:            "FI_MASK_001_RELEVANCE_AVG"
    Name:               "Mask001RelevanceAvg"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_relevance_avg"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              227
    CppName:            "FI_MASK_001_RELEVANCE_MIN"
    Name:               "Mask001RelevanceMin"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_relevance_min"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              228
    CppName:            "FI_MASK_001_RELEVANCE_MAX"
    Name:               "Mask001RelevanceMax"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_relevance_max"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              229
    CppName:            "FI_MASK_001_RELEVANCE_SUM_NORMED"
    Name:               "Mask001RelevanceSumNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_relevance_sum_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              230
    CppName:            "FI_MASK_001_RELEVANCE_SUM_TO_TERM_COUNT"
    Name:               "Mask001RelevanceSumToTermCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_relevance_sum_to_term_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              231
    CppName:            "FI_MASK_001_RELEVANCE_SUM_TO_WORD_COUNT"
    Name:               "Mask001RelevanceSumToWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_relevance_sum_to_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              232
    CppName:            "FI_MASK_001_RELEVANCE_SUM_TO_MATCHED_WORD_COUNT"
    Name:               "Mask001RelevanceSumToMatchedWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_relevance_sum_to_matched_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              233
    CppName:            "FI_MASK_001_MATCHED_TERM_COUNT_NORMED"
    Name:               "Mask001MatchedTermCountNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_matched_term_count_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              234
    CppName:            "FI_MASK_001_MATCHED_TERM_COUNT_TO_TOTAL_TERM_COUNT"
    Name:               "Mask001MatchedTermCountToTotalTermCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_matched_term_count_to_total_term_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              235
    CppName:            "FI_MASK_001_MATCHED_WORD_COUNT_TO_TOTAL_WORD_COUNT"
    Name:               "Mask001MatchedWordCountToTotalWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_matched_word_count_to_total_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              236
    CppName:            "FI_MASK_001_MATCHED_WORD_COUNT_NORMED"
    Name:               "Mask001MatchedWordCountNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_matched_word_count_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              237
    CppName:            "FI_MASK_001_WORD_WEIGHTS_SUM"
    Name:               "Mask001WordWeightsSum"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_word_weights_sum"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              238
    CppName:            "FI_MASK_001_WORD_WEIGHTS_AVG"
    Name:               "Mask001WordWeightsAvg"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_word_weights_avg"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              239
    CppName:            "FI_MASK_001_WORD_WEIGHTS_MIN"
    Name:               "Mask001WordWeightsMin"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_word_weights_min"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              240
    CppName:            "FI_MASK_001_WORD_WEIGHTS_MAX"
    Name:               "Mask001WordWeightsMax"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_word_weights_max"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              241
    CppName:            "FI_MASK_001_WORD_WEIGHTS_SUM_TO_TOTAL_WORD_COUNT"
    Name:               "Mask001WordWeightsSumToTotalWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_001_word_weights_sum_to_total_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              242
    CppName:            "FI_MASK_110_RELEVANCE_SUM"
    Name:               "Mask110RelevanceSum"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_relevance_sum"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              243
    CppName:            "FI_MASK_110_RELEVANCE_AVG"
    Name:               "Mask110RelevanceAvg"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_relevance_avg"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              244
    CppName:            "FI_MASK_110_RELEVANCE_MIN"
    Name:               "Mask110RelevanceMin"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_relevance_min"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              245
    CppName:            "FI_MASK_110_RELEVANCE_MAX"
    Name:               "Mask110RelevanceMax"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_relevance_max"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              246
    CppName:            "FI_MASK_110_RELEVANCE_SUM_NORMED"
    Name:               "Mask110RelevanceSumNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_relevance_sum_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              247
    CppName:            "FI_MASK_110_RELEVANCE_SUM_TO_TERM_COUNT"
    Name:               "Mask110RelevanceSumToTermCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_relevance_sum_to_term_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              248
    CppName:            "FI_MASK_110_RELEVANCE_SUM_TO_WORD_COUNT"
    Name:               "Mask110RelevanceSumToWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_relevance_sum_to_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              249
    CppName:            "FI_MASK_110_RELEVANCE_SUM_TO_MATCHED_WORD_COUNT"
    Name:               "Mask110RelevanceSumToMatchedWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_relevance_sum_to_matched_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              250
    CppName:            "FI_MASK_110_MATCHED_TERM_COUNT_NORMED"
    Name:               "Mask110MatchedTermCountNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_matched_term_count_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              251
    CppName:            "FI_MASK_110_MATCHED_TERM_COUNT_TO_TOTAL_TERM_COUNT"
    Name:               "Mask110MatchedTermCountToTotalTermCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_matched_term_count_to_total_term_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              252
    CppName:            "FI_MASK_110_MATCHED_WORD_COUNT_TO_TOTAL_WORD_COUNT"
    Name:               "Mask110MatchedWordCountToTotalWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_matched_word_count_to_total_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              253
    CppName:            "FI_MASK_110_MATCHED_WORD_COUNT_NORMED"
    Name:               "Mask110MatchedWordCountNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_matched_word_count_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              254
    CppName:            "FI_MASK_110_WORD_WEIGHTS_SUM"
    Name:               "Mask110WordWeightsSum"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_word_weights_sum"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              255
    CppName:            "FI_MASK_110_WORD_WEIGHTS_AVG"
    Name:               "Mask110WordWeightsAvg"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_word_weights_avg"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              256
    CppName:            "FI_MASK_110_WORD_WEIGHTS_MIN"
    Name:               "Mask110WordWeightsMin"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_word_weights_min"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              257
    CppName:            "FI_MASK_110_WORD_WEIGHTS_MAX"
    Name:               "Mask110WordWeightsMax"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_word_weights_max"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              258
    CppName:            "FI_MASK_110_WORD_WEIGHTS_SUM_TO_TOTAL_WORD_COUNT"
    Name:               "Mask110WordWeightsSumToTotalWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_110_word_weights_sum_to_total_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              259
    CppName:            "FI_MASK_011_RELEVANCE_SUM"
    Name:               "Mask011RelevanceSum"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_relevance_sum"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              260
    CppName:            "FI_MASK_011_RELEVANCE_AVG"
    Name:               "Mask011RelevanceAvg"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_relevance_avg"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              261
    CppName:            "FI_MASK_011_RELEVANCE_MIN"
    Name:               "Mask011RelevanceMin"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_relevance_min"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              262
    CppName:            "FI_MASK_011_RELEVANCE_MAX"
    Name:               "Mask011RelevanceMax"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_relevance_max"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              263
    CppName:            "FI_MASK_011_RELEVANCE_SUM_NORMED"
    Name:               "Mask011RelevanceSumNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_relevance_sum_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              264
    CppName:            "FI_MASK_011_RELEVANCE_SUM_TO_TERM_COUNT"
    Name:               "Mask011RelevanceSumToTermCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_relevance_sum_to_term_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              265
    CppName:            "FI_MASK_011_RELEVANCE_SUM_TO_WORD_COUNT"
    Name:               "Mask011RelevanceSumToWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_relevance_sum_to_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              266
    CppName:            "FI_MASK_011_RELEVANCE_SUM_TO_MATCHED_WORD_COUNT"
    Name:               "Mask011RelevanceSumToMatchedWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_relevance_sum_to_matched_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              267
    CppName:            "FI_MASK_011_MATCHED_TERM_COUNT_NORMED"
    Name:               "Mask011MatchedTermCountNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_matched_term_count_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              268
    CppName:            "FI_MASK_011_MATCHED_TERM_COUNT_TO_TOTAL_TERM_COUNT"
    Name:               "Mask011MatchedTermCountToTotalTermCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_matched_term_count_to_total_term_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              269
    CppName:            "FI_MASK_011_MATCHED_WORD_COUNT_TO_TOTAL_WORD_COUNT"
    Name:               "Mask011MatchedWordCountToTotalWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_matched_word_count_to_total_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              270
    CppName:            "FI_MASK_011_MATCHED_WORD_COUNT_NORMED"
    Name:               "Mask011MatchedWordCountNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_matched_word_count_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              271
    CppName:            "FI_MASK_011_WORD_WEIGHTS_SUM"
    Name:               "Mask011WordWeightsSum"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_word_weights_sum"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              272
    CppName:            "FI_MASK_011_WORD_WEIGHTS_AVG"
    Name:               "Mask011WordWeightsAvg"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_word_weights_avg"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              273
    CppName:            "FI_MASK_011_WORD_WEIGHTS_MIN"
    Name:               "Mask011WordWeightsMin"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_word_weights_min"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              274
    CppName:            "FI_MASK_011_WORD_WEIGHTS_MAX"
    Name:               "Mask011WordWeightsMax"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_word_weights_max"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              275
    CppName:            "FI_MASK_011_WORD_WEIGHTS_SUM_TO_TOTAL_WORD_COUNT"
    Name:               "Mask011WordWeightsSumToTotalWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_011_word_weights_sum_to_total_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              276
    CppName:            "FI_MASK_111_RELEVANCE_SUM"
    Name:               "Mask111RelevanceSum"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_relevance_sum"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              277
    CppName:            "FI_MASK_111_RELEVANCE_AVG"
    Name:               "Mask111RelevanceAvg"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_relevance_avg"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              278
    CppName:            "FI_MASK_111_RELEVANCE_MIN"
    Name:               "Mask111RelevanceMin"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_relevance_min"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              279
    CppName:            "FI_MASK_111_RELEVANCE_MAX"
    Name:               "Mask111RelevanceMax"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_relevance_max"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              280
    CppName:            "FI_MASK_111_RELEVANCE_SUM_NORMED"
    Name:               "Mask111RelevanceSumNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_relevance_sum_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              281
    CppName:            "FI_MASK_111_RELEVANCE_SUM_TO_TERM_COUNT"
    Name:               "Mask111RelevanceSumToTermCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_relevance_sum_to_term_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              282
    CppName:            "FI_MASK_111_RELEVANCE_SUM_TO_WORD_COUNT"
    Name:               "Mask111RelevanceSumToWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_relevance_sum_to_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              283
    CppName:            "FI_MASK_111_RELEVANCE_SUM_TO_MATCHED_WORD_COUNT"
    Name:               "Mask111RelevanceSumToMatchedWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_relevance_sum_to_matched_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              284
    CppName:            "FI_MASK_111_MATCHED_TERM_COUNT_NORMED"
    Name:               "Mask111MatchedTermCountNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_matched_term_count_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              285
    CppName:            "FI_MASK_111_MATCHED_TERM_COUNT_TO_TOTAL_TERM_COUNT"
    Name:               "Mask111MatchedTermCountToTotalTermCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_matched_term_count_to_total_term_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              286
    CppName:            "FI_MASK_111_MATCHED_WORD_COUNT_TO_TOTAL_WORD_COUNT"
    Name:               "Mask111MatchedWordCountToTotalWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_matched_word_count_to_total_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              287
    CppName:            "FI_MASK_111_MATCHED_WORD_COUNT_NORMED"
    Name:               "Mask111MatchedWordCountNormed"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_matched_word_count_normed"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              288
    CppName:            "FI_MASK_111_WORD_WEIGHTS_SUM"
    Name:               "Mask111WordWeightsSum"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_word_weights_sum"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              289
    CppName:            "FI_MASK_111_WORD_WEIGHTS_AVG"
    Name:               "Mask111WordWeightsAvg"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_word_weights_avg"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              290
    CppName:            "FI_MASK_111_WORD_WEIGHTS_MIN"
    Name:               "Mask111WordWeightsMin"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_word_weights_min"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              291
    CppName:            "FI_MASK_111_WORD_WEIGHTS_MAX"
    Name:               "Mask111WordWeightsMax"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_word_weights_max"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              292
    CppName:            "FI_MASK_111_WORD_WEIGHTS_SUM_TO_TOTAL_WORD_COUNT"
    Name:               "Mask111WordWeightsSumToTotalWordCount"
    Tags:               [TG_DOC, TG_DYNAMIC]
    Description:        "Newest runtime factor mask_111_word_weights_sum_to_total_word_count"
    Authors:            ["nikita-uvarov"]
    Responsibles:       ["nikita-uvarov"]
}

Factor {
    Index:              293
    CppName:            "FI_VIDEO_POPULARITY"
    Name:               "VideoPopularity"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Video popularity factor from erf"
    Authors:            ["vkaneva"]
    Responsibles:       ["vkaneva"]
}

Factor {
    Index:              294
    CppName:            "FI_PANTHER_MATCH_ALL_GRAM_ALL_MATCH_DONT_USE_RELEVANCE_ANNOTATION_MAX_VALUE_WEIGHTED"
    Name:               "PantherMatchAllGramAllMatchDontUseRelevanceAnnotationMaxValuesWeighted"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED, TG_ANNOTATION_FILTER]
    Description:        "Text Machine AnnotationMaxValueWeighted feature on all panther match without panther relevance"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              295
    CppName:            "FI_PANTHER_MATCH_ALL_GRAM_ALL_MATCH_DONT_USE_RELEVANCE_COSINE_MAX_MATCH_PREDICTION"
    Name:               "PantherMatchAllGramAllMatchDontUseRelevanceCosineMatchMaxPrediction"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED, TG_ANNOTATION_FILTER]
    Description:        "Text Machine CosineMatchMaxPrediction feature on all panther match without panther relevance"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              296
    CppName:            "FI_PANTHER_MATCH_ALL_GRAM_ALL_MATCH_DONT_USE_RELEVANCE_BM15"
    Name:               "PantherMatchAllGramAllMatchDontUseRelevanceBM15"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED, TG_ANNOTATION_FILTER]
    Description:        "Text Machine Bm15_K0.1 feature on all panther match without panther relevance"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              297
    CppName:            "FI_PANTHER_MATCH_ALL_GRAM_ALL_MATCH_DONT_USE_RELEVANCE_WORD_COVERAGE_ANY"
    Name:               "PantherMatchAllGramAllMatchDontUseRelevanceWordCoverageAny"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED, TG_ANNOTATION_FILTER]
    Description:        "Text Machine WordCoverageAny feature on all panther match without panther relevance"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              298
    CppName:            "FI_PANTHER_MATCH_ALL_GRAM_TEXT_MATCH_USE_RELEVANCE_ANNOTATION_MAX_VALUE_WEIGHTED"
    Name:               "PantherMatchAllGramTextMatchUseRelevanceAnnotationMaxValuesWeighted"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine AnnotationMaxValueWeighted feature on panther match relevance"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              299
    CppName:            "FI_PANTHER_MATCH_ALL_GRAM_TEXT_MATCH_USE_RELEVANCE_COSINE_MAX_MATCH_PREDICTION"
    Name:               "PantherMatchAllGramTextMatchUseRelevanceCosineMatchMaxPrediction"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine CosineMatchMaxPrediction feature on panther match relevance"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              300
    CppName:            "FI_PANTHER_MATCH_ALL_GRAM_TEXT_MATCH_USE_RELEVANCE_BM15"
    Name:               "PantherMatchAllGramTextMatchUseRelevanceBM15"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine Bm15_K0.1 feature on panther match relevance"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              301
    CppName:            "FI_PANTHER_MATCH_ALL_GRAM_TEXT_MATCH_USE_RELEVANCE_WORD_COVERAGE_ANY"
    Name:               "PantherMatchAllGramTextMatchUseRelevanceWordCoverageAny"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine WordCoverageAny feature on panther match relevance"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              302
    CppName:            "FI_PANTHER_MATCH_ALL_GRAM_TEXT_MATCH_DONT_USE_RELEVANCE_ANNOTATION_MAX_VALUE_WEIGHTED"
    Name:               "PantherMatchAllGramTextMatchDontUseRelevanceAnnotationMaxValuesWeighted"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED, TG_ANNOTATION_FILTER]
    Description:        "Text Machine AnnotationMaxValueWeighted feature on panther match without relevance"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              303
    CppName:            "FI_PANTHER_MATCH_ALL_GRAM_TEXT_MATCH_DONT_USE_RELEVANCE_COSINE_MAX_MATCH_PREDICTION"
    Name:               "PantherMatchAllGramTextMatchDontUseRelevanceCosineMatchMaxPrediction"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED, TG_ANNOTATION_FILTER]
    Description:        "Text Machine CosineMatchMaxPrediction feature on panther match without relevance"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              304
    CppName:            "FI_PANTHER_MATCH_ALL_GRAM_TEXT_MATCH_DONT_USE_RELEVANCE_BM15"
    Name:               "PantherMatchAllGramTextMatchDontUseRelevanceBM15"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED, TG_ANNOTATION_FILTER]
    Description:        "Text Machine Bm15_K0.1 feature on panther match without relevance"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              305
    CppName:            "FI_PANTHER_MATCH_ALL_GRAM_TEXT_MATCH_DONT_USE_RELEVANCE_WORD_COVERAGE_ANY"
    Name:               "PantherMatchAllGramTextMatchDontUseRelevanceWordCoverageAny"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED, TG_ANNOTATION_FILTER]
    Description:        "Text Machine WordCoverageAny feature on panther match without relevance"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              306
    CppName:            "FI_PANTHER_MATCH_BI_N_GRAM_ALL_MATCH_USE_RELEVANCE_ANNOTATION_MAX_VALUE_WEIGHTED"
    Name:               "PantherMatchBiNGramAllMatchUseRelevanceAnnotationMaxValuesWeighted"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine AnnotationMaxValueWeighted feature on panther match"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              307
    CppName:            "FI_PANTHER_MATCH_BI_N_GRAM_ALL_MATCH_USE_RELEVANCE_COSINE_MAX_MATCH_PREDICTION"
    Name:               "PantherMatchBiNGramAllMatchUseRelevanceCosineMatchMaxPrediction"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine CosineMatchMaxPrediction feature on panther match"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              308
    CppName:            "FI_PANTHER_MATCH_BI_N_GRAM_ALL_MATCH_USE_RELEVANCE_BM15"
    Name:               "PantherMatchBiNGramAllMatchUseRelevanceBM15"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine Bm15_K0.1 feature on panther match"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              309
    CppName:            "FI_PANTHER_MATCH_BI_N_GRAM_ALL_MATCH_USE_RELEVANCE_WORD_COVERAGE_ANY"
    Name:               "PantherMatchBiNGramAllMatchUseRelevanceWordCoverageAny"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine WordCoverageAny feature on panther match"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              310
    CppName:            "FI_PANTHER_MATCH_BI_N_GRAM_TEXT_MATCH_USE_RELEVANCE_ANNOTATION_MAX_VALUE_WEIGHTED"
    Name:               "PantherMatchBiNGramTextMatchUseRelevanceAnnotationMaxValuesWeighted"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine AnnotationMaxValueWeighted feature on panther match"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              311
    CppName:            "FI_PANTHER_MATCH_BI_N_GRAM_TEXT_MATCH_USE_RELEVANCE_COSINE_MAX_MATCH_PREDICTION"
    Name:               "PantherMatchBiNGramTextMatchUseRelevanceCosineMatchMaxPrediction"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine CosineMatchMaxPrediction feature on panther match"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              312
    CppName:            "FI_PANTHER_MATCH_BI_N_GRAM_TEXT_MATCH_USE_RELEVANCE_BM15"
    Name:               "PantherMatchBiNGramTextMatchUseRelevanceBM15"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine Bm15_K0.1 feature on panther match"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              313
    CppName:            "FI_PANTHER_MATCH_BI_N_GRAM_TEXT_MATCH_USE_RELEVANCE_WORD_COVERAGE_ANY"
    Name:               "PantherMatchBiNGramTextMatchUseRelevanceWordCoverageAny"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine WordCoverageAny feature on panther match"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              314
    CppName:            "FI_PANTHER_MATCH_UNI_GRAM_ALL_MATCH_USE_RELEVANCE_ANNOTATION_MAX_VALUE_WEIGHTED"
    Name:               "PantherMatchUniGramAllMatchUseRelevanceAnnotationMaxValuesWeighted"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine AnnotationMaxValueWeighted feature on panther match"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              315
    CppName:            "FI_PANTHER_MATCH_UNI_GRAM_ALL_MATCH_USE_RELEVANCE_COSINE_MAX_MATCH_PREDICTION"
    Name:               "PantherMatchUniGramAllMatchUseRelevanceCosineMatchMaxPrediction"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine CosineMatchMaxPrediction feature on panther match"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              316
    CppName:            "FI_PANTHER_MATCH_UNI_GRAM_ALL_MATCH_USE_RELEVANCE_BM15"
    Name:               "PantherMatchUniGramAllMatchUseRelevanceBM15"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine Bm15_K0.1 feature on panther match"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

Factor {
    Index:              317
    CppName:            "FI_PANTHER_MATCH_UNI_GRAM_ALL_MATCH_USE_RELEVANCE_WORD_COVERAGE_ANY"
    Name:               "PantherMatchUniGramAllMatchUseRelevanceWordCoverageAny"
    Ticket:             "LOWSEARCH-76"
    Tags:               [TG_DOC, TG_DYNAMIC, TG_UNIMPLEMENTED]
    Description:        "Text Machine WordCoverageAny feature on panther match"
    Authors:            ["jullak"]
    Responsibles:       ["jullak", "ilnurkh"]
}

} ## Slice "web_new_l1"
