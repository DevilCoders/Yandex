package NBlenderOnlineLearning.NProto;

import "kernel/blender/online_learning/protos/train_params.proto";
import "kernel/blender/online_learning/protos/util.proto";
import "mapreduce/yt/interface/protos/extension.proto";


option go_package = "a.yandex-team.ru/kernel/blender/online_learning/protos";
message TTargetInfo {
    option (NYT.default_field_flags) = SERIALIZATION_YT;

    optional string IntentName = 1;
    optional float ClickBoost = 2 [default = 1.0];
    optional string SurplusVersion = 3;

    optional bool UseV3Surplus = 16 [default = false]; // deprecated
}

message TPrediction {
    option (NYT.default_field_flags) = SERIALIZATION_YT;
    option (NYT.default_field_flags) = OPTIONAL_LIST;

    optional int32 ClassId = 1;
    optional float Prob = 2;
    map<int32, float> ClassProbs = 3;
    optional string ModelName = 4;

    optional bool UseLocalRanom = 16;  // temporary
    optional bool UseOwnLocalRandom = 17;
}

message TModelConfig {
    option (NYT.default_field_flags) = SERIALIZATION_YT;
    option (NYT.default_field_flags) = OPTIONAL_LIST;

    repeated string FeatureSources = 1; // deprecated, use TTrainParams::TModel::FeatureSources
    optional TTargetInfo TargetInfo = 2;
    optional TTrainParams TrainParams = 3;

    optional float SampleRate = 16; // use for prevent overflow
}

// todo: pass here local random data or flag that we should use it weights and parse ApplyBlender.#fmls
message TRequestData {
    option (NYT.default_field_flags) = SERIALIZATION_YT;
    option (NYT.default_field_flags) = OPTIONAL_LIST;
    option (NYT.default_field_flags) = MAP_AS_LIST_OF_STRUCTS;

    map<string, TModelConfig> ModelConfigs = 1;        // model name (used as key) to train config
    map<string, TFloatVector> Features = 2;            // source to feature vector
    map<string, TPrediction> IntentPredictions = 16;   // ??? should we dump all model prediction
}
