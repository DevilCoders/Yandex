package NRichTreeProtocol;

import "library/cpp/langmask/proto/langmask.proto";

message TRange {
    optional sint32 Begin = 1;  // sint32 for backward compatibility, it should be uint32
    optional sint32 End = 2;
}

message TProtobufMarkup {
	optional string DescriptorName = 1;
	optional string SerializedData = 2;
}

message TOntoMarkup {
    optional uint32 Type = 1;
    optional float Weight = 2;
    optional float One = 3;
    optional uint32 Intent = 4;
    optional float IntWght = 5;
}

message TFioMarkup {

    message TField {
        optional TRange Pos = 1;
        repeated string Parts = 2;
    }

    optional uint32 Type = 1;
    optional NProto.TLangMask Language = 6;
    optional TField SurnameField = 7;
    optional TField FirstNameField = 8;
    repeated TField SecondNameFields = 9;
    optional bool IsSurnameReliable = 10;
}

message TGeoAddrMarkup {
    message TField {
        optional string Name = 1;    // normalized
        optional TRange Pos = 2;     // in same coords as TMarkupItem pos.
        repeated uint32 Id = 3;      // from geobase
        optional TRange DescrPos = 4;  // position of the descriptor if present, in same coords as TMarkupItem pos
    }

    message TAddress {
        optional TField Street = 1;
        optional TField Street2 = 2;
        optional TField City = 3;
        optional TField City2 = 4;
        optional TField Metro = 5;
        optional TField Quarter = 6;
        optional TField Quarter2 = 15;
        optional TField Country = 7;
        optional TField District1 = 8 [deprecated=true]; // always empty, use Province instead
        optional TField Village = 10;
        optional TField Village2 = 23;
        optional TField Hydros = 11;
        optional TField RWStations = 12;
        optional TField MetroLines = 13;
        optional TField Vegetation = 14;
        optional TField UrbanDistrict = 16;
        optional TField RWLines = 17;
        optional TField Airport = 18;
        optional TField Province = 19;
        optional TField District = 20;
        optional TField Direction = 21;
        optional TField District2 = 9;
        optional TField Crossroad = 22;

        repeated uint32 CommonCityIDs = 30;
        repeated uint32 InheritedIDs = 31;   // geoids that are not owned by an object
        optional uint32 BestGeo = 32;  // best geoid as described in FACTEX-3506
        optional uint32 BestInheritedGeo = 33;
        optional uint32 NumOfFields = 34;

        optional TField HouseNumber = 60;
        optional TField PostIndex = 61;
        optional TField Kilometer = 62;
        optional bool HasLocative = 63;
    }

    repeated TAddress Address = 1;     // several homonymic variants possible
    optional float Weight = 2;

    // repeated uint32 CommonCityIDsDeprecated = 3;
    // repeated uint32 InheritedIDsDeprecated = 4;
}

message TSyntaxMarkup {
    optional uint32 Level = 1;
    optional string SyntaxType = 2;
}

message TDateMarkup {

    message TField {
        optional sint32 Value = 1;
        optional TRange Pos = 2;
    }

    message TFloatField {
        optional float Value = 1;
        optional TRange Pos = 2;
    }

    message TDuration {
        optional string Type = 1; // can be BACK (N назад), FORWARD (через N), PERIODICAL (каждые N)
        optional TFloatField Day = 2;
        optional TFloatField Month = 3;
        optional TFloatField Year = 4;
        optional TFloatField Hour = 5;
        optional TField Min = 6;
        optional TField Week = 7;
        optional TField Times = 8; // combines with PERIODICAL type ([2 раза в год])
    }

    optional TField Day = 1; // serial number of day (and other fields further)
    optional bool RelativeDay = 2; // whether Day counts from current date (otherwise from beginning of month)

    optional TField Month = 3;
    optional bool RelativeMonth = 4;

    optional TField Year = 5;
    optional bool RelativeYear = 6;

    optional TField Week = 15;
    optional bool RelativeWeek = 16;

    optional TField Century = 11;
    optional bool BeforeCommonEra = 9;

    optional TField DayOfWeek = 18; // serial number of week day (sunday = 0)

    optional TField Hour = 7;
    optional TField Min = 8;

    optional string Prep = 10;
    optional string TimePrep = 12;

    optional bool IntervalBegin = 13; // whether this date fact is beginning of period
    optional bool IntervalEnd = 14; // whether this date fact is end of period

    optional TDuration Duration = 17; // compound field for durations with length [через 2 дня], [3 часа назад], [каждые полгода]
}

message TQSegmentsMarkup {
}

message TTransitMarkup {

    message TField {
        optional string Value = 1;    // normalized
        optional TRange Pos = 2;
    }
    optional TField Route = 1;         // route number or name
    optional TField TransitType = 2; // {"bus"/"tramway"/"trolleybys"/etc.}
}

message TUrlMarkup {
    optional string Original = 1;   // exactly as written in request
    optional string Restored = 2;   // in case of IsValid url: corrected, normalized, fully encoded (IDNA + percent encoding)
                                    // otherwise just original text with dots restored

    optional bool IsValid = 3;      // Original text is valid url - as is, without any correction
}

