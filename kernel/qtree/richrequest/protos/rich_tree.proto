package NRichTreeProtocol;

import "library/cpp/langmask/proto/langmask.proto";
import "library/cpp/token/serialization/protos/char_span.proto";
import "kernel/qtree/richrequest/markup/protos/markup.proto";

message TRichRequestNode {
    optional TRequestNodeBase Base = 1;

    repeated TRichRequestNode Children = 3;
    repeated TProximity Proxes = 4;
    repeated TRichRequestNode MiscOps = 5;

    optional uint32 SubExpr = 6;
    optional uint32 HiliteType = 7;
    optional TWordNode WordInfo = 8;

    optional uint32 ExtensionType = 9; // obsolete, moved to synonym
    optional float ExtensionRelev = 10; // obsolete, moved to synonym
    repeated TSynonym Synonyms = 11; // obsolete
    optional uint32 FormType = 12;
    optional uint32 LeftJoin = 13;
    optional uint32 RightJoin = 14;
//    repeated TMarkupItem Markup = 15; // old markup
    optional uint32 Geo = 16;
    repeated TMarkupItem Markup = 17;
    optional uint32 SnippetType = 18;
}

message TRequestNodeBase {
    optional TOpInfo OpInfo = 1;
    optional string Name = 2;         // obsolete, not read
    optional string TextName = 19;
    optional string Text = 20;

    optional string TextAfter = 3;
    optional string TextBefore = 4;

    optional string AttrValue = 5;     // obsolete, not read
    optional string AttrValueHi = 6;

    optional string FactorName = 22;
    optional float FactorValue = 23;

    optional NProto.TCharSpan TokSpan = 7;    // obsolete
    repeated NProto.TCharSpan SubTokens = 21;

    optional uint32 PhraseType = 8;
    optional uint32 LastPhraseType = 9;
    optional bool Quoted = 10;

    optional sint32 Necessity = 11;
    optional uint32 Softness = 12;
    optional sint32 ReverseFreq = 13;

    optional string TextPhraseType = 14;
    optional string TextLastPhraseType = 15;
    optional string TextNecessity = 16;

    optional uint64 KeyPrefix = 17;
    optional uint32 WildCard = 18;
    repeated uint64 KeyPrefixes = 24;
    optional uint32 NGrammBase = 25 [default = 0];
    optional uint32 NGrammPercent = 26 [default = 0];
}

message TOpInfo {
    optional sint32 Lo = 1;
    optional sint32 Hi = 2;
    optional uint32 Op = 3;
    optional uint32 Level = 4;
    optional uint32 CmpOper = 5;
    optional bool Arrange = 6;
    optional string TextOp = 7;
    optional string TextCmpOper = 8;
}

message TProximity {
    optional sint32 Begin = 1;
    optional sint32 End = 2;
    optional sint32 Center = 3;
    optional uint32 Level = 4;
    optional uint32 DistanceType = 5;
    optional bool ConvertedBounds = 6;
    optional string TextDistanceType = 7;
}

message TWordNode {
    optional uint32 NlpType = 1;
    optional uint32 FormType = 2;

    optional string Form = 3;
    optional string Attr = 4;

    optional sint64 RevFr = 5;
    optional sint64 FormRevFr = 6;

    // optional uint64 LangMask = 9;    // obsolete, use Languages
    optional uint64 CaseFlags = 10;
    optional bool StopWord = 11;
    optional uint32 Stickiness = 12;
    optional uint32 TokenCount = 13;

    repeated TLemma Lemmas = 14;

    optional NProto.TLangMask Languages = 15;

    optional uint32 LeftJoin = 16; // obsolete
    optional uint32 RightJoin = 17; // obsolete
}

message TLemma {
    optional string Lemma = 1;
    // optional uint64 Language = 2;  // obsolete
    optional bool Best = 3;
    optional bool Synonym = 4;
    optional bool Bastard = 5;
    optional bool StopWord = 6;
    optional uint32 Stickiness = 7;
    optional sint64 ReverseFreq = 8;

    optional string Grammar = 9; // human readable
    optional bytes StemGramm = 10; // binary
    repeated bytes FlexGramm = 11; // binary

    repeated TForm Forms = 12;

    optional uint32 Quality = 13;

    optional string TextLanguage = 14; // readable
    optional uint32 BinLanguage = 15;  // binary
}

message TForm {
    optional string Form = 1; // human readable

    optional uint32 BackShift = 2; // binary
    optional string Suffix = 3; // binary

    optional sint32 Weight = 4;
    optional uint32 Mode = 5;
}

message TSynonym {
    optional uint32 Type = 1;
    optional float Relev = 2;
    optional TRichRequestNode SubTree = 3;
    optional TRange Range = 4;  // obsolete
    optional sint32 BestFormClass = 5;
}

message TMarkupDataBase {
    optional uint32 Type = 1;
    optional TSynonym Synonym = 2;
    optional TOntoMarkup Onto = 3;
    optional TFioMarkup FioMarkup = 4;
    optional uint32 SocialMarkup = 5;
    // optional TProtobufMarkup ProtobufMarkup = 6; // obsolete
    // optional TCityMarkup CityMarkup = 7;  // obsolete, use TGeoAddrMarkup
    // optional TProtobufMarkup GztMarkup = 8;      // obsolete
    optional TGeoAddrMarkup GeoAddrMarkup = 9;
    optional TSyntaxMarkup SyntaxMarkup = 10;
    // optional TMangoMarkup MangoMarkup = 11;  // obsolete
    optional TDateMarkup DateMarkup = 12;
    // optional TVinsMarkup VinsMarkup = 13;  // deleted
    optional TQSegmentsMarkup QSegmentsMarkup = 14;
    // optional TTransportMarkup TransportMarkup = 15;  // deleted
    optional TTransitMarkup TransitMarkup = 16;
    optional TUrlMarkup UrlMarkup = 17;
}

message TMarkupItem {
    optional TRange Range = 1;
    optional TMarkupDataBase Data = 2;
}

