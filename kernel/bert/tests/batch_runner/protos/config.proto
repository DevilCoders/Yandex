import "library/cpp/getoptpb/proto/confoption.proto";

package NBatchRunner;

message TConfig {

    option (NGetoptPb.Title) = "BERT batch runner";

    required string Input = 1
    [
        (NGetoptPb.Conf).Descr = "Input file path",
        (NGetoptPb.Conf).Type = "<path>",
        (NGetoptPb.Conf).Short  = 'i'
    ];

    required string Output = 2
    [
        (NGetoptPb.Conf).Descr = "Output file path",
        (NGetoptPb.Conf).Type = "<path>",
        (NGetoptPb.Conf).Short  = 'o'
    ];

    optional string Vocabulary = 3
    [
        (NGetoptPb.Conf).Descr = "Vocabulary file path",
        (NGetoptPb.Conf).Type = "<path>",
        (NGetoptPb.Conf).Short  = 'v',
        default = "vocab.txt"
    ];

    optional string StartTrie = 4
    [
        (NGetoptPb.Conf).Descr = "Start trie file path",
        (NGetoptPb.Conf).Type = "<path>",
        (NGetoptPb.Conf).Short  = 's',
        default = "start.trie"
    ];

    optional string ContinuationTrie = 5
    [
        (NGetoptPb.Conf).Descr = "Continuation trie file path",
        (NGetoptPb.Conf).Type = "<path>",
        (NGetoptPb.Conf).Short  = 'n',
        default = "cont.trie"
    ];

    optional string Model = 6
    [
        (NGetoptPb.Conf).Descr = "Model file path",
        (NGetoptPb.Conf).Type = "<path>",
        (NGetoptPb.Conf).Short  = 'm',
        default = "bert.npz"
    ];

    optional uint64 MaxBatchSize = 7
    [
        (NGetoptPb.Conf).Descr = "Maximum batch size",
        (NGetoptPb.Conf).Type = "<size>",
        default = 32
    ];

    optional uint64 MaxInputLength = 8
    [
        (NGetoptPb.Conf).Descr = "Maximum length of a single input",
        (NGetoptPb.Conf).Type = "<size>",
        default = 128
    ];
}
