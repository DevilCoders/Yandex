Group: [
    "Query"
]

Slice {
Name: "begemot_query_factors"

Factor {
    Index:              0
    CppName:            "FI_REMOVED_0"
    Name:               "Removed_0"
    Tags:               [TG_REMOVED]
}

Factor {
    Index:              1
    CppName:            "FI_DMOZ_QUERY_THEMES"
    Name:               "DmozQueryThemes"
    Ticket:             "FOREIGN-221"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Тема запроса, определяемая ((http://wiki.yandex-team.ru/JandeksPoisk/ZarubezhnyjjInternet/DMOZqueryClassifier1 правилом колдунщика DMOZTheme)), учитываются только несколько самых популярных тем."
    Authors:            "lamo"
    Responsibles:       "lamo"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDmozQueryThemes()" }
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/DmozQueryThemes"
    Group:              "Query"
}

Factor {
    Index:              2
    CppName:            "FI_DMOZ_QUERY_BEST_THEME"
    Name:               "DmozQueryBestTheme"
    Ticket:             "FOREIGN-221"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Наиболее вероятная тема запроса, определяемая ((http://wiki.yandex-team.ru/JandeksPoisk/ZarubezhnyjjInternet/DMOZqueryClassifier1 правилом колдунщика DMOZTheme)), учитываются только самые популярные темы (но здесь их больше чем в факторе DmozQueryThemes). Фактор содержит вероятность соотвествия запроса тематике, но для каждой темы берётся свой интервал на отрезке [0..1]"
    Authors:            "lamo"
    Responsibles:       "lamo"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDmozQueryBestTheme()" }
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/DmozQueryBestTheme"
    Group:              "Query"
}

Factor {
    Index:              3
    CppName:            "FI_POPULAR_Q"
    Name:               "PopularQ"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_REARR_USE, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Популярность запроса"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetPopularQ()" }
    Group:              "Query"
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/PopularQ"
}

Factor {
    Index:              4
    CppName:            "FI_Q_DIVERSITY"
    Name:               "QDiversity"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Степень централизации точек, из которой задается запрос"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQDiversity()" }
    Group:              "Query"
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/QDiversity"
}

Factor {
    Index:              5
    CppName:            "FI_Q_DIVERSITY2"
    Name:               "Diversity2"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2, TG_USERFEAT_90D, TG_NN_OVER_FEATURES_USE]
    Description:        "Географическая распределенность запроса"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDiversity2()" }
    Group:              "Query"
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/Diversity2"
}

Factor {
    Index:              6
    CppName:            "FI_HOUR_DIVERSITY"
    Name:               "HourDiversity"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2, TG_USERFEAT_90D, TG_NN_OVER_FEATURES_USE]
    Description:        "Степень выраженности задания запросов в разное время суток"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetHourDiversity()" }
    Group:              "Query"
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/HourDiversity"
}

Factor {
    Index:              7
    CppName:            "FI_AVG_SESSION_LEN"
    Name:               "AvgSessionLen"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_L2, TG_USERFEAT_90D, TG_NN_OVER_FEATURES_USE]
    Description:        "Средняя длина логической сессии, в которой был запрос"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetAvgSessionLen()" }
    Group:              "Query"
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/AvgSessionLen"
}

Factor {
    Index:              8
    CppName:            "FI_FOUND"
    Name:               "Found"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_L2, TG_USERFEAT_90D, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее количество найденного по запросу"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetFound()" }
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/Found"
    Group:              "Query"
    Countries:          CNT_ALL
}

Factor {
    Index:              9
    CppName:            "FI_NIGHT_QUERY"
    Name:               "NightQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_BINARY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Запрос задают преимущественно ночью"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetNightQuery()" }
    Group:              "Query"
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/HourDiversity"
}

Factor {
    Index:              10
    CppName:            "FI_MORNING_QUERY"
    Name:               "MorningQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_BINARY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Запрос задают преимущественно утром"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetMorningQuery()" }
    Group:              "Query"
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/HourDiversity"
}

Factor {
    Index:              11
    CppName:            "FI_DAY_QUERY"
    Name:               "DayQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_BINARY, TG_REARR_USE, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Запрос задают преимущественно днем"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDayQuery()" }
    Group:              "Query"
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/HourDiversity"
}

Factor {
    Index:              12
    CppName:            "FI_EVENING_QUERY"
    Name:               "EveningQuery"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_BINARY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Запрос задают преимущественно вечером"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetEveningQuery()" }
    Group:              "Query"
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/HourDiversity"
}

Factor {
    Index:              13
    CppName:            "FI_COUNTRY_POPULAR_Q"
    Name:               "CountryPopularQ"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Популярность запроса внутри страны"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCountryPopularQ()" }
    Group:              "Query"
    Countries:          CNT_ALL
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/PopularQ"
}

Factor {
    Index:              14
    CppName:            "FI_COUNTRY_Q_DIVERSITY"
    Name:               "CountryQDiversity"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Степень централизации точек, из которой задается запрос (внутри страны)"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCountryQDiversity()" }
    Group:              "Query"
    Countries:          CNT_ALL
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/QDiversity"
}

Factor {
    Index:              15
    CppName:            "FI_COUNTRY_Q_DIVERSITY2"
    Name:               "CountryQDiversity2"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Географическая распределенность запроса внутри страны"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCountryQDiversity2()" }
    Group:              "Query"
    Countries:          CNT_ALL
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/Diversity2"
}

Factor {
    Index:              16
    CppName:            "FI_COUNTRY_HOUR"
    Name:               "CountryHour"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Час, в который больше всего задают этот запрос"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCountryHour()" }
    Group:              "Query"
    Countries:          CNT_ALL
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/HourDiversity"
}

Factor {
    Index:              17
    CppName:            "FI_COUNTRY_HOUR_DIVERSITY"
    Name:               "CountryHourDiversity"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Степень выраженности задания запросов в разное время суток (внутри страны)"
    Authors:            "denplusplus"
    Responsibles:       ["diver", "akhropov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCountryHourDiversity()" }
    Group:              "Query"
    Countries:          CNT_ALL
    Wiki:               "http://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/HourDiversity"
}

Factor {
    Index:              18
    CppName:            "FI_MUSIC_Q"
    Name:               "MusicQ"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "музыкальность запроса. Результаты работы колдунщика Антона Коныгина."
    Authors:            "alejes"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetMusicQ()" }
    Group:              "Query"
    UseArtifact:        {Name: "MusicWizardClassificator"}
}

Factor {
    Index:              19
    CppName:            "FI_QUERY_NON_COMMERCIALITY"
    Name:               "QueryNonCommerciality"
    Ticket:             "SEARCHSPAM-7504"
    Tags:               [TG_COMMERCIAL, TG_DYNAMIC, TG_QUERY_ONLY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2, TG_DEPRECATED]
    Description:        "Коммерческость запроса по словарю фраз от Директа: 0 - максимальная коммерческость, 1 - минимальная."
    Authors:            "somov"
    Responsibles:       ["sisoid", "anelyubin"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQueryNonCommerciality()" }
    Group:              "Query"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/QueryNonCommerciality"
}

Factor {
    Index:              20
    CppName:            "FI_QUERY_COMMERCIALITY_MX"
    Name:               "QueryCommercialityMx"
    Ticket:             "SEARCHSPAM-2317"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_COMMERCIAL, TG_TRANS, TG_REARR_USE, TG_L2, TG_NN_OVER_FEATURES_USE, TG_DEPRECATED]
    Description:        "Мера 'коммерческости' запроса. Является комплексно рассчитываемым фактором MatrixNet формулой по словарю  закупок в директе  + по логам пользовательских запросов + доп. интентные словари.  Запросы с интентом купить  фактор стремится в ->1    товарные запросы  ->0.6    с интентом не купить, обзоры и тп  -> 0 ((http://wiki.yandex-team.ru/AntonNeljubin/FaktorydljaNovogoKlassifikatorazaprosov факторы классификатора))((http://wiki.yandex-team.ru/JandeksPoisk/Antispam/AntiSEO/KlassifikatorKommercheskixZaprosov еще про него))"
    Authors:            ["anelyubin", "kvn"]
    Responsibles:       ["anelyubin", "kvn"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQueryCommercialityMx()" }
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/QueryCommercialityMx"
    Group:              "Query"
    Countries:          [CNT_RU, CNT_TR]
    DependsOn:          [{Feature: ["TovarCategoryQuery", "TovarCategoryVendor"], Slice: "web_production"}]
    DependsOn:          [{Feature: ["QueryNonCommerciality", "IsNavQuery", "QClassDownload", "QClassBrandnames", "QClassDisease", "QClassKak", "QClassMoscow", "QClassOAO", "QClassPorno", "QClassTravel", "CountryPopularQ"], Slice: "begemot_query_factors"}]
}

Factor {
    Index:              21
    CppName:            "FI_QUERY_IS_NAV_MX"
    Name:               "IsNavMxQuery"
    Ticket:             "SEARCHSPAM-3647"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/IsNavMxQuery"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NAV, TG_TRANS, TG_UNDOCUMENTED, TG_L2, TG_REARR_USE, TG_NN_OVER_FEATURES_USE, TG_DEPRECATED]
    Countries:          CNT_RU
    Description:        "Ранг 'навигационности' запроса"
    Authors:            ["anelyubin", "kvn"]
    Responsibles:       ["anelyubin", "kvn"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsNavMxQuery()" }
    DependsOn:          [{Feature: ["QueryNonCommerciality", "IsNavQuery", "QClassDownload", "QClassBrandnames", "QClassDisease", "QClassKak", "QClassMoscow", "QClassOAO", "QClassPorno", "QClassTravel", "CountryPopularQ"]}]
    DependsOn:          [{Feature: ["TovarCategoryQuery", "TovarCategoryVendor"]; Slice: "web_production"}]
}

Factor {
    Index:              22
    CppName:            "FI_NON_COMMERCIAL_QUERY"
    Name:               "NonCommercialQuery"
    Ticket:             "SEARCHSPAM-7504"
    Tags:               [TG_COMMERCIAL, TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2, TG_DEPRECATED]
    Description:        "Бинарная некоммерческость запроса: QueryNonCommerciality > 0.965."
    Authors:            "alejes"
    Responsibles:       ["sisoid", "anelyubin"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetNonCommercialQuery()" }
}

Factor {
    Index:              23
    CppName:            "FI_PORNO_QUERY"
    Name:               "PornoQuery"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Есть ли в запросе слова из yweb/pornofilter/porno.query."
    Wiki:               "http://wiki.yandex-team.ru//h.yandex.net/?https%3A%2F%2Ftree.yandex.ru%2Fcgi-bin%2Fcvsweb.cgi%2Farcadia%2Fyweb%2Fpornofilter%2Fporno.query"
    Authors:            "alejes"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetPornoQuery()" }
    UseArtifact:        {Name: "PornoQueryList"}
}

Factor {
    Index:              24
    CppName:            "FI_XPORNO_QUERY"
    Name:               "XPornoQuery"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Классификатор порно-запросов, другой словарь чем PornoQuery"
    Authors:            "alejes"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetXPornoQuery()" }
    UseArtifact:        {Name: "PornoQueryList"}
}

Factor {
    Index:              25
    CppName:            "FI_Q_BLOG"
    Name:               "QBlog"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_DEPRECATED]
    Description:        "Содержит ли запрос блоговую лексику"
    Authors:            "alejes"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQBlog()" }
}

Factor {
    Index:              26
    CppName:            "FI_IS_NAV_QUERY"
    Name:               "IsNavQuery"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_USER_EXT_DATA, TG_NAV, TG_BINARY, TG_REARR_USE, TG_OFTEN_ZERO, TG_L2, TG_USERFEAT_90D, TG_NN_OVER_FEATURES_USE]
    Description:        "Является ли запрос навигационным, по кликабельности ответов"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/IsNav"
    Authors:            ["akhropov", "denplusplus", "prs"]
    Responsibles:       ["akhropov", "prs", "tarum", "niknik"]
    UseArtifact:        {Name: "IsNavTrie"}
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsNavQuery()" }
}

Factor {
    Index:              27
    CppName:            "FI_IS_FOREIGN_QUERY"
    Name:               "IsForeignQuery"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Запрос не на русском языке"
    Authors:            "denplusplus"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsForeignQuery()" }
    UseArtifact:        {Name: "QueryLang"}
}

Factor {
    Index:              28
    CppName:            "FI_IS_VIDEO_QUERY"
    Name:               "VideoQuery"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Запрос про видео"
    Authors:            "alejes"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetVideoQuery()" }
}

Factor {
    Index:              29
    CppName:            "FI_REGIONAL_U_QUERY"
    Name:               "GeoRegionalityU"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_THEME_CLASSIF, TG_DEPRECATED, TG_L2]
    Description:        "Запросные факторы - результат работы ((http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/GeoRegionality классификатора геолокализованности запроса))U- геобесполезные - региональная выдача по запросу бессмысленна"
    Authors:            "alejes"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetGeoRegionalityU()" }
}

Factor {
    Index:              30
    CppName:            "FI_REGIONAL_R_QUERY"
    Name:               "GeoRegionalityR"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_THEME_CLASSIF, TG_DEPRECATED, TG_L2]
    Description:        "R-  георелевантные - региональные результаты в выдаче могли бы быть полезны, но не более того"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetGeoRegionalityR()" }
}

Factor {
    Index:              31
    CppName:            "FI_REGIONAL_V_QUERY"
    Name:               "GeoRegionalityV"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_THEME_CLASSIF, TG_DEPRECATED, TG_L2]
    Description:        "V-  геовитальные -  региональная выдача имеет принципиальное значение"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetGeoRegionalityV()" }
}

Factor {
    Index:              32
    CppName:            "FI_REGIONAL_U_QUERY_NEW"
    Name:               "GeoRegionalityUNew"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_THEME_CLASSIF, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Group:              "Query"
    Description:        "Запросные факторы - результат работы ((http://wiki.yandex-team.ru/PoiskovajaPlatforma/Lingvistika/ZaprosnyjeFactory/LocalizovannyjeZaprosy классификатора геолокализованности запроса)) - новая версия факторов [328]-[330]:  U - геобесполезные - региональная выдача по запросу бессмысленна;"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetGeoRegionalityUNew()" }
}

Factor {
    Index:              33
    CppName:            "FI_REGIONAL_R_QUERY_NEW"
    Name:               "GeoRegionalityRNew"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_THEME_CLASSIF, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Запросные факторы - результат работы ((http://wiki.yandex-team.ru/PoiskovajaPlatforma/Lingvistika/ZaprosnyjeFactory/LocalizovannyjeZaprosy классификатора геолокализованности запроса)) - новая версия факторов [328]-[330]:  R - георелевантные - региональные результаты в выдаче могли бы быть полезны, но не более того;"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetGeoRegionalityRNew()" }
}

Factor {
    Index:              34
    CppName:            "FI_REGIONAL_V_QUERY_NEW"
    Name:               "GeoRegionalityVNew"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_THEME_CLASSIF, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Запросные факторы - результат работы ((http://wiki.yandex-team.ru/PoiskovajaPlatforma/Lingvistika/ZaprosnyjeFactory/LocalizovannyjeZaprosy классификатора геолокализованности запроса)) - новая версия факторов [328]-[330]: V - геовитальные -  региональная выдача имеет принципиальное значение."
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetGeoRegionalityVNew()" }
}

Factor {
    Index:              35
    CppName:            "FI_REG_NAV_QUERY"
    Name:               "RegNavQuery"
    Ticket:             "QREG-23"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/geo/RegNavQueries"
    Group:              "Query"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_LOCALIZED_CITY, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Регионально-навигационный запрос - в регионе пользователя есть один или несколько навигационных результатов по нему"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRegNavQuery()" }
}

Factor {
    Index:              36
    CppName:            "FI_QUERY_TH3973"
    Name:               "QueryThVideohosting"
    Ticket:             "QREG-28"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/Th3561"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_USER, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Результат работы лексического классификатора запросов, предсказывающего вероятность клика по странице тематики 3973"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQueryThVideohosting()" }
}

Factor {
    Index:              37
    CppName:            "FI_QUERY_TH3561"
    Name:               "QueryThEncyclopedic"
    Ticket:             "QREG-28"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/Th3561"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Результат работы лексического классификатора запросов, предсказывающего вероятность клика по странице тематики 3561"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQueryThEncyclopedic()" }
}

Factor {
    Index:              38
    CppName:            "FI_TUR_QR"
    Name:               "QrTur"
    Ticket:             "QREG-27"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/QrTur"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_UNDOCUMENTED, TG_L2, TG_REARR_USE, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказание доли «хороших»(хотя бы с двумя разными городами и частотой>=10) упоминаний запроса с географией в Турции"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQrTur()" }
}

Factor {
    Index:              39
    CppName:            "FI_QUERY_NEARBY"
    Name:               "NearbyQuery"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "При ответе на запрос важны результаты в непосредственной близости ([аптеки], [детская поликлиника])"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetNearbyQuery()" }
}

Factor {
    Index:              40
    CppName:            "FI_QUERY_CITY"
    Name:               "CityQuery"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_UNDOCUMENTED, TG_L2, TG_REARR_USE, TG_NN_OVER_FEATURES_USE]
    Description:        "При ответе на запрос важны результаты внутри города (основная масса локализуемых запросов)"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCityQuery()" }
}

Factor {
    Index:              41
    CppName:            "FI_QUERY_ADM"
    Name:               "AdmQuery"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_UNDOCUMENTED, TG_L2, TG_REARR_USE, TG_NN_OVER_FEATURES_USE]
    Description:        "При ответе на запрос важны результаты из области, региона пользователя ([аэропорт], [молокозавод])"
    Authors:            "esoloviev"
    Responsibles:       "esoloviev"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetAdmQuery()" }
}

Factor {
    Index:              42
    CppName:            "FI_QUERY_ISGEO"
    Name:               "IsGeo"
    Ticket:             "BUKI-1316"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/IsGeo"
    Group:              "Query"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Cпускает на базовые поиски под именем isgeo максимальный вес встреченного геообъекта в запросе. Под геообъектом понимается объект категории Geo, Geo1, GeoAddr, GeoAddr1, LandMark, LandMark1 (см. ((http://wiki.yandex-team.ru/AlekseySokirko/QueryObjects som-овскую разметку))).((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares Подробнее))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsGeo()" }
}

Factor {
    Index:              43
    CppName:            "FI_QUERY_ISMUSIC"
    Name:               "IsMusic"
    Ticket:             "BUKI-1316"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/IsMusic"
    Group:              "Query"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Cпускает на базовые поиски под именем ismusic максимальный вес встреченного объекта категории Music или Music1 в запросе. (см. ((http://wiki.yandex-team.ru/AlekseySokirko/QueryObjects som-овскую разметку))).((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares Подробнее))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsMusic()" }
}

Factor {
    Index:              44
    CppName:            "FI_QUERY_ISORG"
    Name:               "IsOrg"
    Ticket:             "FRESHNESS-3225"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_REARR_USE, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "В запросе название организации (пример: Газпром, газпрома) ((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares Описание))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsOrg()" }
}

Factor {
    Index:              45
    CppName:            "FI_QUERY_ISHUM"
    Name:               "IsHum"
    Ticket:             "BUKI-1316"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/IsHum"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Cпускает на базовые поиски под именем ishum максимальный вес встреченного объекта категории Hum или Hum1 в запросе. (см. ((http://wiki.yandex-team.ru/AlekseySokirko/QueryObjects som-овскую разметку))).((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares#ishum Подробнее))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsHum()" }
}

Factor {
    Index:              46
    CppName:            "FI_QUERY_ISTEXT"
    Name:               "IsText"
    Ticket:             "BUKI-1316"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/IsText"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Cпускает на базовые поиски под именем istext максимальный вес встреченного объекта категории Text или Text1 в запросе. (см. ((http://wiki.yandex-team.ru/AlekseySokirko/QueryObjects som-овскую разметку))).((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares#istext Подробнее))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsText()" }
}

Factor {
    Index:              47
    CppName:            "FI_QUERY_ISPICTURE"
    Name:               "IsPicture"
    Ticket:             "BUKI-1316"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/IsPicture"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Cпускает на базовые поиски под именем ispicture максимальный вес встреченного объекта категории Picture или Picture1 в запросе. (см. ((http://wiki.yandex-team.ru/AlekseySokirko/QueryObjects som-овскую разметку))).((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares#ispicture Подробнее))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsPicture()" }
}

Factor {
    Index:              48
    CppName:            "FI_QUERY_MINONE"
    Name:               "MinOne"
    Ticket:             "BUKI-1316"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/MinOne"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Возвращает под именем wminone максимальную степень нарицательности встреченных объектов в запросе. (см. ((http://wiki.yandex-team.ru/AlekseySokirko/QueryObjects som-овскую разметку))).((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares#minone Подробнее))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetMinOne()" }
}

Factor {
    Index:              49
    CppName:            "FI_QUERY_MAXONE"
    Name:               "MaxOne"
    Ticket:             "BUKI-1316"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/MaxOne"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Возвращает под именем wmaxone максимальную степень нарицательности встреченных объектов в запросе. (см. ((http://wiki.yandex-team.ru/AlekseySokirko/QueryObjects som-овскую разметку))).((http://wiki.yandex-team.ru/ArsenGadzhikurbanov/Wares#maxone Подробнее))"
    Authors:            "arseny"
    Responsibles:       "arseny"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetMaxOne()" }
}

Factor {
    Index:              50
    CppName:            "FI_COUNTRY_QUERY_REGIONALITY"
    Name:               "CountryQueryRegionality"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Страновый классификатор локализуемости - насколько запрос подразумевает контекст страны"
    Authors:            "shutovich"
    Responsibles:       "shutovich"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCountryQueryRegionality()" }
}

Factor {
    Index:              51
    CppName:            "FI_QCLASS_DOWNLOAD"
    Name:               "QClassDownload"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "=1 - вкл. формула Download. Запросы класса: скачать/смотреть онлайн/играть/фото/слушать"
    Authors:            "asannikova"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassDownload()" }
}

Factor {
    Index:              52
    CppName:            "FI_QCLASS_BRANDNAMES"
    Name:               "QClassBrandnames"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Результат классификатора запроса  - в запросе  есть слова из соответствующего словаря.   бренд"
    Authors:            "agorodilov"
    Responsibles:       "agorodilov"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassBrandnames()" }
}

Factor {
    Index:              53
    CppName:            "FI_QCLASS_DISEASE"
    Name:               "QClassDisease"
    Ticket:             "FRESHNESS-3225"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "медицинсий словарь"
    Authors:            "agorodilov"
    Responsibles:       "agorodilov"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassDisease()" }
}

Factor {
    Index:              54
    CppName:            "FI_QCLASS_KAK"
    Name:               "QClassKak"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "вопрос"
    Authors:            "agorodilov"
    Responsibles:       "agorodilov"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassKak()" }
}

Factor {
    Index:              55
    CppName:            "FI_QCLASS_MOSCOW"
    Name:               "QClassMoscow"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "запрос специфический для Москвы"
    Authors:            "agorodilov"
    Responsibles:       "agorodilov"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassMoscow()" }
}

Factor {
    Index:              56
    CppName:            "FI_QCLASS_OAO"
    Name:               "QClassOAO"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "организация"
    Authors:            "agorodilov"
    Responsibles:       "agorodilov"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassOAO()" }
}

Factor {
    Index:              57
    CppName:            "FI_QCLASS_PORNO"
    Name:               "QClassPorno"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "порно"
    Authors:            "agorodilov"
    Responsibles:       "agorodilov"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassPorno()" }
}

Factor {
    Index:              58
    CppName:            "FI_QCLASS_TRAVEL"
    Name:               "QClassTravel"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_BINARY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "путешествия"
    Authors:            "agorodilov"
    Responsibles:       "agorodilov"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassTravel()" }
}

Factor {
    Index:              59
    CppName:            "FI_DIVERSITY_CATEG_NEED_PHOTO"
    Name:               "DiversityCategNeedPhoto"
    Ticket:             "BUKI-1213"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/DiversityCategFactors"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "0 или 1 в зависимости от наличия в запросе явно выраженного интента need_photo из разнообразия"
    Authors:            "stasd07"
    Responsibles:       "stasd07"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDiversityCategNeedPhoto()" }
}

Factor {
    Index:              60
    CppName:            "FI_DIVERSITY_CATEG_NEED_MAP"
    Name:               "DiversityCategNeedMap"
    Ticket:             "BUKI-1213"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/DiversityCategFactors"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_THEME_CLASSIF, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "0 или 1 в зависимости от наличия в запросе явно выраженного интента need_map из разнообразия"
    Authors:            "stasd07"
    Responsibles:       "stasd07"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDiversityCategNeedMap()" }
}

Factor {
    Index:              61
    CppName:            "FI_DIVERSITY_CATEG_DOWNLOAD"
    Name:               "DiversityCategDownload"
    Ticket:             "ROBOT-2688"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/DiversityCategFactors"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "0 или 1 - матчится ли запрос регулярке из тикета"
    Authors:            "stasd07"
    Responsibles:       "stasd07"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDiversityCategDownload()" }
}

Factor {
    Index:              62
    CppName:            "FI_DIVERSITY_CATEG_REVIEW"
    Name:               "DiversityCategReview"
    Ticket:             "ROBOT-2688"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/DiversityCategFactors"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "0 или 1 - матчится ли запрос регулярке из тикета"
    Authors:            "stasd07"
    Responsibles:       "stasd07"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDiversityCategReview()" }
}

Factor {
    Index:              63
    CppName:            "FI_DIVERSITY_CATEG_WATCH"
    Name:               "DiversityCategWatch"
    Ticket:             "ROBOT-2688"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/DiversityCategFactors"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "0 или 1 - матчится ли запрос регулярке из тикета"
    Authors:            "stasd07"
    Responsibles:       "stasd07"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDiversityCategWatch()" }
}

Factor {
    Index:              64
    CppName:            "FI_HAS_MISSPELL"
    Name:               "HasMisspell"
    Group:              "Query"
    Ticket:             "FRESHNESS-3225"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_L2, TG_DEPRECATED]
    Description:        "В запросе есть опечатка"
    Authors:            "denplusplus"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetHasMisspell()" }
}

Factor {
    Index:              65
    CppName:            "FI_ERRATUM_LOG_QUERY_PROBABILITY"
    Name:               "ErratumLogQueryProbability"
    Ticket:             "BUKI-1388"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/ErratumLogQueryProbability"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_BROWSER, TG_COUNTER, TG_USER_SEARCH, TG_USER_EXT_DATA, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Двоичный логарифм вероятности запроса по языковой модели сервиса опечаток erratum"
    Authors:            "snow"
    Responsibles:       ["snow", "khristich"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetErratumLogQueryProbability()" }
}

Factor {
    Index:              66
    CppName:            "FI_MISSPELL_LM_NGR_YANDEX_DIRECT_ORIGINAL"
    Name:               "MisspellLmNgrYandexDirectOriginal"
    Ticket:             ["FACTOR-1205"]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/MisspellFactors"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Cумма скоров слов запроса по языковой модели 3grams-yandex-direct."
    Authors:            ["mbusel", "anton-fr", "enhydra"]
    Responsibles:       ["mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetMisspellLmNgrYandexDirectOriginal()" }
}

Factor {
    Index:              67
    CppName:            "FI_MISSPELL_LM_RTL_NGR_WEB_MT_ORIGINAL"
    Name:               "MisspellLmRtlNgrWebMtOriginal"
    Ticket:             ["FACTOR-1205"]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/MisspellFactors"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Cумма скоров слов запроса по языковой модели web-mt."
    Authors:            ["mbusel", "anton-fr", "enhydra"]
    Responsibles:       ["mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetMisspellLmRtlNgrWebMtOriginal()" }
}

Factor {
    Index:              68
    CppName:            "FI_YABAR_WORD_DNGI"
    Name:               "YabarWordDepthNodesGradientMin"
    Ticket:             "BUKI-1482"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_BROWSER, TG_USER_SEARCH, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Угол в пространстве Depth Nodes, посчитанный только по словам (Min по всем)"
    Authors:            ["atolstikov", "smikler"]
    Responsibles:       ["atolstikov", "smikler"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetYabarWordDepthNodesGradientMin()" }
}

Factor {
    Index:              69
    CppName:            "FI_FRACTION_OF_QUERIES_WITH_GEO_PREDICTION"
    Name:               "FractionOfQueriesWithGeoPredicted"
    Ticket:             "FACTOR-508"
    Group:              "Query"
    Tags:               [TG_QUERY_ONLY, TG_USER_SEARCH, TG_LOCALIZED_COUNTRY, TG_DYNAMIC, TG_L2, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    Description:        "Предсказание доли запросов с географией по мешку слов, построенному для запроса"
    Authors:            ["yazevnul"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetFractionOfQueriesWithGeoPredicted()" }
}

Factor {
    Index:              70
    CppName:            "FI_IS_LOCAL_PROBABILITY"
    Name:               "IsLocalProbability"
    Ticket:             "QREG-105"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_RU, CNT_UA, CNT_BY, CNT_KZ]
    Description:        "Значение классификатора локализуемости для запроса"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsLocalProbability()" }
}

Factor {
    Index:              71
    CppName:            "FI_URL_IS_EXACT"
    Name:               "IsExactUrl"
    Ticket:             "FACTOR-682"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_OFTEN_ZERO, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Запрос является урлом с точностью до простановки точек и пробельных символов - используется правило колдунщика isurl"
    Authors:            ["mbusel", "smikler"]
    Responsibles:       "mbusel"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsExactUrl()" }
}

Factor {
    Index:              72
    CppName:            "FI_IS_RELEV_LOCALE_RU"
    Name:               "IsRelevLocaleRU"
    Ticket:             "QREG-108"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/getrelevancelocale/"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2, TG_NN_OVER_FEATURES_USE, TG_USED_IN_CONF_REARR]
    Countries:          [CNT_ALL]
    Description:        "relev_locale == ru"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleRU()" }
}

Factor {
    Index:              73
    CppName:            "FI_IS_RELEV_LOCALE_UA"
    Name:               "IsRelevLocaleUA"
    Ticket:             "QREG-108"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/getrelevancelocale/"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    Description:        "relev_locale == ua"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleUA()" }
}

Factor {
    Index:              74
    CppName:            "FI_IS_RELEV_LOCALE_BY"
    Name:               "IsRelevLocaleBY"
    Ticket:             "QREG-108"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/getrelevancelocale/"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    Description:        "relev_locale == by"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleBY()" }
}

Factor {
    Index:              75
    CppName:            "FI_IS_RELEV_LOCALE_KZ"
    Name:               "IsRelevLocaleKZ"
    Ticket:             "QREG-108"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/getrelevancelocale/"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    Description:        "relev_locale == kz"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleKZ()" }
}

Factor {
    Index:              76
    CppName:            "FI_IS_RELEV_LOCALE_TR"
    Name:               "IsRelevLocaleTR"
    Ticket:             "QREG-108"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/getrelevancelocale/"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    Description:        "relev_locale == tr"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleTR()" }
}

Factor {
    Index:              77
    CppName:            "FI_IS_RELEV_LOCALE_ID"
    Name:               "IsRelevLocaleID"
    Ticket:             "QREG-116"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/getrelevancelocale/"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    Description:        "relev_locale == id"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleID()" }
}

Factor {
    Index:              78
    CppName:            "FI_IS_RELEV_LOCALE_WORLD"
    Name:               "IsRelevLocaleWORLD"
    Ticket:             "QREG-108"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/getrelevancelocale/"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    Description:        "relev_locale == world"
    Authors:            ["yazevnul", "esoloviev"]
    Responsibles:       ["yazevnul", "esoloviev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleWORLD()" }
}

Factor {
    Index:              79
    CppName:            "FI_HAS_PORNO_QUERY"
    Name:               "HasPornoQuery"
    Ticket:             "FACTOR-123"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_REARR_USE, TG_UNDOCUMENTED, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Результат работы adult правила колдунщика."
    Authors:            "zagrebin"
    Responsibles:       "smikler"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetHasPornoQuery()" }
}

Factor {
    Index:              80
    CppName:            "FI_QCLASS_PORNO_VW"
    Name:               "QClassPornoVw"
    Ticket:             "FACTOR-847"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_NN_OVER_FEATURES_USE]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/QClassPornoVw/"
    Description:        "Porn query classification result from Wizard (iad_vw flag, based on Vowpal Wabbit)"
    Authors:            ["akolosov", "tobo"]
    Responsibles:       "tobo"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQClassPornoVw()" }
}

Factor {
    Index:              81
    CppName:            "FI_DSSM_VK_POPULARITY"
    Name:               "DssmVkPopularity"
    Ticket:             ["FACTOR-1177"]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/QueryToHost"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что хост vk.com является популярным для данного запроса согласно соответствующей dssm-модели."
    UseArtifact:        {Name: "DssmHostsPopularity"}
    Authors:            ["mbusel", "tsimkha"]
    Responsibles:       ["mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmVkPopularity()" }
}

Factor {
    Index:              82
    CppName:            "FI_DSSM_ONLINER_POPULARITY"
    Name:               "DssmOnlinerPopularity"
    Ticket:             ["FACTOR-1177"]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/QueryToHost"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что хост onliner.by является популярным для данного запроса согласно соответствующей dssm-модели."
    UseArtifact:        {Name: "DssmHostsPopularity"}
    Authors:            ["mbusel", "tsimkha"]
    Responsibles:       ["mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmOnlinerPopularity()" }
}

Factor {
    Index:              83
    CppName:            "FI_DSSM_RAMBLER_POPULARITY"
    Name:               "DssmRamblerPopularity"
    Ticket:             ["FACTOR-1177"]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/QueryToHost"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что хост rambler.ru является популярным для данного запроса согласно соответствующей dssm-модели."
    UseArtifact:        {Name: "DssmHostsPopularity"}
    Authors:            ["mbusel", "tsimkha"]
    Responsibles:       ["mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRamblerPopularity()" }
}

Factor {
    Index:              84
    CppName:            "FI_DSSM_EXPERTCEN_POPULARITY"
    Name:               "DssmExpertcenPopularity"
    Ticket:             ["FACTOR-1177"]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/QueryToHost"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что хост expertcen.ru является популярным для данного запроса согласно соответствующей dssm-модели."
    UseArtifact:        {Name: "DssmHostsPopularity"}
    Authors:            ["mbusel", "tsimkha"]
    Responsibles:       ["mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmExpertcenPopularity()" }
}

Factor {
    Index:              85
    CppName:            "FI_DSSM_SUNHOME_POPULARITY"
    Name:               "DssmSunhomePopularity"
    Ticket:             ["FACTOR-1177"]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/QueryToHost"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что хост sunhome.ru является популярным для данного запроса согласно соответствующей dssm-модели."
    UseArtifact:        {Name: "DssmHostsPopularity"}
    Authors:            ["mbusel", "tsimkha"]
    Responsibles:       ["mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmSunhomePopularity()" }
}

Factor {
    Index:              86
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_NEWS"
    Name:               "RandomLogQueryAvgNews"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение News по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["News"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgNews()" }
}

Factor {
    Index:              87
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_ADD_TIME"
    Name:               "RandomLogQueryAvgAddTime"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DATE, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение AddTime по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["AddTime"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgAddTime()" }
}

Factor {
    Index:              88
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_TEXT_HI_RELEV_SYN"
    Name:               "RandomLogQueryAvgTxtHiRelSy"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение TxtHiRelSy по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["TxtHiRelSy"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgTxtHiRelSy()" }
}

Factor {
    Index:              89
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_TEXT_LIKE"
    Name:               "RandomLogQueryAvgTextLike"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение TextLike по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["TextLike"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgTextLike()" }
}

Factor {
    Index:              90
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_HAS_NO_ALL_WORDS_TR_SYN"
    Name:               "RandomLogQueryAvgHasNoAllWordsTRSy"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение HasNoAllWordsTRSy по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["HasNoAllWordsTRSy"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgHasNoAllWordsTRSy()" }
}

Factor {
    Index:              91
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_IS_FORUM"
    Name:               "RandomLogQueryAvgIsForum"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение IsForum по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["IsForum"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgIsForum()" }
}

Factor {
    Index:              92
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_HAS_PAYMENTS"
    Name:               "RandomLogQueryAvgHasPayments"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение HasPayments по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["HasPayments"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgHasPayments()" }
}

Factor {
    Index:              93
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_YABAR_HOST_AVG_TIME2"
    Name:               "RandomLogQueryAvgYabarHostAvgTime2"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение YabarHostAvgTime2 по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["YabarHostAvgTime2"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgYabarHostAvgTime2()" }
}

Factor {
    Index:              94
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_YABAR_URL_VISITORS"
    Name:               "RandomLogQueryAvgYabarUrlVisitors"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение YabarUrlVisitors по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["YabarUrlVisitors"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgYabarUrlVisitors()" }
}

Factor {
    Index:              95
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_QUERY_DOWNER_ONLY_CLICK_RATE"
    Name:               "RandomLogQueryAvgQueryDOwnerOnlyClickRate"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DOWNER, TG_USER_EXT_DATA, TG_USER_SEARCH_EXTERNAL, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение QueryDOwnerOnlyClickRate по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["QueryDOwnerOnlyClickRate"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgQueryDOwnerOnlyClickRate()" }
}

Factor {
    Index:              96
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_DATER_AGE"
    Name:               "RandomLogQueryAvgDaterAge"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение DaterAge по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["DaterAge"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgDaterAge()" }
}

Factor {
    Index:              97
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_LONGEST_TEXT"
    Name:               "RandomLogQueryAvgLongestText"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение LongestText по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["LongestText"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgLongestText()" }
}

Factor {
    Index:              98
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_DIFFERENT_INTERNAL_LINKS"
    Name:               "RandomLogQueryAvgDifferentInternalLinks"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_DEPRECATED]
    Description:        "Среднее значение DifferentInternalLinks по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["DifferentInternalLinks"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgDifferentInternalLinks()" }
}

Factor {
    Index:              99
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_QUERY_DOWNER_ONLY_CLICK_RATE_REG"
    Name:               "RandomLogQueryAvgQueryDOwnerOnlyClickRate_Reg"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DOWNER, TG_USER_EXT_DATA, TG_USER_SEARCH_EXTERNAL, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение QueryDOwnerOnlyClickRate_Reg по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["QueryDOwnerOnlyClickRate_Reg"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgQueryDOwnerOnlyClickRate_Reg()" }
}

Factor {
    Index:              100
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_IS_HUB"
    Name:               "RandomLogQueryAvgIsHub"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение IsHub по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["IsHub"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgIsHub()" }
}

Factor {
    Index:              101
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_IS_TARGET_BUSSINESS_CARD"
    Name:               "RandomLogQueryAvgIsTargetBussinessCard"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_CATALOG, TG_DEPRECATED]
    Description:        "Среднее значение IsTargetBussinessCard по запросу за год. Рассчитывается в оффлайне."
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgIsTargetBussinessCard()" }
}

Factor {
    Index:              102
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_BM25_0"
    Name:               "RandomLogQueryAvgBM25_0"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_DEPRECATED]
    Description:        "Среднее значение BM25_0 по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["BM25_0"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgBM25_0()" }
}

Factor {
    Index:              103
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_BOCM"
    Name:               "RandomLogQueryAvgBocm"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение Bocm по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["Bocm"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgBocm()" }
}

Factor {
    Index:              104
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_IS_INDEX_PAGE"
    Name:               "RandomLogQueryAvgIsIndexPage"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение IsIndexPage по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["IsIndexPage"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgIsIndexPage()" }
    UseArtifact:        {Name: "RandomLogQueryStaticFeaturesBigDict"}
}

Factor {
    Index:              105
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_QUERIES_AVG_CM2"
    Name:               "RandomLogQueryAvgQueriesAvgCM2"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_OWNER, TG_COMMERCIAL, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение QueriesAvgCM2 по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["QueriesAvgCM2"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgQueriesAvgCM2()" }
}

Factor {
    Index:              106
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_BROWSER_HOST_DOWNLOAD_PROBABILITY"
    Name:               "RandomLogQueryAvgBrowserHostDownloadProbability"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER, TG_RANDOM_LOG, TG_DEPRECATED]
    Description:        "Среднее значение BrowserHostDownloadProbability по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["BrowserHostDownloadProbability"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgBrowserHostDownloadProbability()" }
}

Factor {
    Index:              107
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_REG_BROWSER_USER_HUB"
    Name:               "RandomLogQueryAvgRegBrowserUserHub"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER, TG_USER_EXT_DATA, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение RegBrowserUserHub по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["RegBrowserUserHub"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgRegBrowserUserHub()" }
}

Factor {
    Index:              108
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_AUX_TITLE_BM25"
    Name:               "RandomLogQueryAvgAuxTitleBM25"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE, TG_DEPRECATED]
    Description:        "Среднее значение AuxTitleBM25 по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["AuxTitleBM25"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgAuxTitleBM25()" }
}

Factor {
    Index:              109
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_QUERY_URL_CORRECTED_CTR_XFACTOR"
    Name:               "RandomLogQueryAvgQueryUrlCorrectedCtrXfactor"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_COLLABORATED, TG_RANDOM_LOG, TG_DEPRECATED]
    Description:        "Среднее значение QueryUrlCorrectedCtrXfactor по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["QueryUrlCorrectedCtrXfactor"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgQueryUrlCorrectedCtrXfactor()" }
}

Factor {
    Index:              110
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_QUERY_TO_DOC_ALL_SUM_F_COUNT_TEXT_BM11_NORM16384"
    Name:               "RandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST, TG_RANDOM_LOG, TG_DEPRECATED]
    Description:        "Среднее значение QueryToDocAllSumFCountTextBm11Norm16384 по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["REMOVED_1018"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384()" }
}

Factor {
    Index:              111
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_XF_DT_SHOW_ALL_SUM_WF_SUM_W_BODY_MIN_WINDOW_SIZE"
    Name:               "RandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение XfDtShowAllSumWFSumWBodyMinWindowSize по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["XfDtShowAllSumWFSumWBodyMinWindowSize"], Slice: "web_production"}]
    UseArtifact:        {Name: "XfDtExpansions", IsIndirectDependency: true}
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize()" }
}

Factor {
    Index:              112
    CppName:            "FI_RANDOM_LOG_QUERY_CLICKS_WEIGHTED_AVG_IS_MAIN_PAGE"
    Name:               "RandomLogQueryClicksWeightedAvgIsMainPage"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Средневзвешанное кликами значение IsMainPage по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["IsMainPage"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryClicksWeightedAvgIsMainPage()" }
    UseArtifact:        {Name: "RandomLogQueryStaticFeaturesBigDict"}
}

Factor {
    Index:              113
    CppName:            "FI_RANDOM_LOG_QUERY_CLICKS_WEIGHTED_AVG_YABAR_URL_AVG_TIME"
    Name:               "RandomLogQueryClicksWeightedAvgYabarUrlAvgTime"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Средневзвешанное кликами значение YabarUrlAvgTime по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["YabarUrlAvgTime"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryClicksWeightedAvgYabarUrlAvgTime()" }
}

Factor {
    Index:              114
    CppName:            "FI_RANDOM_LOG_QUERY_CLICKS_WEIGHTED_AVG_DIFFERENT_INTERNAL_LINKS"
    Name:               "RandomLogQueryClicksWeightedAvgDifferentInternalLinks"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_DEPRECATED]
    Description:        "Средневзвешанное кликами значение DifferentInternalLinks по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["DifferentInternalLinks"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryClicksWeightedAvgDifferentInternalLinks()" }
}

Factor {
    Index:              115
    CppName:            "FI_RANDOM_LOG_QUERY_DWELLTIME_WEIGHTED_AVG_URL_DOMAIN_FRACTION"
    Name:               "RandomLogQueryDwelltimeWeightedAvgUrlDomainFraction"
    Ticket:             "FACTOR-1247"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE]
    Description:        "Средневзвешанное dwelltime-ами значение UrlDomainFraction по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["UrlDomainFraction"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["alsafr", "tsimkha", "ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogQueryDwelltimeWeightedAvgUrlDomainFraction()" }
}

Factor {
    Index:              116
    CppName:            "FI_DSSM_QUERY_EMBEDDING_CTR_NO_MINER_PCA_0"
    Name:               "DssmQueryEmbeddingCtrNoMinerPca0"
    Group:              "Query"
    Ticket:             "FACTOR-1440"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/dssmpca/"
    Tags:               [TG_QUERY_ONLY, TG_L2, TG_NEURAL, TG_USER, TG_USER_SEARCH, TG_NN_OVER_FEATURES_USE]
    Description:        "Главные компоненты запросного эмбединга от модели DssmCtrNoMiner"
    UseArtifact:        {Name: "DssmPcaCtrNoMiner"}
    Authors:            ["dskor"]
    Responsibles:       ["dskor"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmQueryEmbeddingCtrNoMinerPca0()" }
}

Factor {
    Index:              117
    CppName:            "FI_DSSM_QUERY_EMBEDDING_CTR_NO_MINER_PCA_1"
    Name:               "DssmQueryEmbeddingCtrNoMinerPca1"
    Group:              "Query"
    Ticket:             "FACTOR-1440"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/dssmpca/"
    Tags:               [TG_QUERY_ONLY, TG_L2, TG_NEURAL, TG_USER, TG_USER_SEARCH, TG_NN_OVER_FEATURES_USE]
    Description:        "Главные компоненты запросного эмбединга от модели DssmCtrNoMiner"
    UseArtifact:        {Name: "DssmPcaCtrNoMiner"}
    Authors:            ["dskor"]
    Responsibles:       ["dskor"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmQueryEmbeddingCtrNoMinerPca1()" }
}

Factor {
    Index:              118
    CppName:            "FI_DSSM_QUERY_EMBEDDING_CTR_NO_MINER_PCA_2"
    Name:               "DssmQueryEmbeddingCtrNoMinerPca2"
    Group:              "Query"
    Ticket:             "FACTOR-1440"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/dssmpca/"
    Tags:               [TG_QUERY_ONLY, TG_L2, TG_NEURAL, TG_USER, TG_USER_SEARCH, TG_NN_OVER_FEATURES_USE]
    Description:        "Главные компоненты запросного эмбединга от модели DssmCtrNoMiner"
    UseArtifact:        {Name: "DssmPcaCtrNoMiner"}
    Authors:            ["dskor"]
    Responsibles:       ["dskor"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmQueryEmbeddingCtrNoMinerPca2()" }
}

Factor {
    Index:              119
    CppName:            "FI_DSSM_QUERY_EMBEDDING_CTR_NO_MINER_PCA_3"
    Name:               "DssmQueryEmbeddingCtrNoMinerPca3"
    Group:              "Query"
    Ticket:             "FACTOR-1440"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/dssmpca/"
    Tags:               [TG_QUERY_ONLY, TG_L2, TG_NEURAL, TG_USER, TG_USER_SEARCH, TG_NN_OVER_FEATURES_USE]
    Description:        "Главные компоненты запросного эмбединга от модели DssmCtrNoMiner"
    UseArtifact:        {Name: "DssmPcaCtrNoMiner"}
    Authors:            ["dskor"]
    Responsibles:       ["dskor"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmQueryEmbeddingCtrNoMinerPca3()" }
}

Factor {
    Index:              120
    CppName:            "FI_DSSM_QUERY_EMBEDDING_CTR_NO_MINER_PCA_4"
    Name:               "DssmQueryEmbeddingCtrNoMinerPca4"
    Group:              "Query"
    Ticket:             "FACTOR-1440"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/dssmpca/"
    Tags:               [TG_QUERY_ONLY, TG_L2, TG_NEURAL, TG_USER, TG_USER_SEARCH, TG_NN_OVER_FEATURES_USE]
    Description:        "Главные компоненты запросного эмбединга от модели DssmCtrNoMiner"
    UseArtifact:        {Name: "DssmPcaCtrNoMiner"}
    Authors:            ["dskor"]
    Responsibles:       ["dskor"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmQueryEmbeddingCtrNoMinerPca4()" }
}

Factor {
    Index:              121
    CppName:            "FI_DSSM_QUERY_EMBEDDING_CTR_NO_MINER_PCA_5"
    Name:               "DssmQueryEmbeddingCtrNoMinerPca5"
    Group:              "Query"
    Ticket:             "FACTOR-1440"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/dssmpca/"
    Tags:               [TG_QUERY_ONLY, TG_L2, TG_NEURAL, TG_USER, TG_USER_SEARCH, TG_NN_OVER_FEATURES_USE]
    Description:        "Главные компоненты запросного эмбединга от модели DssmCtrNoMiner"
    UseArtifact:        {Name: "DssmPcaCtrNoMiner"}
    Authors:            ["dskor"]
    Responsibles:       ["dskor"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmQueryEmbeddingCtrNoMinerPca5()" }
}

Factor {
    Index:              122
    CppName:            "FI_DSSM_QUERY_COUNTRY_TO_URL_ESTIMATED_DISTANCE"
    Name:               "DssmQueryCountryToUrlEstimatedDistance"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/ClicksCountryLocalityStatsDssm/"
    Ticket:             "BUKI-2544"
    Tags:               [TG_DYNAMIC, TG_L2, TG_LOCALIZED_COUNTRY, TG_NEURAL, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_UNSUPPORTED, TG_UNDOCUMENTED, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанная по запросу и стране, с помощью dssm-модели длина клика из данной страны."
    UseArtifact:        {Name: "DssmClicksCountryLocalityStats"}
    Authors:            ["volverine", "mbusel"]
    Responsibles:       ["volverine", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmQueryCountryToUrlEstimatedDistance()" }
}

Factor {
    Index:              123
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_NEWS"
    Name:               "DssmRandomLogQueryAvgNews"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение News по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["News"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgNews()" }
}

Factor {
    Index:              124
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_ADD_TIME"
    Name:               "DssmRandomLogQueryAvgAddTime"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_DATE, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение AddTime по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["AddTime"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgAddTime()" }
}

Factor {
    Index:              125
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_TEXT_HI_RELEV_SYN"
    Name:               "DssmRandomLogQueryAvgTxtHiRelSy"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение TxtHiRelSy по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["TxtHiRelSy"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgTxtHiRelSy()" }
}

Factor {
    Index:              126
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_TEXT_LIKE"
    Name:               "DssmRandomLogQueryAvgTextLike"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение TextLike по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["TextLike"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgTextLike()" }
}

Factor {
    Index:              127
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_HAS_NO_ALL_WORDS_TR_SYN"
    Name:               "DssmRandomLogQueryAvgHasNoAllWordsTRSy"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение HasNoAllWordsTRSy по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["HasNoAllWordsTRSy"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgHasNoAllWordsTRSy()" }
}

Factor {
    Index:              128
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_IS_FORUM"
    Name:               "DssmRandomLogQueryAvgIsForum"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение IsForum по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["IsForum"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgIsForum()" }
}

Factor {
    Index:              129
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_HAS_PAYMENTS"
    Name:               "DssmRandomLogQueryAvgHasPayments"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение HasPayments по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["HasPayments"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgHasPayments()" }
}

Factor {
    Index:              130
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_YABAR_HOST_AVG_TIME2"
    Name:               "DssmRandomLogQueryAvgYabarHostAvgTime2"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение YabarHostAvgTime2 по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["YabarHostAvgTime2"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgYabarHostAvgTime2()" }
}

Factor {
    Index:              131
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_YABAR_URL_VISITORS"
    Name:               "DssmRandomLogQueryAvgYabarUrlVisitors"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение YabarUrlVisitors по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["YabarUrlVisitors"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgYabarUrlVisitors()" }
}

Factor {
    Index:              132
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_QUERY_DOWNER_ONLY_CLICK_RATE"
    Name:               "DssmRandomLogQueryAvgQueryDOwnerOnlyClickRate"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_USER_EXT_DATA, TG_USER_SEARCH_EXTERNAL, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение QueryDOwnerOnlyClickRate по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["QueryDOwnerOnlyClickRate"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgQueryDOwnerOnlyClickRate()" }
}

Factor {
    Index:              133
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_DATER_AGE"
    Name:               "DssmRandomLogQueryAvgDaterAge"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение DaterAge по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["DaterAge"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgDaterAge()" }
}

Factor {
    Index:              134
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_LONGEST_TEXT"
    Name:               "DssmRandomLogQueryAvgLongestText"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение LongestText по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["LongestText"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgLongestText()" }
}

Factor {
    Index:              135
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_DIFFERENT_INTERNAL_LINKS"
    Name:               "DssmRandomLogQueryAvgDifferentInternalLinks"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_DEPRECATED]
    Description:        "Предсказанное с помощью нейронной сети среднее значение DifferentInternalLinks по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["DifferentInternalLinks"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgDifferentInternalLinks()" }
}

Factor {
    Index:              136
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_QUERY_DOWNER_ONLY_CLICK_RATE_REG"
    Name:               "DssmRandomLogQueryAvgQueryDOwnerOnlyClickRate_Reg"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_USER_EXT_DATA, TG_USER_SEARCH_EXTERNAL, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение QueryDOwnerOnlyClickRate_Reg по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["QueryDOwnerOnlyClickRate_Reg"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgQueryDOwnerOnlyClickRate_Reg()" }
}

Factor {
    Index:              137
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_IS_TARGET_BUSSINESS_CARD"
    Name:               "DssmRandomLogQueryAvgIsTargetBussinessCard"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_CATALOG, TG_DEPRECATED]
    Description:        "Предсказанное с помощью нейронной сети среднее значение IsTargetBussinessCard по запросу за год."
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgIsTargetBussinessCard()" }
}

Factor {
    Index:              138
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_BOCM"
    Name:               "DssmRandomLogQueryAvgBocm"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение Bocm по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["Bocm"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgBocm()" }
}

Factor {
    Index:              139
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_IS_INDEX_PAGE"
    Name:               "DssmRandomLogQueryAvgIsIndexPage"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение IsIndexPage по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["IsIndexPage"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgIsIndexPage()" }
}

Factor {
    Index:              140
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_QUERIES_AVG_CM2"
    Name:               "DssmRandomLogQueryAvgQueriesAvgCM2"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_COMMERCIAL, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение QueriesAvgCM2 по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["QueriesAvgCM2"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgQueriesAvgCM2()" }
}

Factor {
    Index:              141
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_BROWSER_HOST_DOWNLOAD_PROBABILITY"
    Name:               "DssmRandomLogQueryAvgBrowserHostDownloadProbability"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER, TG_RANDOM_LOG, TG_DEPRECATED]
    Description:        "Предсказанное с помощью нейронной сети среднее значение BrowserHostDownloadProbability по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["BrowserHostDownloadProbability"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgBrowserHostDownloadProbability()" }
}

Factor {
    Index:              142
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_REG_BROWSER_USER_HUB"
    Name:               "DssmRandomLogQueryAvgRegBrowserUserHub"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER, TG_USER_EXT_DATA, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети среднее значение RegBrowserUserHub по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["RegBrowserUserHub"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgRegBrowserUserHub()" }
}

Factor {
    Index:              143
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_AUX_TITLE_BM25"
    Name:               "DssmRandomLogQueryAvgAuxTitleBM25"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE, TG_DEPRECATED]
    Description:        "Предсказанное с помощью нейронной сети среднее значение AuxTitleBM25 по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["AuxTitleBM25"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgAuxTitleBM25()" }
}

Factor {
    Index:              144
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_QUERY_URL_CORRECTED_CTR_XFACTOR"
    Name:               "DssmRandomLogQueryAvgQueryUrlCorrectedCtrXfactor"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_COLLABORATED, TG_RANDOM_LOG, TG_DEPRECATED]
    Description:        "Предсказанное с помощью нейронной сети среднее значение QueryUrlCorrectedCtrXfactor по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["QueryUrlCorrectedCtrXfactor"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgQueryUrlCorrectedCtrXfactor()" }
}

Factor {
    Index:              145
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_QUERY_TO_DOC_ALL_SUM_F_COUNT_TEXT_BM11_NORM16384"
    Name:               "DssmRandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST, TG_RANDOM_LOG, TG_DEPRECATED]
    Description:        "Предсказанное с помощью нейронной сети среднее значение QueryToDocAllSumFCountTextBm11Norm16384 по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["REMOVED_1018"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384()" }
}

Factor {
    Index:              146
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_AVG_XF_DT_SHOW_ALL_SUM_WF_SUM_W_BODY_MIN_WINDOW_SIZE"
    Name:               "DssmRandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    UseArtifact:        {Name: "XfDtExpansions", IsIndirectDependency: true}
    Description:        "Предсказанное с помощью нейронной сети среднее значение XfDtShowAllSumWFSumWBodyMinWindowSize по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["XfDtShowAllSumWFSumWBodyMinWindowSize"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize()" }
}

Factor {
    Index:              147
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_CLICKS_WEIGHTED_AVG_IS_MAIN_PAGE"
    Name:               "DssmRandomLogQueryClicksWeightedAvgIsMainPage"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети средневзвешанное кликами значение IsMainPage по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["IsMainPage"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryClicksWeightedAvgIsMainPage()" }
}

Factor {
    Index:              148
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_CLICKS_WEIGHTED_AVG_YABAR_URL_AVG_TIME"
    Name:               "DssmRandomLogQueryClicksWeightedAvgYabarUrlAvgTime"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_BROWSER, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети средневзвешанное кликами значение YabarUrlAvgTime по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["YabarUrlAvgTime"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryClicksWeightedAvgYabarUrlAvgTime()" }
}

Factor {
    Index:              149
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_CLICKS_WEIGHTED_AVG_DIFFERENT_INTERNAL_LINKS"
    Name:               "DssmRandomLogQueryClicksWeightedAvgDifferentInternalLinks"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_DEPRECATED]
    Description:        "Предсказанное с помощью нейронной сети средневзвешанное кликами значение DifferentInternalLinks по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["DifferentInternalLinks"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryClicksWeightedAvgDifferentInternalLinks()" }
}

Factor {
    Index:              150
    CppName:            "FI_DSSM_RANDOM_LOG_QUERY_DWELLTIME_WEIGHTED_AVG_URL_DOMAIN_FRACTION"
    Name:               "DssmRandomLogQueryDwelltimeWeightedAvgUrlDomainFraction"
    Ticket:             "FACTOR-1454"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказанное с помощью нейронной сети средневзвешанное dwelltime-ами значение UrlDomainFraction по запросу за год."
    UseArtifact:        {Name: "DssmRandomLog"}
    # LogicallyDependsOn:          [{Feature: ["UrlDomainFraction"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmRandomLogQueryDwelltimeWeightedAvgUrlDomainFraction()" }
}

Factor {
    Index:              151
    CppName:            "FI_REGIONALITY5_LOCALIZATION_PROBABILITY"
    Name:               "Regionality5LocalizationProbability"
    Wiki:               "https://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/geo/Regionality5/"
    Ticket:             "BUKI-2544"
    Tags:               [TG_DYNAMIC, TG_L2, TG_LOCALIZED_COUNTRY, TG_NEURAL, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_NN_OVER_FEATURES_USE]
    Description:        "Предсказание вероятности того, что запрос локализуем в соответствии с правилом Regionality5."
    UseArtifact:        {Name: "DssmRegionality5"}
    UseArtifact:        {Name: "DssmClicksCountryLocalityStats", IsIndirectDependency: true}
    UseArtifact:        {Name: "DssmHostsPopularity", IsIndirectDependency: true}
    UseArtifact:        {Name: "DssmRandomLog", IsIndirectDependency: true}
    Authors:            ["volverine", "mbusel"]
    Responsibles:       ["volverine", "mbusel"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRegionality5LocalizationProbability()" }
}

Factor {
    Index:              152
    CppName:            "FI_LONG_QUERY_SYN"
    Name:               "LongQuerySyn"
    Ticket:             "BUKI-1361"
    Wiki:               "http://wiki.yandex-team.ru/JandeksPoisk/KachestvoPoiska/ObshayaFormula/TekushhieKomponenty/LongQuerySyn"
    Group:              "Query"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_L2, TG_L3_OVERWRITE, TG_NN_OVER_FEATURES_USE]
    Description:        "Фактор -- аналог LongQuery (сумма idf слов запроса), но с 'корректным' учетом синонимов. Конкретно -- выбирается минимум по idf (т.е. самое частое) из синонимов и слова."
    Authors:            "morph"
    Responsibles:       "morph"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetWordSumIdfSyn()" }
}

Factor {
    Index:              153
    CppName:            "FI_DSSM_BOOSTING_XF_ONE_SE_AM_SS_QUERY_MUTATION_DEL_SITE_WORD_RENORMED_DISTANCE"
    Name:               "DssmBoostingXfOneSeAmSsHardQueryMutationDelSiteWordRenormedDistance"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_NEURAL, TG_OFTEN_ZERO, TG_L2, TG_UNSUPPORTED, TG_NN_OVER_FEATURES_USE]
    Description:        "Характеризует запрос по степени изменения от удаления фиксированного слова ('сайт' для кирилицы), используется dssm модель DssmBoostingXfOneSeAmSsHard"
    UseArtifact:        {Name: "BoostingXfOneAmSsHardDssmModel"}
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/dsssm_query_mutation"
    Ticket:             "FACTOR-1665"
    Authors:            ["ilnurkh"]
    Responsibles:       ["ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmBoostingXfOneSeAmSsQueryMutationFeatures().GetDelSiteWordRenormedDistance()" }
    ImplementationTime: "2018-06-04"
}

Factor {
    Index:              154
    CppName:            "FI_DSSM_BOOSTING_XF_ONE_SE_AM_SS_QUERY_MUTATION_ADD_FIXED_YEAR_WORD_RENORMED_DISTANCE"
    Name:               "DssmBoostingXfOneSeAmSsHardQueryMutationAddFixedYearWordRenormedDistance"
    Ticket:             "FACTOR-1665"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_NEURAL, TG_L2, TG_UNSUPPORTED, TG_NN_OVER_FEATURES_USE]
    Description:        "Характеризует запрос по степени изменения от добавления фиксированного слова (номер некоторого года), используется dssm модель DssmBoostingXfOneSeAmSsHard"
    UseArtifact:        {Name: "BoostingXfOneAmSsHardDssmModel"}
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/dsssm_query_mutation"
    Authors:            ["ilnurkh"]
    Responsibles:       ["ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmBoostingXfOneSeAmSsQueryMutationFeatures().GetAddFixedYearWordRenormedDistance()" }
    ImplementationTime: "2018-06-04"
}

Factor {
    Index:              155
    CppName:            "FI_DSSM_BOOSTING_XF_ONE_SE_AM_SS_QUERY_MUTATION_ADD_ONLINE_WORD_RENORMED_DISTANCE"
    Name:               "DssmBoostingXfOneSeAmSsHardQueryMutationAddOnlineWordRenormedDistance"
    Ticket:             "FACTOR-1665"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_NEURAL, TG_L2, TG_UNSUPPORTED, TG_NN_OVER_FEATURES_USE]
    Description:        "Характеризует запрос по степени изменения от добавления фиксированного слова ('онлайн' для кирилицы), используется dssm модель DssmBoostingXfOneSeAmSsHard"
    UseArtifact:        {Name: "BoostingXfOneAmSsHardDssmModel"}
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/dsssm_query_mutation"
    Authors:            ["ilnurkh"]
    Responsibles:       ["ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmBoostingXfOneSeAmSsQueryMutationFeatures().GetAddOnlineWordRenormedDistance()" }
    ImplementationTime: "2018-06-04"
}

Factor {
    Index:              156
    CppName:            "FI_RANDOM_LOG_WORD_MAX_HAS_NO_TR"
    Name:               "RandomLogWordMaxHasNoTr"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_90D, TG_NN_OVER_FEATURES_USE]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение HasNoTr по запросам за 3 месяца. Далее по всем словам запроса берётся максимум этой величины."
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogWordMeta//"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordMaxHasNoTr()" }
    ImplementationTime: "2018-06-04"
}

Factor {
    Index:              157
    CppName:            "FI_RANDOM_LOG_WORD_MAX_IS_LJ"
    Name:               "RandomLogWordMaxIsLJ"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_90D, TG_NN_OVER_FEATURES_USE]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение IsLJ по запросам за 3 месяца. Далее по всем словам запроса берётся максимум этой величины."
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogWordMeta//"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordMaxIsLJ()" }
    ImplementationTime: "2018-06-04"
}

Factor {
    Index:              158
    CppName:            "FI_REMOVED_158"
    Name:               "Removed_158"
    Tags:               [TG_REMOVED]
}

Factor {
    Index:              159
    CppName:            "FI_RANDOM_LOG_WORD_MIN_BCLM_LITE"
    Name:               "RandomLogWordMinBclmLite"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_90D, TG_NN_OVER_FEATURES_USE]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение BclmLite по запросам за 3 месяца. Далее по всем словам запроса берётся минимум этой величины."
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogWordMeta//"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordMinBclmLite()" }
    ImplementationTime: "2018-06-04"
}

Factor {
    Index:              160
    CppName:            "FI_RANDOM_LOG_WORD_SKIP_STOP_WORDS_MAX_DBM40"
    Name:               "RandomLogWordSkipStopWordsMaxDBM40"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_90D, TG_NN_OVER_FEATURES_USE]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение DBM40 по запросам за 3 месяца. Далее по всем не стоп словам запроса берётся максимум этой величины."
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogWordMeta//"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordSkipStopWordsMaxDBM40()" }
    ImplementationTime: "2018-06-04"
}

Factor {
    Index:              161
    CppName:            "FI_RANDOM_LOG_WORD_SKIP_STOP_WORDS_MAX_IS_DESKTOP_REQUEST"
    Name:               "RandomLogWordSkipStopWordsMaxIsDesktopRequest"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_90D, TG_NN_OVER_FEATURES_USE]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение IsDesktopRequest по запросам за 3 месяца. Далее по всем не стоп словам запроса берётся максимум этой величины."
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogWordMeta//"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordSkipStopWordsMaxIsDesktopRequest()" }
    ImplementationTime: "2018-06-04"
}

Factor {
    Index:              162
    CppName:            "FI_RANDOM_LOG_WORD_MAX_RLQ_AVG_HAS_NO_ALL_WORDS_TR_SYN"
    Name:               "RandomLogWordMaxRLQAvgHasNoAllWordsTrSyn"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_90D, TG_NN_OVER_FEATURES_USE]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение RLQAvgHasNoAllWordsTrSyn по запросам за 3 месяца. Далее по всем словам запроса берётся максимум этой величины."
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogWordMeta//"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordMaxRLQAvgHasNoAllWordsTrSyn()" }
    ImplementationTime: "2018-06-04"
}

Factor {
    Index:              163
    CppName:            "FI_RANDOM_LOG_WORD_MAX_DSSM_AGGREGATED_ANN_REG"
    Name:               "RandomLogWordMaxDssmAggregatedAnnReg"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_DEPRECATED, TG_UNSUPPORTED]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение DssmAggregatedAnnReg по запросам за 3 месяца. Далее по всем словам запроса берётся максимум этой величины."
    UseArtifact:        {Name: "DssmAnnReg", IsIndirectDependency: true}
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogWordMeta//"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordMaxDssmAggregatedAnnReg()" }
    ImplementationTime: "2018-06-04"
}

Factor {
    Index:              164
    CppName:            "FI_RANDOM_LOG_WORD_MAX_META_NUM_URLS_PER_HOST_FIXED"
    Name:               "RandomLogWordMaxMetaNumUrlsPerHostFixed"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_90D, TG_NN_OVER_FEATURES_USE]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение MetaNumUrlsPerHostFixed по запросам за 3 месяца. Далее по всем словам запроса берётся максимум этой величины."
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogWordMeta//"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordMaxMetaNumUrlsPerHostFixed()" }
    ImplementationTime: "2018-06-04"
}

Factor {
    Index:              165
    CppName:            "FI_RANDOM_LOG_WORD_SKIP_STOP_WORDS_MAX_SD_IS_NAV_MX_QUERY_MAX"
    Name:               "RandomLogWordSkipStopWordsMaxSDIsNavMxQueryMax"
    Ticket:             "FACTOR-1683"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_90D, TG_NN_OVER_FEATURES_USE]
    Description:        "Для каждого слова в оффлайне вычисляется среднее значение MaxSDIsNavMxQueryMax по запросам за 3 месяца. Далее по всем не стоп словам запроса берётся максимум этой величины."
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogWordMeta//"
    Authors:            ["ptanusha"]
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetRandomLogWordFactors().GetRandomLogWordSkipStopWordsMaxSDIsNavMxQueryMax()" }
    ImplementationTime: "2018-06-04"
}

Factor {
    Index:              166
    CppName:            "FI_DSSM_GOOGLE_SPECIFICITY"
    Name:               "DssmGoogleSpecificity"
    Ticket:             "FORMULA-1218"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/dssm_google_specificity/"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_UNUSED]
    Description:        "DSSM prediction of google specificity for query"
    UseArtifact:        {Name: "DssmGoogleSpecificity"}
    Authors:            ["gaiduk"]
    Responsibles:       ["conscience", "gaiduk"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmGoogleSpecificity()" }
    ImplementationTime: "2018-07-18"
}

Factor {
    Index:              167
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_ADD_TIME"
    Name:               "KnnRandomLogQueryAvgAddTime"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE, TG_DEPRECATED]
    UseArtifact:        {Name: "KnnExpansions"}
    Description:        "Среднее значение RandomLogQueryAvgAddTime ближайших по knn запросов."
    # LogicallyDependsOn:          [{Feature: ["RandomLogQueryAvgAddTime"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/KnnRandomLog/"
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgAddTime()" }
    ImplementationTime: "2018-08-15"
}

Factor {
    Index:              168
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_TEXT_HI_RELEV_SYN"
    Name:               "KnnRandomLogQueryAvgTxtHiRelSy"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE, TG_DEPRECATED]
    UseArtifact:        {Name: "KnnExpansions"}
    Description:        "Среднее значение RandomLogQueryAvgTxtHiRelSy ближайших по knn запросов."
    # LogicallyDependsOn:          [{Feature: ["RandomLogQueryAvgTxtHiRelSy"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/KnnRandomLog/"
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgTxtHiRelSy()" }
    ImplementationTime: "2018-08-15"
}

Factor {
    Index:              169
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_TEXT_LIKE"
    Name:               "KnnRandomLogQueryAvgTextLike"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE, TG_DEPRECATED]
    Description:        "Среднее значение RandomLogQueryAvgTextLike ближайших по knn запросов."
    # LogicallyDependsOn:          [{Feature: ["RandomLogQueryAvgTextLike"], Slice: "web_production"}]
    UseArtifact:        {Name: "KnnExpansions"}
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/KnnRandomLog/"
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgTextLike()" }
    ImplementationTime: "2018-08-15"
}

Factor {
    Index:              170
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_IS_FORUM"
    Name:               "KnnRandomLogQueryAvgIsForum"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE, TG_DEPRECATED]
    Description:        "Среднее значение RandomLogQueryAvgIsForum ближайших по knn запросов."
    # LogicallyDependsOn:          [{Feature: ["RandomLogQueryAvgIsForum"], Slice: "web_production"}]
    UseArtifact:        {Name: "KnnExpansions"}
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/KnnRandomLog/"
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgIsForum()" }
    ImplementationTime: "2018-08-15"
}

Factor {
    Index:              171
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_HAS_PAYMENTS"
    Name:               "KnnRandomLogQueryAvgHasPayments"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_RANDOM_LOG, TG_DEPRECATED]
    Description:        "Среднее значение RandomLogQueryAvgHasPayments ближайших по knn запросов."
    # LogicallyDependsOn:          [{Feature: ["RandomLogQueryAvgHasPayments"], Slice: "web_production"}]
    UseArtifact:        {Name: "KnnExpansions"}
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/KnnRandomLog/"
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgHasPayments()" }
    ImplementationTime: "2018-08-15"
}

Factor {
    Index:              172
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_DIFFERENT_INTERNAL_LINKS"
    Name:               "KnnRandomLogQueryAvgDifferentInternalLinks"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_RANDOM_LOG, TG_DEPRECATED]
    UseArtifact:        {Name: "KnnExpansions"}
    Description:        "Среднее значение RandomLogQueryAvgDifferentInternalLinks ближайших по knn запросов."
    # LogicallyDependsOn:          [{Feature: ["RandomLogQueryAvgDifferentInternalLinks"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/KnnRandomLog/"
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgDifferentInternalLinks()" }
    ImplementationTime: "2018-08-15"
}

Factor {
    Index:              173
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_IS_TARGET_BUSSINESS_CARD"
    Name:               "KnnRandomLogQueryAvgIsTargetBussinessCard"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_RANDOM_LOG, TG_DEPRECATED]
    UseArtifact:        {Name: "KnnExpansions"}
    Description:        "Среднее значение RandomLogQueryAvgIsTargetBussinessCard ближайших по knn запросов."
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/KnnRandomLog/"
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgIsTargetBussinessCard()" }
    ImplementationTime: "2018-08-15"
}

Factor {
    Index:              174
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_QUERY_TO_DOC_ALL_SUM_F_COUNT_TEXT_BM11_NORM16384"
    Name:               "KnnRandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_RANDOM_LOG, TG_DEPRECATED]
    UseArtifact:        {Name: "KnnExpansions"}
    Description:        "Среднее значение RandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384 ближайших по knn запросов."
    # LogicallyDependsOn:          [{Feature: ["RandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/KnnRandomLog/"
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgQueryToDocAllSumFCountTextBm11Norm16384()" }
    ImplementationTime: "2018-08-15"
}

Factor {
    Index:              175
    CppName:            "FI_KNN_RANDOM_LOG_QUERY_AVG_XF_DT_SHOW_ALL_SUM_WF_SUM_W_BODY_MIN_WINDOW_SIZE"
    Name:               "KnnRandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize"
    Ticket:             "FACTOR-1725"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_RANDOM_LOG, TG_NN_OVER_FEATURES_USE, TG_DEPRECATED]
    UseArtifact:        {Name: "KnnExpansions"}
    Description:        "Среднее значение RandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize ближайших по knn запросов."
    # LogicallyDependsOn:          [{Feature: ["RandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/KnnRandomLog/"
    Authors:            ["alsafr", "tsimkha", "ptanusha", "mihaild"]
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgXfDtShowAllSumWFSumWBodyMinWindowSize()" }
    ImplementationTime: "2018-08-15"
}

Factor {
    Index:              176
    CppName:            "FI_IS_DESKTOP_REQUEST"
    Name:               "IsDesktopRequest"
    Ticket:             "FORMULA-686"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    Description:        "request came from yandsearch (rearr.is_desktop == 1) (https://wiki.yandex-team.ru/users/lpshka/platformfeatures)"
    Authors:            ["lpshka", "bochkarev"]
    Responsibles:       ["lpshka", "bochkarev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsDesktopRequest()" }
}

Factor {
    Index:              177
    CppName:            "FI_IS_MOBILE_REQUEST"
    Name:               "IsMobileRequest"
    Ticket:             "FORMULA-686"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    Description:        "request came from touchsearch (rearr.is_mobile == 1) (https://wiki.yandex-team.ru/users/lpshka/platformfeatures)"
    Authors:            ["lpshka", "bochkarev"]
    Responsibles:       ["lpshka", "bochkarev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsMobileRequest()" }
}

Factor {
    Index:              178
    CppName:            "FI_IS_TABLET_REQUEST"
    Name:               "IsTabletRequest"
    Ticket:             "FORMULA-686"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    Description:        "request came from padsearch (rearr.is_tablet == 1) (https://wiki.yandex-team.ru/users/lpshka/platformfeatures)"
    Authors:            ["lpshka", "bochkarev"]
    Responsibles:       ["lpshka", "bochkarev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsTabletRequest()" }
}

Factor {
    Index:              179
    CppName:            "FI_QUERY_DOPP_MEDIAN_DWELLTIME"
    Name:               "QueryDoppMedianDwelltime"
    Ticket:             "FACTOR-1978"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_L2, TG_UNDOCUMENTED, TG_NN_OVER_FEATURES_USE]
    Description:        "Медианный двеллтайм запроса за всю историю. Двеллтайм обрезается до 6000. Запрос нормализуется по доппельгангерам"
    Authors:            "mihaild"
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetMedianDwelltime()" }
    ImplementationTime: "2018-12-25"
    UseArtifact:        {Name: "QueryStaticFeaturesBigDict"}
}

Factor {
    Index:              180
    CppName:            "FI_QUERY_DOPP_MULTIPLE_CLICKS_SHOWS"
    Name:               "QueryDoppMultipleClicksShows"
    Ticket:             "FACTOR-1978"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_L2, TG_UNDOCUMENTED, TG_NN_OVER_FEATURES_USE]
    Description:        "Число показов запроса с более чем одним кликом за всю историю. Запрос нормализуется по доппельгангерам"
    Authors:            "mihaild"
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetMultipleClicksShows()" }
    ImplementationTime: "2018-12-25"
    UseArtifact:        {Name: "QueryStaticFeaturesBigDict"}
}

Factor {
    Index:              181
    CppName:            "FI_QUERY_DOPP_MULTIPLE_CLICKS_PROBABILITY"
    Name:               "QueryDoppMultipleClicksProbability"
    Ticket:             "FACTOR-1978"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_L2, TG_UNDOCUMENTED, TG_NN_OVER_FEATURES_USE]
    Description:        "Доля показов запроса с более чем одним кликом от всех показов за всю историю. Запрос нормализуется по доппельгангерам"
    Authors:            "mihaild"
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetMultipleClicksProbability()" }
    ImplementationTime: "2018-12-25"
    UseArtifact:        {Name: "QueryStaticFeaturesBigDict"}
}

Factor {
    Index:              182
    CppName:            "FI_QUERY_TO_TEXT_ALL_AVG"
    Name:               "QueryToTextAllAvg"
    Ticket:             "FACTOR-1959"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/lingboost/"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    UseArtifact:        {Name: "QueryToTextExpansions"}
    Description:        "Среднее значение для запросного фактора по данным лингвобустинга QueryToText, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetQueryToTextAllAvg()" }
    ImplementationTime: "2019-02-20"
}

Factor {
    Index:              183
    CppName:            "FI_QUERY_TO_TEXT_KNN_ALL_AVG"
    Name:               "QueryToTextKnnAllAvg"
    Ticket:             "FACTOR-1959"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/lingboost/"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_LINGBOOST, TG_NN_OVER_FEATURES_USE]
    UseArtifact:        {Name: "KnnExpansions"}
    Countries:          [CNT_ALL]
    Description:        "Среднее значение для запросного фактора по данным лингвобустинга QueryToTextByXfDtShowKnn, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetQueryToTextKnnAllAvg()" }
    ImplementationTime: "2019-02-20"
}

Factor {
    Index:              184
    CppName:            "FI_XFDT_SHOW_ALL_TOTAL_W"
    Name:               "XfDtShowAllTotalW"
    Ticket:             "FACTOR-1959"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/lingboost/"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    UseArtifact:        {Name: "XfDtExpansions"}
    Description:        "sum / (sum + 10) для запросного фактора по данным лингвобустинга XfDtShow, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetXfDtShowAllTotalW()" }
    ImplementationTime: "2019-02-20"
}

Factor {
    Index:              185
    CppName:            "FI_XFDT_SHOW_QUANTILE_01"
    Name:               "XfDtShowQuantile01"
    Ticket:             "FACTOR-1959"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/lingboost/"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    UseArtifact:        {Name: "XfDtExpansions"}
    Description:        "Квантиль 0.1 для запросного фактора по данным лингвобустинга XfDtShow, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetXfDtShowQuantile01()" }
    ImplementationTime: "2019-02-20"
}

Factor {
    Index:              186
    CppName:            "FI_XFDT_SHOW_KNN_QUANTILE_01"
    Name:               "XfDtShowKnnQuantile10"
    Ticket:             "FACTOR-1959"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/lingboost/"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_LINGBOOST, TG_NN_OVER_FEATURES_USE]
    UseArtifact:        {Name: "KnnExpansions"}
    Countries:          [CNT_ALL]
    Description:        "Квантиль 0.1 для запросного фактора по данным лингвобустинга XfDtShowKnn, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetXfDtShowKnnQuantile01()" }
    ImplementationTime: "2019-02-20"
}

Factor {
    Index:              187
    CppName:            "FI_XFDT_SHOW_KNN_QUANTILE_09"
    Name:               "XfDtShowKnnQuantile09"
    Ticket:             "FACTOR-1959"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/lingboost/"
    Tags:               [TG_NEURAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_KNN, TG_LINGBOOST, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    UseArtifact:        {Name: "KnnExpansions"}
    Description:        "Квантиль 0.9 для запросного фактора по данным лингвобустинга XfDtShowKnn, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetXfDtShowKnnQuantile09()" }
    ImplementationTime: "2019-02-20"
}

Factor {
    Index:              188
    CppName:            "FI_QFUF_ALL_TOTAL_WEIGHT"
    Name:               "QfufAllTotalWeight"
    Ticket:             "FACTOR-1959"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/lingboost/"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    UseArtifact:        {Name: "QfufExpansions"}
    Description:        "sum / (sum + 10) для запросного фактора по данным лингвобустинга Qfuf, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetQfufAllTotalWeight()" }
    ImplementationTime: "2019-02-20"
}

Factor {
    Index:              189
    CppName:            "FI_QFUF_ALL_AVG"
    Name:               "QfufAllAvg"
    Ticket:             "FACTOR-1959"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/lingboost/"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_LINGBOOST, TG_NN_OVER_FEATURES_USE]
    Countries:          [CNT_ALL]
    UseArtifact:        {Name: "QfufExpansions"}
    Description:        "Среднее значение для запросного фактора по данным лингвобустинга Qfuf, вычисляется в бегемотном правиле LingBoostQueryFeatures"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLingBoostQueryFeatures().GetQfufAllAvg()" }
    ImplementationTime: "2019-02-20"
}

Factor {
    Index:              190
    CppName:            "FI_IS_RELEV_LOCALE_UZ"
    Name:               "IsRelevLocaleUZ"
    Ticket:             "FACTOR-2049"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/getrelevancelocale/"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "relev_locale == uz"
    Authors:            ["ashagarov", "epar"]
    Responsibles:       ["ashagarov", "epar", "agafonov-v", "kamoksin"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleUZ()" }
    ImplementationTime: "2019-02-04"
}

Factor {
    Index:              191
    CppName:            "FI_QUERY_DOPP_TIME_FROM_PREVIOUS_PERCENTILE_25"
    Name:               "QueryDoppTimeFromPreviousPercentile25"
    Ticket:             "FACTOR-2074"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_USER_SEARCH, TG_L2, TG_UNDOCUMENTED, TG_NN_OVER_FEATURES_USE]
    Description:        "25% квантиль времени с предыдущего запроса перед текущим. Запрос нормализуется по доппельгангерам"
    Authors:            "mihaild"
    Responsibles:       ["mihaild", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetTimeFromPreviousPercentile25()" }
    ImplementationTime: "2019-03-10"
    UseArtifact:        {Name: "QueryStaticFeaturesBigDict"}
}

Factor {
    Index:              192
    CppName:            "FI_IS_MEMORANDUM_QUERY"
    Name:               "IsMemorandumQuery"
    Ticket:             "BEGEMOT-1720 SEARCHSPAM-14207"
    Tags:               [TG_UNUSED, TG_QUERY_ONLY, TG_BINARY, TG_OFTEN_ZERO, TG_L2]
    Description:        "Запрос был распознан как имеющий интент к объектам авторского права, защищаемых анти-пиратским меморандумом."
    Authors:            "ilnurkh"
    Responsibles:       ["ilnurkh", "bikulov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsMemorandumQuery()" }
    ImplementationTime: "2019-04-25"
}

Factor {
    Index:              193
    CppName:            "FI_VIDEO_INTENDANCE_PREDICT"
    Name:               "VideoIntendancePredict"
    Ticket:             "SEARCHSPAM-14207 FACTOR-2144"
    Tags:               [TG_UNIMPLEMENTED, TG_UNUSED, TG_QUERY_ONLY, TG_L2]
    Description:        "Перенормированный предикт ethos классификатора по разметке на уместность видео."
    Authors:            "ilnurkh"
    Responsibles:       ["ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetVideoIntendancePredict()" }
}

Factor {
    Index:              194
    CppName:            "FI_PIRACY_PREDICT"
    Name:               "PiracyPredict"
    Ticket:             "SEARCHSPAM-14207 FACTOR-2144"
    Tags:               [TG_UNIMPLEMENTED, TG_UNUSED, TG_QUERY_ONLY, TG_L2]
    Description:        "Перенормированный предикт ethos классификатора, обученного на синтетической выборке 'запрос характерный для пиратского сайта' vs 'запрос характерен для сайта далёкого от этого'"
    Authors:            "ilnurkh"
    Responsibles:       ["ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetPiracyPredict()" }
}

Factor {
    Index:              195
    CppName:            "FI_FREE_SLOT_195"
    Name:               "FREE_SLOT_195"
    Tags:               [TG_UNIMPLEMENTED, TG_UNUSED, TG_REMOVED]
    Description:        "в данном слоте ни когда не было не нулевой фичи"
}

Factor {
    Index:              196
    CppName:            "FI_STEVENSON_DSSM_PREDICTOR"
    Name:               "StevensonDssmPredictor"
    Ticket:             "SEARCHSPAM-14207 FACTOR-2144"
    Tags:               [TG_UNIMPLEMENTED, TG_UNUSED, TG_QUERY_ONLY, TG_L2]
    Description:        "Регрессия по dssm эмбедам на разделение меморандумных и нет запросов"
    Authors:            "ilnurkh"
    Responsibles:       ["ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetStevensonQueryDssmPredictor()" }
}

Factor {
    Index:              197
    CppName:            "FI_MEMORANDUM_PREDICT"
    Name:               "MemorandumPredict"
    Ticket:             "SEARCHSPAM-14207 FACTOR-2144"
    Tags:               [TG_UNIMPLEMENTED, TG_UNUSED, TG_QUERY_ONLY, TG_L2]
    Description:        "Перенормированный предикт ethos классификатора, обученного различать меморандумные запросы от рандома"
    Authors:            "ilnurkh"
    Responsibles:       ["ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetMemorandumPredict()" }
}

Factor {
    Index:              198
    CppName:            "FI_PIRACY_PREDICT_DSSM"
    Name:               "PiracyPredictDssm"
    Ticket:             "SEARCHSPAM-14207 FACTOR-2144"
    Tags:               [TG_UNIMPLEMENTED, TG_UNUSED, TG_QUERY_ONLY, TG_L2]
    Description:        "Регрессия по dssm эмбедам на разделение пирато специфичных и нет запросов"
    Authors:            "mihaild"
    Responsibles:       ["ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetPiracyPredictDssm()" }
}

Factor {
    Index:              199
    CppName:            "FI_IS_PIRATE_QUERY_SEARCH_8984"
    Name:               "IsPirateQuery_SEARCH_8984"
    Ticket:             "SEARCH-8984"
    Tags:               [TG_UNIMPLEMENTED, TG_UNUSED, TG_QUERY_ONLY, TG_BINARY, TG_L2]
    Description:        "Ручная формула классификатора п*ратскости запроса"
    Authors:            ["gotmanov", "sneg"]
    Responsibles:       ["gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsPirateQuery_SEARCH_8984()" }
}

Factor {
    Index:              200
    CppName:            "FI_IS_MEMORANDUM_QUERY_SEARCH_8984"
    Name:               "IsMemorandumQuery_SEARCH_8984"
    Ticket:             "SEARCH-8984"
    Tags:               [TG_UNIMPLEMENTED, TG_UNUSED, TG_QUERY_ONLY, TG_BINARY, TG_L2]
    Description:        "Ручная формула классификатора м*морандумности запроса"
    Authors:            ["gotmanov", "sneg"]
    Responsibles:       ["gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsMemorandumQuery_SEARCH_8984()" }
}

Factor {
    Index:              201
    CppName:            "FI_FRESH_REPORT_GLOBAL_NEAREST_TIME_AFTER_FINISH"
    Name:               "FreshReportGlobalNearestTimeAfterFinish"
    Ticket:             "BUKI-2885"
    Tags:               [TG_DATE, TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_NN_OVER_FEATURES_USE, TG_DEPRECATED]
    Description:        "Время прошедшее после спортивного события в запросе"
    Authors:            ["alejes"]
    Responsibles:       ["alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetWebFreshReportFactors().GetGlobalNearestTimeAfterFinish()" }
    ImplementationTime: "2019-09-11"
}

Factor {
    Index:              202
    CppName:            "FI_FRESH_REPORT_GLOBAL_NEAREST_TIME_BEFORE_START"
    Name:               "FreshReportGlobalNearestTimeBeforeStart"
    Ticket:             "BUKI-2885"
    Tags:               [TG_DATE, TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_NN_OVER_FEATURES_USE, TG_DEPRECATED]
    Description:        "Время оставшееся перед спортивным событием из запроса"
    Authors:            ["alejes"]
    Responsibles:       ["alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetWebFreshReportFactors().GetGlobalNearestTimeBeforeStart()" }
    ImplementationTime: "2019-09-11"
}

Factor {
    Index:              203
    CppName:            "FI_FRESH_REPORT_PAIRWISE_NEAREST_TIME_AFTER_FINISH"
    Name:               "FreshReportPairwiseNearestTimeAfterFinish"
    Ticket:             "BUKI-2885"
    Tags:               [TG_DATE, TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_NN_OVER_FEATURES_USE, TG_DEPRECATED]
    Description:        "Время прошедшее после спортивного события между несколькими командами"
    Authors:            ["alejes"]
    Responsibles:       ["alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetWebFreshReportFactors().GetPairwiseNearestTimeAfterFinish()" }
    ImplementationTime: "2019-09-11"
}

Factor {
    Index:              204
    CppName:            "FI_FRESH_REPORT_PAIRWISE_NEAREST_TIME_BEFORE_START"
    Name:               "FreshReportPairwiseNearestTimeBeforeStart"
    Ticket:             "BUKI-2885"
    Tags:               [TG_UNIMPLEMENTED, TG_UNUSED, TG_DATE, TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_DEPRECATED]
    Description:        "Время оставшееся перед спортивным событием между несколькими командами"
    Authors:            ["alejes"]
    Responsibles:       ["alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetWebFreshReportFactors().GetPairwiseNearestTimeBeforeStart()" }
}

Factor {
    Index:              205
    CppName:            "FI_FRESH_DAYS_BEFORE_QUERY"
    Name:               "FreshDaysBeforeQuery"
    Ticket:             "FRESHNESS-3793"
    Tags:               [TG_DATE, TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Разница между текущей датой, и датой в запросе (1 -- запрос про сегодняшнюю дату, 0 -- про дату 10 дней назад и моложе)"
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetWebFreshDateFactors().GetDaysBeforeFactor()" }
    ImplementationTime: "2019-09-12"
}

Factor {
    Index:              206
    CppName:            "FI_FRESH_DAYS_AFTER_QUERY"
    Name:               "FreshDaysAfterQuery"
    Ticket:             "FRESHNESS-3793"
    Tags:               [TG_UNIMPLEMENTED, TG_DATE, TG_UNUSED, TG_DYNAMIC, TG_QUERY_ONLY, TG_L2]
    Description:        "Разница между текущей датой, и датой в запросе (1 -- запрос про сегодняшнюю дату, 0 -- про дату через 10 дней и старше)"
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetWebFreshDateFactors().GetDaysAfterFactor()" }
}

Factor {
    Index:              207
    CppName:            "FI_DATE_PRESENTED_IN_QUERY"
    Name:               "FreshDatePresentedInQuery"
    Ticket:             "FRESHNESS-3793"
    Tags:               [TG_DATE, TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "В запросе присутствует одна дата"
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetWebFreshDateFactors().GetDateIsPresented()" }
    ImplementationTime: "2019-10-23"
}

Factor {
    Index:              208
    CppName:            "FI_WEEKDAY_QUERY_PROBABILITY"
    Name:               "WeekDayQueryProbability"
    Ticket:             "FACTOR-2180"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_DATE, TG_NN_OVER_FEATURES_USE]
    Description:        "Weekday query probability"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/WeekdayQueryProbability/"
    Authors:            ["arrin", "volverine"]
    Responsibles:       ["arrin", "volverine"]
    ImplementationTime: "2019-09-15"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetWeekDayQueryProbability()" }
}

Factor {
    Index:              209
    CppName:            "FI_RANDOM_LOG_QUERY_AVG_IS_BLOG"
    Name:               "RandomLogQueryAvgIsBlog"
    Ticket:             "FACTOR-2216"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_USER, TG_USER_SEARCH, TG_L2, TG_RANDOM_LOG, TG_USERFEAT_365D, TG_NN_OVER_FEATURES_USE]
    Description:        "Среднее значение IsBlog по запросу за год. Рассчитывается в оффлайне."
    # LogicallyDependsOn:          [{Feature: ["IsBlog"], Slice: "web_production"}]
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/factordev/web/factors/RandomLogMeta/"
    Authors:            "forlorn"
    Responsibles:       ["forlorn", "ptanusha"]
    ImplementationTime: "2019-10-25"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetKnnRandomLogQueryFactors().GetRandomLogQueryAvgIsBlog()" }
    UseArtifact:        {Name: "RandomLogQueryStaticFeaturesBigDict"}
}

Factor {
    Index:              210
    CppName:            "FI_IS_SERIAL_QUERY"
    Name:               "IsSerialQuery"
    Ticket:             "WEBFRESH-316"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_BINARY, TG_NN_OVER_FEATURES_USE, TG_L2]
    Description:        "В запросе есть название сериала и сериальный маркер (сериал, серия, все сезоны)."
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsSerialQuery()" }
    ImplementationTime: "2020-01-06"
}

Factor {
    Index:              211
    CppName:            "FI_IS_EXACT_SERIAL_QUERY"
    Name:               "IsExactSerialQuery"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_NN_OVER_FEATURES_USE, TG_L2]
    Ticket:             "WEBFRESH-316"
    Description:        "Is serial query with season and episode specified"
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsExactSerialQuery()" }
    ImplementationTime: "2020-01-06"
}

Factor {
    Index:              212
    CppName:            "FI_VIDEO_DISTANCE_TO_LAST_EPISODE"
    Name:               "DistanceToLastEpisode"
    Ticket:             "WEBFRESH-316"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_UNIMPLEMENTED]
    Description:        "Function from number of episodes between requested and last released episodes"
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDistanceToLastEpisode()" }
}

Factor {
    Index:              213
    CppName:            "FI_QUERY_WORLD_STABILITY"
    Name:               "QueryWorldStability"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_OFTEN_ZERO, TG_UNUSED, TG_UNIMPLEMENTED]
    Authors:            ["alejes", "miha715lev"]
    Responsibles:       ["alejes", "miha715lev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQueryWorldStability()" }
}

Factor {
    Index:              214
    CppName:            "FI_TOP_11_WORST_KERNEL_CLUSTERS"
    Name:               "Top11WorstKernelClusters"
    Ticket:             "FACTOR-2256"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_BINARY, TG_NEURAL, TG_L2, TG_UNDOCUMENTED, TG_NN_OVER_FEATURES_USE]
    Description:        "Попадание запроса в топ 11 кластеров по kernel метрике на основе dssm близости."
    Authors:            ["romanenko-ii"]
    Responsibles:       ["romanenko-ii", "ilnurkh"]
    UseArtifact:        {Name: "DssmCtrQueryCluster"}
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetTop11WorstKernelClusters()" }
    ImplementationTime: "2019-11-12"
}

Factor {
    Index:              215
    CppName:            "FI_TOVAR_CATEGORY_QUERY"
    Name:               "TovarCategoryQuery"
    Group:              "Query"
    AntiSeoUpperBound:  1.0
    Tags:               [TG_COMMERCIAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_REARR_USE, TG_DEPRECATED, TG_OFTEN_ZERO, TG_L2, TG_UNIMPLEMENTED]
    Description:        "В запросе упоминается товарная категория. Не используется (deprecated)"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetTovarCategoryQuery()" }
    # ImplementationTime: "2015-01-01" #technical value
}

Factor {
    Index:              216
    CppName:            "FI_TOVAR_VENDOR_QUERY"
    Name:               "TovarCategoryVendor"
    Group:              "Query"
    AntiSeoUpperBound:  1.0
    Tags:               [TG_COMMERCIAL, TG_QUERY_ONLY, TG_DYNAMIC, TG_REARR_USE, TG_DEPRECATED, TG_OFTEN_ZERO, TG_L2, TG_UNIMPLEMENTED]
    Description:        "В запросе упоминается вендор. Не используется (deprecated)"
    Responsibles:       "alsafr"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetTovarCategoryVendor()" }
    # ImplementationTime: "2015-01-01" #technical value
}

Factor {
    Index:              217
    CppName:            "FI_ALBUM_IN_QUERY"
    Name:               "AlbumInQuery"
    Ticket:             "ALICE-5638"
    Tags:               [TG_DYNAMIC, TG_BINARY, TG_QUERY_ONLY, TG_L2, TG_NN_OVER_FEATURES_USE, TG_USED_IN_CONF_REARR]
    Description:        "Наличие в лемматизированном запросе слова альбом"
    Authors:            ["anrodigina", "gotmanov"]
    Responsibles:       ["anrodigina", "gotmanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetPopularWordsInQueryFactors().GetAlbumInQuery()" }
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/popularwordsinquery/"
    ImplementationTime: "2020-03-11"
}

Factor {
    Index:              218
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_MATCH"
    Name:               "QueryWordDistanceToWordMatch"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова матч"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetMatch()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              219
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_HOKKEY"
    Name:               "QueryWordDistanceToWordHokkey"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова хоккей"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetHokkey()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              220
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_TRANSLYACIYA"
    Name:               "QueryWordDistanceToWordTranslyaciya"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова трансляция"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetTranslyaciya()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              221
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_CHEMPIONAT"
    Name:               "QueryWordDistanceToWordChempionat"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова чемпионат"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetChempionat()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              222
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_SERIAL"
    Name:               "QueryWordDistanceToWordSerial"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова сериал"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetSerial()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              223
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_SEGODNYA"
    Name:               "QueryWordDistanceToWordSegodnya"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова сегодня"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetSegodnya()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              224
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_POSLEDNIY"
    Name:               "QueryWordDistanceToWordPosledniy"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова последний"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetPosledniy()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              225
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_AVARIYA"
    Name:               "QueryWordDistanceToWordAvariya"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова авария"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetAvariya()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              226
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_NOVOSTI"
    Name:               "QueryWordDistanceToWordNovosti"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова новости"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetNovosti()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              227
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_SMERT"
    Name:               "QueryWordDistanceToWordSmert"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова смерть"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetSmert()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              228
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_FYTBOL"
    Name:               "QueryWordDistanceToWordFytbol"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова футбол"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetFytbol()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              229
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_DEN"
    Name:               "QueryWordDistanceToWordDen"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова день"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetDen()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              230
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_OTKRITKA"
    Name:               "QueryWordDistanceToWordOtkritka"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова открытка"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetOtkritka()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              231
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_KHL"
    Name:               "QueryWordDistanceToWordKhl"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова кхл"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetKhl()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              232
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_UFC"
    Name:               "QueryWordDistanceToWordUfc"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова ufc"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetUfc()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              233
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_REZULTATI"
    Name:               "QueryWordDistanceToWordRezultati"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова результаты"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetRezultati()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              234
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_RASPISANIE"
    Name:               "QueryWordDistanceToWordRaspisanie"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова расписание"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetRaspisanie()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              235
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_SVEZHIE"
    Name:               "QueryWordDistanceToWordSvezhie"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова свежие"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetSvezhie()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              236
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_BIOGRAPHIYA"
    Name:               "QueryWordDistanceToWordBiographiya"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова биография"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetBiographiya()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              237
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_VCHERASHNIY"
    Name:               "QueryWordDistanceToWordVcherashniy"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова вчерашний"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetVcherashniy()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              238
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_PROGNOZ"
    Name:               "QueryWordDistanceToWordPrognoz"
    Ticket:             "WEBFRESH-325"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова прогноз"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetPrognoz()" }
    ImplementationTime: "2020-03-24"
}

Factor {
    Index:              239
    CppName:            "FI_IS_CTR_DSSM_CLUSTER_NUMBER_34"
    Name:               "IsCtrDssmClusterNumber34"
    Ticket:             "FACTOR-2256"
    Tags:               [TG_QUERY_ONLY, TG_DYNAMIC, TG_BINARY, TG_NEURAL, TG_L2, TG_UNDOCUMENTED, TG_NN_OVER_FEATURES_USE, TG_UNIMPLEMENTED]
    Description:        "Запроса попал в 34-ый кластер на основе ctr-dssm близости."
    Authors:            ["ilnurkh"]
    Responsibles:       ["romanenko-ii", "ilnurkh"]
    UseArtifact:        {Name: "DssmCtrQueryCluster"}
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsCtrDssmClusterNumber34()" }
    # ImplementationTime: "2020-04-30"
}

Factor {
    Index:              240
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_CORONAVIRUS"
    Name:               "QueryWordDistanceToWordCoronavirus"
    Ticket:             "WEBFRESH-605"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова коронавирус"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetCoronavirus()" }
    ImplementationTime: "2020-05-15"
}

Factor {
    Index:              241
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_KUPIT"
    Name:               "QueryWordDistanceToWordKupit"
    Ticket:             "COMMERCIAL-6"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова купить"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetKupit()" }
    ImplementationTime: "2020-07-12"
}

Factor {
    Index:              242
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_CENA"
    Name:               "QueryWordDistanceToWordCena"
    Ticket:             "COMMERCIAL-6"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова цена"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetCena()" }
    ImplementationTime: "2020-07-12"
}

Factor {
    Index:              243
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_TOVAR"
    Name:               "QueryWordDistanceToWordTovar"
    Ticket:             "COMMERCIAL-6"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова товар"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetTovar()" }
    ImplementationTime: "2020-07-12"
}

Factor {
    Index:              244
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_HARAKTERISTIKI"
    Name:               "QueryWordDistanceToWordHarakteristiki"
    Ticket:             "COMMERCIAL-6"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова характеристики"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetHarakteristiki()" }
    ImplementationTime: "2020-07-12"
}

Factor {
    Index:              245
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_DOSTAVKA"
    Name:               "QueryWordDistanceToWordDostavka"
    Ticket:             "COMMERCIAL-6"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова доставка"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetDostavka()" }
    ImplementationTime: "2020-07-12"
}

Factor {
    Index:              246
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_PLATNO"
    Name:               "QueryWordDistanceToWordPlatno"
    Ticket:             "COMMERCIAL-6"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова платно"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetPlatno()" }
    ImplementationTime: "2020-07-12"
}

Factor {
    Index:              247
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_ANALOG"
    Name:               "QueryWordDistanceToWordAnalog"
    Ticket:             "COMMERCIAL-6"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова аналог"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetAnalog()" }
    ImplementationTime: "2020-07-12"
}

Factor {
    Index:              248
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_RASPRODAZHA"
    Name:               "QueryWordDistanceToWordRasprodazha"
    Ticket:             "COMMERCIAL-6"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова распродажа"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetRasprodazha()" }
    ImplementationTime: "2020-07-12"
}

Factor {
    Index:              249
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_RASSROCHKA"
    Name:               "QueryWordDistanceToWordRassrochka"
    Ticket:             "COMMERCIAL-6"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова рассрочка"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetRassrochka()" }
    ImplementationTime: "2020-07-12"
}

Factor {
    Index:              250
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_ARENDA"
    Name:               "QueryWordDistanceToWordArenda"
    Ticket:             "COMMERCIAL-6"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова аренда"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetArenda()" }
    ImplementationTime: "2020-07-12"
}

Factor {
    Index:              251
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_KATALOG"
    Name:               "QueryWordDistanceToWordKatalog"
    Ticket:             "COMMERCIAL-6"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова каталог"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetKatalog()" }
    ImplementationTime: "2020-07-12"
}

Factor {
    Index:              252
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_MAGAZIN"
    Name:               "QueryWordDistanceToWordMagazin"
    Ticket:             "COMMERCIAL-6"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова магазин"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetMagazin()" }
    ImplementationTime: "2020-07-12"
}

Factor {
    Index:              253
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_SMOTRET"
    Name:               "QueryWordDistanceToWordSmotret"
    Ticket:             "COMMERCIAL-9"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова смотреть"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetSmotret()" }
    ImplementationTime: "2020-07-20"
}

Factor {
    Index:              254
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_FILM"
    Name:               "QueryWordDistanceToWordFilm"
    Ticket:             "COMMERCIAL-9"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова фильм"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetFilm()" }
    ImplementationTime: "2020-07-20"
}

Factor {
    Index:              255
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_SEZON"
    Name:               "QueryWordDistanceToWordSezon"
    Ticket:             "COMMERCIAL-9"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова сезон"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetSezon()" }
    ImplementationTime: "2020-07-20"
}

Factor {
    Index:              256
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_BESPLATNO"
    Name:               "QueryWordDistanceToWordBesplatno"
    Ticket:             "COMMERCIAL-9"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова бесплатно"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetBesplatno()" }
    ImplementationTime: "2020-07-20"
}

Factor {
    Index:              257
    CppName:            "FI_DSSM_CATEGORY_POPULARITY_CONSTRUCTION"
    Name:               "DssmCategoryPopularityConstruction"
    Ticket:             "COMMERCIAL-15"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что отобранные хосты из категории Construction являются популярными для данного запроса согласно соответствующей dssm-модели"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCommercialCategories().GetConstruction()" }
    ImplementationTime: "2020-07-23"
}

Factor {
    Index:              258
    CppName:            "FI_DSSM_CATEGORY_POPULARITY_WEAR"
    Name:               "DssmCategoryPopularityWear"
    Ticket:             "COMMERCIAL-15"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что отобранные хосты из категории Wear являются популярными для данного запроса согласно соответствующей dssm-модели"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCommercialCategories().GetWear()" }
    ImplementationTime: "2020-07-23"
}

Factor {
    Index:              259
    CppName:            "FI_DSSM_CATEGORY_POPULARITY_HEALTH"
    Name:               "DssmCategoryPopularityHealth"
    Ticket:             "COMMERCIAL-15"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что отобранные хосты из категории Health являются популярными для данного запроса согласно соответствующей dssm-модели"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCommercialCategories().GetHealth()" }
    ImplementationTime: "2020-07-23"
}

Factor {
    Index:              260
    CppName:            "FI_DSSM_CATEGORY_POPULARITY_FOOD"
    Name:               "DssmCategoryPopularityFood"
    Ticket:             "COMMERCIAL-15"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что отобранные хосты из категории Food являются популярными для данного запроса согласно соответствующей dssm-модели"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCommercialCategories().GetFood()" }
    ImplementationTime: "2020-07-23"
}

Factor {
    Index:              261
    CppName:            "FI_DSSM_CATEGORY_POPULARITY_FURNITURE"
    Name:               "DssmCategoryPopularityFurniture"
    Ticket:             "COMMERCIAL-15"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что отобранные хосты из категории Furniture являются популярными для данного запроса согласно соответствующей dssm-модели"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCommercialCategories().GetFurniture()" }
    ImplementationTime: "2020-07-23"
}

Factor {
    Index:              262
    CppName:            "FI_DSSM_CATEGORY_POPULARITY_TRAVEL"
    Name:               "DssmCategoryPopularityTravel"
    Ticket:             "COMMERCIAL-15"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что отобранные хосты из категории Travel являются популярными для данного запроса согласно соответствующей dssm-модели"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCommercialCategories().GetTravel()" }
    ImplementationTime: "2020-07-23"
}

Factor {
    Index:              263
    CppName:            "FI_DSSM_CATEGORY_POPULARITY_MARKETPLACE"
    Name:               "DssmCategoryPopularityMarketplace"
    Ticket:             "COMMERCIAL-15"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что отобранные хосты из категории Marketplace являются популярными для данного запроса согласно соответствующей dssm-модели"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCommercialCategories().GetMarketplace()" }
    ImplementationTime: "2020-07-23"
}

Factor {
    Index:              264
    CppName:            "FI_DSSM_CATEGORY_POPULARITY_BOOK"
    Name:               "DssmCategoryPopularityBook"
    Ticket:             "COMMERCIAL-15"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что отобранные хосты из категории Book являются популярными для данного запроса согласно соответствующей dssm-модели"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCommercialCategories().GetBook()" }
    ImplementationTime: "2020-07-23"
}

Factor {
    Index:              265
    CppName:            "FI_DSSM_CATEGORY_POPULARITY_ELECTRON"
    Name:               "DssmCategoryPopularityElectron"
    Ticket:             "COMMERCIAL-15"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что отобранные хосты из категории Electron являются популярными для данного запроса согласно соответствующей dssm-модели"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCommercialCategories().GetElectron()" }
    ImplementationTime: "2020-07-23"
}

Factor {
    Index:              266
    CppName:            "FI_DSSM_CATEGORY_POPULARITY_BOARD"
    Name:               "DssmCategoryPopularityBoard"
    Ticket:             "COMMERCIAL-15"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что отобранные хосты из категории Board являются популярными для данного запроса согласно соответствующей dssm-модели"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCommercialCategories().GetBoard()" }
    ImplementationTime: "2020-07-23"
}

Factor {
    Index:              267
    CppName:            "FI_DSSM_CATEGORY_POPULARITY_SERVICE"
    Name:               "DssmCategoryPopularityService"
    Ticket:             "COMMERCIAL-15"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что отобранные хосты из категории Service являются популярными для данного запроса согласно соответствующей dssm-модели"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCommercialCategories().GetService()" }
    ImplementationTime: "2020-07-23"
}

Factor {
    Index:              268
    CppName:            "FI_DSSM_CATEGORY_POPULARITY_AUTO"
    Name:               "DssmCategoryPopularityAuto"
    Ticket:             "COMMERCIAL-15"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что отобранные хосты из категории Auto являются популярными для данного запроса согласно соответствующей dssm-модели"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCommercialCategories().GetAuto()" }
    ImplementationTime: "2020-07-23"
}

Factor {
    Index:              269
    CppName:            "FI_DSSM_CATEGORY_POPULARITY_CINEMA"
    Name:               "DssmCategoryPopularityCinema"
    Ticket:             "COMMERCIAL-15"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Вероятность того, что отобранные хосты из категории Cinema являются популярными для данного запроса согласно соответствующей dssm-модели"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetCommercialCategories().GetCinema()" }
    ImplementationTime: "2020-07-23"
}

Factor {
    Index:              270
    CppName:            "FI_QUERY_COVERAGE_BY_SERIAL_DICT"
    Name:               "QueryCoverageBySerialDict"
    Ticket:             "COMMERCIAL-24"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Пословное покрытие запроса словарем с названиями сериалов"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDictCoverages().GetSerialDictCoverage()" }
    ImplementationTime: "2020-07-27"
}

Factor {
    Index:              271
    CppName:            "FI_QUERY_COVERAGE_BY_FILM_DICT"
    Name:               "QueryCoverageByFilmDict"
    Ticket:             "COMMERCIAL-24"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Пословное покрытие запроса словарем с названиями фильмов"
    Authors:            ["hygge", "alejes"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDictCoverages().GetFilmDictCoverage()" }
    ImplementationTime: "2020-07-27"
}

Factor {
    Index:              272
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_LECHENIE"
    Name:               "QueryWordDistanceToWordLechenie"
    Ticket:             "COMMERCIAL-52"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова лечение"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetLechenie()" }
    ImplementationTime: "2020-08-27"
}

Factor {
    Index:              273
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_APTEKA"
    Name:               "QueryWordDistanceToWordApteka"
    Ticket:             "COMMERCIAL-52"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова аптека"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetApteka()" }
    ImplementationTime: "2020-08-27"
}

Factor {
    Index:              274
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_PROSTUDA"
    Name:               "QueryWordDistanceToWordProstuda"
    Ticket:             "COMMERCIAL-52"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова простуда"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetProstuda()" }
    ImplementationTime: "2020-08-27"
}

Factor {
    Index:              275
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_DIETA"
    Name:               "QueryWordDistanceToWordDieta"
    Ticket:             "COMMERCIAL-52"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова диета"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetDieta()" }
    ImplementationTime: "2020-08-27"
}

Factor {
    Index:              276
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_MAZ"
    Name:               "QueryWordDistanceToWordMaz"
    Ticket:             "COMMERCIAL-52"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова мазь"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetMaz()" }
    ImplementationTime: "2020-08-27"
}

Factor {
    Index:              277
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_SREDSTVO"
    Name:               "QueryWordDistanceToWordSredstvo"
    Ticket:             "COMMERCIAL-52"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова средство"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetSredstvo()" }
    ImplementationTime: "2020-08-27"
}

Factor {
    Index:              278
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_RECEPT"
    Name:               "QueryWordDistanceToWordRecept"
    Ticket:             "COMMERCIAL-52"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова рецепт"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetRecept()" }
    ImplementationTime: "2020-08-27"
}

Factor {
    Index:              279
    CppName:            "FI_QUERY_WORD_DISTANCE_TO_WORD_ZIVOT"
    Name:               "QueryWordDistanceToWordZivot"
    Ticket:             "COMMERCIAL-52"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_USER_SEARCH_ONLY, TG_NEURAL, TG_NN_OVER_FEATURES_USE]
    Description:        "Dssm расстояние от запроса до слова живот"
    Authors:            ["hygge", "alejes", "arrin"]
    Responsibles:       ["hygge", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetDssmWords().GetZivot()" }
    ImplementationTime: "2020-08-27"
}

Factor {
    Index:              280
    CppName:            "FI_QUERY_PURCHASE_PREDICTION"
    Name:               "QueryPurchasePrediction"
    Ticket:             "COMMERCIAL-65"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_USER, TG_USER_SEARCH, TG_NEURAL, TG_METRIKA, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Dssm предсказание потраченных денег на запросе"
    Authors:            "alejes"
    Responsibles:       "alejes"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQueryPurchasePrediction()" }
    # ImplementationTime: "2020-08-27"
}

Factor {
    Index:              281
    CppName:            "FI_IS_MEDICAL_QUERY"
    Name:               "IsMedicalQuery"
    Ticket:             "SENS-24"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_REARR_USE, TG_USE_MARKUP, TG_USED_IN_CONF_REARR]
    Description:        "Предсказание классификатора того, что запрос является медицинским"
    Authors:            "arrin"
    Responsibles:       ["arrin", "hommforever"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsMedicalQuery()" }
    ImplementationTime: "2021-03-31"
}

Factor {
    Index:              282
    CppName:            "FI_IS_LAW_QUERY"
    Name:               "IsLawQuery"
    Ticket:             "SENS-73"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_REARR_USE, TG_USE_MARKUP, TG_NOT_01, TG_USED_IN_CONF_REARR]
    MinValue:           -2
    MaxValue:            2
    Description:        "Предсказание классификатора того, что запрос является юридическим"
    Authors:            "ivaninap"
    Responsibles:       ["ivaninap", "hommforever"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsLawQuery()" }
    ImplementationTime: "2021-03-31"
}

Factor {
    Index:              283
    CppName:            "FI_IS_FINANCIAL_QUERY"
    Name:               "IsFinancialQuery"
    Ticket:             "SENS-73"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_REARR_USE, TG_USE_MARKUP, TG_NOT_01, TG_USED_IN_CONF_REARR]
    MinValue:           -2
    MaxValue:            2
    Description:        "Предсказание классификатора того, что запрос является финансовым"
    Authors:            "ivaninap"
    Responsibles:       ["ivaninap", "hommforever"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsFinancialQuery()" }
    ImplementationTime: "2021-03-31"
}

Factor {
    Index:              284
    CppName:            "FI_IS_SOS_QUERY"
    Name:               "IsSosQuery"
    Ticket:             "SENS-83"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_REARR_USE, TG_USE_MARKUP, TG_NOT_01, TG_USED_IN_CONF_REARR]
    MinValue:           -2
    MaxValue:            2
    Description:        "Предсказание классификатора, что запроc sos тематики"
    Authors:            "nenashevna"
    Responsibles:       ["nenashevna", "hommforever"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsSosQuery()" }
    ImplementationTime: "2021-03-31"
}

Factor {
    Index:              285
    CppName:            "FI_IS_NAVIGATIONAL_QUERY"
    Name:               "IsNavigationalQuery"
    Ticket:             "BERT-380"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_REARR_USE, TG_USE_MARKUP]
    Description:        "Предсказание классификатора, что запрос навигационный"
    Authors:            "arrin"
    Responsibles:       "arrin"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsNavigationalQuery()" }
    ImplementationTime: "2021-02-19"
}

Factor {
    Index:              286
    CppName:            "FI_IS_RELEV_LOCALE_XUSSR"
    Name:               "IsRelevLocaleXUSSR"
    Ticket:             "BUKI-2989"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/getrelevancelocale/"
    Tags:               [TG_BINARY, TG_DYNAMIC, TG_QUERY_ONLY, TG_LOCALIZED_COUNTRY, TG_L2, TG_USED_IN_CONF_REARR]
    Countries:          [CNT_ALL]
    Authors:            ["ilnurkh"]
    Responsibles:       ["ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsRelevLocaleXUSSR()" }
    ImplementationTime: "2021-02-15"
}

Factor {
    Index:              287
    CppName:            "FI_IS_EXPECTED_SAFE_ANSWER_QUERY"
    Name:               "IsExpectedSafeAnswerQuery"
    Ticket:             "SENS-127"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_NEURAL, TG_THEME_CLASSIF, TG_REARR_USE, TG_USE_MARKUP, TG_UNUSED, TG_NOT_01, TG_USED_IN_CONF_REARR]
    MinValue:           -2
    MaxValue:            2
    Description:        "Предсказание классификатора, что запрос белый (т.е жесть по нему показывать не стоит)"
    Authors:            "nenashevna"
    Responsibles:       ["nenashevna", "hommforever"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsExpectedSafeAnswerQuery()" }
    ImplementationTime: "2021-02-17"
}

Factor {
    Index:              288
    CppName:            "FI_QUERY_COMPLEXITY"
    Name:               "QueryComplexity"
    Ticket:             "FACTOR-2485"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_NEURAL, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Dssm предсказание сложности запроса"
    Authors:            ["alejes", "i-vainn"]
    Responsibles:       ["alejes", "i-vainn"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetComplexity()" }
}

Factor {
    Index:              289
    CppName:            "FI_IS_QUERY_CONTAINS_QUOTES"
    Name:               "IsQueryContainsQuotes"
    Ticket:             "LOWSEARCH-20"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_BINARY, TG_USED_IN_CONF_REARR]
    Description:        "Есть ли в запросе кавычки"
    Authors:            ["timuratshin"]
    Responsibles:       ["timuratshin"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsQueryContainsQuotes()" }
    ImplementationTime: "2021-05-31"
}

Factor {
    Index:              290
    CppName:            "FI_IS_QUERY_CONTAINS_MINUS_WORDS"
    Name:               "IsQueryContainsMinusWords"
    Ticket:             "LOWSEARCH-20"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_BINARY, TG_USED_IN_CONF_REARR]
    Description:        "Есть ли в запросе минус-слова"
    Authors:            ["timuratshin"]
    Responsibles:       ["timuratshin"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsQueryContainsMinusWords()" }
    ImplementationTime: "2021-05-31"
}

Factor {
    Index:              291
    CppName:            "FI_IS_QUERY_CONTAINS_PLUS_WORDS"
    Name:               "IsQueryContainsPlusWords"
    Ticket:             "LOWSEARCH-20"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_BINARY, TG_USED_IN_CONF_REARR]
    Description:        "Есть ли в запросе плюс-слова"
    Authors:            ["timuratshin"]
    Responsibles:       ["timuratshin"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsQueryContainsPlusWords()" }
    ImplementationTime: "2021-05-31"
}

Factor {
    Index:              292
    CppName:            "FI_IS_QUERY_WHOLE_QUOTED"
    Name:               "IsQueryWholeQuoted"
    Ticket:             "LOWSEARCH-20"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_BINARY]
    Description:        "Является ли запрос полностью цитатой"
    Authors:            ["timuratshin"]
    Responsibles:       ["timuratshin"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsQueryWholeQuoted()" }
    ImplementationTime: "2021-05-31"
}

Factor {
    Index:              293
    CppName:            "FI_IS_SEO_QUERY"
    Name:               "IsSeoQuery"
    Ticket:             "SEARCHSPEC-58"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_BINARY, TG_UNDOCUMENTED, TG_UNIMPLEMENTED, TG_UNUSED]
    Description:        "Индикатор - является ли запрос seo-запросом"
    Authors:            "nenashevna"
    Responsibles:       ["nenashevna"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsSeoQuery()" }
}

Factor {
    Index:              294
    CppName:            "FI_IS_SEO_QUERY_LIST_1"
    Name:               "IsSeoQueryList1"
    Ticket:             "SEARCHSPEC-58"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_BINARY, TG_UNDOCUMENTED, TG_UNIMPLEMENTED, TG_UNUSED]
    Description:        "Индикатор - является ли запрос seo-запросом из списка №1"
    Authors:            "nenashevna"
    Responsibles:       ["nenashevna"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsSeoQueryList1()" }
}

Factor {
    Index:              295
    CppName:            "FI_IS_SEO_QUERY_LIST_2"
    Name:               "IsSeoQueryList2"
    Ticket:             "SEARCHSPEC-58"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_BINARY, TG_UNDOCUMENTED, TG_UNIMPLEMENTED, TG_UNUSED]
    Description:        "Индикатор - является ли запрос seo-запросом из списка №2"
    Authors:            "nenashevna"
    Responsibles:       ["nenashevna"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsSeoQueryList2()" }
}

Factor {
    Index:              296
    CppName:            "FI_REMOVED_296"
    Name:               "IsCSQuery"
    Tags:               [TG_REMOVED]
    Description:        "IsCSQuery FI_IS_CS_QUERY"
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "0.f" }
}

Factor {
    Index:              297
    CppName:            "FI_HAS_FIO_IN_QUERY"
    Name:               "HasFioInQuery"
    Ticket:             "SEARCHSPEC-92"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2, TG_BINARY, TG_UNDOCUMENTED, TG_UNUSED]
    Description:        "Запрос содержит ФИО из Fio правила"
    Authors:            "anrodigina"
    Responsibles:       ["anrodigina"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetHasFioInQuery()" }
    ImplementationTime: "2021-08-30"
}

Factor {
    Index:              298
    CppName:            "FI_HAS_TRACK_IN_QUERY"
    Name:               "HasTrackInQuery"
    Ticket:             "BUKI-3050"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_REARR_USE, TG_OFTEN_ZERO, TG_USED_IN_CONF_REARR]
    Description:        "Запрос содержит слово песня или трек"
    Authors:            ["vl-trifonov"]
    Responsibles:       ["vl-trifonov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetPopularWordsInQueryFactors().GetTrackInQuery()" }
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/popularwordsinquery/"
    ImplementationTime: "2021-09-17"
}

Factor {
    Index:              299
    CppName:            "FI_IS_ALICE_MUSIC_QUERY"
    Name:               "IsAliceMusicQuery"
    Ticket:             "BUKI-3050"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_REARR_USE, TG_OFTEN_ZERO, TG_UNDOCUMENTED, TG_UNIMPLEMENTED]
    Description:        "Музыкальный запрос из Алисы"
    Authors:            ["vl-trifonov"]
    Responsibles:       ["vl-trifonov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsAliceMusicQuery()" }
}

Factor {
    Index:              300
    CppName:            "FI_IS_MOBILE_STORE_QUERY"
    Name:               "IsMobileStoreQuery"
    Ticket:             "BUKI-3045"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_REARR_USE, TG_UNUSED, TG_USED_IN_CONF_REARR]
    Description:        "Предсказание классификатора того, что по запросу нужно показывать урл из мобильного маркета"
    Authors:            "kolina93"
    Responsibles:       ["ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsMobileStoreQuery()" }
    ImplementationTime: "2021-08-11"
}

Factor {
    Index:              301
    CppName:            "FI_IS_SERVICE_PLUS_QUERY"
    Name:               "IsServicePlusQuery"
    Ticket:             "CONTENTQUALITY-181"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_REARR_USE, TG_UNUSED, TG_UNIMPLEMENTED, TG_NOT_01]
    MinValue:           -7
    MaxValue:           7
    Description:        "Предсказание классификатора на особо коммерческие запросы"
    Authors:            "makkolts"
    Responsibles:       ["makkolts", "bikulov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsServicePlusQuery()" }
}

Factor {
    Index:              302
    CppName:            "FI_IS_CP_QUERY"
    Name:               "IsCPQuery"
    Ticket:             "SEARCHSPAM-16001"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_UNUSED]
    Description:        "Предсказание классификатора CP запросов"
    Authors:            "tsbalzhanov"
    Responsibles:       ["tsbalzhanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsCPQuery()" }
    ImplementationTime: "2022-04-07"
}

Factor {
    Index:              303
    CppName:            "FI_IS_CS_QUERY_V2"
    Name:               "IsCSQueryV2"
    Ticket:             "BEGEMOT-2588"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_USED_IN_CONF_REARR]
    Description:        "Запросный классификатор программистских запросов v2"
    Authors:            "romanenko-ii"
    Responsibles:       ["romanenko-ii", "gusdzerzhi"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsCSQueryV2()" }
    ImplementationTime: "2021-09-20"
}

Factor {
    Index:              304
    CppName:            "FI_IS_APPLIANCE_REPAIR_QUERY"
    Name:               "IsApplianceRepairQuery"
    Ticket:             "SEARCHSKK-58"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_REARR_USE, TG_UNUSED, TG_UNIMPLEMENTED, TG_NOT_01]
    MinValue:           -7
    MaxValue:           7
    Description:        "Классификатор запроса на услуги ремонта техники: офисной, бытовой, компьютеров, телефонов"
    Authors:            "ashaposhnikov"
    Responsibles:       ["ashaposhnikov", "bikulov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsApplianceRepairQuery()" }
}

Factor {
    Index:              305
    CppName:            "FI_QUERY_WITH_PHONE_NUMBER"
    Name:               "QueryWithPhoneNumber"
    Ticket:             "SEARCHPLAY-37"
    Tags:               [TG_QUERY_ONLY, TG_USER, TG_L2]
    Description:        "PhoneNumberRule в бегемоте распарсило телефонный номер в запросе."
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQueryWithPhoneNumber()" }
    ImplementationTime: "2021-11-24"
}

Factor {
    Index:              306
    CppName:            "FI_EXPERT_PRO_GOOGLE_QUERY"
    Name:               "ExpertProGoogleQuery"
    Ticket:             "EXPERTISE-304"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER_SEARCH, TG_TOLOKA, TG_USE_MARKUP, TG_L2, TG_NEURAL]
    Description:        "Классификатор запроса на pro-google экспертность."
    Authors:            ["miha715lev", "alejes"]
    Responsibles:       ["miha715lev", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetExpertProGoogleQuery()" }
    ImplementationTime: "2022-02-17"
}

Factor {
    Index:              307
    CppName:            "FI_LATINISTIC_QUERY"
    Name:               "LatinisticQuery"
    Ticket:             "EXPERTISE-304"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_L2]
    Description:        "Запрос является латиническим."
    Authors:            ["miha715lev", "alejes"]
    Responsibles:       ["miha715lev", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetLatinisticQuery()" }
    ImplementationTime: "2022-02-04"
}

Factor {
    Index:              308
    CppName:            "FI_DSSM_PORNO_QUERY"
    Name:               "DssmIsPornoQuery"
    Ticket:             "CLEANWEB-1844"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_UNUSED]
    Description:        "Является ли запрос порнушным."
    Authors:            "denyhoof"
    Responsibles:       ["denyhoof", "tsbalzhanov"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsDssmPornoQuery()" }
    ImplementationTime: "2022-04-07"
}

Factor {
    Index:              309
    CppName:            "FI_CONST_1"
    Name:               "Const1"
    Ticket:             ""
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_UNIMPLEMENTED]
    Description:        "Константа 1"
    Authors:            "ilnurkh"
    Responsibles:       ["ilnurkh", "ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "1.f" }
}

Factor {
    Index:              310
    CppName:            "FI_BEGEMOT_FACTOR_RESERVE_0"
    Name:               "BegemotFactorReserve0"
    Ticket:             "SEARCHPLAY-121"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Запасной фактор для быстрого добавления функционала"
    Authors:            "bomkvilt"
    Responsibles:       ["bomkvilt", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetBegemotFactorReserve0()" }
}

Factor {
    Index:              311
    CppName:            "FI_BEGEMOT_FACTOR_RESERVE_1"
    Name:               "BegemotFactorReserve1"
    Ticket:             "SEARCHPLAY-121"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Запасной фактор для быстрого добавления функционала"
    Authors:            "bomkvilt"
    Responsibles:       ["bomkvilt", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetBegemotFactorReserve1()" }
}

Factor {
    Index:              312
    CppName:            "FI_BEGEMOT_FACTOR_RESERVE_2"
    Name:               "BegemotFactorReserve2"
    Ticket:             "SEARCHPLAY-121"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Запасной фактор для быстрого добавления функционала"
    Authors:            "bomkvilt"
    Responsibles:       ["bomkvilt", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetBegemotFactorReserve2()" }
}

Factor {
    Index:              313
    CppName:            "FI_BEGEMOT_FACTOR_RESERVE_3"
    Name:               "BegemotFactorReserve3"
    Ticket:             "SEARCHPLAY-121"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Запасной фактор для быстрого добавления функционала"
    Authors:            "bomkvilt"
    Responsibles:       ["bomkvilt", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetBegemotFactorReserve3()" }
}

Factor {
    Index:              314
    CppName:            "FI_BEGEMOT_FACTOR_RESERVE_4"
    Name:               "BegemotFactorReserve4"
    Ticket:             "SEARCHPLAY-121"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Запасной фактор для быстрого добавления функционала"
    Authors:            "bomkvilt"
    Responsibles:       ["bomkvilt", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetBegemotFactorReserve4()" }
}

Factor {
    Index:              315
    CppName:            "FI_BEGEMOT_FACTOR_RESERVE_5"
    Name:               "BegemotFactorReserve5"
    Ticket:             "SEARCHPLAY-121"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Запасной фактор для быстрого добавления функционала"
    Authors:            "bomkvilt"
    Responsibles:       ["bomkvilt", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetBegemotFactorReserve5()" }
}

Factor {
    Index:              316
    CppName:            "FI_IS_CP_QUERY_V2"
    Name:               "IsCPQueryV2"
    Ticket:             "SEARCHSPAM-16084"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_UNUSED]
    Description:        "Предсказание классификатора CP запросов"
    Authors:            "luoji"
    Responsibles:       ["tsbalzhanov", "denyhoof"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsCPQueryV2()" }
    ImplementationTime: "2022-04-07"
}
Factor {
    Index:              317
    CppName:            "FI_IS_VIOLENT_QUERY"
    Name:               "IsViolentQuery"
    Ticket:             "SEARCHSPAM-16169"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_UNUSED, TG_NOT_01]
    MinValue:           -7
    MaxValue:           7
    Description:        "Предсказание запросного классификатора насилия"
    Authors:            "tsbalzhanov"
    Responsibles:       ["tsbalzhanov", "denyhoof"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsViolentQuery()" }
    ImplementationTime: "2022-04-07"
}

Factor {
    Index:              318
    CppName:            "FI_IS_ABOUT_WEAPONS_OR_DRUGS_QUERY"
    Name:               "IsAboutWeaponsOrDrugsQuery"
    Ticket:             "SEARCHSPAM-16169"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_UNUSED, TG_NOT_01]
    MinValue:           -7
    MaxValue:           7
    Description:        "Предсказание запросного классификатора оружия или наркотиков"
    Authors:            "tsbalzhanov"
    Responsibles:       ["tsbalzhanov", "denyhoof"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsAboutWeaponsOrDrugsQuery()" }
    ImplementationTime: "2022-04-07"
}

Factor {
    Index:              319
    CppName:            "FI_IS_COOKING_QUERY"
    Name:               "IsCookingQuery"
    Ticket:             "SEARCHSPEC-320"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_UNIMPLEMENTED]
    Description:        "Предсказание классификатора, что запрос кулинарной тематики"
    Authors:            "nenashevna"
    Responsibles:       ["nenashevna", "hommforever"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsCookingQuery()" }
}

Factor {
    Index:              320
    CppName:            "FI_IS_STRONG_INTER_COOKING_QUERY"
    Name:               "IsStrongInterCookingQuery"
    Ticket:             "SEARCHSPEC-320"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_NEURAL, TG_THEME_CLASSIF, TG_UNIMPLEMENTED]
    Description:        "Предсказание классификатора, что запрос сильный интернациональный и кулинарный"
    Authors:            "nenashevna"
    Responsibles:       ["nenashevna", "hommforever"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsStrongInterCookingQuery()" }
}

Factor {
    Index:              321
    CppName:            "FI_OFFICIAL_IN_QUERY"
    Name:               "OfficialInQuery"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/PopularWordsInQuery/"
    Ticket:             ["FACTOR-1870"]
    Tags:               [TG_QUERY_ONLY, TG_BINARY, TG_NN_OVER_FEATURES_USE]
    Description:        "Наличие в лемматизированном запросе слова официальный"
    Authors:            ["padese", "ptanusha"]
    Responsibles:       ["padese", "ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetPopularWordsInQueryFactors().GetOfficialInQuery()" }
    # originally implemented in web_production at 2018-11-26
    ImplementationTime: "2022-06-09"
}

Factor {
    Index:              322
    CppName:            "FI_WIKI_IN_QUERY"
    Name:               "WikiInQuery"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/PopularWordsInQuery/"
    Ticket:             ["FACTOR-1870"]
    Tags:               [TG_QUERY_ONLY, TG_BINARY, TG_NN_OVER_FEATURES_USE]
    Description:        "Наличие в лемматизированном запросе слова википедия"
    Authors:            ["padese", "ptanusha"]
    Responsibles:       ["padese", "ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetPopularWordsInQueryFactors().GetWikiInQuery()" }
    # originally implemented in web_production at 2018-11-26
    ImplementationTime: "2022-06-09"
}

Factor {
    Index:              323
    CppName:            "FI_NOT_IN_QUERY"
    Name:               "NotInQuery"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/PopularWordsInQuery/"
    Ticket:             ["FACTOR-1870"]
    Tags:               [TG_QUERY_ONLY, TG_BINARY, TG_NN_OVER_FEATURES_USE]
    Description:        "Наличие в лемматизированном запросе слова не и похожих по смыслу"
    Authors:            ["padese", "ptanusha"]
    Responsibles:       ["padese", "ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetPopularWordsInQueryFactors().GetNotInQuery()" }
    # originally implemented in web_production at 2018-11-26
    ImplementationTime: "2022-06-09"
}

Factor {
    Index:              324
    CppName:            "FI_PRICE_IN_QUERY"
    Name:               "PriceInQuery"
    Wiki:               "https://wiki.yandex-team.ru/jandekspoisk/kachestvopoiska/relevance/web/factors/PopularWordsInQuery/"
    Ticket:             ["FACTOR-1870"]
    Tags:               [TG_QUERY_ONLY, TG_BINARY, TG_L2, TG_NN_OVER_FEATURES_USE]
    Description:        "Наличие в лемматизированном запросе слов купить, цена и похожих по смыслу"
    Authors:            ["padese", "ptanusha"]
    Responsibles:       ["padese", "ptanusha"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetPopularWordsInQueryFactors().GetPriceInQuery()" }
    # originally implemented in web_production at 2018-11-26
    ImplementationTime: "2022-06-09"
}

Factor {
    Index:              325
    CppName:            "FI_IS_ARABIC_ALICE_MUSIC_QUERY"
    Name:               "IsArabicAliceMusicQuery"
    Ticket:             "SEARCHSPEC-343"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_BINARY, TG_REARR_USE, TG_OFTEN_ZERO, TG_UNDOCUMENTED, TG_ALICE_ARAMUSIC, TG_UNUSED, TG_USED_IN_CONF_REARR]
    Description:        "Музыкальный запрос для сценария Арабской Алисы"
    Authors:            ["ggwp"]
    Responsibles:       ["ggwp"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIsArabicAliceMusicQuery()" }
    ImplementationTime: "2022-07-04"
}

Factor {
    Index:              326
    CppName:            "FI_INV_WORD_COUNT"
    Name:               "InvWordCount"
    Ticket:             "SEARCH-11688"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED]
    Description:        "1/(1 + число слов запроса), атрибуты не учитываются"
    Authors:            ["ilnurkh"]
    Responsibles:       ["ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "1.f / (1 + source.GetWordCount())" }
    ImplementationTime: "2022-07-08"
}

Factor {
    Index:              327
    CppName:            "FI_HAS_ATTRS"
    Name:               "HasAttrs"
    Ticket:             "SEARCH-11688"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_UNDOCUMENTED, TG_BINARY, TG_OFTEN_ZERO]
    Description:        "является ли запрос атрибутным (смотрит на rearr=attrs)"
    Authors:            ["ilnurkh"]
    Responsibles:       ["ilnurkh"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetHasAttrRestrictions()" }
    ImplementationTime: "2022-07-08"
}

Factor {
    Index:              328
    CppName:            "FI_INDONESIAN_PORN_QUERY"
    Name:               "IndonesianPornQuery"
    Ticket:             "INDONESIA-3"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER_SEARCH, TG_TOLOKA, TG_USE_MARKUP, TG_L2, TG_NEURAL, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Классификатор запроса на порнографичность для индонезийцев"
    Authors:            ["mordvintsevmk", "alejes"]
    Responsibles:       ["mordvintsevmk", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetIndonesianPornQuery()" }
    #ImplementationTime: "2022-07-12"
}

Factor {
    Index:              329
    CppName:            "FI_QUERY_LANGUAGE_ENG"
    Name:               "QueryLanguageEng"
    Ticket:             "SEARCHPLAY-215"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER_SEARCH, TG_TOLOKA, TG_USE_MARKUP, TG_L2, TG_NEURAL, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Классификатор запросов на требование только англоязычные страницы"
    Authors:            ["alexkolodezny", "alejes"]
    Responsibles:       ["alexkolodezny", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQueryLanguageEng()" }
    #ImplementationTime: "2022-07-27"
}

Factor {
    Index:              330
    CppName:            "FI_QUERY_LANGUAGE_MIX"
    Name:               "QueryLanguageMix"
    Ticket:             "SEARCHPLAY-215"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER_SEARCH, TG_TOLOKA, TG_USE_MARKUP, TG_L2, TG_NEURAL, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Классификатор запросов на требование смешанных англоязычных и рускоязычных страниц"
    Authors:            ["alexkolodezny", "alejes"]
    Responsibles:       ["alexkolodezny", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQueryLanguageMix()" }
    #ImplementationTime: "2022-07-27"
}

Factor {
    Index:              331
    CppName:            "FI_QUERY_LANGAUGE_ENG_MIX"
    Name:               "QueryLanguageEngMix"
    Ticket:             "SEARCHPLAY-215"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER_SEARCH, TG_TOLOKA, TG_USE_MARKUP, TG_L2, TG_NEURAL, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Классификатор запросов на требование либо только англоязычные страницы, либо англоязычные и рускоязычные страницы вместе"
    Authors:            ["alexkolodezny", "alejes"]
    Responsibles:       ["alexkolodezny", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TQueryFactors", Arg: "source" }, Expression: "source.GetQueryLanguageEngMix()" }
    #ImplementationTime: "2022-07-27"
}

} ## Slice "begemot_query_factors"
