/*
26 27 0 0
27
35
43
51
59
67
75
83
91
99
107
115
123
131
139
147
155
163
171
179
187
195
203
211
219
227
235
243
251
65 268562 1.000000
25 164120 1.611107
17 136776 2.120397
17 119338 2.564756
17 103723 2.950972
17 90005 3.286109
17 77571 3.574947
17 66483 3.822499
9 56636 4.033385
9 50013 4.219610
9 41893 4.375600
9 34939 4.505697
9 29359 4.615016
1 24746 4.707159
1 23700 4.795407
1 19804 4.869148
1 16539 4.930731
1 13121 4.979588
1 8936 5.012861
1 5155 5.032056
1 1385 5.037213
1 246 5.038129
1 0 5.038129
1 0 5.038129
1 0 5.038129
1 0 5.038129
1 0 5.038129
3.791247
*/
const ui64 dtable[] = {
ULL(0x0000000000000001), ULL(0x0000000000000002), ULL(0x0000000000000100), ULL(0x0000000000000101), ULL(0x0000000000000200), ULL(0x0000000000010000), ULL(0x0000000000010001), ULL(0x0000000000010100),
ULL(0x0000000000020000), ULL(0x0000000001000000), ULL(0x0000000001000001), ULL(0x0000000001000100), ULL(0x0000000001010000), ULL(0x0000000002000000), ULL(0x0000000100000000), ULL(0x0000000100000001),
ULL(0x0000000100000100), ULL(0x0000000100010000), ULL(0x0000000101000000), ULL(0x0000000200000000), ULL(0x0000010000000000), ULL(0x0000010000000001), ULL(0x0000010000000100), ULL(0x0000010000010000),
ULL(0x0000010001000000), ULL(0x0000010001000100), ULL(0x0000010100000000), ULL(0x0000020000000000), ULL(0x0001000000000000), ULL(0x0001000000000001), ULL(0x0001000000000100), ULL(0x0001000000010000),
ULL(0x0001000001000000), ULL(0x0001000001000001), ULL(0x0001000001000100), ULL(0x0001000100000000), ULL(0x0001000100000100), ULL(0x0001000100010000), ULL(0x0001000100010001), ULL(0x0001010000000000),
ULL(0x0001010101010101), ULL(0x0002000000000000), ULL(0x0100000000000000), ULL(0x0100000000000001), ULL(0x0100000000000100), ULL(0x0100000000010000), ULL(0x0100000001000000), ULL(0x0100000001000001),
ULL(0x0100000100000000), ULL(0x0100000100000100), ULL(0x0100010000000000), ULL(0x0100010001000100), ULL(0x0100010101010101), ULL(0x0101000000000000), ULL(0x0101000101010101), ULL(0x0101010000000000),
ULL(0x0101010101010100), ULL(0x0101010101010101), ULL(0x0101010101010102), ULL(0x0101010101010201), ULL(0x0101010102010101), ULL(0x0101010201010101), ULL(0x0200000000000000), ULL(0x0201010101010101),
ULL(0x0300000000000000),/*end*/
ULL(0x0000000000000000), ULL(0x0000000000000001), ULL(0x0000000000000002), ULL(0x0000000000000003), ULL(0x0000000000000100), ULL(0x0000000000000101), ULL(0x0000000000000200), ULL(0x0000000000000300),
ULL(0x0000000000010000), ULL(0x0000000000020000), ULL(0x0000000001000000), ULL(0x0000000002000000), ULL(0x0000000100000000), ULL(0x0000000200000000), ULL(0x0000010000000000), ULL(0x0000010100000000),
ULL(0x0000020000000000), ULL(0x0001000000000000), ULL(0x0001010000000000), ULL(0x0002000000000000), ULL(0x0003000000000000), ULL(0x0100000000000000), ULL(0x0101000000000000), ULL(0x0200000000000000),
ULL(0x0300000000000000),/*end*/
ULL(0x0000000000000000), ULL(0x0000000000000001), ULL(0x0000000000000002), ULL(0x0000000000000100), ULL(0x0000000000000200), ULL(0x0000000000010000), ULL(0x0000000000020000), ULL(0x0000000001000000),
ULL(0x0000000002000000), ULL(0x0000000100000000), ULL(0x0000000200000000), ULL(0x0000010000000000), ULL(0x0000020000000000), ULL(0x0001000000000000), ULL(0x0002000000000000), ULL(0x0100000000000000),
ULL(0x0200000000000000),/*end*/
ULL(0x0000000000000000), ULL(0x0000000000000001), ULL(0x0000000000000002), ULL(0x0000000000000100), ULL(0x0000000000000200), ULL(0x0000000000010000), ULL(0x0000000000020000), ULL(0x0000000001000000),
ULL(0x0000000002000000), ULL(0x0000000100000000), ULL(0x0000000200000000), ULL(0x0000010000000000), ULL(0x0000020000000000), ULL(0x0001000000000000), ULL(0x0002000000000000), ULL(0x0100000000000000),
ULL(0x0200000000000000),/*end*/
ULL(0x0000000000000000), ULL(0x0000000000000001), ULL(0x0000000000000002), ULL(0x0000000000000100), ULL(0x0000000000000200), ULL(0x0000000000010000), ULL(0x0000000000020000), ULL(0x0000000001000000),
ULL(0x0000000002000000), ULL(0x0000000100000000), ULL(0x0000000200000000), ULL(0x0000010000000000), ULL(0x0000020000000000), ULL(0x0001000000000000), ULL(0x0002000000000000), ULL(0x0100000000000000),
ULL(0x0200000000000000),/*end*/
ULL(0x0000000000000000), ULL(0x0000000000000001), ULL(0x0000000000000002), ULL(0x0000000000000100), ULL(0x0000000000000200), ULL(0x0000000000010000), ULL(0x0000000000020000), ULL(0x0000000001000000),
ULL(0x0000000002000000), ULL(0x0000000100000000), ULL(0x0000000200000000), ULL(0x0000010000000000), ULL(0x0000020000000000), ULL(0x0001000000000000), ULL(0x0002000000000000), ULL(0x0100000000000000),
ULL(0x0200000000000000),/*end*/
ULL(0x0000000000000000), ULL(0x0000000000000001), ULL(0x0000000000000002), ULL(0x0000000000000100), ULL(0x0000000000000200), ULL(0x0000000000010000), ULL(0x0000000000020000), ULL(0x0000000001000000),
ULL(0x0000000002000000), ULL(0x0000000100000000), ULL(0x0000000200000000), ULL(0x0000010000000000), ULL(0x0000020000000000), ULL(0x0001000000000000), ULL(0x0002000000000000), ULL(0x0100000000000000),
ULL(0x0200000000000000),/*end*/
ULL(0x0000000000000000), ULL(0x0000000000000001), ULL(0x0000000000000002), ULL(0x0000000000000100), ULL(0x0000000000000200), ULL(0x0000000000010000), ULL(0x0000000000020000), ULL(0x0000000001000000),
ULL(0x0000000002000000), ULL(0x0000000100000000), ULL(0x0000000200000000), ULL(0x0000010000000000), ULL(0x0000020000000000), ULL(0x0001000000000000), ULL(0x0002000000000000), ULL(0x0100000000000000),
ULL(0x0200000000000000),/*end*/
ULL(0x0000000000000000), ULL(0x0000000000000001), ULL(0x0000000000000100), ULL(0x0000000000010000), ULL(0x0000000001000000), ULL(0x0000000100000000), ULL(0x0000010000000000), ULL(0x0001000000000000),
ULL(0x0100000000000000),/*end*/
ULL(0x0000000000000000), ULL(0x0000000000000001), ULL(0x0000000000000100), ULL(0x0000000000010000), ULL(0x0000000001000000), ULL(0x0000000100000000), ULL(0x0000010000000000), ULL(0x0001000000000000),
ULL(0x0100000000000000),/*end*/
ULL(0x0000000000000000), ULL(0x0000000000000001), ULL(0x0000000000000100), ULL(0x0000000000010000), ULL(0x0000000001000000), ULL(0x0000000100000000), ULL(0x0000010000000000), ULL(0x0001000000000000),
ULL(0x0100000000000000),/*end*/
ULL(0x0000000000000000), ULL(0x0000000000000001), ULL(0x0000000000000100), ULL(0x0000000000010000), ULL(0x0000000001000000), ULL(0x0000000100000000), ULL(0x0000010000000000), ULL(0x0001000000000000),
ULL(0x0100000000000000),/*end*/
ULL(0x0000000000000000), ULL(0x0000000000000001), ULL(0x0000000000000100), ULL(0x0000000000010000), ULL(0x0000000001000000), ULL(0x0000000100000000), ULL(0x0000010000000000), ULL(0x0001000000000000),
ULL(0x0100000000000000),/*end*/
ULL(0x0000000000000000), ULL(0x0000000000000001), ULL(0x0000000000000100), ULL(0x0000000001000000), ULL(0x0001000000000000), ULL(0x0100000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
};
const ui8 itable[] = {
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0,/*end*/
1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1,
1,/*end*/
2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2,
2,/*end*/
3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3,
3,/*end*/
4, 4, 4, 4, 4, 4, 4, 4,
4, 4, 4, 4, 4, 4, 4, 4,
4,/*end*/
5, 5, 5, 5, 5, 5, 5, 5,
5, 5, 5, 5, 5, 5, 5, 5,
5,/*end*/
6, 6, 6, 6, 6, 6, 6, 6,
6, 6, 6, 6, 6, 6, 6, 6,
6,/*end*/
7, 7, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7,
7,/*end*/
8, 8, 8, 8, 8, 8, 8, 8,
8,/*end*/
9, 9, 9, 9, 9, 9, 9, 9,
9,/*end*/
10, 10, 10, 10, 10, 10, 10, 10,
10,/*end*/
11, 11, 11, 11, 11, 11, 11, 11,
11,/*end*/
12, 12, 12, 12, 12, 12, 12, 12,
12,/*end*/
13, 13, 13, 13, 13, 13,/*end*/
14,/*end*/
15,/*end*/
16,/*end*/
17,/*end*/
18,/*end*/
19,/*end*/
20,/*end*/
21,/*end*/
22,/*end*/
23,/*end*/
24,/*end*/
25,/*end*/
26,/*end*/
};
const ui32 isize[] = {
65,
25,
17,
17,
17,
17,
17,
17,
9,
9,
9,
9,
9,
6,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
};
