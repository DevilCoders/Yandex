/*
26 27 0 1
27
35
43
51
59
67
75
83
91
99
107
115
123
131
139
147
155
163
171
179
187
195
203
211
219
227
235
243
251
225 170251 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
1 0 1.000000
0.000000
*/
const ui64 dtable[] = {
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),
ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000), ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
ULL(0x0000000000000000),/*end*/
};
const ui8 itable[] = {
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0,/*end*/
1,/*end*/
2,/*end*/
3,/*end*/
4,/*end*/
5,/*end*/
6,/*end*/
7,/*end*/
8,/*end*/
9,/*end*/
10,/*end*/
11,/*end*/
12,/*end*/
13,/*end*/
14,/*end*/
15,/*end*/
16,/*end*/
17,/*end*/
18,/*end*/
19,/*end*/
20,/*end*/
21,/*end*/
22,/*end*/
23,/*end*/
24,/*end*/
25,/*end*/
26,/*end*/
};
const ui32 isize[] = {
230,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
};
