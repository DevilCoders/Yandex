Slice {
Name: "images_nn_over_dssm_doc_features"

Factor {
    Index:              0
    CppName:            "FI_OWNERS_FOREIGN"
    Name:               "OwnersForeign"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "OwnersForeign"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "std::min(1.0f, static_cast<float>(erf.GetOwnersForeign()) / (static_cast<float>(erf.GetOwnersForeign()) + 1.0f))" }
}

Factor {
    Index:              1
    CppName:            "FI_HAS_TURKEY_LINK"
    Name:               "HasTurkeyLink"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "HasTurkeyLink"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetHasTurkeyLink())" }
}

Factor {
    Index:              2
    CppName:            "FI_IMAGE_SIZE_RANK"
    Name:               "ImageSizeRank"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "ImageSizeRank"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetImageSizeRank()) / 65000.0f)" }
}

Factor {
    Index:              3
    CppName:            "FI_MAX_MIN_IMG_SIZE_RATIO"
    Name:               "MaxMinImgSizeRatio"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MaxMinImgSizeRatio"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "std::min(1.0f, static_cast<float>(erf.GetMaxMinImgSizeRatio()) / (static_cast<float>(erf.GetMaxMinImgSizeRatio()) + 1.0f))" }
}

Factor {
    Index:              4
    CppName:            "FI_SRC_HOST_LEN_MEDIAN"
    Name:               "SrcHostLenMedian"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcHostLenMedian"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "std::min(1.0f, static_cast<float>(erf.GetSrcHostLenMedian()) / (static_cast<float>(erf.GetSrcHostLenMedian()) + 1.0f))" }
}

Factor {
    Index:              5
    CppName:            "FI_SRC_HOST_COUNT"
    Name:               "SrcHostCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcHostCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "std::min(1.0f, static_cast<float>(erf.GetSrcHostCount()) / (static_cast<float>(erf.GetSrcHostCount()) + 1.0f))" }
}

Factor {
    Index:              6
    CppName:            "FI_DST_HOST_LEN_MEDIAN"
    Name:               "DstHostLenMedian"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "DstHostLenMedian"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Frac2Float(static_cast<ui8>(Min<ui32>(erf.GetDstHostLenMedian(), Max<ui8>())))" }
}

Factor {
    Index:              7
    CppName:            "FI_RAW_LINK_COUNT"
    Name:               "RawLinkCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "RawLinkCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "std::min(1.0f, static_cast<float>(erf.GetRawLinkCount()) / (static_cast<float>(erf.GetRawLinkCount()) + 1.0f))" }
}

Factor {
    Index:              8
    CppName:            "FI_DST_OWNER_NOT_SRC_OWNER"
    Name:               "DstOwnerNotSrcOwner"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "DstOwnerNotSrcOwner"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "std::min(1.0f, static_cast<float>(erf.GetDstOwnerNotSrcOwner()) / (static_cast<float>(erf.GetDstOwnerNotSrcOwner()) + 1.0f))" }
}

Factor {
    Index:              9
    CppName:            "FI_DST_HOST_NOT_SRC_HOST"
    Name:               "DstHostNotSrcHost"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "DstHostNotSrcHost"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "std::min(1.0f, static_cast<float>(erf.GetDstHostNotSrcHost()) / (static_cast<float>(erf.GetDstHostNotSrcHost()) + 1.0f))" }
}

Factor {
    Index:              10
    CppName:            "FI_DST_COUNT"
    Name:               "DstCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "DstCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "std::min(1.0f, static_cast<float>(erf.GetDstCount()) / (static_cast<float>(erf.GetDstCount()) + 1.0f))" }
}

Factor {
    Index:              11
    CppName:            "FI_SRC_COUNT"
    Name:               "SrcCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "std::min(1.0f, static_cast<float>(erf.GetSrcCount()) / (static_cast<float>(erf.GetSrcCount()) + 1.0f))" }
}

Factor {
    Index:              12
    CppName:            "FI_HAS_HOT_LINK"
    Name:               "HasHotLink"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "HasHotLink"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetHasHotLink())" }
}

Factor {
    Index:              13
    CppName:            "FI_MONEY_SOURCE_CPC"
    Name:               "MoneySourceCPC"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MoneySourceCPC"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetMoneySourceMarket())" }
}

Factor {
    Index:              14
    CppName:            "FI_NATIVE_ADS_PRICE"
    Name:               "NativeAdsPrice"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NativeAdsPrice"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "std::min(1.0f, static_cast<float>(erf.GetNativeAdsPrice()) / (static_cast<float>(erf.GetNativeAdsPrice()) + 1.0f))" }
}

Factor {
    Index:              15
    CppName:            "FI_NATIVE_ADS_OFFER_CATEGORY_ID"
    Name:               "NativeAdsOfferCategoryId"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NativeAdsOfferCategoryId"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "std::min(1.0f, static_cast<float>(erf.GetNativeAdsOfferCategoryId()) / (static_cast<float>(erf.GetNativeAdsOfferCategoryId()) + 1.0f))" }
}

Factor {
    Index:              16
    CppName:            "FI_HAS_MAIN_CONTENT_URL"
    Name:               "HasMainContentUrl"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "HasMainContentUrl"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetHasMainContentUrl())" }
}

Factor {
    Index:              17
    CppName:            "FI_NATIVE_ADS_HAS_ORIGINAL_PICTURES"
    Name:               "NativeAdsHasOriginalPictures"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NativeAdsHasOriginalPictures"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetNativeAdsHasOriginalPictures())" }
}

Factor {
    Index:              18
    CppName:            "FI_GRUESOME_COMBINED_CANDIDATE"
    Name:               "GruesomeCombinedCandidate"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "GruesomeCombinedCandidate"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetGruesomeCombinedCandidate()" }
}

Factor {
    Index:              19
    CppName:            "FI_TOUCH_PCTR"
    Name:               "TouchPCTR"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "TouchPCTR"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetTouchPCTR()" }
}

Factor {
    Index:              20
    CppName:            "FI_VOWPAL_WABBIT_DWELL_TIME"
    Name:               "VowpalWabbitDwellTime"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "VowpalWabbitDwellTime"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Min(1.0f, Max(0.0f, 0.5f + std::cbrt(erf.GetVowpalWabbitDwellTime()) * 0.05f))" }
}

Factor {
    Index:              21
    CppName:            "FI_IMG_SIZE_RATIO_MEDIAN"
    Name:               "ImageSizeRatioMedian"
    Description:        "Median of destination size ratio"
    Tags:               [TG_DOC, TG_STATIC]
    Responsibles:       ["fedorenko"]
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetImageSizeRatioMedian()" }
}

Factor {
    Index:              22
    CppName:            "FI_NN_CL_WATERMARK"
    Name:               "NNClWatermark"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClWatermark"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClWatermark()) / 255.0f)" }
}

Factor {
    Index:              23
    CppName:            "FI_NN_CL_HOMEWORK"
    Name:               "NNClHomework"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClHomework"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClHomework()) / 255.0f)" }
}

Factor {
    Index:              24
    CppName:            "FI_MAX_GRAY_DEVIATION"
    Name:               "MaxGrayDeviation"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MaxGrayDeviation"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(erf.GetMaxGrayDeviation() / 43350.0f)" }
}

Factor {
    Index:              25
    CppName:            "FI_CPC_TITLES_JOINED_CONFIDENCE"
    Name:               "CPCTitlesJoinedConfidence"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "CPCTitlesJoinedConfidence"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetMarketTitlesJoinedConfidence()" }
}

Factor {
    Index:              26
    CppName:            "FI_NN_CL_GOOD_QUALITY_VER2"
    Name:               "NNClGoodQualityVer2"
    Ticket:             "IMAGES-12861"
    Description:        "Neural net good quality classifier"
    Tags:                [TG_STATIC, TG_DOC]
    Responsibles:        ["tobo"]
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetNNClGoodQualityV2()" }
}

Factor {
    Index:              27
    CppName:            "FI_HAS_DETECTED_OBJECTS"
    Name:               "HasDetectedObjects"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "HasDetectedObjects"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetHasDetectedObjects())" }
}

Factor {
    Index:              28
    CppName:            "FI_MONEY_SOURCE_DIRECT_SMART"
    Name:               "MoneySourceDirectSmart"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MoneySourceDirectSmart"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetMoneySourceDirectSmart())" }
}

Factor {
    Index:              29
    CppName:            "FI_MONEY_SOURCE_SCHEMA_ORG"
    Name:               "MoneySourceSchemaOrg"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MoneySourceSchemaOrg"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetMoneySourceSchemaOrg())" }
}

Factor {
    Index:              30
    CppName:            "FI_SRC_HOST_SIZE"
    Name:               "SrcHostSize"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcHostSize"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetSrcHostSize()) / 255.0f)" }
}

Factor {
    Index:              31
    CppName:            "FI_NN_CL_COLLAGE"
    Name:               "NNClCollage"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClCollage"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClCollage()) / 255.0f)" }
}

Factor {
    Index:              32
    CppName:            "FI_SRC_HOST_MAX_MASCOT_RANK_ARTROZ"
    Name:               "SrcHostMaxMascotRankArtroz"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcHostMaxMascotRankArtroz"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetSrcHostMaxMascotRankArtroz()) / 255.0f)" }
}

Factor {
    Index:              33
    CppName:            "FI_SRC_HOST_MAX_MONTH_UNIQUE_VISITORS_ABS_GSM_ALL"
    Name:               "SrcHostMaxMonthUniqueVisitorsAbsGsmAll"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcHostMaxMonthUniqueVisitorsAbsGsmAll"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetSrcHostMaxMonthUniqueVisitorsAbsGsmAll()) / 255.0f)" }
}

Factor {
    Index:              34
    CppName:            "FI_SRC_HOST_MAX_RANDOM_LOG_HOST_QI_QUERY_COUNT_AVG"
    Name:               "SrcHostMaxRandomLogHostQiQueryCountAvg"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcHostMaxRandomLogHostQiQueryCountAvg"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetSrcHostMaxRandomLogHostQiQueryCountAvg()) / 255.0f)" }
}

Factor {
    Index:              35
    CppName:            "FI_DETECTED_OBJECTS_ATTRACTIVENESS_PROB"
    Name:               "DetectedObjectsAttractivenessProb"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "DetectedObjectsAttractivenessProb"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetDetectedObjectsAttractivenessProb()" }
}

Factor {
    Index:              36
    CppName:            "FI_CHILD_PORN_PROBABILITY_CANDIDATE"
    Name:               "ChildPornProbabilityCandidate"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "ChildPornProbabilityCandidate"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetChildPornProbabilityCandidate()" }
}

Factor {
    Index:              37
    CppName:            "FI_MEAN_GRAY_DEVIATION"
    Name:               "MeanGrayDeviation"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MeanGrayDeviation"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(erf.GetMeanGrayDeviation() / 43350.0f)" }
}

Factor {
    Index:              38
    CppName:            "FI_VOWPAL_WABBIT_SUGGESTIVE"
    Name:               "VowpalWabbitSuggestive"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "VowpalWabbitSuggestive"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Min(1.0f, Max(0.0f, 0.5f + std::cbrt(erf.GetVowpalWabbitSuggestive()) * 0.05f))" }
}

Factor {
    Index:              39
    CppName:            "FI_SUGGESTIVE_PROBABILITY"
    Name:               "SuggestiveProbability"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SuggestiveProbability"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetSuggestiveProbability()" }
}

Factor {
    Index:              40
    CppName:            "FI_SUGGESTIVE_PROBABILITY_CANDIDATE"
    Name:               "SuggestiveProbabilityCandidate"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SuggestiveProbabilityCandidate"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetSuggestiveProbabilityCandidate()" }
}

Factor {
    Index:              41
    CppName:            "FI_HAS_OBSCENE_V2"
    Name:               "HasObsceneV2"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "HasObsceneV2"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetHasObsceneV2())" }
}

Factor {
    Index:              42
    CppName:            "FI_IMAGE_WALLPAPER"
    Name:               "IsWallpaper"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "IsWallpaper"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetIsWallpaper())" }
}

Factor {
    Index:              43
    CppName:            "FI_MEDIA_LANGS"
    Name:               "Langs"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "Langs"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(erf.GetLangs()) / 8.0f" }
}

Factor {
    Index:              44
    CppName:            "FI_MEDIA_DOMAINS_MEDIAN"
    Name:               "DomainsMedian"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "DomainsMedian"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(erf.GetDomainsMedian()) / 8.0f" }
}

Factor {
    Index:              45
    CppName:            "FI_MEDIA_SRCLEN_MEDIAN"
    Name:               "SrcLenMedian"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcLenMedian"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(erf.GetSrcLenMedian()) / 32.0f" }
}

Factor {
    Index:              46
    CppName:            "FI_MEDIA_HOSTLEN_MEDIAN"
    Name:               "HostLenMedian"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "HostLenMedian"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "std::min(1.0f, static_cast<float>(erf.GetHostLenMedian()) / (static_cast<float>(erf.GetHostLenMedian()) + 1.0f))" }
}

Factor {
    Index:              47
    CppName:            "FI_MEDIA_SEMIDUPS"
    Name:               "SemidupsCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SemidupsCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetSemidupsCount()) / 255.0f)" }
}

Factor {
    Index:              48
    CppName:            "FI_MEDIA_DESC_SEMIDUPS"
    Name:               "DescSemidupsCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "DescSemidupsCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetDescSemidupsCount()) / 255.0f)" }
}

Factor {
    Index:              49
    CppName:            "FI_MEDIA_OWNERS"
    Name:               "OwnersCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "OwnersCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetOwnersCount()) / 255.0f)" }
}

Factor {
    Index:              50
    CppName:            "FI_MEDIA_SRC_OWNERS"
    Name:               "SrcOwnersCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcOwnersCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetSrcOwnersCount()) / 255.0f)" }
}

Factor {
    Index:              51
    CppName:            "FI_MEDIA_DST_OWNERS"
    Name:               "DstOwnersCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "DstOwnersCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetDstOwnersCount()) / 255.0f)" }
}

Factor {
    Index:              52
    CppName:            "FI_MEDIA_PAGES"
    Name:               "ImagePagesCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "ImagePagesCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetImagePagesCount()) / 255.0f)" }
}

Factor {
    Index:              53
    CppName:            "FI_MEDIA_REF_PAGES"
    Name:               "AnchorPagesCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "AnchorPagesCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetAnchorPagesCount()) / 255.0f)" }
}

Factor {
    Index:              54
    CppName:            "FI_IMAGE_RES_COUNT"
    Name:               "ResCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "ResCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetResCount()) / 255.0f)" }
}

Factor {
    Index:              55
    CppName:            "FI_IMAGE_UNIQ_RES_OWNERS"
    Name:               "UniqResOwnersCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "UniqResOwnersCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetUniqResOwnersCount()) / 255.0f)" }
}

Factor {
    Index:              56
    CppName:            "FI_IMAGE_MED_PAGES"
    Name:               "MedImagePages"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MedImagePages"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetMedImagePages()) / 255.0f)" }
}

Factor {
    Index:              57
    CppName:            "FI_IMAGE_BIG_PAGES"
    Name:               "BigImagePages"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "BigImagePages"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetBigImagePages()) / 255.0f)" }
}

Factor {
    Index:              58
    CppName:            "FI_IMAGE_AVG_RES"
    Name:               "AvgImageRes"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "AvgImageRes"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetAvgImageRes()) / 255.0f)" }
}

Factor {
    Index:              59
    CppName:            "FI_MEDIA_FORUM_LINKS_SHARE"
    Name:               "ForumLinksShare"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "ForumLinksShare"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(erf.GetForumLinksShare()) / 32.0f" }
}

Factor {
    Index:              60
    CppName:            "FI_IMAGE_OWNERS"
    Name:               "Owners"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "Owners"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(erf.GetOwners()) / 64.0f" }
}

Factor {
    Index:              61
    CppName:            "FI_IMAGE_COMMERCIAL"
    Name:               "IsEShop"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "IsEShop"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetIsEShop())" }
}

Factor {
    Index:              62
    CppName:            "FI_MEDIA_HAS_TITLE"
    Name:               "HasTitle"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "HasTitle"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetHasTitle())" }
}

Factor {
    Index:              63
    CppName:            "FI_MEDIA_HAS_DESCRIPTION"
    Name:               "HasDesc"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "HasDesc"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetHasDesc())" }
}

Factor {
    Index:              64
    CppName:            "FI_MEDIA_HAS_LDB_TEXT"
    Name:               "HasLDBText"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "HasLDBText"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetHasLDBText())" }
}

Factor {
    Index:              65
    CppName:            "FI_IMAGE_MAX_PAGE_RANK"
    Name:               "MaxPageRank"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MaxPageRank"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetMaxPageRank()" }
}

Factor {
    Index:              66
    CppName:            "FI_IMAGE_FACE"
    Name:               "IsFace"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "IsFace"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetIsFace())" }
}

Factor {
    Index:              67
    CppName:            "FI_IMAGE_CLIPART"
    Name:               "IsClipart"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "IsClipart"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetIsClipart())" }
}

Factor {
    Index:              68
    CppName:            "FI_IMAGE_LINEART"
    Name:               "IsLineart"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "IsLineart"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetIsLineart())" }
}

Factor {
    Index:              69
    CppName:            "FI_IMAGE_DEMOTIVATOR"
    Name:               "IsDemotivator"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "IsDemotivator"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetIsDemotivator())" }
}

Factor {
    Index:              70
    CppName:            "FI_IMAGE_TEMPORAL_LINKS_WEIGHT"
    Name:               "TemporalLinksWeight"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "TemporalLinksWeight"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetTemporalLinksWeight()) / 255.0f)" }
}

Factor {
    Index:              71
    CppName:            "FI_IMAGE_PHOTO"
    Name:               "IsPhoto"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "IsPhoto"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetIsPhoto())" }
}

Factor {
    Index:              72
    CppName:            "FI_IMAGE_AVG_OWNER_SHOP"
    Name:               "AvgOwnerShop"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "AvgOwnerShop"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetAvgOwnerShop()) / 64.0f)" }
}

Factor {
    Index:              73
    CppName:            "FI_IMAGE_AVG_OWNER_COMM_ESHOP"
    Name:               "AvgOwnerCommEshop"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "AvgOwnerCommEshop"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(erf.GetAvgOwnerCommEshop()) / 32.0f" }
}

Factor {
    Index:              74
    CppName:            "FI_IMAGE_AVG_OWNER_PESSIMIZE_LEVEL"
    Name:               "AvgOwnerPessimizeLevel"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "AvgOwnerPessimizeLevel"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Frac2Float(Float2Frac<ui8>(static_cast<float>(erf.GetAvgOwnerPessimizeLevel())))" }
}

Factor {
    Index:              75
    CppName:            "FI_MEDIA_LINKS"
    Name:               "LinkCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "LinkCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(erf.GetLinkCount()) / 128.0f" }
}

Factor {
    Index:              76
    CppName:            "FI_IMAGE_LINKS_FROM_NEWS"
    Name:               "NewsLinksShare"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NewsLinksShare"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(erf.GetNewsLinksShare()) / 32.0f" }
}

Factor {
    Index:              77
    CppName:            "FI_IMAGE_PORNO_4_CANDIDATE"
    Name:               "Porno4Candidate"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "Porno4Candidate"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetPorno4Candidate()" }
}

Factor {
    Index:              78
    CppName:            "FI_IMAGE_PORNO_4"
    Name:               "Porno4"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "Porno4"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetPorno4()) / 255.0f)" }
}

Factor {
    Index:              79
    CppName:            "FI_GRUESOME_COMBINED"
    Name:               "GruesomeCombined"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "GruesomeCombined"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetGruesomeCombined()" }
}

Factor {
    Index:              80
    CppName:            "FI_VW_PORNO"
    Name:               "VowpalWabbitPorno"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "VowpalWabbitPorno"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Min(1.0f, Max(0.0f, 0.5f + std::cbrt(erf.GetVowpalWabbitPorno()) * 0.05f))" }
}

Factor {
    Index:              81
    CppName:            "FI_VW_GRUESOME"
    Name:               "VowpalWabbitGruesome"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "VowpalWabbitGruesome"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Min(1.0f, Max(0.0f, 0.5f + std::cbrt(erf.GetVowpalWabbitGruesome()) * 0.05f))" }
}

Factor {
    Index:              82
    CppName:            "FI_VW_CHILD_PORN"
    Name:               "VowpalWabbitChildPorno"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "VowpalWabbitChildPorno"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Min(1.0f, Max(0.0f, 0.5f + std::cbrt(erf.GetVowpalWabbitChildPorno()) * 0.05f))" }
}

Factor {
    Index:              83
    CppName:            "FI_DST_LEN_MEDIAN"
    Name:               "DstLenMedian"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "DstLenMedian"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(erf.GetDstLenMedian()) / 1024.0f" }
}

Factor {
    Index:              84
    CppName:            "FI_DST_HOST_COUNT"
    Name:               "DstHostCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "DstHostCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(Min<ui32>(255, erf.GetDstHostCount())) / 255.0f" }
}

Factor {
    Index:              85
    CppName:            "FI_FACE_COUNT_MEDIAN"
    Name:               "FaceCountMedian"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "FaceCountMedian"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(erf.GetFaceCountMedian()) / 16.0f" }
}

Factor {
    Index:              86
    CppName:            "FI_GRAY_PROBABILITY"
    Name:               "GrayProbability"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "GrayProbability"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetGrayProbability()" }
}

Factor {
    Index:              87
    CppName:            "FI_OBJECT_PROBABILITY"
    Name:               "ObjectProbability"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "ObjectProbability"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetObjectProbability()" }
}

Factor {
    Index:              88
    CppName:            "FI_PHOTO_PROBABILITY"
    Name:               "PhotoProbability"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "PhotoProbability"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetPhotoProbability()" }
}

Factor {
    Index:              89
    CppName:            "FI_AVERAGE_FIRST_COLOR_WEIGHT_2"
    Name:               "AverageFirstColorWeight2"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "AverageFirstColorWeight2"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(erf.GetAverageFirstColorWeight2() / 255.0f)" }
}

Factor {
    Index:              90
    CppName:            "FI_AVERAGE_SUM_GOOD_COLOR_SQUARE"
    Name:               "AverageSumGoodColorSquare"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "AverageSumGoodColorSquare"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(erf.GetAverageSumGoodColorSquare() / 255.0f)" }
}

Factor {
    Index:              91
    CppName:            "FI_AVERAGE_HGRS"
    Name:               "AverageHGRS"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "AverageHGRS"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(Min<ui32>(255, erf.GetAverageHGRS())) / 255.0f" }
}

Factor {
    Index:              92
    CppName:            "FI_TURKISH_SRC_OWNERS_SHARE"
    Name:               "TurkishSrcOwnersShare"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "TurkishSrcOwnersShare"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetTurkishSrcOwnersShare()" }
}

Factor {
    Index:              93
    CppName:            "FI_RUSSIAN_SRC_OWNERS_SHARE"
    Name:               "RussianSrcOwnersShare"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "RussianSrcOwnersShare"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetRussianSrcOwnersShare()" }
}

Factor {
    Index:              94
    CppName:            "FI_PORNO_ADVERT_SRC_OWNERS_SHARE"
    Name:               "PornoAdvertSrcOwnersShare"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "PornoAdvertSrcOwnersShare"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetPornoAdvertSrcOwnersShare()" }
}

Factor {
    Index:              95
    CppName:            "FI_SRC_OWNERS_WITH_MAIN_CONTENT_SHARE"
    Name:               "SrcOwnersWithMainContentShare"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcOwnersWithMainContentShare"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetSrcOwnersWithMainContentShare()" }
}

Factor {
    Index:              96
    CppName:            "FI_AVITO_SRC_SHARE"
    Name:               "AvitoSrcShare"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "AvitoSrcShare"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetAvitoSrcShare()" }
}

Factor {
    Index:              97
    CppName:            "FI_IMAGE_SELECTION_RANK"
    Name:               "ImageSelectionRank"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "ImageSelectionRank"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetImageSelectionRank()" }
}

Factor {
    Index:              98
    CppName:            "FI_VW_IMAGES_SELECTION_RANK"
    Name:               "VowpalWabbitImagesSelectionRank"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "VowpalWabbitImagesSelectionRank"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Min(1.0f, Max(0.0f, 0.5f + std::cbrt(erf.GetVowpalWabbitImagesSelectionRank()) * 0.05f))" }
}

Factor {
    Index:              99
    CppName:            "FI_HAS_FIO"
    Name:               "TextHasFio"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "TextHasFio"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetTextHasFio())" }
}

Factor {
    Index:              100
    CppName:            "FI_HAS_WIKIMEDIA"
    Name:               "HasWikimediaLink"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "HasWikimediaLink"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetHasWikimediaLink())" }
}

Factor {
    Index:              101
    CppName:            "FI_IMG_SIZE_BOOST"
    Name:               "MaxMinImgSize"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MaxMinImgSize"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "1.f / (1.f + exp(0.007f * (700 - erf.GetMaxMinImgSize())))" }
}

Factor {
    Index:              102
    CppName:            "FI_DOC_CONTAINS_RATED_URLS"
    Name:               "IsRated"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "IsRated"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetIsRated())" }
}

Factor {
    Index:              103
    CppName:            "FI_IMAGE_HOST_CTR"
    Name:               "ImageHostCtr"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "ImageHostCtr"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetImageHostCtr()" }
}

Factor {
    Index:              104
    CppName:            "FI_IMAGE_HOST_QUERY_VARIETY"
    Name:               "ImageHostQueryVariety"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "ImageHostQueryVariety"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetImageHostQueryVariety()" }
}

Factor {
    Index:              105
    CppName:            "FI_NN_CL_BINARY_PORN"
    Name:               "NNClBinaryPorn"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClBinaryPorn"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClBinaryPorn()) / 255.0f)" }
}

Factor {
    Index:              106
    CppName:            "FI_NN_CL_PORN_WITH_EROTIC"
    Name:               "NNClPornWithErotic"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClPornWithErotic"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClPornWithErotic()) / 255.0f)" }
}

Factor {
    Index:              107
    CppName:            "FI_NN_CL_MULTICLASS_PORN"
    Name:               "NNClMulticlassPorn"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClMulticlassPorn"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClMulticlassPorn()) / 255.0f)" }
}

Factor {
    Index:              108
    CppName:            "FI_NN_CL_CHILD_PORN"
    Name:               "NNClChildPorn"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClChildPorn"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClChildPorn()) / 255.0f)" }
}

Factor {
    Index:              109
    CppName:            "FI_NN_CL_GRUESOME"
    Name:               "NNClGruesome"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClGruesome"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClGruesome()) / 255.0f)" }
}

Factor {
    Index:              110
    CppName:            "FI_NN_CL_PERVERSION"
    Name:               "NNClPerversion"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClPerversion"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClPerversion()) / 255.0f)" }
}

Factor {
    Index:              111
    CppName:            "FI_NN_CL_BEAUTIFUL"
    Name:               "NNClBeautiful"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClBeautiful"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClBeautiful()) / 255.0f)" }
}

Factor {
    Index:              112
    CppName:            "FI_NN_CL_WALLPAPER"
    Name:               "NNClWallpaper"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClWallpaper"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClWallpaper()) / 255.0f)" }
}

Factor {
    Index:              113
    CppName:            "FI_NN_CL_OCR_TEXT"
    Name:               "NNClOcrText"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClOcrText"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClOcrText()) / 255.0f)" }
}

Factor {
    Index:              114
    CppName:            "FI_NN_CL_CLOTHES"
    Name:               "NNClClothes"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClClothes"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClClothes()) / 255.0f)" }
}

Factor {
    Index:              115
    CppName:            "FI_NN_CL_500PX"
    Name:               "NNCl500Px"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNCl500Px"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(erf.GetNNCl500Px()) / 512.0f" }
}

Factor {
    Index:              116
    CppName:            "FI_NN_CL_PROF_PORN"
    Name:               "NNClProfPorn"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClProfPorn"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClProfPorn()) / 255.0f)" }
}

Factor {
    Index:              117
    CppName:            "FI_NN_CL_BAD_QUALITY"
    Name:               "NNClBadQuality"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClBadQuality"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClBadQuality()) / 255.0f)" }
}

Factor {
    Index:              118
    CppName:            "FI_NN_CL_GEO"
    Name:               "NNClGeo"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClGeo"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClGeo()) / 255.0f)" }
}

Factor {
    Index:              119
    CppName:            "FI_NN_CL_RIGHT_CLICKABLE"
    Name:               "NNClRightClickable"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClRightClickable"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetNNClRightClickable()) / 255.0f)" }
}

Factor {
    Index:              120
    CppName:            "FI_HAS_OBSCENE"
    Name:               "HasObscene"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "HasObscene"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetHasObscene())" }
}

Factor {
    Index:              121
    CppName:            "FI_IMG_SRC_URL_PORN_LEVEL"
    Name:               "SrcUrlPornLevel"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcUrlPornLevel"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetSrcUrlPornLevel()) / 255.0f)" }
}

Factor {
    Index:              122
    CppName:            "FI_IMG_DST_URL_PORN_LEVEL"
    Name:               "DstUrlPornLevel"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "DstUrlPornLevel"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetDstUrlPornLevel()) / 255.0f)" }
}

Factor {
    Index:              123
    CppName:            "FI_IMG_BRIGHTESS"
    Name:               "ImgBrightness"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "ImgBrightness"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(static_cast<float>(erf.GetImgBrightness()) / 255.0f)" }
}

Factor {
    Index:              124
    CppName:            "FI_IMG_UNIQ_COLOR_COUNT"
    Name:               "ImgUniqColorCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "ImgUniqColorCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(std::log(Max<ui32>(erf.GetImgUniqColorCount(), 1)) / std::log(0x1000000))" }
}

Factor {
    Index:              125
    CppName:            "FI_IMAGE_MOST_POPULAR_COLOR_SHARE"
    Name:               "ImgMostPopularColorShare"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "ImgMostPopularColorShare"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetImgMostPopularColorShare()" }
}

Factor {
    Index:              126
    CppName:            "FI_PCTR"
    Name:               "PCTR"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "PCTR"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetPCTR()" }
}

Factor {
    Index:              127
    CppName:            "FI_DOC_QUERY_VARIETY_2"
    Name:               "DocQueryVariety2"
    Tags:               [TG_STATIC, TG_DOC, TG_USER, TG_USER_SEARCH, TG_USER_EXT_DATA]
    Description:        "Number of different queries by which the document was clicked. Duplicate of FI_DOC_QUERY_VARIETY for mrindex, reason - design requirements."
    Responsibles:       "sakhnov"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(erf.GetDocQueryVariety() / 255.0f)" }
}

Factor {
    Index:              128
    CppName:            "FI_RIGHT_CLICKS"
    Name:               "RightClicks"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "RightClicks"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "(erf.GetRightClicks() + 1) / (erf.GetRightClicks() + 15.)" }
}

Factor {
    Index:              129
    CppName:            "FI_GOOGLE_CLICKS"
    Name:               "GoogleClicks"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "GoogleClicks"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetGoogleClicks()" }
}

Factor {
    Index:              130
    CppName:            "FI_HOPS"
    Name:               "Hops"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "Hops"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetHops()" }
}

Factor {
    Index:              131
    CppName:            "FI_OCR_WORDS_COUNT"
    Name:               "OcrWordCount"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "OcrWordCount"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "erf.GetOcrWordCount()" }
}

Factor {
    Index:              132
    CppName:            "FI_OCR_TEXT_AREA"
    Name:               "OcrTextArea"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "OcrTextArea"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Frac2Float(Float2Frac<ui8>(erf.GetOcrTextArea()))" }
}

Factor {
    Index:              133
    CppName:            "FI_OCR_COHERENT_TEXT"
    Name:               "OcrCoherentText"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "OcrCoherentText"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetOcrCoherentText())" }
}

Factor {
    Index:              134
    CppName:            "FI_MIN_IMG_AREA_SQRT_SIGMOID"
    Name:               "MinImageArea"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MinImageArea"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Frac2Float(Float2Frac<ui8>(ImageAreaSqrtSigmoid(erf.GetMinImageArea())))" }
}

Factor {
    Index:              135
    CppName:            "FI_MAX_IMG_AREA_SQRT_SIGMOID"
    Name:               "MaxImageArea"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MaxImageArea"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Frac2Float(Float2Frac<ui8>(ImageAreaSqrtSigmoid(erf.GetMaxImageArea())))" }
}

Factor {
    Index:              136
    CppName:            "FI_IMG_AREA_PERC85_SIGMOID"
    Name:               "ImageAreaPerc85Sigmoid"
    Description:        "Sigmoid of 85th percentile of image area in document (corresponds to metric, details in https://wiki.yandex-team.ru/users/nerevar/imganalytics/imgscoringoffline/)"
    Tags:               [TG_DOC, TG_STATIC]
    Responsibles:       ["fedorenko"]
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Frac2Float(Float2Frac<ui8>(ImageAreaSigmoid(erf.GetImageAreaPerc85())))" }
}

Factor {
    Index:              137
    CppName:            "FI_PAGES_MIN_AGE"
    Name:               "SrcMinAge"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcMinAge"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Frac2Float(static_cast<ui8>(Min<ui32>(erf.GetSrcMinAge(), Max<ui8>())))" }
}

Factor {
    Index:              138
    CppName:            "FI_PAGES_MAX_AGE"
    Name:               "SrcMaxAge"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcMaxAge"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Frac2Float(static_cast<ui8>(Min<ui32>(erf.GetSrcMaxAge(), Max<ui8>())))" }
}

Factor {
    Index:              139
    CppName:            "FI_IMAGES_MIN_AGE"
    Name:               "DstMinAge"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "DstMinAge"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Frac2Float(static_cast<ui8>(Min<ui32>(erf.GetDstMinAge(), Max<ui8>())))" }
}

Factor {
    Index:              140
    CppName:            "FI_IMAGES_MAX_AGE"
    Name:               "DstMaxAge"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "DstMaxAge"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Frac2Float(static_cast<ui8>(Min<ui32>(erf.GetDstMaxAge(), Max<ui8>())))" }
}

Factor {
    Index:              141
    CppName:            "FI_NN_CL_2_OF_6"
    Name:               "NNCl2Of6"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNCl2Of6"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "static_cast<float>(erf.GetNNCl2Of6()) / 255.0f" }
}

Factor {
    Index:              142
    CppName:            "WATERMARK_TOLOKA_BASED_02_HOST_SHARE"
    Name:               "WatermarkTolokaBased02HostShare"
    Description:        "Share of duplicates on hosts with share of images with watermarks > 0.2 based on toloka"
    Tags:               [TG_DOC, TG_STATIC]
    Authors:            ["fedorenko"]
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.HasWatermarkFeatures() ? omni.GetWatermarkFeatures().GetTolokaBased02HostShare() / 127.0f : 0.0f" }
}

Factor {
    Index:              143
    CppName:            "FI_TOLOKA_BASED_04_HOST_SHARE"
    Name:               "WatermarkFeatures_TolokaBased04HostShare"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "WatermarkFeatures_TolokaBased04HostShare"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.HasWatermarkFeatures() ? omni.GetWatermarkFeatures().GetTolokaBased04HostShare() / 127.0f : 0.0f" }
}

Factor {
    Index:              144
    CppName:            "FI_CV_BASED_02_HOST_SHARE"
    Name:               "WatermarkFeatures_CVBased02HostShare"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "WatermarkFeatures_CVBased02HostShare"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.HasWatermarkFeatures() ? omni.GetWatermarkFeatures().GetCVBased02HostShare() / 127.0f : 0.0f" }
}

Factor {
    Index:              145
    CppName:            "FI_CV_BASED_04_HOST_SHARE"
    Name:               "WatermarkFeatures_CVBased04HostShare"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "WatermarkFeatures_CVBased04HostShare"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.HasWatermarkFeatures() ? omni.GetWatermarkFeatures().GetCVBased04HostShare() / 127.0f : 0.0f" }
}

Factor {
    Index:              146
    CppName:            "FI_IMG_VISUAL_QUALITY_MAX"
    Name:               "ImgVisualQualityMax"
    Tags:               [TG_DOC, TG_STATIC]
    Responsibles:       ["tobo", "krivokon"]
    Description:        "Максимальное значение классификатора Visual Quality картинок среди линков"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetVisualQualityMax()))" }
}

Factor {
    Index:              147
    CppName:            "FI_VISUAL_QUALITY_MEDIAN"
    Name:               "VisualQualityMedian"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "VisualQualityMedian"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetVisualQualityMedian()))" }
}

Factor {
    Index:              148
    CppName:            "FI_MEDIAN_IMG_AREA_SIGMOID"
    Name:               "MedianImageAreaSigmoid"
    Description:        "Sigmoid of meadian image area among actually selected links "
    Tags:               [TG_DOC, TG_STATIC]
    Responsibles:       ["tobo"]
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetImageAreaMedianSigmoid()))" }
}

Factor {
    Index:              149
    CppName:            "FI_MAX_IMG_AREA_SIGMOID"
    Name:               "MaxImageAreaSigmoid"
    Description:        "Sigmoid of maximum image area among actually selected links "
    Tags:               [TG_DOC, TG_STATIC]
    Responsibles:       ["tobo"]
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetImageAreaMaxSigmoid()))" }
}

Factor {
    Index:              150
    CppName:            "FI_DESKTOP_VIEWPORT_SCALE_P85"
    Name:               "DesktopViewportScaleP85"
    Description:        ""
    Tags:               [TG_DOC, TG_STATIC]
    Responsibles:       ["asuna"]
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetImageDesktopViewportScale()))" }
}

Factor {
    Index:              151
    CppName:            "FI_TOUCH_VIEWPORT_SCALE_P85"
    Name:               "TouchViewportScaleP85"
    Description:        ""
    Tags:               [TG_DOC, TG_STATIC]
    Responsibles:       ["asuna"]
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetImageTouchViewportScale()))" }
}

Factor {
    Index:              152
    CppName:            "FI_NN_CL_AESTHETIC"
    Name:               "NNClAesthetic"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClAesthetic"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClAesthetic()))" }
}

Factor {
    Index:              153
    CppName:            "FI_NN_CL_STATIC"
    Name:               "NNClStatic"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClStatic"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClStatic()))" }
}

Factor {
    Index:              154
    CppName:            "FI_NN_CL_PLANT"
    Name:               "NNClPlant"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClPlant"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClPlant()))" }
}

Factor {
    Index:              155
    CppName:            "FI_NN_CL_HUMAN"
    Name:               "NNClHuman"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClHuman"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClHuman()))" }
}

Factor {
    Index:              156
    CppName:            "FI_NN_CL_WATERMARK_V2"
    Name:               "NNClWatermarkV2"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClWatermarkV2"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClWatermarkV2()))" }
}

Factor {
    Index:              157
    CppName:            "FI_NN_CL_BAD_QUALITY_V3"
    Name:               "NNClBadQualityV3"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClBadQualityV3"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClBadQualityV3()))" }
}

Factor {
    Index:              158
    CppName:            "FI_NN_CL_GOOD_QUALITY_V3"
    Name:               "NNClGoodQualityV3"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClGoodQualityV3"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClGoodQualityV3()))" }
}

Factor {
    Index:              159
    CppName:            "FI_AVERAGE_BORDER_AREA"
    Name:               "AverageBorderArea"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "AverageBorderArea"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetAverageBorderArea()))" }
}

Factor {
    Index:              160
    CppName:            "FI_DOC_I2T_PROXIMITY_DRAWING"
    Name:               "DocI2tProximityDrawing"
    Tags:               [TG_DOC, TG_STATIC]
    Description:        "Близость документа к запросу про рисунки на основе i2t DSSM"
    Authors:            "tobo"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.HasDocumentClusterFeatures() ? 0.001f * (400.f + omni.GetDocumentClusterFeatures().GetDrawing()) : 0.0f" }
}

Factor {
    Index:              161
    CppName:            "FI_DOC_I2T_PROXIMITY_ACTRESS"
    Name:               "DocI2tProximityActress"
    Tags:               [TG_DOC, TG_STATIC]
    Description:        "Близость документа к запросу про актрис на основе i2t DSSM"
    Authors:            "tobo"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.HasDocumentClusterFeatures() ? 0.001f * (400.f + omni.GetDocumentClusterFeatures().GetActress()) : 0.0f" }
}

Factor {
    Index:              162
    CppName:            "FI_DOC_I2T_PROXIMITY_STENCIL"
    Name:               "DocI2tProximityStencil"
    Tags:               [TG_DOC, TG_STATIC]
    Description:        "Близость документа к запросу про трафареты и раскраски на основе i2t DSSM"
    Authors:            "tobo"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.HasDocumentClusterFeatures() ? 0.001f * (400.f + omni.GetDocumentClusterFeatures().GetStencil()) : 0.0f" }
}

Factor {
    Index:              163
    CppName:            "FI_DOC_I2T_PROXIMITY_ACTOR"
    Name:               "DocI2tProximityActor"
    Tags:               [TG_DOC, TG_STATIC]
    Description:        "Близость документа к запросу про актеров на основе i2t DSSM"
    Authors:            "tobo"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.HasDocumentClusterFeatures() ? 0.001f * (400.f + omni.GetDocumentClusterFeatures().GetActor()) : 0.0f" }
}

Factor {
    Index:              164
    CppName:            "FI_DOC_I2T_PROXIMITY_POSTER"
    Name:               "DocI2tProximityPoster"
    Tags:               [TG_DOC, TG_STATIC]
    Description:        "Близость документа к запросу про постеры и плакаты на основе i2t DSSM"
    Authors:            "tobo"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.HasDocumentClusterFeatures() ? 0.001f * (400.f + omni.GetDocumentClusterFeatures().GetPoster()) : 0.0f" }
}

Factor {
    Index:              165
    CppName:            "FI_DOC_I2T_PROXIMITY_PRODUCT"
    Name:               "DocI2tProximityProduct"
    Tags:               [TG_DOC, TG_STATIC]
    Description:        "Близость документа к запросу про тоавры на основе i2t DSSM"
    Authors:            "tobo"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.HasDocumentClusterFeatures() ? 0.001f * (400.f + omni.GetDocumentClusterFeatures().GetProduct()) : 0.0f" }
}

Factor {
    Index:              166
    CppName:            "FI_DOC_I2T_PROXIMITY_PAINTING"
    Name:               "DocI2tProximityPainting"
    Tags:               [TG_DOC, TG_STATIC]
    Description:        "Близость документа к запросу про живопись на основе i2t DSSM"
    Authors:            "tobo"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.HasDocumentClusterFeatures() ? 0.001f * (400.f + omni.GetDocumentClusterFeatures().GetPainting()) : 0.0f" }
}

Factor {
    Index:              167
    CppName:            "FI_HAS_BIG_THUMB"
    Name:               "HasBigThumb"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "HasBigThumb"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Bool2Float(omni.GetHasBigThumb())" }
}

Factor {
    Index:              168
    CppName:            "FI_IMG_STATIC_UTILITY_MAX"
    Name:               "ImgStaticUtilityMax"
    Tags:               [TG_DOC, TG_STATIC]
    Responsibles:       ["tobo", "krivokon"]
    Description:        "Максимальное значение статического классификатора Utility картинок среди линков"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetStaticUtilityMax()))" }
}

Factor {
    Index:              169
    CppName:            "FI_IMG_STATIC_UTILITY_MEDIAN"
    Name:               "ImgStaticUtilityMedian"
    Tags:               [TG_DOC, TG_STATIC]
    Responsibles:       ["tobo", "krivokon"]
    Description:        "Медианное значение статического классификатора Utility картинок среди линков"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetStaticUtilityMedian()))" }
}

Factor {
    Index:              170
    CppName:            "FI_VISUAL_QUALITY_V2_MAX"
    Name:               "VisualQualityV2Max"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "VisualQualityV2Max"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetVisualQualityV2Max()))" }
}

Factor {
    Index:              171
    CppName:            "FI_IMG_VISUAL_QUALITY_V2_MEDIAN"
    Name:               "ImgVisualQualityV2Median"
    Tags:               [TG_DOC, TG_STATIC]
    Responsibles:       ["tobo", "krivokon"]
    Description:        "Медианное значение классификатора Visual Quality v2 картинок среди линков"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetVisualQualityV2Median()))" }
}

Factor {
    Index:              172
    CppName:            "FI_IMG_AESTETICS_MAX"
    Name:               "ImgAesteticsMax"
    Tags:               [TG_DOC, TG_STATIC]
    Responsibles:       ["tobo", "krivokon"]
    Description:        "Максимальнок значение классификатора эстетичности картинок среди линков"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetAesteticsMax()))" }
}

Factor {
    Index:              173
    CppName:            "FI_IMG_AESTETICS_MEDIAN"
    Name:               "ImgAesteticsMedian"
    Tags:               [TG_DOC, TG_STATIC]
    Responsibles:       ["tobo", "krivokon"]
    Description:        "Медианное значение классификатора эстетичности картинок среди линков"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetAesteticsMedian()))" }
}

Factor {
    Index:              174
    CppName:            "FI_NN_CL_UPSCALE_MEDIAN"
    Name:               "NnClUpscaleMedian"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NnClUpscaleMedian"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNnClUpscaleMedian()))" }
}

Factor {
    Index:              175
    CppName:            "FI_NN_CL_JPEG_MEDIAN"
    Name:               "NnClJpegMedian"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NnClJpegMedian"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNnClJpegMedian()))" }
}

Factor {
    Index:              176
    CppName:            "FI_PAGE_DOMAINS_TOTAL_HOSTS"
    Name:               "PageDomains_TotalHosts"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "PageDomains_TotalHosts"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "std::min(1.0f, static_cast<float>(omni.GetPageDomains().GetTotalHosts()) / (static_cast<float>(omni.GetPageDomains().GetTotalHosts()) + 1.0f))" }
}

Factor {
    Index:              177
    CppName:            "FI_NN_CL_BAD_UTILITY"
    Name:               "NNClBadUtility"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClBadUtility"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClBadUtility()))" }
}

Factor {
    Index:              178
    CppName:            "FI_NN_CL_OK_UTILITY"
    Name:               "NNClOkUtility"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClOkUtility"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClOkUtility()))" }
}

Factor {
    Index:              179
    CppName:            "FI_NN_CL_GOOD_UTILITY"
    Name:               "NNClGoodUtility"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClGoodUtility"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClGoodUtility()))" }
}

Factor {
    Index:              180
    CppName:            "FI_NN_CL_EXCELLENT_UTILITY"
    Name:               "NNClExcellentUtility"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClExcellentUtility"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClExcellentUtility()))" }
}

Factor {
    Index:              181
    CppName:            "FI_NN_CL_VITAL_UTILITY"
    Name:               "NNClVitalUtility"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClVitalUtility"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClVitalUtility()))" }
}

Factor {
    Index:              182
    CppName:            "FI_NN_CL_YNDX_AESTHETIC"
    Name:               "NNClYndxAesthetic"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClYndxAesthetic"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClYndxAesthetic()))" }
}

Factor {
    Index:              183
    CppName:            "FI_NN_CL_QUALITY_FINEGRAINED"
    Name:               "NNClQualityFinegrained"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClQualityFinegrained"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClQualityFinegrained()))" }
}

Factor {
    Index:              184
    CppName:            "FI_NN_CL_SUGGESTIVE"
    Name:               "NNClSuggestive"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClSuggestive"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClSuggestive()))" }
}

Factor {
    Index:              185
    CppName:            "FI_BLURRING_NORMALIZED_MAX"
    Name:               "BlurringNormalizedMax"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "BlurringNormalizedMax"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetBlurringNormalizedMax()))" }
}

Factor {
    Index:              186
    CppName:            "FI_PRESENT_IMAGE_AREA_MAX"
    Name:               "PresentImageAreaMax"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "PresentImageAreaMax"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetPresentImageAreaMax()))" }
}

Factor {
    Index:              187
    CppName:            "FI_SRC_HOST_IS_WIKIPEDIA"
    Name:               "SrcHostIsWikipedia"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcHostIsWikipedia"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Bool2Float(omni.GetSrcHostIsWikipedia())" }
}

Factor {
    Index:              188
    CppName:            "FI_SRC_RANDOM_LOG_HOST_QUERY_TO_DOC_ALL_SUM_F_COUNT_TEXT_BOCM_11_NORM_256_MAX"
    Name:               "SrcRandomLogHostQueryToDocAllSumFCountTextBocm11Norm256Max"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "SrcRandomLogHostQueryToDocAllSumFCountTextBocm11Norm256Max"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetSrcRandomLogHostQueryToDocAllSumFCountTextBocm11Norm256Max()))" }
}

Factor {
    Index:              189
    CppName:            "FI_PAGES_MAX_ROBOT_AGE_FROM_REQUEST"
    Name:               "MaxRobotAgeFromRequest"
    Description:        "Maximum age of pages from web page date predictor. Used only in fresh search"
    Tags:               [TG_DOC, TG_DATE, TG_L2, TG_FRESHNESS_USE, TG_FRESHNESS_FROZEN_POOL]
    Responsibles:       ["ak762", "temnajab"]
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" }, { ClassName: "TInstant", Arg: "buildTime" } ], Expression: "CalcTimeFactorDays(buildTime, TInstant::Seconds(omni.GetMinRobotDateTimestamp()))" }
}

Factor {
    Index:              190
    CppName:            "FI_MAX_ROBOT_DATE_TIMESTAMP"
    Name:               "MaxRobotDateTimestamp"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MaxRobotDateTimestamp"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" }, { ClassName: "TInstant", Arg: "buildTime" } ], Expression: "CalcTimeFactorDays(buildTime, TInstant::Seconds(omni.GetMaxRobotDateTimestamp()))" }
}

Factor {
    Index:              191
    CppName:            "FI_MEAN_ROBOT_DATE_TIMESTAMP"
    Name:               "MeanRobotDateTimestamp"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MeanRobotDateTimestamp"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" }, { ClassName: "TInstant", Arg: "buildTime" } ], Expression: "CalcTimeFactorDays(buildTime, TInstant::Seconds(omni.GetMeanRobotDateTimestamp()))" }
}

Factor {
    Index:              192
    CppName:            "FI_PAGES_MAX_CRAWL_AGE_FROM_REQUEST"
    Name:               "PagesMaxCrawlAgeFromRequest"
    Description:        "Maximum age of pages based on crawl time from request. Used only in fresh search"
    Tags:               [TG_DOC, TG_DATE, TG_L2, TG_FRESHNESS_USE, TG_FRESHNESS_FROZEN_POOL, TG_FRESHNESS_ZERO]
    Responsibles:       ["ak762", "temnajab"]
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" }, { ClassName: "TInstant", Arg: "buildTime" } ], Expression: "CalcTimeFactorDays(buildTime, TInstant::Seconds(omni.GetMinCrawlAddTimePage()))" }
}

Factor {
    Index:              193
    CppName:            "FI_MIN_CRAWL_ADD_TIME"
    Name:               "MinCrawlAddTime"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MinCrawlAddTime"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "static_cast<float>(omni.GetMinCrawlAddTime())" }
}

Factor {
    Index:              194
    CppName:            "FI_MIN_ROBOT_DATE_SCORE"
    Name:               "MinRobotDateScore"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MinRobotDateScore"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.GetMinRobotDateScore()" }
}

Factor {
    Index:              195
    CppName:            "FI_MAX_ROBOT_DATE_SCORE"
    Name:               "MaxRobotDateScore"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MaxRobotDateScore"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.GetMaxRobotDateScore()" }
}

Factor {
    Index:              196
    CppName:            "FI_MEAN_ROBOT_DATE_SCORE"
    Name:               "MeanRobotDateScore"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "MeanRobotDateScore"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.GetMeanRobotDateScore()" }
}

Factor {
    Index:              197
    CppName:            "FI_DOC_TF_IDF_SUM"
    Name:               "DocTfIdfSum"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "DocTfIdfSum"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "omni.GetDocTfIdfSum()" }
}

Factor {
    Index:              198
    CppName:            "FI_NN_CL_BEAUTIFUL_FINEGRAINED"
    Name:               "NNClBeautifulFinegrained"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClBeautifulFinegrained"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClBeautifulFinegrained()))" }
}

Factor {
    Index:              199
    CppName:            "FI_NN_CL_DOC_BY_DOC"
    Name:               "NNClDocByDoc"
    AntiSeoUpperBound:  1.0
    Ticket:             "IMAGES-16602"
    Tags:               [TG_DOC]
    Description:        "NNClDocByDoc"
    Responsibles:       "temnajab"
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TOmniIndexDataPB", Arg: "omni" } ], Expression: "Frac2Float(static_cast<ui8>(omni.GetNNClDocByDoc()))" }
}

Factor {
    Index:              200
    CppName:            "FI_MONEY_SOURCE_DIRECT"
    Name:               "MoneySourceDirect"
    Description:        "Binary flag specifying if document has money source direct"
    Tags:               [TG_DOC, TG_STATIC]
    Responsibles:       ["anskor"]
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetMoneySourceDirect())" }
}

Factor {
    Index:              201
    CppName:            "FI_MONEY_IS_COMMERCIAL"
    Name:               "MoneyIsCommercial"
    Description:        "Binary flag specifying if document is commercial"
    Tags:               [TG_DOC, TG_STATIC]
    Responsibles:       ["anskor"]
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" } ], Expression: "Bool2Float(erf.GetMoneySourceDirect() | erf.GetMoneySourceMarket())" }
}

Factor {
    Index:              202
    CppName:            "FI_REAL_IMAGES_MAX_AGE_FROM_REQUEST_FULL"
    Name:               "RealImagesMaxAgeFromRequestFull"
    Description:        "(images age over request) / (iamges age over request + 1440). Used only in fresh search"
    Tags:               [TG_DYNAMIC, TG_DOC, TG_DATE, TG_L2, TG_FRESHNESS_USE, TG_FRESHNESS_FROZEN_POOL]
    Responsibles:       ["panovav", "temnajab"]
    MoveFromFactorSource: { Sources: [ { ClassName: "NImages::NIndex::TErfPB", Arg: "erf" }, { ClassName: "TInstant", Arg: "buildTime" } ], Expression: "CalcTimeFactorMinutes(buildTime, TInstant::Seconds(erf.GetFirstAccessTime()))" }
}

}

