Slice {
Name: "begemot_model_factors"

Factor {
    Index:              0
    CppName:            "FI_FRESH_DETECTOR_PREDICT"
    Name:               "FreshDetectorPredict"
    Ticket:             "WEBFRESH-478"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_FRESHNESS_USE, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_UNUSED, TG_USED_IN_CONF_REARR]
    Description:        "Значение детектора свежести, рассчитываемого в бегемоте. Всегда 0 при значении детектора меньше порога."
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetFreshDetectorPredict()" }
}

Factor {
    Index:              1
    CppName:            "FI_FRESH_NEWS_DETECTOR_PREDICT"
    Name:               "FreshNewsDetectorPredict"
    Ticket:             "WEBFRESH-478"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_FRESHNESS_USE, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_UNUSED, TG_NOT_01]
    Description:        "Значение детектора новостей, рассчитываемого в бегемоте. Всегда 0 при значении детектора меньше порога."
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MinValue:           -3e+38
    MaxValue:            3e+38
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetFreshNewsDetectorPredict()" }
}

Factor {
    Index:              2
    CppName:            "FI_PIRACY_DETECTOR_PREDICT"
    Name:               "PiracyDetectorPredict"
    Ticket:             "COMMERCIAL-4"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_NOT_01, TG_UNUSED]
    Description:        "Значение детектора пиратскости, рассчитываемого в бегемоте."
    MinValue:           -10
    MaxValue:            10
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetPiracyDetectorPredict()" }
}

Factor {
    Index:              3
    CppName:            "FI_PAY_DETECTOR_PREDICT"
    Name:               "PayDetectorPredict"
    Ticket:             "COMMERCIAL-4"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_NOT_01, TG_UNUSED]
    Description:        "Значение детектора коммерции, рассчитываемого в бегемоте."
    MinValue:           -10
    MaxValue:            10
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetPayDetectorPredict()" }
}

Factor {
    Index:              4
    CppName:            "FI_PAY_APP_DETECTOR_PREDICT"
    Name:               "PayAppDetectorPredict"
    Ticket:             "COMMERCIAL-19"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_NOT_01, TG_UNUSED]
    Description:        "Значение форкнутого детектора коммерции, рассчитываемого в бегемоте."
    MinValue:           -10
    MaxValue:            10
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetPayAppDetectorPredict()" }
}

Factor {
    Index:              5
    CppName:            "FI_HP_DETECTOR_PREDICT"
    Name:               "HpDetectorPredict"
    Ticket:             "COMMERCIAL-45"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_NOT_01, TG_UNUSED]
    Description:        "Значение детектора здоровья, рассчитываемого в бегемоте."
    MinValue:           -10
    MaxValue:            10
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetHpDetectorPredict()" }
}

Factor {
    Index:              6
    CppName:            "FI_PURCHASE_TOTAL_PREDICT"
    Name:               "PurchaseTotalPredict"
    Ticket:             "COMMERCIAL-190"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_NOT_01, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Значение PurchaseTotalPredict, рассчитываемого в бегемоте."
    MinValue:           -10
    MaxValue:            10
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetPurchaseTotalPredict()" }
}

Factor {
    Index:              7
    CppName:            "FI_SERP_SUMMARY_SURPLUS_PREDICT"
    Name:               "SerpSummarySurplusPredict"
    Ticket:             "COMMERCIAL-190"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Значение SerpSummarySurplusPredict, рассчитываемого в бегемоте."
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetSerpSummarySurplusPredict()" }
}

Factor {
    Index:              8
    CppName:            "FI_REQUEST_WITH_120_D3_CLICK_PART_PREDICT"
    Name:               "RequestWith120D3ClickPartPredict"
    Ticket:             "COMMERCIAL-190"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_NOT_01, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Значение RequestWith120D3ClickPartPredict, рассчитываемого в бегемоте."
    MinValue:           -10
    MaxValue:            110
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetRequestWith120D3ClickPartPredict()" }
}

Factor {
    Index:              9
    CppName:            "FI_HALF_ECOM_PREDICT"
    Name:               "HalfEcomPredict"
    Ticket:             "COMMERCIAL-190"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Значение HalfEcomPredict, рассчитываемого в бегемоте."
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetHalfEcomPredict()" }
}

Factor {
    Index:              10
    CppName:            "FI_QUERY_CONVERSION_DETECTOR_PREDICT"
    Name:               "QueryConversionDetectorPredict"
    Ticket:             "COMMERCIAL-81"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_NOT_01, TG_UNUSED]
    Description:        "Значение конверсионности запроса, рассчитываемого в бегемоте."
    Authors:            ["alejes", "hygge"]
    Responsibles:       ["alejes", "hygge"]
    MaxValue:           25.0
    MinValue:           -25.0
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetQueryConversionDetectorPredict()" }
}

Factor {
    Index:              11
    CppName:            "FI_QUERY_NAV_PARASITES_DETECTOR_PREDICT"
    Name:               "QueryNavParasitesDetectorPredict"
    Ticket:             "COMMERCIAL-190"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Значение запросного детектора нахлебников, рассчитываемого в бегемоте."
    Authors:            ["alejes", "hygge", "i-vainn"]
    Responsibles:       ["alejes", "hygge"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetQueryNavParasitesDetectorPredict()" }
}

Factor {
    Index:              12
    CppName:            "FI_QUERY_ABOUT_ONE_PRODUCT_PREDICT"
    Name:               "QueryAboutOneProductPredict"
    Ticket:             "COMMERCIAL-176"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_NOT_01, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Классификатор одного товара в запросе"
    MinValue:           -30
    MaxValue:            30
    Authors:            ["miha715lev", "alejes"]
    Responsibles:       ["miha715lev", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetQueryAboutOneProductPredict()" }
}

Factor {
    Index:              13
    CppName:            "FI_QUERY_ABOUT_MANY_PRODUCTS_PREDICT"
    Name:               "QueryAboutManyProductsPredict"
    Ticket:             "COMMERCIAL-176"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_NOT_01, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Классификатор нескольких товаров в запросе"
    MinValue:           -30
    MaxValue:            30
    Authors:            ["miha715lev", "alejes"]
    Responsibles:       ["miha715lev", "alejes"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetQueryAboutManyProductsPredict()" }
}

Factor {
    Index:              14
    CppName:            "FI_PROXIMA_QUERY_DCG5_PREDICT"
    Name:               "ProximaQueryDcg5Predict"
    Ticket:             "FACTOR-2486"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_NOT_01, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Значение Proxima dcg-5, рассчитываемого в бегемоте."
    Authors:            ["alejes", "i-vainn"]
    Responsibles:       ["alejes", "i-vainn"]
    MinValue:           -0.15
    MaxValue:            5.25
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetProximaQueryDcg5Predict()" }
}

Factor {
    Index:              15
    CppName:            "FI_IS_FRESH_FLOW"
    Name:               "IsFreshFlow"
    Ticket:             "WEBFRESH-805"
    Tags:               [TG_DYNAMIC, TG_QUERY_ONLY, TG_USER, TG_FRESHNESS_USE, TG_L2, TG_QUERY_DETECTOR_PREDICT, TG_UNUSED, TG_UNIMPLEMENTED]
    Description:        "Запрос является свежим"
    Authors:            ["alejes", "miha715lev"]
    Responsibles:       ["alejes", "miha715lev"]
    MoveFromFactorSource: { Sources: { ClassName: "NBg::NProto::TBgModelFactors", Arg: "source" }, Expression: "source.GetIsFreshFlow()" }
}

} ## Slice "begemot_model_factors"
