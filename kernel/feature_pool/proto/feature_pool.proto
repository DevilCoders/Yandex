package NMLPool;

/////////////////////// META ///////////////////////

// Типы факторов.
enum EFeatureType {
    FT_INT = 1; // 64-битные int-ы не помещаются в float
    FT_FLOAT = 2;
    FT_STRING = 3;
    FT_UNUSED = 4;
}

// Метаописание фактора.
message TFeatureInfo {
    // Источник фактора: web, pers, snippets, ...
    // Для поисковых пулов здесь нужно писать имя слайса.
    optional string Slice = 1;

    // Каноническое название фактора, глобально его идентифицирующее (совместно с Source).
    // По нему можно будет найти описание на вики и т.п.
    optional string Name = 2;

    // Тип данных этого фактора.
    optional EFeatureType Type = 3;

    // Теги фактора. Какие-то произвольные идентификаторы.
    // Через них можно будет удобно писать всякие фильтры, "закрывающие" часть факторов при обучении, или еще что-то
    repeated string Tags = 4;

    // Путь в искодниках
    optional string SourceUrl = 5;

    // Адрес вики или другого ресурса с описанием фичи.
    optional string DocumentationUrl = 6;

    // Логины людей, ответственных за данную фичу.
    repeated string ResponsiblePerson = 7;

    // Дополнительная информация о факторе в форме
    // произвольного JSON словаря. Часть информации
    // из типизированных полей (Name, Tags, ...) может
    // дублироваться.
    optional string ExtJson = 8;
}

// Метаописание всего пула.
message TPoolInfo {
    // Описания факторов.
    repeated TFeatureInfo FeatureInfo = 1;
}

/////////////////////// DATA ///////////////////////

// Описание одного примера (строки) в пуле.
message TSample {
    // Идентификатор группы для ранжирующего обучения (-F, --ll*, -P и подобные).
    optional string GroupId = 1;

    // Цель обучения.
    optional float Target = 2;

    // Начальное значение формулы на объекте.
    optional float Baseline = 3;

    // Вес примера.
    optional float Weight = 4;

    // Факторы.
    repeated uint64 IntFeature = 5 [packed=true];
    repeated float FloatFeature = 6 [packed=true];
    repeated string CategFeature = 7;
    // Разрешаем механизм расширений
    extensions 100 to max;
}

message MatrixnetSample {
    extend TSample {
        optional MatrixnetSample MxSample = 100;
    }
    optional string InternalGroupId = 1;//Идентификатор документа в группе для pfound обучения
}
