import "kernel/yt/protos/extension.proto";
import "mapreduce/yt/interface/protos/extension.proto";

message TIntegral {
  optional double DoubleField = 1;
  optional float FloatField = 2;
  optional int32 Int32Field = 3;
  optional int64 Int64Field = 4;
  optional uint32 Uint32Field = 5;
  optional uint64 Uint64Field = 6;
  optional sint32 Sint32Field = 7;
  optional sint64 Sint64Field = 8;
  optional fixed32 Fixed32Field = 9;
  optional fixed64 Fixed64Field = 10;
  optional sfixed32 Sfixed32Field = 11;
  optional sfixed64 Sfixed64Field = 12;
  optional bool BoolField = 13;
  enum TriBool {
    TRI_FALSE = 0;
    TRI_TRUE = 1;
    TRI_UNDEF = -1;
  }
  optional TriBool EnumField = 14;
}

message TOldEnumMsg {
  enum OldEnum {
    VALUE_1 = 1;
    VALUE_2 = 2;
  }
  optional OldEnum EnumField = 1;
}

message TNewEnumMsg {
  enum NewEnum {
    VALUE_1 = 1;
    VALUE_2 = 2;
    VALUE_3 = 3;
  }
  optional NewEnum EnumField = 1;
}

//unsupported
message TRepeated {
  repeated int32 Int32Field = 1;
}

message TOneOf {
  oneof Chooser {
    double DoubleField = 1;
    int32 Int32Field = 2;
  }
  optional bool BoolField = 3;
}

message TAggregated {
  optional string StringField = 1;
  optional bytes BytesField = 2;
  optional TIntegral NestedField = 3;
  optional TRepeated NestedRepeatedField = 4;
  optional TOneOf NestedOneOfField = 5;
  optional TAggregated NestedRecursiveField = 6;
}

message TBox {
    optional int64 Foo = 1;
    optional string Bar = 2;
}

message TZoo {
    optional int64 Signed = 11 [ (NYT.key) = true ];
    optional int32 Signed32 = 10 [ (NYT.key_column_name) = "x" ];
    optional bool Bool = 20 [ (NYT.expression) = "Signed % 2 = 1" ];
    oneof UnsignedAggregate {
        uint64 UnsignedDelta = 51 [ (NYT.aggregate) = "max" ];
        uint64 Unsigned = 50 [ (NYT.lock) = "abacaba" ];
    }
    optional uint32 Unsigned32 = 52 [ (NYT.column_name) = "y" ];
    oneof FloatAggregate {
        float Float = 60 [ (NYT.column_name) = "z" ];
        float FloatDelta = 61 [ (NYT.aggregate) = "sum" ];
    }
    optional double Double = 42 [ (NYT.lock) = "abacaba" ];
    oneof CustomOneOf {
        string String = 40;
        bytes Bytes = 30;
    }
    optional TBox Box = 70;
}

message TNotZoo1 {
    optional double Signed32 = 10 [ (NYT.key_column_name) = "x" ]; // type mismatch
    optional uint32 Unsigned32 = 52 [ (NYT.column_name) = "y" ];
}

message TNotZoo2 {
    optional uint32 Unsigned32 = 52 [ (NYT.column_name) = "noty" ]; // column name mismatch
}

message TFilteredZoo {
    optional int64 Signed = 11 [ (NYT.key) = true ];
    optional int32 Singed32 = 10 [ (NYT.key_column_name) = "x" ];
    optional string String = 40;
}

message TOrdered {
    optional int64 Tablet = 1 [ (NYT.column_name) = "$tablet_index" ];
    optional int64 Index = 2 [ (NYT.column_name) = "$row_index" ];
    optional TBox Box = 3;
    optional uint64 Unsigned = 4;
}

message TPoint2D {
    optional double X = 1;
    optional double Y = 2;
}

message TPoint3D {
    optional double X = 1;
    optional double Y = 2;
    optional double Z = 3;
}

message NMalformedAggregate {
    message TDifferentTypes {
        optional string Key = 1 [ (NYT.key) = true ];
        oneof X {
            double FloatDelta = 61 [ (NYT.aggregate) = "sum" ];
            float Float = 60;
        }
    }
    message TWithoutOneof {
        optional string Key = 1 [ (NYT.key) = true ];
        optional double FloatDelta = 61 [ (NYT.aggregate) = "sum" ];
        optional uint32 Float = 60;
    }
    message TWithoutValue {
        optional string Key = 1 [ (NYT.key) = true ];
        oneof X {
            double FloatDelta = 61 [ (NYT.aggregate) = "sum" ];
        }
        optional uint32 Float = 60;
    }
    message TDeltaDelta {
        optional string Key = 1 [ (NYT.key) = true ];
        oneof X {
            double Float = 60 [ (NYT.aggregate) = "sum" ];
            double FloatDelta = 61 [ (NYT.aggregate) = "sum" ];
        }
    }
    message TBigOneof {
        optional string Key = 1 [ (NYT.key) = true ];
        oneof X {
            double FloatDelta = 61 [ (NYT.aggregate) = "sum" ];
            double Float1 = 60;
            double Float2 = 62;
        }
    }
}
