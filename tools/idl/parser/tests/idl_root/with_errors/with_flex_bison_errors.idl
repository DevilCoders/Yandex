enum F {
    A,
    B = A,
    C
}

enum TooShort {
    OnlyField,
    struct C { }
}

Variant V (cpp:VV) {
    int i;
    int j;
}

struct K {
    int i;
}

struct S3 {
    int i;
}

/**
 * Link to some unknown {@link some.unknown.Type}, and another one - to a
 * method inside variant: {@link V#methodInVariant(int, const S)}.
 */
struct S {
    float f;
    double d;
    vector<vector<vector<int>>> v;
    object o;
    dictionary<dictionary<int, int>, vector<vector<K>>> m;

    struct InnerS {
        int i;
        float k;
        double k;
        S3 f;
        int j;
        void k;
    }
}

listener L {
    void onClick();
}

interface I {
    void setListener(L listener);
}

Enum E (java:EE) {
    F,
    G,
    F
}
