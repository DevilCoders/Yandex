#!/bin/sh
# This script is actually ran with /bin/sh -eu

_scenario() {
    GLOB    start
    SEGM	segm
    CLST	cluster
    CLST	another_cluster *
    SEGM	split
    SEGM	way1 *
    SEGM	way2: split
    SEGM    merge: way1 way2*

    SEGM    fail:
    SEGM    depfail

    GLOB    cntest_g_1:
    SEGM    cntest_s_1
    GLOB    cntest_g_2
    SEGM    cntest_s_2
    GLOB    cntest_g_3
    SEGM    cntest_s_3
    GLOB    cntest_g_4
    SEGM    cntest_s_4

    SEGM    prefinal: depfail merge cntest_s_4
    GLOB    final mailto=marakasov
}

cntest_g_1() {
    sleep 1
}
cntest_g_2() {
    sleep 1
}
cntest_g_3() {
    sleep 1
}
cntest_g_4() {
    sleep 1
}
cntest_s_1() {
    sleep 1
}
cntest_s_2() {
    sleep 1
}
cntest_s_3() {
    sleep 1
}
cntest_s_4() {
    sleep 1
}

start() {
    sleep 1
}

segm() {
    sleep 1
}

cluster() {
    if dd if=/dev/urandom bs=1 count=1 2>/dev/null | grep -q 'A'; then
        true
    fi
}

another_cluster() {
    if dd if=/dev/urandom bs=1 count=1 2>/dev/null | grep -q 'A'; then
        true
    fi
    sleep 1
}

split() {
    sleep 1
}

way1() {
    sleep 5
}

way2() {
    sleep 5
}

merge() {
    sleep 1
}

fail() {
    sleep 1
    echo "Now calling false to fail"
    false
}

partfail() {
    sleep 10
    if [ "$1" -eq 1 ]; then
        echo "Now calling false to fail"
        false
    fi
}

depfail() {
    sleep 1
}

prefinal() {
    sleep 1
}

final() {
    sleep 1
}

echo "Args:" "$@"
echo "Date:" `date`
echo "Host:" `hostname`
echo " Sys:" `uname -a`
echo "Load:" `uptime`
echo "Cred:" `id`
env | sort | sed -e '1 s|^| Env: |; 2,$ s|^|      |'
echo "======================================================================"
echo "=== `date`: Running $1 on `hostname`"
echo "======================================================================"
"$@"
echo "======================================================================"
echo "=== `date`: Finished $1 on `hostname`"
echo "======================================================================"
