package NClusterMaster;

import "library/cpp/getoptpb/proto/confoption.proto";

message TWorkerOptions {
    optional uint32 WorkerHeartbeatSeconds = 1  [(NGetoptPb.Conf) = {Short: 'B', Long: "worker-heartbeat-seconds", Descr: "worker heartbeat seconds"}, default = 10];
    optional bool DebugLog = 2                  [(NGetoptPb.Conf) = {Short: 'D', Long: "debug-log", Descr: "enable debug"}, default = false];
    optional uint32 SolverHttpPort = 3          [(NGetoptPb.Conf) = {Short: 'H', Long: "solver-http-port", Descr: "solver http port", Type: "port"}, default = 3132];
    optional string PidFilePath = 4             [(NGetoptPb.Conf) = {Short: 'P', Long: "pidfile", Descr: "pidfile", Type: "PATH"}];
    optional string AuthKeyPath = 5             [(NGetoptPb.Conf) = {Short: 'a', Long: "authkey", Descr: "authkey", Type: "PATH"}];
    optional uint32 NetworkHeartbeat = 6        [(NGetoptPb.Conf) = {Short: 'b', Long: "heartbeat", Descr: "heartbeat"}, default = 1];
    optional bool Foreground = 7                [(NGetoptPb.Conf) = {Short: 'f', Long: "foreground", Descr: "foreground"}, default = false];
    optional uint32 HttpPort = 8                [(NGetoptPb.Conf) = {Short: 'h', Long: "http-port", Descr: "worker http port", Type: "port"}, default = 0];
    optional string LogFilePath = 9             [(NGetoptPb.Conf) = {Short: 'l', Long: "logfile", Descr: "logfile", Type: "PATH"}];
    optional uint32 NTargetLogs = 10            [(NGetoptPb.Conf) = {Short: 'n', Long: "target-log-count", Descr: "Number of target logs to store", Type: "number"}];
    optional string PriorityRange = 11          [(NGetoptPb.Conf) = {Short: 'p', Long: "resources-priority", Descr: "resources priority", Type: "MIN:MAX"}, default = "0:1"];
    optional string DefaultResourcesHost = 12   [(NGetoptPb.Conf) = {Short: 'r', Long: "resources-host", Descr: "resources host"}, default = "localhost"];
    optional string DoNotTrackFlagPath = 13     [(NGetoptPb.Conf) = {Short: 's', Long: "do-not-track-flag", Descr: "skip merge flag file path", Type: "PATH"}];
    optional string UrlPrefix = 14              [(NGetoptPb.Conf) = {Short: 'u', Long: "url-prefix", Descr: "url prefix"}];
    optional string VarDirPath = 15             [(NGetoptPb.Conf) = {Short: 'v', Long: "vardir", Descr: "vardir", Type: "PATH"}, default = "./var"];
    optional uint32 WorkerPort = 16             [(NGetoptPb.Conf) = {Short: 'w', Long: "worker-port", Descr: "worker port", Type: "PORT"}, default = 3131];
    optional bool Archives = 17                 [(NGetoptPb.Conf) = {Short: 'z', Long: "archives", Descr: "archives"}, default = false];
    optional string ResStatFile = 18            [(NGetoptPb.Conf) = {Long: "resstat", Descr: "resources stat filename", Type: "FILENAME"}];
    optional string YtProxy = 19                [(NGetoptPb.Conf) = {Long: "yt-proxy", Descr: "Yt proxy to store state to"}];
    optional string YtVarDir = 20               [(NGetoptPb.Conf) = {Long: "yt-var-dir", Descr: "Yt var dir"}];
    optional uint64 YtBackoffPeriodMin = 21     [(NGetoptPb.Conf) = {Long: "yt-backoff-period-min", Descr: "Configure minimal back off period (in seconds) after YT cannot be reached"}, default = 30];
    optional uint64 YtBackoffPeriodMax = 22     [(NGetoptPb.Conf) = {Long: "yt-backoff-period-max", Descr: "Configure maximal back off period (in seconds) after YT cannot be reached"}, default = 300];
    optional string YtTokenPath = 23            [(NGetoptPb.Conf) = {Long: "yt-token-path", Descr: "Path to YT token"}];
    optional string YtUser = 24                 [(NGetoptPb.Conf) = {Long: "yt-user", Descr: "YT token's owner"}];
    optional bool EnableLostTargetRestart = 25  [(NGetoptPb.Conf) = {Long: "enable-lost-target-restart", Descr: "Enable restart of 'lost' targets"}, default = false];
}
