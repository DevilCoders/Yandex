package NProto;

// Do not use variable-length fields in these messages.

enum ETaskState {
    TS_UNDEFINED = -1;
    TS_IDLE = 0;
    TS_PENDING = 1;
    TS_SUCCESS = 2;
    TS_FAILED = 3;
    TS_DEPFAILED = 4;
    TS_CANCELED = 5;
    TS_UNKNOWN = 6;
    TS_SKIPPED = 7;
    TS_RUNNING = 8;
    TS_CANCELING = 9;
    TS_READY = 10;
    TS_STOPPING = 11;
    TS_STOPPED = 12;
    TS_CONTINUING = 13;
    TS_SUSPENDED = 14; // TS_STOPPED and TS_SUSPENDED difference is the following: TS_STOPPED means that task was running when low
            // disk space was detected and so SIGSTOP was sent to the process; TS_SUSPENDED means that task state was TS_READY when
            // low disk space was detected OR task become ready to go (got 'run' command or got 'poke' from dependencies) in some
            // moment after low disk space first detection
}

message TTaskStatus {
    required ETaskState State = 1;
    optional fixed64 StateValue = 36;
    required fixed32 LastStarted = 5;
    required fixed32 LastFinished = 6;
    required fixed32 LastSuccess = 7;
    required fixed32 LastFailure = 8;
    required sfixed32 LastDuration = 9;
    optional fixed32 LastChanged = 35;
    optional fixed32 StartedCounter = 10;
    optional fixed32 Pid = 33;
    optional fixed32 LastProcStarted = 38;
    optional ETaskState StateAfterCancel = 34;

    // Resource usage statistics (RUS)
    optional double CpuMax = 2;
    optional double CpuMaxDelta = 21;
    optional double CpuAvg = 3;
    optional double CpuAvgDelta = 22;
    optional double MemMax = 4;
    optional double MemMaxDelta = 23;
    optional double MemAvg = 24;
    optional double MemAvgDelta = 25;
    optional double IOMax = 26;
    optional double IOMaxDelta = 27;
    optional double IOAvg = 11;
    optional double IOAvgDelta = 28;
    optional fixed32 UpdateCounter = 12;
    optional fixed32 ToRepeat = 30;
    optional fixed32 RepeatMax = 31;
    message TSharedDefinition {
        required string Name = 1;
        required double Val = 2;
    }
    repeated TSharedDefinition SharedRes = 32;
    repeated string Path = 37;
} // next tag is 39

message TThinTaskStatus {
    required ETaskState State = 1;
    optional fixed64 StateValue = 3;
    required fixed32 LastChanged = 2;
}

message TTaskStatuses {
    repeated TTaskStatus Status = 1;
    optional uint64 UpdateTimestamp = 2;
}

message TTargetExitStatus {
    required fixed32 ExitStatus = 1;
    required fixed64 FinishedTime = 2;
}

message TTargetExitStatuses {
    repeated TTargetExitStatus Status = 1;
}

enum ERestartState {
    RS_INITIAL = 0;
    RS_WAITING_FOR_RESET = 1;
    RS_WAITING_FOR_STARTED = 2;
}

message TTargetWorkerRestartState {
    required string Host = 1;
    required ERestartState RestartState = 2;
}

message TMasterTargetState {
    required bool RestartOnSuccessEnabled = 1;
    required bool RetryOnFailureEnabled = 2;
    repeated TTargetWorkerRestartState StateByWorker = 3;
    optional uint64 UpdateTimestamp = 4;
}

